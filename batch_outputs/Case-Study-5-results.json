[
{
    "case_number": "5",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access the DCS controller through Active Directory authentication.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory credentials are compromised.",
                    "Role": "Attacker",
                    "Condition": "Valid under phishing or social engineering attacks."
                },
                {
                    "Assumption": "The attacker has network access to the DCS system.",
                    "Role": "Attacker",
                    "Condition": "Valid with network exposure due to internet-facing systems."
                },
                {
                    "Assumption": "The attacker can bypass any additional security mechanisms beyond AD authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if additional security is weak or misconfigured."
                }
            ],
            "Potential Impact": "Unauthorized access to controller leading to potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "account manipulation",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary impersonates a GPS server to disrupt time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The adversary has network access to the GPS server communication channel.",
                    "Role": "Attacker",
                    "Condition": "Valid in cases of network exposure or vulnerabilities."
                },
                {
                    "Assumption": "The GPS server or its communications are not properly authenticated or encrypted.",
                    "Role": "System Admin",
                    "Condition": "Valid if network encryption and authentication are weak, such as using unencrypted protocols."
                },
                {
                    "Assumption": "The DCS relies solely on the GPS server for time synchronization.",
                    "Role": "System Design",
                    "Condition": "Valid if there is no fallback or cross-verification mechanism."
                }
            ],
            "Potential Impact": "Disruption in time synchronization affecting logging, monitoring, and potential operational errors.",
            "MITRE ATT&CK Keywords": [
                "device",
                "injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malware installed on an employee's device uses their Active Directory credentials to access DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The employee\u2019s device is compromised.",
                    "Role": "Attacker",
                    "Condition": "Valid through phishing or malicious software."
                },
                {
                    "Assumption": "The device is trusted within the network environment.",
                    "Role": "System Admin",
                    "Condition": "Valid if proper network segmentation is not enforced."
                },
                {
                    "Assumption": "The malware can extract and use credentials stored on the device.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are stored insecurely or session tokens are accessible."
                }
            ],
            "Potential Impact": "Access to sensitive data and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "remote access",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration files on DCS controllers through advanced persistent threat techniques.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained remote access to the DCS controllers.",
                    "Role": "Attacker",
                    "Condition": "Valid with exploitation of vulnerabilities or credential theft."
                },
                {
                    "Assumption": "Configuration files are not adequately protected against tampering.",
                    "Role": "System Admin",
                    "Condition": "Valid if file integrity monitoring is not in place."
                },
                {
                    "Assumption": "Advanced persistent threats (APTs) are not detected immediately.",
                    "Role": "Security Operations",
                    "Condition": "Valid if real-time monitoring and detection systems are ineffective or bypassed."
                }
            ],
            "Potential Impact": "Altered operational parameters leading to potential system failures or unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "defense evasion",
                "command and control",
                "configuration",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies logs on the Historian server to hide unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "The insider has sufficient privileges to access and alter logs.",
                    "Role": "Insider",
                    "Condition": "Valid if proper access controls are not enforced."
                },
                {
                    "Assumption": "Logging and monitoring systems do not have immutability protections.",
                    "Role": "System Admin",
                    "Condition": "Valid if logs are not write-protected or stored securely."
                },
                {
                    "Assumption": "The alterations are not detected by automated or manual review processes.",
                    "Role": "Security Operations",
                    "Condition": "Valid if review processes are insufficient or non-exhaustive."
                }
            ],
            "Potential Impact": "Loss of data integrity and inability to trace unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "data tampering",
                "insider threat",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious software uploaded to DCS servers to alter operational commands sent to actuators.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers are exposed to malware delivery channels.",
                    "Role": "Attacker",
                    "Condition": "Valid with email phishing or vulnerable software exploits."
                },
                {
                    "Assumption": "Security measures do not prevent the unauthorized installation of software.",
                    "Role": "System Admin",
                    "Condition": "Valid if endpoint protection is lacking or ineffective."
                },
                {
                    "Assumption": "Operational commands are not verified or cross-checked for authenticity.",
                    "Role": "System Design",
                    "Condition": "Valid if system operates on trust without cross-verification."
                }
            ],
            "Potential Impact": "Disruption in operational processes and potential damage to physical systems.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "device",
                "ICS",
                "command and control"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies making critical changes to process set-point values on the OWS.",
            "Assumptions": [
                {
                    "Assumption": "Individual user actions are not logged with sufficient detail.",
                    "Role": "System Admin",
                    "Condition": "Valid if logging mechanisms are inadequate or misconfigured."
                },
                {
                    "Assumption": "The system does not have non-repudiation measures in place.",
                    "Role": "System Design",
                    "Condition": "Valid if digital signature or equivalent measures are not implemented."
                },
                {
                    "Assumption": "Critical changes can be made without secondary approvals.",
                    "Role": "Operational Procedures",
                    "Condition": "Valid if system allows changes without multi-factor authentication or approval workflows."
                }
            ],
            "Potential Impact": "Untraceable changes leading to potential safety and operational issues.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "privilege escalation",
                "ICS",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Network Devices",
                "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
                "id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
                "technique_id": "T1584.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An engineer denies altering configuration settings on the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged with user identification.",
                    "Role": "System Admin",
                    "Condition": "Valid if logs do not include detailed user actions."
                },
                {
                    "Assumption": "The EWS does not enforce non-repudiation practices.",
                    "Role": "System Design",
                    "Condition": "Valid if non-repudiation measures like digital certificates are missing."
                },
                {
                    "Assumption": "Engineering changes can be made without oversight or approval.",
                    "Role": "Operational Procedures",
                    "Condition": "Valid if procedural controls are weak or absent."
                }
            ],
            "Potential Impact": "Untraceable configuration changes affecting system reliability and safety.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "ICS",
                "privilege escalation",
                "engineering"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A vendor denies responsibility for unauthorized software updates on the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "Software updates are not logged with vendor identification and approval details.",
                    "Role": "System Admin",
                    "Condition": "Valid if logs do not contain sufficient metadata."
                },
                {
                    "Assumption": "Vendor access is not monitored or controlled effectively.",
                    "Role": "Security Operations",
                    "Condition": "Valid if vendor actions are not tracked or scrutinized."
                },
                {
                    "Assumption": "There is no formal process for software updates validation.",
                    "Role": "Operational Procedures",
                    "Condition": "Valid if updates are applied without verification and validation steps."
                }
            ],
            "Potential Impact": "Compromised system integrity and potential introduction of malware or faulty updates.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "ICS",
                "vendor access",
                "software update"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is exfiltrated by malware breaching the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The malware is able to communicate with external command and control servers.",
                    "Role": "Attacker",
                    "Condition": "Valid if outbound network traffic is not adequately monitored or restricted."
                },
                {
                    "Assumption": "Sensitive data is accessible from the compromised system.",
                    "Role": "System Admin",
                    "Condition": "Valid if data segregation is weak and sensitive data is too broadly accessible."
                },
                {
                    "Assumption": "Malware is undetected for a prolonged period.",
                    "Role": "Security Operations",
                    "Condition": "Valid if detection mechanisms and response time are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "malware",
                "command and control",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between DCS servers and operator workstations due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Communications are transmitted without encryption.",
                    "Role": "System Design",
                    "Condition": "Valid if transport layer security mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker has network access to eavesdrop on communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segmentation and protection are insufficient."
                },
                {
                    "Assumption": "Sensitive information is transmitted between the systems.",
                    "Role": "System Admin",
                    "Condition": "Valid if critical data is not protected in transit."
                }
            ],
            "Potential Impact": "Unauthorized capture of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "network access",
                "eavesdropping",
                "encryption",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insider threats copy sensitive logs from the Historian for unauthorized external use.",
            "Assumptions": [
                {
                    "Assumption": "Insider has privileged access to sensitive logs.",
                    "Role": "Insider",
                    "Condition": "Valid if access control mechanisms are weak or overridden."
                },
                {
                    "Assumption": "Logs are not adequately protected to prevent unauthorized copying.",
                    "Role": "System Admin",
                    "Condition": "Valid if access controls and file permissions are not correctly set."
                },
                {
                    "Assumption": "There are no mechanisms to monitor or alert on unauthorized data access.",
                    "Role": "Security Operations",
                    "Condition": "Valid if monitoring and alerting systems are insufficient."
                }
            ],
            "Potential Impact": "Leakage of sensitive operational data and logs.",
            "MITRE ATT&CK Keywords": [
                "insider access",
                "data exfiltration",
                "ICS",
                "logging"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial-of-service (DDoS) attack targets the DCS servers, overwhelming system resources and causing operational disruption.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers are accessible from the internet-facing network.",
                    "Role": "Attacker",
                    "Condition": "Valid if inadequate network segmentation exists."
                },
                {
                    "Assumption": "The system does not have sufficient protections against high-volume traffic.",
                    "Role": "System Admin",
                    "Condition": "Valid if anti-DDoS measures are weak or absent."
                },
                {
                    "Assumption": "The attacker has the capability to generate a large volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has access to botnets or other resource-generating tools."
                }
            ],
            "Potential Impact": "Disruption to system operations, impacting availability and potentially leading to operational safety issues.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network traffic",
                "resource exhaustion",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects DCS controller, consuming system resources and causing unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Malware infection occurs due to insufficient endpoint protection.",
                    "Role": "System Admin",
                    "Condition": "Valid if endpoints are not adequately protected or patched."
                },
                {
                    "Assumption": "Malware has high resource consumption or destructive payload.",
                    "Role": "Attacker",
                    "Condition": "Valid if the malware is sophisticated and designed to disrupt operations."
                },
                {
                    "Assumption": "The malware goes undetected for a period sufficient to cause service disruption.",
                    "Role": "Security Operations",
                    "Condition": "Valid if detection and response are slow or ineffectual."
                }
            ],
            "Potential Impact": "Operational disruption and potential safety concerns due to loss of control over critical systems.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "resource exhaustion",
                "ICS",
                "endpoint protection"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker manipulates time synchronization, causing cascading failures in time-dependent systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can spoof the GPS server.",
                    "Role": "Attacker",
                    "Condition": "Valid if GPS data is not authenticated or encrypted."
                },
                {
                    "Assumption": "Time synchronization is critical to system operation.",
                    "Role": "System Design",
                    "Condition": "Valid if timing is essential for correct operations and coordination between systems."
                },
                {
                    "Assumption": "There is no fallback or redundancy in time sources.",
                    "Role": "System Admin",
                    "Condition": "Valid if the system relies solely on a single time source."
                }
            ],
            "Potential Impact": "Operational disruption and potential failure of time-dependent processes.",
            "MITRE ATT&CK Keywords": [
                "time manipulation",
                "ICS",
                "system synchronization",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Network Devices",
                "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
                "id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
                "technique_id": "T1584.008"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit Windows NVD vulnerability to gain SYSTEM-level access and control over DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers run vulnerable Windows versions.",
                    "Role": "System Admin",
                    "Condition": "Valid if systems are not patched or updated."
                },
                {
                    "Assumption": "The attacker can execute the exploit on a system within the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network protections are insufficient or breached."
                },
                {
                    "Assumption": "Security measures do not prevent privilege escalation.",
                    "Role": "System Admin",
                    "Condition": "Valid if security configurations and policies are weak or misconfigured."
                }
            ],
            "Potential Impact": "Compromised system security, giving the attacker control over critical functionalities.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "Windows",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An employee abuses their elevated privileges to alter critical DCS settings.",
            "Assumptions": [
                {
                    "Assumption": "Employee has high-level access privileges.",
                    "Role": "System Admin",
                    "Condition": "Valid if access controls are too permissive or not well-audited."
                },
                {
                    "Assumption": "Changes can be made without detection or authorization.",
                    "Role": "Operational Procedures",
                    "Condition": "Valid if there are insufficient oversight and audit mechanisms."
                },
                {
                    "Assumption": "The altered settings are not detected quickly by monitoring systems.",
                    "Role": "Security Operations",
                    "Condition": "Valid if monitoring and alerting are ineffectual."
                }
            ],
            "Potential Impact": "Unauthorized system changes leading to potential operational disruptions or safety issues.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "access abuse",
                "ICS",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerable software to gain administrative control over DCS components.",
            "Assumptions": [
                {
                    "Assumption": "Software in use has known vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Valid if software is not regularly updated or patched."
                },
                {
                    "Assumption": "The attacker can remotely exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if network security is breached or insufficient."
                },
                {
                    "Assumption": "Current security measures are inadequate to prevent such exploitation.",
                    "Role": "System Admin",
                    "Condition": "Valid if security configurations and policies are poorly implemented."
                }
            ],
            "Potential Impact": "Gaining administrative control can lead to significant operational risks including data manipulation, system disruption, and safety hazards.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "remote access",
                "ICS",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the AD by exploiting weak or default credentials to impersonate a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "Default or weak credentials are in use and not regularly updated.",
                    "Role": "System administrators",
                    "Condition": "Valid if credential policies are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the network or internet-facing entry point.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not adequately segmented."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, potential data integrity issues, and system availability disruption.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Account Manipulation",
                "User Execution"
            ],
            "mitre_technique": {
                "name": "Account Manipulation",
                "description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
                "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
                "technique_id": "T1098"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS server to provide incorrect time synchronization, disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "GPS server communication is not secured with cryptographic methods.",
                    "Role": "System developers",
                    "Condition": "Valid if GPS server protocol lacks encryption."
                },
                {
                    "Assumption": "Attacker has sufficient access to intercept or spoof GPS communications.",
                    "Role": "Attacker",
                    "Condition": "Valid if network traffic is not monitored or protected."
                }
            ],
            "Potential Impact": "Potential system downtime, malfunctions, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Impair Process Control",
                "Inhibit Response Function",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates maintenance personnel to gain physical access to the DCS components.",
            "Assumptions": [
                {
                    "Assumption": "Lax physical security protocols.",
                    "Role": "Security personnel",
                    "Condition": "Valid if physical security layers are weak."
                },
                {
                    "Assumption": "Maintenance requests are not verified or logged.",
                    "Role": "Administrative staff",
                    "Condition": "Valid if procedural checks are bypassed"
                },
                {
                    "Assumption": "Attacker has prior knowledge of maintenance schedules and procedures.",
                    "Role": "Attacker",
                    "Condition": "Valid if insider information is available."
                }
            ],
            "Potential Impact": "The introduction of malicious software, hardware tampering, potential data breaches, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Physical Security Bypass",
                "Supply Chain Compromise",
                "Insider Threat"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may perform supply chain compromise to gain control systems environment access by means of infected products, software, and workflows. Supply chain compromise is the manipulation of products, such as devices or software, or their delivery mechanisms before receipt by the end consumer. Adversary compromise of these products and mechanisms is done for the goal of data or system compromise, once infected products are introduced to the target environment. \n\nSupply chain compromise can occur at all stages of the supply chain, from manipulation of development tools and environments to manipulation of developed products and tools distribution mechanisms. This may involve the compromise and replacement of legitimate software and patches, such as on third party or vendor websites. Targeting of supply chain compromise can be done in attempts to infiltrate the environments of a specific audience. In control systems environments with assets in both the IT and OT networks, it is possible a supply chain compromise affecting the IT environment could enable further access to the OT environment.   \n\nCounterfeit devices may be introduced to the global supply chain posing safety and cyber risks to asset owners and operators. These devices may not meet the safety, engineering and manufacturing requirements of regulatory bodies but may feature tagging indicating conformance with industry standards. Due to the lack of adherence to standards and overall lesser quality, the counterfeit products may pose a serious safety and operational risk. (Citation: Control Global May 2019) \n\nYokogawa identified instances in which their customers received counterfeit differential pressure transmitters using the Yokogawa logo. The counterfeit transmitters were nearly indistinguishable with a semblance of functionality and interface that mimics the genuine product. (Citation: Control Global May 2019) \n\nF-Secure Labs analyzed the approach the adversary used to compromise victim systems with Havex. (Citation: Daavid Hentunen, Antti Tikkanen June 2014) The adversary planted trojanized software installers available on legitimate ICS/SCADA vendor websites. After being downloaded, this software infected the host computer with a Remote Access Trojan (RAT).",
                "id": "attack-pattern--5e0f75da-e108-4688-a6de-a4f07cc2cbe3",
                "technique_id": "T0862"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies DCS server configurations by exploiting an application vulnerability in the engineering workstation.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers have exploitable vulnerabilities.",
                    "Role": "Application developers",
                    "Condition": "Valid if patches are not applied timely."
                },
                {
                    "Assumption": "Attacker has access to the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses are inadequate."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to incorrect operational commands and disrupting refinery processes.",
            "MITRE ATT&CK Keywords": [
                "Modify Configuration",
                "ICS Protocol Manipulation",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data before it is received by the DCS controller by intercepting and altering the network traffic.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between sensors and the controller is unencrypted.",
                    "Role": "Network engineers",
                    "Condition": "Valid if encryption is not implemented."
                },
                {
                    "Assumption": "Attacker has network access capability.",
                    "Role": "Attacker",
                    "Condition": "Valid if network traffic is poorly monitored."
                }
            ],
            "Potential Impact": "Covert data manipulation, leading to dangerous command executions based on fake data.",
            "MITRE ATT&CK Keywords": [
                "Network Interception",
                "Data Manipulation",
                "Protocol Exploitation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious firmware uploads into actuators, resulting in erroneous behavior of hardware components.",
            "Assumptions": [
                {
                    "Assumption": "Actuators accept unsigned firmware updates.",
                    "Role": "Hardware engineers",
                    "Condition": "Valid if security features are not enabled."
                },
                {
                    "Assumption": "Update processes are over unsecured channels.",
                    "Role": "System administrators",
                    "Condition": "Valid if updates lack verification steps."
                }
            ],
            "Potential Impact": "Potential hardware failures, process disruptions, and safety risks.",
            "MITRE ATT&CK Keywords": [
                "Firmware Manipulation",
                "ICS Device Exploitation",
                "Hardware Control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or modifies logs in the Historian to cover their tracks after compromising the system.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-resistant.",
                    "Role": "System developers",
                    "Condition": "Valid if logs are stored insecurely."
                },
                {
                    "Assumption": "Attacker has sufficient access rights to alter logs.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak."
                }
            ],
            "Potential Impact": "Loss of audit trails, making it difficult to detect and investigate breaches.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Evasion Techniques",
                "Cover Tracks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operator manipulates set-point values and denies making changes if an incident occurs.",
            "Assumptions": [
                {
                    "Assumption": "Set-point changes are not tied to user authorization logs.",
                    "Role": "System administrators",
                    "Condition": "Valid if user actions are not logged."
                },
                {
                    "Assumption": "The system does not have robust user activity tracking.",
                    "Role": "Application developers",
                    "Condition": "Valid if monitoring implementations are inadequate."
                }
            ],
            "Potential Impact": "Inability to attribute malicious or erroneous operations to specific users, causing investigation difficulties.",
            "MITRE ATT&CK Keywords": [
                "Privilege Misuse",
                "Data Integrity Violation",
                "Authorization Evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Unauthenticated engineering workstation makes unauthorized changes to DCS configurations.",
            "Assumptions": [
                {
                    "Assumption": "Engineering workstations can connect without strong authentication mechanisms.",
                    "Role": "System architects",
                    "Condition": "Valid if network policies are lax."
                },
                {
                    "Assumption": "Configurations changes are not logged with authentication details.",
                    "Role": "System administrators",
                    "Condition": "Valid if audit logging is insufficient."
                }
            ],
            "Potential Impact": "Loss of ability to verify system state changes, complicating fault identification and responsibility attribution.",
            "MITRE ATT&CK Keywords": [
                "Configuration Management",
                "Authentication Bypass",
                "System Tampering"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is extracted from the Historian through a vulnerability exploit.",
            "Assumptions": [
                {
                    "Assumption": "Historian contains high-value data accessible through network connections.",
                    "Role": "Data manager",
                    "Condition": "Valid if proper segmentation is not applied."
                },
                {
                    "Assumption": "Exploitable vulnerabilities exist in the Historian software.",
                    "Role": "Software developers",
                    "Condition": "Valid if updates and patches are neglected."
                }
            ],
            "Potential Impact": "Disclosure of sensitive and proprietary information that could benefit competitors or adversaries.",
            "MITRE ATT&CK Keywords": [
                "Data Exfiltration",
                "Application Exploitation",
                "Network Intrusion"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Man-in-the-middle attacker intercepts unencrypted communications between the DCS server and workstations.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "Network administrators",
                    "Condition": "Valid if transport layer security is absent."
                },
                {
                    "Assumption": "Attacker has the capability to place themselves within the network path.",
                    "Role": "Attacker",
                    "Condition": "Valid if perimeter defenses are insufficient."
                }
            ],
            "Potential Impact": "The exposure of sensitive data during transmission which could be used to plan further attacks.",
            "MITRE ATT&CK Keywords": [
                "Network Sniffing",
                "Man-in-the-Middle",
                "Data Interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to Active Directory (AD) and retrieves sensitive user profile information.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory does not have multi-factor authentication enabled.",
                    "Role": "System administrators",
                    "Condition": "Valid if MFA is not enforced."
                },
                {
                    "Assumption": "Access control lists are improperly configured.",
                    "Role": "Access control manager",
                    "Condition": "Valid if permissions are loosely granted."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user credentials and personal information, leading to potential identity theft.",
            "MITRE ATT&CK Keywords": [
                "Credential Dumping",
                "Access Token Manipulation",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack floods the DCS network, overloading the controller and workstation communications.",
            "Assumptions": [
                {
                    "Assumption": "External network connections are vulnerable to high-volume traffic attacks.",
                    "Role": "Network engineers",
                    "Condition": "Valid if DDoS mitigation controls are weak."
                },
                {
                    "Assumption": "The network lacks sufficient monitoring to detect and respond to traffic anomalies.",
                    "Role": "Security operations center",
                    "Condition": "Valid if monitoring tools are insufficient."
                }
            ],
            "Potential Impact": "Disruption of essential communication between DCS components, leading to potential operational downtime.",
            "MITRE ATT&CK Keywords": [
                "Network Service Interruption",
                "Traffic Flooding",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed packets to the GPS server, causing it to crash and lose time synchronization capabilities.",
            "Assumptions": [
                {
                    "Assumption": "GPS server can process incoming packets without validation.",
                    "Role": "System developers",
                    "Condition": "Valid if input validation is weak."
                },
                {
                    "Assumption": "Inbound traffic to GPS server is not adequately filtered.",
                    "Role": "Network administrators",
                    "Condition": "Valid if firewalls are configured lazily."
                }
            ],
            "Potential Impact": "Interruptions in time synchronization, causing failures in scheduled operations and logs accuracy.",
            "MITRE ATT&CK Keywords": [
                "Service Crash",
                "Packet Injection",
                "Time Manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on EWS causes it to run high CPU and memory intensive tasks, leading to system slowdowns and unavailability.",
            "Assumptions": [
                {
                    "Assumption": "EWS lacks effective malware defense mechanisms.",
                    "Role": "System administrators",
                    "Condition": "Valid if antivirus software is ineffective or absent."
                },
                {
                    "Assumption": "Attack vector remains undetected by current monitoring systems.",
                    "Role": "Security operations team",
                    "Condition": "Valid if anomaly detection lacks sophistication."
                }
            ],
            "Potential Impact": "Operational delays, inability to perform timely engineering tasks, and potential for wider system disruptions.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Resource Hijacking",
                "Service Unavailability"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting unpatched vulnerabilities in EWS or OWS to gain higher privileges and full administrative access.",
            "Assumptions": [
                {
                    "Assumption": "EWS and OWS use software with known but unpatched vulnerabilities.",
                    "Role": "System administrators",
                    "Condition": "Valid if patch management policies are inadequate."
                },
                {
                    "Assumption": "Attacker has basic access to the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access controls are weak."
                }
            ],
            "Potential Impact": "Complete control over sensitive system configurations and data, leading to unauthorized changes and data breaches.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Exploitation",
                "System Manipulation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising AD to move from user to administrative roles within the DCS environment.",
            "Assumptions": [
                {
                    "Assumption": "AD accounts have weak password policies.",
                    "Role": "Identity and access management team",
                    "Condition": "Valid if account security is poorly enforced."
                },
                {
                    "Assumption": "Insufficient monitoring of account activities to detect suspicious elevation attempts.",
                    "Role": "Security operations center",
                    "Condition": "Valid if activity logs are not actively reviewed."
                }
            ],
            "Potential Impact": "Gaining full administrative control, allowing for complete access to sensitive operational data and control functions.",
            "MITRE ATT&CK Keywords": [
                "Credential Dumping",
                "Privilege Manipulation",
                "Account Takeover"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insider uses excessive privileges improperly to access sensitive components of the DCS.",
            "Assumptions": [
                {
                    "Assumption": "Insider has privileged access without adequate monitoring.",
                    "Role": "Access control managers",
                    "Condition": "Valid if user actions are not tracked adequately."
                },
                {
                    "Assumption": "Access control mechanisms do not enforce the principle of least privilege.",
                    "Role": "System architects",
                    "Condition": "Valid if users have unnecessary broad access."
                }
            ],
            "Potential Impact": "Abuse of system functionalities and access, resulting in potential operational disruptions or data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Access Misuse",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as an authorized operator and sends false commands to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network or can exploit an internet-facing vulnerability.",
                    "Role": "Attacker",
                    "Condition": "The network is not properly segregated or an internet-facing service is vulnerable."
                },
                {
                    "Assumption": "The attacker can obtain or bypass AD credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak password policies or insufficiently secured AD credentials."
                },
                {
                    "Assumption": "The attacker is aware of the operational procedures.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or information leakage."
                }
            ],
            "Potential Impact": "Unauthorized commands could disrupt refinery operations or create unsafe conditions (Confidentiality, Integrity, Availability).",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Network Sniffing",
                "Spoofing",
                "Command and Control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses false GPS signals to manipulate the GPS Server.",
            "Assumptions": [
                {
                    "Assumption": "The GPS server relies on external signals for time synchronization.",
                    "Role": "System Designer",
                    "Condition": "The GPS server is susceptible to spoofed signals."
                },
                {
                    "Assumption": "The attacker can generate GPS signals.",
                    "Role": "Attacker",
                    "Condition": "The attacker has the equipment and proximity to send spoofed GPS signals."
                },
                {
                    "Assumption": "The DCS network does not verify the authenticity of GPS signals.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of signal authentication mechanisms."
                }
            ],
            "Potential Impact": "Inaccurate time synchronization could affect data logging and control commands (Integrity, Availability).",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Time and Synchronization",
                "GPS Signal Manipulation",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing to obtain credentials and access the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "Users can be targeted through email or other communication channels.",
                    "Role": "User",
                    "Condition": "Users are not sufficiently trained to recognize phishing attacks."
                },
                {
                    "Assumption": "The phishing attack can bypass email security controls.",
                    "Role": "Attacker",
                    "Condition": "Email security controls are not robust."
                },
                {
                    "Assumption": "The attacker uses legitimate credentials obtained from phishing.",
                    "Role": "Attacker",
                    "Condition": "Users inadvertently provide credentials via a phishing attack."
                }
            ],
            "Potential Impact": "Unauthorized access to configuration settings could lead to improper configurations or malicious changes (Confidentiality, Integrity).",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Credential Access",
                "Email",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a known vulnerability in the Windows OS on DCS servers to modify critical files.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers run an affected version of Windows with the known vulnerability.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerabilities are not patched."
                },
                {
                    "Assumption": "The attacker has remote access to the network or server.",
                    "Role": "Attacker",
                    "Condition": "Exploiting an unpatched vulnerability or poor security controls."
                },
                {
                    "Assumption": "The critical files can be accessed and modified by exploiting the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "File system permissions are insufficiently restrictive."
                }
            ],
            "Potential Impact": "Tampered files could disrupt the DCS operation or render the system inoperative (Integrity, Availability).",
            "MITRE ATT&CK Keywords": [
                "Exploitation",
                "Vulnerabilities",
                "Code Injection",
                "File Tampering"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized user physically accesses an Operator Workstation (OWS) and modifies process set-point values.",
            "Assumptions": [
                {
                    "Assumption": "Physical access controls are not strict, allowing unauthorized entry.",
                    "Role": "Facility Manager",
                    "Condition": "Lax physical security protocols."
                },
                {
                    "Assumption": "The OWS is accessible and logged in or easily unlockable.",
                    "Role": "Operator",
                    "Condition": "Operators leave workstations unattended or do not log out."
                },
                {
                    "Assumption": "The attacker has some knowledge of the system operations.",
                    "Role": "Attacker",
                    "Condition": "Insider threat or information leakage."
                }
            ],
            "Potential Impact": "Incorrect set-point values could lead to unsafe operational conditions or production loss (Integrity, Availability).",
            "MITRE ATT&CK Keywords": [
                "Physical Access",
                "Unauthorized Changes",
                "Set-points",
                "Process Control"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data stored in the Historian to falsify trend analysis results.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the Historian server or its communications.",
                    "Role": "Attacker",
                    "Condition": "Network security is compromised."
                },
                {
                    "Assumption": "Data integrity checks are not performed on the Historian data.",
                    "Role": "System Designer",
                    "Condition": "Insufficient data validation mechanisms."
                },
                {
                    "Assumption": "The attacker can tamper with data without detection.",
                    "Role": "Attacker",
                    "Condition": "Monitoring and logging are insufficient."
                }
            ],
            "Potential Impact": "Falsified data could lead to incorrect conclusions affecting operational decisions (Integrity).",
            "MITRE ATT&CK Keywords": [
                "Data Tampering",
                "Historian",
                "Trend Analysis",
                "Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker gains access to a user account and denies performing malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Logging and monitoring mechanisms are insufficient for tracking user activities.",
                    "Role": "System Administrator",
                    "Condition": "Logs are poorly managed or lacking."
                },
                {
                    "Assumption": "The attacker can obtain legitimate user credentials.",
                    "Role": "Attacker",
                    "Condition": "Phishing or credential leaks."
                },
                {
                    "Assumption": "User actions are not tightly coupled with authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Weak authentication and logging integration."
                }
            ],
            "Potential Impact": "Activities performed by compromised accounts could be denied, impacting accountability (Integrity).",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Logging Evasion",
                "Credential Access",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies logs to cover their tracks after performing malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privileges to access and alter logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or insider threat."
                },
                {
                    "Assumption": "Logs are not write-protected or monitored for changes.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient log security measures."
                },
                {
                    "Assumption": "The attacker has knowledge of the logging mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or documentation leaks."
                }
            ],
            "Potential Impact": "Modified logs would hinder incident response and forensic analysis (Integrity).",
            "MITRE ATT&CK Keywords": [
                "Log Tampering",
                "Privilege Escalation",
                "Logging",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users perform unauthorized operations within the DCS and deny involvement.",
            "Assumptions": [
                {
                    "Assumption": "There is insufficient auditing of user actions within the DCS.",
                    "Role": "System Designer",
                    "Condition": "Audit mechanisms are not implemented or faulty."
                },
                {
                    "Assumption": "User authentication does not strongly link actions to individuals.",
                    "Role": "System Administrator",
                    "Condition": "Weak authentication methods."
                },
                {
                    "Assumption": "No effective measures for tracking changes made within the system.",
                    "Role": "System Designer",
                    "Condition": "Lack of change management and monitoring."
                }
            ],
            "Potential Impact": "Denial of responsibility makes it difficult to enforce accountability and manage compliance (Integrity).",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Operations",
                "Audit Evasion",
                "Authentication Issues",
                "Repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a known vulnerability to access sensitive data in transit on the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "Data transmitted over the network is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption policies."
                },
                {
                    "Assumption": "The attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to network interception tools."
                },
                {
                    "Assumption": "Vulnerabilities in network protocols are unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or vulnerable protocols in use."
                }
            ],
            "Potential Impact": "Interception of sensitive data could lead to unauthorized disclosure (Confidentiality).",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Network Vulnerabilities",
                "Information Disclosure",
                "Encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored on the Historian is accessed by unauthorized users.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data is stored without adequate access controls.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "The attacker has or can obtain sufficient privileges.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or misconfigured access controls."
                },
                {
                    "Assumption": "Monitoring and logging of access to sensitive data are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient security auditing and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to historical data could lead to data breaches (Confidentiality).",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Data Breach",
                "Insufficient Controls",
                "Historian"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability to gain access to the Active Directory (AD) and retrieve user credentials.",
            "Assumptions": [
                {
                    "Assumption": "The AD is not properly patched against known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Outdated software versions or improper patch management."
                },
                {
                    "Assumption": "Access controls over AD credentials are lax.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "The attacker has network access to communicate with the AD.",
                    "Role": "Attacker",
                    "Condition": "Improper network segmentation or vulnerabilities."
                }
            ],
            "Potential Impact": "Compromised credentials could lead to further unauthorized access and breaches (Confidentiality).",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Active Directory",
                "Vulnerabilities",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the DCS network with malicious traffic to disrupt operations.",
            "Assumptions": [
                {
                    "Assumption": "The network is susceptible to high traffic volume attacks.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of traffic filtering mechanisms."
                },
                {
                    "Assumption": "The attacker has the capability to generate significant traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or other DDoS tools."
                },
                {
                    "Assumption": "There are no effective defenses against DDoS attacks in place.",
                    "Role": "Network Engineer",
                    "Condition": "Insufficient DDoS mitigation strategies."
                }
            ],
            "Potential Impact": "Network overload could lead to system unavailability and operational disruptions (Availability).",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Network Flooding",
                "Denial of Service",
                "Traffic"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability to crash the DCS Controller, causing a system outage.",
            "Assumptions": [
                {
                    "Assumption": "The DCS Controller has an unpatched vulnerability that can be exploited.",
                    "Role": "System Administrator",
                    "Condition": "Unaddressed vulnerabilities in the DCS Controller."
                },
                {
                    "Assumption": "The attacker has access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network access or adjacent system compromise."
                },
                {
                    "Assumption": "There are no effective failover mechanisms for the DCS.",
                    "Role": "System Designer",
                    "Condition": "Lack of redundancy and failover planning."
                }
            ],
            "Potential Impact": "Crashing the DCS Controller would disrupt control functions and halt operations (Availability).",
            "MITRE ATT&CK Keywords": [
                "Vulnerability Exploitation",
                "System Crash",
                "Denial of Service",
                "Controller"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware delivered through phishing shuts down the EWS, preventing engineering tasks.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to phishing attacks.",
                    "Role": "User",
                    "Condition": "Insufficient security training and awareness."
                },
                {
                    "Assumption": "Email security and filtering mechanisms are bypassed.",
                    "Role": "IT Administrator",
                    "Condition": "Weak email security controls."
                },
                {
                    "Assumption": "The EWS is not sufficiently protected against malware.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust anti-malware defenses."
                }
            ],
            "Potential Impact": "Loss of access to the EWS could halt configuration and maintenance activities (Availability).",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Malware",
                "System Shutdown",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain higher privileges on the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "There are unpatched privilege escalation vulnerabilities on the DCS servers.",
                    "Role": "System Administrator",
                    "Condition": "Lack of timely vulnerability patching."
                },
                {
                    "Assumption": "The attacker has sufficient access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Network or adjacent system access."
                },
                {
                    "Assumption": "Compromised accounts are not monitored for suspicious activity.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient user activity monitoring."
                }
            ],
            "Potential Impact": "Elevated privileges could be used to modify system configurations or access sensitive information (Confidentiality, Integrity).",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Vulnerability Exploitation",
                "Access Control",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider abuses their access to change DCS Controller configurations.",
            "Assumptions": [
                {
                    "Assumption": "Insider access is not sufficiently monitored or restricted.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control policies for insiders."
                },
                {
                    "Assumption": "The insider has the necessary knowledge to modify configurations.",
                    "Role": "Insider",
                    "Condition": "Knowledgeable about DCS operations."
                },
                {
                    "Assumption": "Actions performed by insiders are not audited.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient auditing mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized configuration changes could lead to system instability or unsafe conditions (Integrity).",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Unauthorized Access",
                "Configuration Changes",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Program Download",
                "description": "Adversaries may perform a program download to transfer a user program to a controller. \n\nVariations of program download, such as online edit and program append, allow a controller to continue running during the transfer and reconfiguration process without interruption to process control. However, before starting a full program download (i.e., download all) a controller may need to go into a stop state. This can have negative consequences on the physical process, especially if the controller is not able to fulfill a time-sensitive action. Adversaries may choose to avoid a download all in favor of an online edit or program append to avoid disrupting the physical process. An adversary may need to use the technique Detect Operating Mode or Change Operating Mode to make sure the controller is in the proper mode to accept a program download.\n\nThe granularity of control to transfer a user program in whole or parts is dictated by the management protocol (e.g., S7CommPlus, TriStation) and underlying controller API. Thus, program download is a high-level term for the suite of vendor-specific API calls used to configure a controllers user program memory space.  \n\n[Modify Controller Tasking](https://attack.mitre.org/techniques/T0821) and [Modify Program](https://attack.mitre.org/techniques/T0889) represent the configuration changes that are transferred to a controller via a program download.",
                "id": "attack-pattern--be69c571-d746-4b1f-bdd0-c0c9817e9068",
                "technique_id": "T0843"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits SSTI vulnerability to execute system-level commands on the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers run software with an SSTI vulnerability.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched SSTI vulnerability."
                },
                {
                    "Assumption": "The attacker can send input to the vulnerable service.",
                    "Role": "Attacker",
                    "Condition": "Service exposure or lack of input validation."
                },
                {
                    "Assumption": "The system allows execution of commands with elevated privileges.",
                    "Role": "System Designer",
                    "Condition": "Improper privilege management."
                }
            ],
            "Potential Impact": "Execution of system-level commands could lead to full system compromise (Confidentiality, Integrity, Availability).",
            "MITRE ATT&CK Keywords": [
                "SSTI",
                "Code Execution",
                "Privilege Escalation",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate user to access the DCS Controller through the compromised Active Directory (AD) credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained legitimate AD credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials were obtained through phishing or brute force."
                },
                {
                    "Assumption": "The compromised credential has sufficient privileges to access the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "The account has not been limited by role-based access controls."
                },
                {
                    "Assumption": "AD authentication is not using multi-factor authentication (MFA).",
                    "Role": "System Admin",
                    "Condition": "MFA is disabled or not enforced."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, system control manipulation, and potential downtime.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Active Directory",
                "Phishing",
                "Credential Access",
                "User Impersonation"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers exploit insecure network communication to impersonate the GPS server and send incorrect time synchronization signals to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between GPS server and DCS components is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Use of unencrypted communication protocols."
                },
                {
                    "Assumption": "The attacker can access the DCS network physically or remotely.",
                    "Role": "Attacker",
                    "Condition": "Weak perimeter defenses or compromised remote access points."
                },
                {
                    "Assumption": "No validation of time signals authenticity from the GPS server.",
                    "Role": "System Developer",
                    "Condition": "Absence of authentication mechanisms for time signals."
                }
            ],
            "Potential Impact": "Disruption in operational processes and potential misalignment of logged data timestamps.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "GPS Spoofing",
                "Time Synchronization",
                "Network Communication"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses malware to hijack operator workstations (OWS) and send falsified commands to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "OWS is vulnerable to malware due to lack of endpoint protection.",
                    "Role": "System Admin",
                    "Condition": "No recent malware protection updates or endpoint security measures."
                },
                {
                    "Assumption": "The attacker has already infiltrated the refinery\u2019s network.",
                    "Role": "Attacker",
                    "Condition": "Weak network segmentation or security policy enforcement."
                },
                {
                    "Assumption": "Operator workstations do not have regular monitoring for suspicious activities.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of real-time threat monitoring or anomaly detection."
                }
            ],
            "Potential Impact": "False control commands leading to operational disruptions and potential safety issues.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Malware",
                "Operator Workstation",
                "Command Injection",
                "Credential Access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actors manipulate data being transmitted between sensors and the DCS Controller, leading to incorrect system operations.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption or integrity checks.",
                    "Role": "Network Engineer",
                    "Condition": "Use of unencrypted communication protocols."
                },
                {
                    "Assumption": "The attacker has access to the communication medium.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity or compromised network devices."
                },
                {
                    "Assumption": "No verification mechanism exists for data received by DCS.",
                    "Role": "System Developer",
                    "Condition": "Absence of checksum or signature verification."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to potential safety hazards and inaccurate system operations.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Manipulation",
                "Sensor Data",
                "Network Communication",
                "Integrity Checks"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the Historian and alters recorded data to conceal malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Historian is not adequately protected by access controls.",
                    "Role": "System Admin",
                    "Condition": "Weak or default credentials in use."
                },
                {
                    "Assumption": "Attacker has compromised an account with access to the Historian.",
                    "Role": "Attacker",
                    "Condition": "Credential theft or privilege escalation."
                },
                {
                    "Assumption": "No integrity verification mechanism for stored data.",
                    "Role": "Database Admin",
                    "Condition": "Absence of data integrity checks or audits."
                }
            ],
            "Potential Impact": "Corruption of historical data, leading to flawed analysis and undetectable malicious activities.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data Integrity",
                "Historian",
                "Database Security",
                "Access Controls"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers inject malicious firmware updates to DCS controllers through compromised Engineering Workstations (EWS).",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not validated prior to deployment.",
                    "Role": "System Developer",
                    "Condition": "Lack of digital signatures or validation checks."
                },
                {
                    "Assumption": "EWS has been compromised through malware or exploited vulnerabilities.",
                    "Role": "Security Analyst",
                    "Condition": "Unpatched systems or ineffective malware defenses."
                },
                {
                    "Assumption": "Direct access to DCS controllers is possible from the compromised EWS.",
                    "Role": "System Admin",
                    "Condition": "No network segmentation between EWS and controllers."
                }
            ],
            "Potential Impact": "Malicious firmware could alter system behavior, leading to unsafe operations and potential downtime.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware Injection",
                "Engineering Workstation",
                "Malware",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny making specific critical changes to DCS settings after an incident, making investigation difficult.",
            "Assumptions": [
                {
                    "Assumption": "No logging or tracing of operator actions on DCS.",
                    "Role": "System Admin",
                    "Condition": "Lack of logging mechanisms or log retention policies."
                },
                {
                    "Assumption": "Absence of user action monitoring tools.",
                    "Role": "Security Analyst",
                    "Condition": "No user activity monitoring or anomaly detection systems in place."
                },
                {
                    "Assumption": "Operators can access DCS settings without authentication or accountability.",
                    "Role": "System Admin",
                    "Condition": "Insufficient role-based access controls or audit trails."
                }
            ],
            "Potential Impact": "Difficulty in incident investigation and response, leading to potential recurrence of issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Incident Response",
                "Operator Actions",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Compromised engineering workstations are used to make changes to DCS configurations without traceability back to the attacker.",
            "Assumptions": [
                {
                    "Assumption": "Engineering changes are not logged with sufficient detail.",
                    "Role": "System Admin",
                    "Condition": "Weak logging policies or lack of detailed audit logs."
                },
                {
                    "Assumption": "Compromised EWS used shared accounts with no individual accountability.",
                    "Role": "Security Analyst",
                    "Condition": "Use of generic or shared login credentials."
                },
                {
                    "Assumption": "No real-time monitoring to detect unauthorized configuration changes.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of real-time monitoring or intrusion detection systems."
                }
            ],
            "Potential Impact": "Untraceable malicious changes, leading to potential misconfigurations and unsafe operations.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Configuration Changes",
                "Engineering Workstation",
                "Logging",
                "Audit Trail"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators or attackers delete logs from DCS servers to cover their tracks after making unauthorized changes.",
            "Assumptions": [
                {
                    "Assumption": "No secure storage or backup of log files.",
                    "Role": "System Admin",
                    "Condition": "Lack of log redundancy or secure log archiving methods."
                },
                {
                    "Assumption": "Log deletion is not monitored or alerting mechanisms are absent.",
                    "Role": "Security Analyst",
                    "Condition": "No continuous monitoring or alert systems for log tampering activities."
                },
                {
                    "Assumption": "Operators have unfettered access to log management systems.",
                    "Role": "System Admin",
                    "Condition": "Inadequate access controls or insufficient log audit processes."
                }
            ],
            "Potential Impact": "Obfuscation of unauthorized activities and hampered incident investigation.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Tampering",
                "Unauthorized Access",
                "DCS Servers",
                "Incident Response"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from DCS communications is intercepted by attackers monitoring network traffic.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Use of plaintext communication protocols."
                },
                {
                    "Assumption": "The attacker has access to network communication channels.",
                    "Role": "Attacker",
                    "Condition": "Weak perimeter security or compromised network devices."
                },
                {
                    "Assumption": "No segmentation or isolation of sensitive communication channels.",
                    "Role": "System Admin",
                    "Condition": "Flat network architecture with no segmentation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, potentially leading to further targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Interception",
                "Network Traffic",
                "Eavesdropping",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers gain unauthorized access to the Historian and exfiltrate sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Historian is not protected by strong access controls.",
                    "Role": "System Admin",
                    "Condition": "Weak or easily guessable credentials."
                },
                {
                    "Assumption": "Attackers have compromised an account with access to the Historian.",
                    "Role": "Attacker",
                    "Condition": "Credential theft or brute force attack succeeded."
                },
                {
                    "Assumption": "No monitoring of data exfiltration activities from the Historian.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of data loss prevention (DLP) tools or monitoring."
                }
            ],
            "Potential Impact": "Exposure of sensitive historical data, potentially leading to competitive disadvantages or further attacks.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Historian",
                "Data Exfiltration",
                "Sensitive Data",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Data from Information Repositories",
                "description": "Adversaries may target and collect data from information repositories. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes. Examples of information repositories include reference databases in the process environment, as well as databases in the corporate network that might contain information about the ICS.(Citation: Cybersecurity & Infrastructure Security Agency March 2018)\n\nInformation collected from these systems may provide the adversary with a better understanding of the operational environment, vendors used, processes, or procedures of the ICS.\n\nIn a campaign between 2011 and 2013 against ONG organizations, Chinese state-sponsored actors searched document repositories for specific information such as, system manuals, remote terminal unit (RTU) sites, personnel lists, documents that included the string SCAD*, user credentials, and remote dial-up access information. (Citation: CISA AA21-201A Pipeline Intrusion July 2021)",
                "id": "attack-pattern--3405891b-16aa-4bd7-bd7c-733501f9b20f",
                "technique_id": "T0811"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Operators or attackers exploit vulnerabilities in the DCS software to access and leak sensitive data stored on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "DCS software contains exploitable vulnerabilities.",
                    "Role": "System Developer",
                    "Condition": "Unpatched software or known vulnerabilities not mitigated."
                },
                {
                    "Assumption": "Attackers can access the DCS network to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Weak perimeter defenses or existing network access."
                },
                {
                    "Assumption": "No mechanisms to detect unauthorized data access or exfiltration.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of intrusion detection systems or monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized exposure of sensitive DCS data, increasing risks of operational sabotage.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "DCS Software",
                "Vulnerabilities",
                "Data Access",
                "Exploit"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses a flood of network traffic to overwhelm DCS servers, making them unavailable for legitimate operations.",
            "Assumptions": [
                {
                    "Assumption": "DCS network is directly or indirectly accessible from the internet.",
                    "Role": "Network Engineer",
                    "Condition": "Insufficient network isolation or protections."
                },
                {
                    "Assumption": "No robust mechanisms for traffic filtering and load balancing.",
                    "Role": "System Admin",
                    "Condition": "Lack of DDoS protection measures."
                },
                {
                    "Assumption": "Attackers have the capability to generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Use of botnets or other amplification techniques."
                }
            ],
            "Potential Impact": "Disruption of DCS operations, leading to potential safety issues and operational downtime.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DCS Servers",
                "Network Flood",
                "Traffic Overload",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on critical components like the DCS Controller causes system crashes and operational halts.",
            "Assumptions": [
                {
                    "Assumption": "DCS Controller is vulnerable to malware due to lack of endpoint protection.",
                    "Role": "System Admin",
                    "Condition": "No recent updates or ineffective malware defenses."
                },
                {
                    "Assumption": "Malware can persist and propagate within the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Weak network segmentation or insufficient monitoring."
                },
                {
                    "Assumption": "The system lacks mechanisms to detect and quarantine infected devices.",
                    "Role": "Security Analyst",
                    "Condition": "No endpoint detection and response (EDR) tools or practices."
                }
            ],
            "Potential Impact": "Critical system component failure leading to extensive downtime and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DCS Controller",
                "Malware",
                "System Crash",
                "Operational Halt"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploit of a known vulnerability in the DCS software to cause system instability and operational interruptions.",
            "Assumptions": [
                {
                    "Assumption": "DCS software runs with known and unpatched vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Pending or ignored software updates."
                },
                {
                    "Assumption": "Attackers have identified the vulnerable software version.",
                    "Role": "Attacker",
                    "Condition": "Reconnaissance or publicly available exploit information."
                },
                {
                    "Assumption": "No compensating controls to mitigate the exploit\u2019s impact.",
                    "Role": "System Admin",
                    "Condition": "Lack of vulnerability management or monitoring."
                }
            ],
            "Potential Impact": "Disruption of DCS functionality, causing potential safety incidents and operational delays.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Software Vulnerability",
                "System Instability",
                "Exploit",
                "Operational Interruptions"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploit a vulnerability in the DCS network to gain administrative privileges and control critical components.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in the DCS network not patched promptly.",
                    "Role": "System Admin",
                    "Condition": "Delayed or incomplete system updates and patches."
                },
                {
                    "Assumption": "Insufficient monitoring for exploit attempts on critical components.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of continuous vulnerability scanning and monitoring."
                },
                {
                    "Assumption": "No stringent access control measures for administrative functions.",
                    "Role": "System Admin",
                    "Condition": "Weak or default administrative credentials in use."
                }
            ],
            "Potential Impact": "Unauthorized control of critical DCS functions, leading to potential malicious activities and enhanced attack vectors.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Administrative Access",
                "Vulnerability Exploit",
                "Critical Components",
                "Unauthorized Control"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on an Engineering Workstation (EWS) through exploited software vulnerabilities, gaining access to configuration settings.",
            "Assumptions": [
                {
                    "Assumption": "EWS runs vulnerable software with administrative privileges.",
                    "Role": "System Admin",
                    "Condition": "Unpatched or outdated software."
                },
                {
                    "Assumption": "The attacker has initial access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Phishing, social engineering, or previous foothold."
                },
                {
                    "Assumption": "There is no application whitelisting or restricted execution policies in place.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of preventive controls or policies."
                }
            ],
            "Potential Impact": "Unauthorized changes to configuration settings, leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Engineering Workstation",
                "Software Vulnerability",
                "Configuration Access",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware on operator workstations exploits an operating system vulnerability to gain SYSTEM level access.",
            "Assumptions": [
                {
                    "Assumption": "Workstations operate an unpatched vulnerable OS version.",
                    "Role": "System Admin",
                    "Condition": "Pending critical security updates."
                },
                {
                    "Assumption": "Malware is not detected by current endpoint security measures.",
                    "Role": "Security Analyst",
                    "Condition": "Ineffective or outdated malware definitions."
                },
                {
                    "Assumption": "No controls to prevent low privilege processes from escalating.",
                    "Role": "System Admin",
                    "Condition": "Absence of privilege escalation mitigation techniques."
                }
            ],
            "Potential Impact": "SYSTEM level access could lead to full control of operational systems and potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Operator Workstation",
                "Malware",
                "Operating System",
                "SYSTEM Access"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an Active Directory (AD) administrator account to gain unauthorized access to the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where AD is deployed.",
                    "Role": "Attacker",
                    "Condition": "Valid when the attacker gains network access."
                },
                {
                    "Assumption": "The attacker knows the credentials of an AD account.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are compromised."
                },
                {
                    "Assumption": "The AD environment has insufficient monitoring and logging.",
                    "Role": "System Administration",
                    "Condition": "Valid if monitoring is inadequate."
                }
            ],
            "Potential Impact": "Loss of integrity and confidentiality of control settings and configurations.",
            "MITRE ATT&CK Keywords": [
                "account manipulation",
                "network",
                "device access",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and alters GPS signals, spoofing the time signals causing synchronization issues in the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The GPS signals used are not adequately encrypted.",
                    "Role": "System Administration",
                    "Condition": "Valid if encryption is weak or absent."
                },
                {
                    "Assumption": "The attacker has the capability to broadcast spoofed GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Valid with appropriate broadcasting equipment."
                },
                {
                    "Assumption": "Time synchronization in the DCS is critical and lacks redundancy.",
                    "Role": "System Design",
                    "Condition": "Valid if no fallback mechanisms are in place."
                }
            ],
            "Potential Impact": "Disruption in the availability and reliability of control functions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network communication",
                "gps signal"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate sensor to send false data to the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access network segments where sensors communicate.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segmentation is weak."
                },
                {
                    "Assumption": "Sensor authentication mechanisms are not robust.",
                    "Role": "System Design",
                    "Condition": "Valid if authentication is inadequate."
                },
                {
                    "Assumption": "The attacker has knowledge of the sensor protocols used.",
                    "Role": "Attacker",
                    "Condition": "Valid if protocols are well-known or poorly protected."
                }
            ],
            "Potential Impact": "Impact on data integrity and availability, leading to potential unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "sensor data",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromised workstation is used to alter configuration files on the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The workstation has malware or is controlled by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Valid if the workstation is compromised."
                },
                {
                    "Assumption": "Configuration file access is not adequately protected.",
                    "Role": "System Administration",
                    "Condition": "Valid if file access controls are weak."
                },
                {
                    "Assumption": "There is no robust integrity checking or file monitoring in place.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if monitoring systems are absent or ineffective."
                }
            ],
            "Potential Impact": "Loss of integrity leading to possible malfunction of DCS operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "configuration files",
                "windows"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the firmware of a DCS controller and uploads malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not securely authenticated.",
                    "Role": "System Design",
                    "Condition": "Valid if firmware update mechanisms are insecure."
                },
                {
                    "Assumption": "The attacker can gain physical or network access to the DCS controller.",
                    "Role": "Attacker",
                    "Condition": "Valid if security controls are bypassed."
                },
                {
                    "Assumption": "There are no runtime integrity checks on the firmware.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if integrity checks are missing."
                }
            ],
            "Potential Impact": "Loss of integrity and potential loss of availability if controllers malfunction.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "malicious update"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Payload delivery through exploiting existing software vulnerabilities in Windows components on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The servers are running unpatched versions of vulnerable software.",
                    "Role": "System Administration",
                    "Condition": "Valid if software is outdated."
                },
                {
                    "Assumption": "The attacker has the capability and knowledge to exploit the vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are known and exploitable."
                },
                {
                    "Assumption": "There are insufficient intrusion detection systems (IDS) to detect exploitation attempts.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if IDS are limited or absent."
                }
            ],
            "Potential Impact": "Loss of integrity, possible data tampering, and execution of unauthorized commands.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "remote code execution",
                "vulnerability",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies changing critical set-point values that led to operational disruptions.",
            "Assumptions": [
                {
                    "Assumption": "Logging and audit trails are incomplete or tampered with.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if logs are not secure."
                },
                {
                    "Assumption": "Operator actions are not adequately attributed.",
                    "Role": "System Design",
                    "Condition": "Valid if tracking mechanisms are weak or absent."
                },
                {
                    "Assumption": "There is no secondary verification mechanism for critical changes.",
                    "Role": "System Operation",
                    "Condition": "Valid if secondary verification steps are absent."
                }
            ],
            "Potential Impact": "Loss of accountability and auditing, impacting system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "logging",
                "operator actions"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An engineer denies applying unsafe configurations to the controller settings on the EWS.",
            "Assumptions": [
                {
                    "Assumption": "There is no strict access control to log and track changes.",
                    "Role": "System Administration",
                    "Condition": "Valid if change management is poorly enforced."
                },
                {
                    "Assumption": "Audit logs are not detailed enough to attribute actions accurately.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if logs lack granularity."
                },
                {
                    "Assumption": "There are insufficient controls to prevent log tampering.",
                    "Role": "System Design",
                    "Condition": "Valid if logs can be easily tampered with."
                }
            ],
            "Potential Impact": "Loss of integrity and accountability, risking operational safety.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "unsafe configurations",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "False claims of unapproved changes made by an attacker using compromised engineer credentials.",
            "Assumptions": [
                {
                    "Assumption": "Compromised credentials are actively used.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has engineer credentials."
                },
                {
                    "Assumption": "There is insufficient monitoring to detect unauthorized changes.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if unauthorized access isn't detected."
                },
                {
                    "Assumption": "Logging mechanisms do not provide detailed context of changes.",
                    "Role": "System Design",
                    "Condition": "Valid if logs are superficial."
                }
            ],
            "Potential Impact": "Loss of accountability and integrity of system settings.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "unauthorized changes",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is captured and exfiltrated via a malware infection on the historian.",
            "Assumptions": [
                {
                    "Assumption": "Historian is connected to a network with external access.",
                    "Role": "System Administration",
                    "Condition": "Valid if historian is networked externally."
                },
                {
                    "Assumption": "There is no adequate malware detection and prevention on the historian.",
                    "Role": "System Administration",
                    "Condition": "Valid if security solutions are ineffective."
                },
                {
                    "Assumption": "Attacker can successfully install and utilize malware.",
                    "Role": "Attacker",
                    "Condition": "Valid if system defenses are bypassed."
                }
            ],
            "Potential Impact": "Compromise of data confidentiality and possible integrity.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data exfiltration",
                "historian"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Network snooping on unsecured communications between sensors and DCS controller reveals sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "Sensor to controller communications are not encrypted.",
                    "Role": "System Design",
                    "Condition": "Valid if communication protocols lack encryption."
                },
                {
                    "Assumption": "Attacker can access and capture network traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is possible."
                },
                {
                    "Assumption": "There are no intrusion detection systems to alert such traffic captures.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if IDS are not deployed."
                }
            ],
            "Potential Impact": "Loss of data confidentiality compromising operational security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network communication",
                "data capture",
                "unencrypted"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised account with access to AD retrieves and discloses user profile and role information.",
            "Assumptions": [
                {
                    "Assumption": "Credentials for AD access are compromised.",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are leaked or stolen."
                },
                {
                    "Assumption": "AD data is not adequately protected or encrypted.",
                    "Role": "System Administration",
                    "Condition": "Valid if data protection measures are inadequate."
                },
                {
                    "Assumption": "There is no monitoring for unusual AD queries.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if AD activity is not well-monitored."
                }
            ],
            "Potential Impact": "Breaching of confidentiality of user and role data, facilitating further attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "user profiles",
                "active directory",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Domain Account",
                "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.(Citation: CrowdStrike StellarParticle January 2022)  ",
                "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
                "technique_id": "T1087.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the DCS servers rendering them unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers are internet-facing without adequate protection.",
                    "Role": "System Design",
                    "Condition": "Valid if exposure is not mitigated."
                },
                {
                    "Assumption": "There is insufficient traffic filtering and rate-limiting.",
                    "Role": "Network Administration",
                    "Condition": "Valid if protective measures are absent."
                },
                {
                    "Assumption": "The attacker has access to botnet resources.",
                    "Role": "Attacker",
                    "Condition": "Valid if botnet capabilities are available."
                }
            ],
            "Potential Impact": "Loss of system availability causing operational disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos",
                "network traffic",
                "server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software triggers resource exhaustion on EWS rendering engineering operations inoperable.",
            "Assumptions": [
                {
                    "Assumption": "EWS lacks adequate malware protection.",
                    "Role": "System Administration",
                    "Condition": "Valid if anti-malware solutions are weak or absent."
                },
                {
                    "Assumption": "Resource limits and monitoring are not properly configured.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if resource usage is not monitored."
                },
                {
                    "Assumption": "Attacker successfully deploys malware on the workstation.",
                    "Role": "Attacker",
                    "Condition": "Valid if security defenses are bypassed."
                }
            ],
            "Potential Impact": "Loss of availability and disruption to engineering operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "resource exhaustion",
                "workstation"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in Windows-based components leading to system crashes or reboots on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers run outdated or vulnerable Windows software.",
                    "Role": "System Administration",
                    "Condition": "Valid if systems are unpatched."
                },
                {
                    "Assumption": "Adequate mitigation measures for known vulnerabilities are not in place.",
                    "Role": "System Design",
                    "Condition": "Valid if mitigations are not deployed."
                },
                {
                    "Assumption": "Attacker can discover and exploit the vulnerabilities successfully.",
                    "Role": "Attacker",
                    "Condition": "Valid if exploitation techniques are effective."
                }
            ],
            "Potential Impact": "Loss of availability due to system downtimes and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "exploitation",
                "windows",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit vulnerabilities in AD or related services to elevate privileges to domain admin level.",
            "Assumptions": [
                {
                    "Assumption": "AD is running with known vulnerabilities.",
                    "Role": "System Administration",
                    "Condition": "Valid if patches are missing."
                },
                {
                    "Assumption": "The attacker has a foothold in the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is compromised."
                },
                {
                    "Assumption": "There is insufficient monitoring to detect privilege escalation attempts.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if monitoring systems are inadequate."
                }
            ],
            "Potential Impact": "Compromise of confidentiality, integrity, and availability of all AD-protected resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "active directory",
                "vulnerability",
                "domain admin"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware exploits administrative tools or system services to gain SYSTEM level access on the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "Administrative tools or services are not adequately secured.",
                    "Role": "System Design",
                    "Condition": "Valid if security configurations are weak."
                },
                {
                    "Assumption": "The attacker can introduce malware into the DCS environment.",
                    "Role": "Attacker",
                    "Condition": "Valid if defenses against malware are bypassed."
                },
                {
                    "Assumption": "There is insufficient logging and alerting for administrative actions.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if administrative activities are not monitored."
                }
            ],
            "Potential Impact": "Complete system takeover, loss of integrity and availability, potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "malware",
                "administrative tools",
                "system access"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of kernel vulnerabilities in Windows on the engineering workstations for privilege escalation.",
            "Assumptions": [
                {
                    "Assumption": "Workstations are running vulnerable versions of Windows.",
                    "Role": "System Administration",
                    "Condition": "Valid if systems are unpatched."
                },
                {
                    "Assumption": "The attacker has access to the workstation.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical or remote access is possible."
                },
                {
                    "Assumption": "There are no adequate defenses against privilege escalation.",
                    "Role": "System Design",
                    "Condition": "Valid if security measures are inadequate."
                }
            ],
            "Potential Impact": "Elevation of privileges and subsequent unauthorized actions affecting system integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "windows",
                "kernel"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises themselves as a legitimate Active Directory user to gain unauthorized access to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of valid AD credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid AD credentials are obtained through phishing or other means."
                },
                {
                    "Assumption": "The attacker has network access to the AD service.",
                    "Role": "Attacker",
                    "Condition": "Network is not adequately segmented or secured."
                },
                {
                    "Assumption": "The DCS relies solely on AD for user authentication.",
                    "Role": "System Designer",
                    "Condition": "No additional authentication mechanisms are implemented."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, modification of system settings, and potential denial of service.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "credential access",
                "active directory"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be the GPS server to mislead time synchronization in the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Network security measures are bypassed."
                },
                {
                    "Assumption": "The GPS server does not use authentication methods to verify trusted communication.",
                    "Role": "System Designer",
                    "Condition": "No encrypted communication protocols are used."
                },
                {
                    "Assumption": "The DCS network relies on GPS time synchronization for critical operations.",
                    "Role": "System Designer",
                    "Condition": "No alternative time synchronization mechanisms are implemented."
                }
            ],
            "Potential Impact": "Misconfigured system processes, potential data corruption, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network time protocol",
                "gps",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as an EWS to send rogue configurations to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can insert a rogue EWS into the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the network is achieved."
                },
                {
                    "Assumption": "The DCS does not authenticate the identity of workstations before accepting configurations.",
                    "Role": "System Designer",
                    "Condition": "No mutual authentication is implemented between EWS and DCS Controller."
                },
                {
                    "Assumption": "The EWS has permissions to send configurations to the DCS Controller.",
                    "Role": "System Operator",
                    "Condition": "Default or insecure permissions are configured."
                }
            ],
            "Potential Impact": "Unauthorized configuration changes, potential system malfunction, and safety risks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "engineering workstation",
                "configuration manipulation",
                "dcs controller"
            ],
            "mitre_technique": {
                "name": "Engineering Workstation Compromise",
                "description": "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "id": "attack-pattern--d614a9cf-18eb-4800-81e4-ab8ddf0baa73",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies historical data stored in the Historian to mislead trend analysis.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to the Historian database.",
                    "Role": "Attacker",
                    "Condition": "Weak database access controls are in place."
                },
                {
                    "Assumption": "Historical data is not validated or integrity-checked regularly.",
                    "Role": "System Administrator",
                    "Condition": "Integrity verification mechanisms are not implemented."
                },
                {
                    "Assumption": "The Historian is trusted as the sole source for historical data analysis.",
                    "Role": "System Designer",
                    "Condition": "No alternative data sources are used for verification."
                }
            ],
            "Potential Impact": "Misled decision-making, compromised data integrity, and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data corruption",
                "historian",
                "trend analysis"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies communication between sensors and the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Network lacks adequate security measures."
                },
                {
                    "Assumption": "Communication is not encrypted or signed.",
                    "Role": "System Designer",
                    "Condition": "Plaintext communication protocols are used."
                },
                {
                    "Assumption": "Sensors and actuators trust unverified data.",
                    "Role": "System Designer",
                    "Condition": "No data authenticity checks are in place."
                }
            ],
            "Potential Impact": "Erroneous sensor readings, unauthorized actuator commands, and potential for system failure.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "sensor data",
                "dcs controller"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a DCS Controller vulnerability to alter process control instructions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of a specific DCS Controller vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability information is publicly available or discovered through investigation."
                },
                {
                    "Assumption": "The DCS Controller software is not up-to-date with security patches.",
                    "Role": "System Administrator",
                    "Condition": "Regular patches and updates are not applied."
                },
                {
                    "Assumption": "The attacker can deploy malicious code to the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the controller is achieved."
                }
            ],
            "Potential Impact": "Altered process control, potential system malfunction, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "vulnerability exploitation",
                "dcs controller",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An engineer disputes unauthorized changes made to the DCS configurations.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or insufficiently logged.",
                    "Role": "System Administrator",
                    "Condition": "No comprehensive logging mechanisms are in place."
                },
                {
                    "Assumption": "Access controls are weak, allowing unauthorized changes.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate permissions management."
                },
                {
                    "Assumption": "The engineer notices irregularities but cannot trace the origin.",
                    "Role": "Engineer",
                    "Condition": "Lack of traceability mechanisms."
                }
            ],
            "Potential Impact": "Dispute over configuration changes, compromised system integrity, and potential accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access control",
                "logging",
                "configuration changes"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies responsibility for an abnormal set-point change on the OWS.",
            "Assumptions": [
                {
                    "Assumption": "Set-point changes are not logged with user credentials.",
                    "Role": "System Administrator",
                    "Condition": "No user-activity logging."
                },
                {
                    "Assumption": "Multiple users share the same credentials.",
                    "Role": "System Administrator",
                    "Condition": "Poor user management and authentication practices."
                },
                {
                    "Assumption": "The DCS does not enforce multi-factor authentication.",
                    "Role": "System Designer",
                    "Condition": "Only single-factor authentication is used."
                }
            ],
            "Potential Impact": "Disputes over operational changes, compromised system accountability, and potential system abuse.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user activity",
                "authentication",
                "set-point change"
            ],
            "mitre_technique": {
                "name": "Trust Modification",
                "description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002) without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) \n\nAn adversary may also add a new federated identity provider to an identity tenant such as Okta, which may enable the adversary to authenticate as any user of the tenant.(Citation: Okta Cross-Tenant Impersonation 2023)",
                "id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
                "technique_id": "T1484.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party contractor disputes unauthorized access to the AD-managed DCS resources.",
            "Assumptions": [
                {
                    "Assumption": "Contractor access is not adequately logged.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient access logging mechanisms."
                },
                {
                    "Assumption": "AD logs are not regularly monitored or reviewed.",
                    "Role": "System Administrator",
                    "Condition": "Lack of a monitoring and auditing process."
                },
                {
                    "Assumption": "Contractor credentials are shared or poorly managed.",
                    "Role": "Contractor",
                    "Condition": "Inadequate credential policies."
                }
            ],
            "Potential Impact": "Disputes over access to sensitive resources, compromised security policies, and potential for unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "access logging",
                "active directory",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive process data intercepted between DCS Components and external Corporate Networks.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between DCS and corporate networks are not secure.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted communication protocols are used."
                },
                {
                    "Assumption": "The attacker has access to the network traffic.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network segmentation and security controls."
                },
                {
                    "Assumption": "Sensitive data is transmitted without obfuscation.",
                    "Role": "System Designer",
                    "Condition": "Data is not encrypted or obfuscated during transmission."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, potential data breaches, and operational risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network traffic",
                "confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the DCS Server to access sensitive user profiles.",
            "Assumptions": [
                {
                    "Assumption": "The DCS Server is running vulnerable software.",
                    "Role": "System Administrator",
                    "Condition": "Software is outdated and not patched."
                },
                {
                    "Assumption": "User profiles contain sensitive information.",
                    "Role": "System Designer",
                    "Condition": "Sensitive data is not adequately protected."
                },
                {
                    "Assumption": "The attacker can compromise the server through remote means.",
                    "Role": "Attacker",
                    "Condition": "Server is accessible over the internet without sufficient protection."
                }
            ],
            "Potential Impact": "Unauthorized access to user profiles, information leakage, and potential identity theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "server vulnerability",
                "user profiles",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Historical process data in the Historian is accessed by an unauthorized actor.",
            "Assumptions": [
                {
                    "Assumption": "The Historian database does not have sufficient access controls.",
                    "Role": "System Administrator",
                    "Condition": "Weak or default database permissions."
                },
                {
                    "Assumption": "The attacker has network access to the Historian.",
                    "Role": "Attacker",
                    "Condition": "Network lacks adequate segmentation."
                },
                {
                    "Assumption": "Sensitive process data is stored without encryption.",
                    "Role": "System Designer",
                    "Condition": "Data-at-rest protection mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, compromised data confidentiality, and potential competitive risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "historian",
                "data access",
                "confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the DCS Controller with false data, leading to system overload.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the controller.",
                    "Role": "Attacker",
                    "Condition": "Network is not sufficiently protected against unauthorized access."
                },
                {
                    "Assumption": "The DCS Controller cannot differentiate between legitimate and illegitimate data.",
                    "Role": "System Designer",
                    "Condition": "Insufficient data validation mechanisms."
                },
                {
                    "Assumption": "The controller is not designed to handle high volumes of data traffic.",
                    "Role": "System Designer",
                    "Condition": "System capacity limits are not adequately provisioned."
                }
            ],
            "Potential Impact": "System overload, operational disruptions, and potential loss of control.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flood",
                "dcs controller",
                "system overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the DCS Server software to launch a service crippling attack.",
            "Assumptions": [
                {
                    "Assumption": "The DCS Server software has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or unpatched software is in use."
                },
                {
                    "Assumption": "The attacker can reach the vulnerable service.",
                    "Role": "Attacker",
                    "Condition": "Service exposure on the network without adequate protection."
                },
                {
                    "Assumption": "No failover mechanisms are in place for critical services.",
                    "Role": "System Designer",
                    "Condition": "Lack of redundancy and failover strategies."
                }
            ],
            "Potential Impact": "Service disruption, decreased system availability, and potential operational halts.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "service disruption",
                "dcs server"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack targeting operator and engineering workstations results in unusable systems.",
            "Assumptions": [
                {
                    "Assumption": "The malware can be introduced into the network.",
                    "Role": "Attacker",
                    "Condition": "Insufficient malware protection mechanisms."
                },
                {
                    "Assumption": "Workstations lack adequate anti-virus and anti-malware defenses.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or insufficiently configured protective software."
                },
                {
                    "Assumption": "Affected workstations are essential for system operation.",
                    "Role": "System Designer",
                    "Condition": "No alternative operational workstations are in place."
                }
            ],
            "Potential Impact": "Unusable operator and engineering workstations, operational disruptions, and management inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "workstation",
                "operational disruption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in Active Directory to gain elevated privileges within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The Active Directory system has a known vulnerability.",
                    "Role": "System Administrator",
                    "Condition": "AD system is outdated or not patched."
                },
                {
                    "Assumption": "The attacker has access to the AD system.",
                    "Role": "Attacker",
                    "Condition": "Weak network security measures."
                },
                {
                    "Assumption": "Policies and monitoring for privilege escalation are insufficient.",
                    "Role": "System Designer",
                    "Condition": "Lack of effective access and privilege management."
                }
            ],
            "Potential Impact": "Unauthorized system changes, access to sensitive information, and potential system disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "active directory",
                "privilege escalation",
                "network access"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A vulnerability in DCS Controller software is exploited to gain SYSTEM-level privileges.",
            "Assumptions": [
                {
                    "Assumption": "The DCS Controller software is vulnerable to privilege escalation exploits.",
                    "Role": "System Administrator",
                    "Condition": "Software is outdated or unpatched."
                },
                {
                    "Assumption": "The attacker has remote or local access to the controller.",
                    "Role": "Attacker",
                    "Condition": "Security access controls are inadequately configured."
                },
                {
                    "Assumption": "Role management within the DCS is weak.",
                    "Role": "System Designer",
                    "Condition": "Insufficient role and access management policies."
                }
            ],
            "Potential Impact": "Full control over the DCS Controller, unauthorized changes, and potential for system abuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "dcs controller",
                "system privileges",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages insufficient validation in EWS to gain administrative rights in the DCS environment.",
            "Assumptions": [
                {
                    "Assumption": "The EWS software lacks sufficient input validation.",
                    "Role": "System Designer",
                    "Condition": "Software design does not validate inputs correctly."
                },
                {
                    "Assumption": "The attacker has access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Physical or logical access to EWS is obtained."
                },
                {
                    "Assumption": "There is inadequate logging and monitoring of administrative actions.",
                    "Role": "System Administrator",
                    "Condition": "No systems in place to track and audit administrative activities."
                }
            ],
            "Potential Impact": "Unauthorized administrative actions, configuration changes, and potential system control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "engineering workstation",
                "administrative rights",
                "input validation"
            ],
            "mitre_technique": {
                "name": "Engineering Workstation Compromise",
                "description": "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "id": "attack-pattern--d614a9cf-18eb-4800-81e4-ab8ddf0baa73",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access by impersonating a legitimate user on the Active Directory (AD).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid user credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised via phishing or other means."
                },
                {
                    "Assumption": "Active Directory is accessible over the network.",
                    "Role": "Network Admin",
                    "Condition": "AD is connected to the corporate or internet network."
                },
                {
                    "Assumption": "The attacker has network access to the system.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within the network or can access it remotely."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and systems.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "adversary-in-the-middle",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker uses a compromised GPS server to provide falsified time information to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the GPS server.",
                    "Role": "Attacker",
                    "Condition": "Network or physical access to the GPS server."
                },
                {
                    "Assumption": "GPS information is not authenticated.",
                    "Role": "System Engineer",
                    "Condition": "DCS relies on GPS information without authentication."
                },
                {
                    "Assumption": "Time synchronization is critical for DCS operations.",
                    "Role": "System Analyst",
                    "Condition": "Operations depend on accurate time data for coordination."
                }
            ],
            "Potential Impact": "Compromised systems' time-sensitive operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "time manipulation",
                "device",
                "service"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of the Historian server to inject incorrect data into the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access."
                },
                {
                    "Assumption": "Data from the Historian is not verified on receipt.",
                    "Role": "System Engineer",
                    "Condition": "No integrity checks are performed on Historian data."
                },
                {
                    "Assumption": "The Historian server is critical for monitoring operations.",
                    "Role": "System Analyst",
                    "Condition": "Operational decisions are based on Historian data."
                }
            ],
            "Potential Impact": "Corrupted or manipulated historical data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "data tampering",
                "historian",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies sensor data being sent to the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can access sensor communication channels.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable communication protocols."
                },
                {
                    "Assumption": "Sensor data is not encrypted or signed.",
                    "Role": "System Engineer",
                    "Condition": "Unprotected data transmission."
                },
                {
                    "Assumption": "System relies on accurate sensor data.",
                    "Role": "Operations Manager",
                    "Condition": "Operations dependent on real-time data."
                }
            ],
            "Potential Impact": "Incorrect process control resulting in potential damage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "sensor",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely alters the configuration of the DCS controller through the EWS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Compromised EWS credentials or network access."
                },
                {
                    "Assumption": "Configuration changes are not monitored in real-time.",
                    "Role": "System Admin",
                    "Condition": "No real-time monitoring of configuration changes."
                },
                {
                    "Assumption": "The DCS controller accepts remote configurations.",
                    "Role": "System Engineer",
                    "Condition": "Remote configuration capabilities."
                }
            ],
            "Potential Impact": "Malicious process control changes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration manipulation",
                "EWS",
                "device"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the integrity of the DCS software updates.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to software update distribution.",
                    "Role": "Attacker",
                    "Condition": "Compromised software repository or distribution channel."
                },
                {
                    "Assumption": "Software updates are not verified for integrity.",
                    "Role": "System Admin",
                    "Condition": "Lack of integrity verification for updates."
                },
                {
                    "Assumption": "Updated software is critical for operations.",
                    "Role": "Operations Manager",
                    "Condition": "System dependability on regular updates."
                }
            ],
            "Potential Impact": "Deployment of malicious software components.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "supply chain",
                "software update",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker conducts unauthorized actions and denies them later due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "System lacks detailed logging mechanisms.",
                    "Role": "System Admin",
                    "Condition": "Insufficient or non-existent logging policy."
                },
                {
                    "Assumption": "Attacker can access systems without detection.",
                    "Role": "Attacker",
                    "Condition": "Insufficient monitoring and anomaly detection."
                },
                {
                    "Assumption": "Access controls don\u2019t track user actions.",
                    "Role": "IT Security",
                    "Condition": "Weak access control policies."
                }
            ],
            "Potential Impact": "Inability to trace actions back to the attacker.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trail",
                "device"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies logs to erase traces of system tampering.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can access and modify log files.",
                    "Role": "Attacker",
                    "Condition": "Compromised system with log access."
                },
                {
                    "Assumption": "Logs are not protected against tampering.",
                    "Role": "System Admin",
                    "Condition": "Non-read-only log storage."
                },
                {
                    "Assumption": "No real-time log monitoring.",
                    "Role": "System Analyst",
                    "Condition": "Absence of real-time log analysis mechanisms."
                }
            ],
            "Potential Impact": "Loss of forensic evidence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "device",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators dispute commands sent to actuators as there is no proof of sender identity.",
            "Assumptions": [
                {
                    "Assumption": "No digital signature or proof of command origin.",
                    "Role": "System Engineer",
                    "Condition": "Commands are sent in plaintext without verification."
                },
                {
                    "Assumption": "Actuators do not log command origins.",
                    "Role": "Device Manufacturer",
                    "Condition": "Logging capabilities not built into actuators."
                },
                {
                    "Assumption": "System lacks centralized command auditing.",
                    "Role": "System Analyst",
                    "Condition": "No centralized tracking of commands."
                }
            ],
            "Potential Impact": "Disputes over system operations and potential for malicious commands.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command dispute",
                "device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted sensor data.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data is transmitted without encryption.",
                    "Role": "System Engineer",
                    "Condition": "Unprotected communication channels."
                },
                {
                    "Assumption": "Attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Compromised network or remote access."
                },
                {
                    "Assumption": "Sensitive operational data is included in transmissions.",
                    "Role": "Operations Manager",
                    "Condition": "Critical data routinely sent unencrypted."
                }
            ],
            "Potential Impact": "Leakage of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network sniffing",
                "sensor data",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the Historian server and extracts sensitive trend data.",
            "Assumptions": [
                {
                    "Assumption": "Access controls to the Historian server are weak.",
                    "Role": "IT Security",
                    "Condition": "Insufficient access control policies."
                },
                {
                    "Assumption": "Historian server stores sensitive data.",
                    "Role": "System Engineer",
                    "Condition": "Critical data stored for long durations."
                },
                {
                    "Assumption": "Network segmentation does not isolate the Historian server.",
                    "Role": "Network Admin",
                    "Condition": "Historian is accessible from non-OT networks."
                }
            ],
            "Potential Impact": "Unauthorized extraction of sensitive operational trends.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data extraction",
                "historian",
                "device"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is leaked via insecure Active Directory communication.",
            "Assumptions": [
                {
                    "Assumption": "AD communicates over unprotected channels.",
                    "Role": "System Engineer",
                    "Condition": "Absence of encrypted communication for AD."
                },
                {
                    "Assumption": "Attacker can intercept AD traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access enabling traffic monitoring."
                },
                {
                    "Assumption": "Sensitive data is transferred through AD.",
                    "Role": "IT Security",
                    "Condition": "Critical information managed via AD services."
                }
            ],
            "Potential Impact": "Compromise of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "active directory",
                "network sniffing",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with traffic, overwhelming the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not sufficiently monitored.",
                    "Role": "Network Admin",
                    "Condition": "Lack of network traffic analysis."
                },
                {
                    "Assumption": "System does not have rate-limiting mechanisms.",
                    "Role": "System Engineer",
                    "Condition": "Absence of rate-limiting features."
                },
                {
                    "Assumption": "Attacker has the capability to generate high traffic volumes.",
                    "Role": "Attacker",
                    "Condition": "Availability of resources for traffic floods."
                }
            ],
            "Potential Impact": "Disruption of DCS operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network flood",
                "DCS controller",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the DCS to crash the system.",
            "Assumptions": [
                {
                    "Assumption": "System has unpatched vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Known vulnerabilities exist and are exploitable."
                },
                {
                    "Assumption": "Attacker can access the DCS remotely.",
                    "Role": "Attacker",
                    "Condition": "Remote connectivity to the DCS."
                },
                {
                    "Assumption": "No active monitoring of system stability.",
                    "Role": "System Analyst",
                    "Condition": "Lack of real-time system health monitoring."
                }
            ],
            "Potential Impact": "System crash causing operational downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "DCS crash",
                "device"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker compromises the GPS server, causing the network to lose time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can access the GPS server.",
                    "Role": "Attacker",
                    "Condition": "Network or physical access to the GPS server."
                },
                {
                    "Assumption": "Time synchronization is critical for operations.",
                    "Role": "System Engineer",
                    "Condition": "Dependence on time-synchronized tasks."
                },
                {
                    "Assumption": "No alternative time source is configured.",
                    "Role": "System Admin",
                    "Condition": "GPS server is the sole time source."
                }
            ],
            "Potential Impact": "Desynchronization leading to operational delays.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "time manipulation",
                "GPS server",
                "network"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits OS vulnerabilities to gain SYSTEM privileges on EWS.",
            "Assumptions": [
                {
                    "Assumption": "OS vulnerabilities are present and exploitable.",
                    "Role": "System Admin",
                    "Condition": "Unpatched OS with known vulnerabilities."
                },
                {
                    "Assumption": "Attacker has initial access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Achieved via phishing or other means."
                },
                {
                    "Assumption": "No privilege escalation protections.",
                    "Role": "IT Security",
                    "Condition": "Absence of privilege protection mechanisms."
                }
            ],
            "Potential Impact": "Full administrative control over EWS.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OS vulnerability",
                "system access",
                "device"
            ],
            "mitre_technique": {
                "name": "LSA Secrets",
                "description": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",
                "id": "attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc",
                "technique_id": "T1003.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses weak AD policies to escalate privileges within the network.",
            "Assumptions": [
                {
                    "Assumption": "AD user policies are weak or insufficient.",
                    "Role": "IT Security",
                    "Condition": "Weak password policies or excessive privileges."
                },
                {
                    "Assumption": "Attacker can interact with AD services.",
                    "Role": "Attacker",
                    "Condition": "Network access to AD services."
                },
                {
                    "Assumption": "No multi-factor authentication in place.",
                    "Role": "System Admin",
                    "Condition": "Dependence solely on single-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized administrative access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "active directory",
                "weak policies",
                "device"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses software vulnerabilities on DCS servers to gain higher system privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS server software has known vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Unpatched DCS software."
                },
                {
                    "Assumption": "Attacker can run exploit code on DCS servers.",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable vulnerabilities."
                },
                {
                    "Assumption": "No active intrusion detection.",
                    "Role": "IT Security",
                    "Condition": "Lack of real-time intrusion detection."
                }
            ],
            "Potential Impact": "Control over DCS server operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software vulnerability",
                "DCS server",
                "device"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an authorized user's credentials to gain access to the DCS Controllers.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can intercept or guess Active Directory user credentials.",
                    "Role": "Attacker",
                    "Condition": "Network communication is insufficiently secured or credentials are weak."
                },
                {
                    "Assumption": "Authentication logs are not monitored in real-time.",
                    "Role": "System Admin",
                    "Condition": "Logging and monitoring settings are poorly configured."
                },
                {
                    "Assumption": "Attackers have access to the network where AD authentication occurs.",
                    "Role": "Attacker",
                    "Condition": "Network protection mechanisms are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access leading to loss of control over refinery operations.",
            "MITRE ATT&CK Keywords": [
                "user credentials",
                "access management",
                "Active Directory",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the GPS server providing time synchronization, causing incorrect timestamps on system logs and data.",
            "Assumptions": [
                {
                    "Assumption": "The GPS signals are inadequately secured and validated.",
                    "Role": "Attacker",
                    "Condition": "Lack of cryptographic protections on GPS signals."
                },
                {
                    "Assumption": "Network is not sufficiently segmented to prevent unauthorized devices.",
                    "Role": "Network Engineer",
                    "Condition": "Insufficient network segmentation."
                },
                {
                    "Assumption": "No redundant time synchronization mechanisms.",
                    "Role": "System Admin",
                    "Condition": "Lack of backup synchronization sources."
                }
            ],
            "Potential Impact": "Integrity of data and logs could be compromised.",
            "MITRE ATT&CK Keywords": [
                "GPS server",
                "time synchronization",
                "integrity",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerading as a trusted DCS component to inject false data or commands.",
            "Assumptions": [
                {
                    "Assumption": "Trusted devices are not mutually authenticated.",
                    "Role": "System Admin",
                    "Condition": "Device authentication mechanisms are weak or absent."
                },
                {
                    "Assumption": "Communication between components is unencrypted.",
                    "Role": "Attacker",
                    "Condition": "Lack of encryption on internal communications."
                },
                {
                    "Assumption": "No anomaly detection for device behaviors.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of real-time behavioral monitoring."
                }
            ],
            "Potential Impact": "Potential manipulation and disruption of refinery operations.",
            "MITRE ATT&CK Keywords": [
                "device spoofing",
                "component communication",
                "command injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection via remote code execution on vulnerable system components.",
            "Assumptions": [
                {
                    "Assumption": "Existence of unpatched software vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Delayed or insufficient patch management."
                },
                {
                    "Assumption": "No Intrusion Detection Systems (IDS) monitoring software activity.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of IDS or IPS deployment."
                },
                {
                    "Assumption": "Administrative privileges can be escalated through exploits.",
                    "Role": "Attacker",
                    "Condition": "Weak permission controls."
                }
            ],
            "Potential Impact": "Corruption and compromise of system integrity and data.",
            "MITRE ATT&CK Keywords": [
                "malware injection",
                "code execution",
                "software vulnerabilities",
                "system"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Alteration of configuration files and set-point values by unauthorized personnel.",
            "Assumptions": [
                {
                    "Assumption": "Configuration files are not adequately protected.",
                    "Role": "System Admin",
                    "Condition": "Weak access control measures."
                },
                {
                    "Assumption": "Audit trails are not maintained or reviewed.",
                    "Role": "Compliance Officer",
                    "Condition": "Poor logging practices."
                },
                {
                    "Assumption": "Unauthorized individuals have access to EWS or OWS.",
                    "Role": "Attacker",
                    "Condition": "Insufficient physical security and role-based access controls."
                }
            ],
            "Potential Impact": "Disruption of refinery operations and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "file modification",
                "set-point values",
                "access control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Insertion of false data into the Historian database.",
            "Assumptions": [
                {
                    "Assumption": "Historian write operations are not restricted.",
                    "Role": "System Admin",
                    "Condition": "Lack of write protection on Historian."
                },
                {
                    "Assumption": "Database integrity checks are not in place.",
                    "Role": "Database Administrator",
                    "Condition": "Absence of integrity validation mechanisms."
                },
                {
                    "Assumption": "Network segmentation is inadequate.",
                    "Role": "Network Engineer",
                    "Condition": "Network allows unauthorized access."
                }
            ],
            "Potential Impact": "Misleading trend analysis and potential operational decisions based on false data.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "historian",
                "false data",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of audit trails preventing accountability of actions taken on EWS.",
            "Assumptions": [
                {
                    "Assumption": "Audit logging is not enabled for all critical actions.",
                    "Role": "System Admin",
                    "Condition": "Initial log settings are misconfigured or insufficient."
                },
                {
                    "Assumption": "Audit logs are not tamper-proof.",
                    "Role": "Compliance Officer",
                    "Condition": "Logs are stored without integrity assurances."
                },
                {
                    "Assumption": "Logs are not regularly reviewed.",
                    "Role": "Security Analyst",
                    "Condition": "Neglect of log review processes."
                }
            ],
            "Potential Impact": "Inability to trace and verify actions taken, potentially leading to undetected security breaches.",
            "MITRE ATT&CK Keywords": [
                "audit trail",
                "logging",
                "accountability",
                "system"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny changes made to process set-points due to inadequate logging on OWS.",
            "Assumptions": [
                {
                    "Assumption": "No comprehensive logging of operator actions.",
                    "Role": "System Admin",
                    "Condition": "Logging mechanisms are partially implemented."
                },
                {
                    "Assumption": "Role-based access control is not enforced.",
                    "Role": "Security Analyst",
                    "Condition": "Relying on individual accountability rather than roles."
                },
                {
                    "Assumption": "Tamper-evident logging is not in place.",
                    "Role": "Compliance Officer",
                    "Condition": "Logs can be altered without detection."
                }
            ],
            "Potential Impact": "Accountability issues and difficulty in identifying the root cause of problems.",
            "MITRE ATT&CK Keywords": [
                "operator actions",
                "logging deficiencies",
                "access control",
                "system"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Disputes regarding unauthorized access attempts due to insufficient user activity logs.",
            "Assumptions": [
                {
                    "Assumption": "User activities are not fully logged.",
                    "Role": "System Admin",
                    "Condition": "Logging of user activities is incomplete."
                },
                {
                    "Assumption": "Logs can be altered or deleted by users.",
                    "Role": "Compliance Officer",
                    "Condition": "Lack of secure log storage."
                },
                {
                    "Assumption": "No real-time monitoring of suspicious activities.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of active monitoring systems."
                }
            ],
            "Potential Impact": "Inconsistent incident attribution and unresolved security issues.",
            "MITRE ATT&CK Keywords": [
                "unauthorized access",
                "user activity logs",
                "monitoring",
                "system"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware exploiting vulnerabilities to access and exfiltrate sensitive refinery data.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in software remain unpatched.",
                    "Role": "System Admin",
                    "Condition": "Delayed or no software updates."
                },
                {
                    "Assumption": "Insufficient IDS/IPS implementation.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of reactive security measures."
                },
                {
                    "Assumption": "Data is not encrypted in transit or at rest.",
                    "Role": "System Admin",
                    "Condition": "Weak or absent encryption measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "vulnerabilities",
                "data exfiltration",
                "system"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted communication between DCS components intercepted by attackers.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Reliance on unencrypted protocols."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of network monitoring tools."
                },
                {
                    "Assumption": "Attackers have network access.",
                    "Role": "Attacker",
                    "Condition": "Insufficient network security controls."
                }
            ],
            "Potential Impact": "Exposure of sensitive control and operational data.",
            "MITRE ATT&CK Keywords": [
                "unencrypted communication",
                "interception",
                "data exposure",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Historian database accessed by unauthorized users, leading to data leakage.",
            "Assumptions": [
                {
                    "Assumption": "Database access controls are weak.",
                    "Role": "Database Administrator",
                    "Condition": "Inadequate user access management."
                },
                {
                    "Assumption": "No database activity monitoring.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of database logging tools."
                },
                {
                    "Assumption": "Network segmentation is poor.",
                    "Role": "Network Engineer",
                    "Condition": "Insufficient internal network segmentation."
                }
            ],
            "Potential Impact": "Leakage of historically significant operational data.",
            "MITRE ATT&CK Keywords": [
                "historian access",
                "data leakage",
                "database",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood the DCS network with traffic, causing availability issues.",
            "Assumptions": [
                {
                    "Assumption": "Network does not have DDoS protection.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of DDoS mitigation strategies."
                },
                {
                    "Assumption": "Network traffic is not monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of network traffic monitoring."
                },
                {
                    "Assumption": "Firewalls are not configured to block suspicious traffic.",
                    "Role": "System Admin",
                    "Condition": "Poor firewall configurations."
                }
            ],
            "Potential Impact": "Reduced availability or complete denial of access to DCS.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network flooding",
                "availability",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of system vulnerabilities to crash DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "Software vulnerabilities are unpatched.",
                    "Role": "System Admin",
                    "Condition": "Neglect in applying patches."
                },
                {
                    "Assumption": "Security testing is not performed regularly.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of periodic security assessments."
                },
                {
                    "Assumption": "No redundancy for critical DCS servers.",
                    "Role": "System Architect",
                    "Condition": "Single points of failure exist."
                }
            ],
            "Potential Impact": "Critical system downtime disrupting refinery operations.",
            "MITRE ATT&CK Keywords": [
                "vulnerabilities",
                "crashing servers",
                "availability",
                "system"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Disabling the Active Directory authentication service, preventing user access.",
            "Assumptions": [
                {
                    "Assumption": "No secondary authentication system.",
                    "Role": "System Architect",
                    "Condition": "Lack of backup authentication mechanisms."
                },
                {
                    "Assumption": "No real-time monitoring of AD services.",
                    "Role": "Security Analyst",
                    "Condition": "Failure to monitor AD health and uptime."
                },
                {
                    "Assumption": "Authentication service is not segmented.",
                    "Role": "Network Engineer",
                    "Condition": "Authentication system within accessible network."
                }
            ],
            "Potential Impact": "Users unable to authenticate, affecting control and monitoring operations.",
            "MITRE ATT&CK Keywords": [
                "Active Directory",
                "authentication service",
                "denial of service",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploiting vulnerabilities to gain SYSTEM privileges on DCS components.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched software vulnerabilities exist.",
                    "Role": "System Admin",
                    "Condition": "Delayed or missed updates."
                },
                {
                    "Assumption": "Privileged access controls are weak.",
                    "Role": "System Architect",
                    "Condition": "Inadequate access management."
                },
                {
                    "Assumption": "No monitoring for privilege escalation attempts.",
                    "Role": "Security Analyst",
                    "Condition": "Lack of monitoring mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control over critical system functionalities.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "SYSTEM privileges",
                "vulnerabilities",
                "system"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Admin credentials compromised, allowing attackers to execute commands with elevated permissions.",
            "Assumptions": [
                {
                    "Assumption": "Admin credentials are not stored securely.",
                    "Role": "System Admin",
                    "Condition": "Weak credential management practices."
                },
                {
                    "Assumption": "Authentication attempts are not monitored.",
                    "Role": "Security Analyst",
                    "Condition": "Absence of login attempt monitoring."
                },
                {
                    "Assumption": "Multi-factor authentication (MFA) is not enforced.",
                    "Role": "Security Architect",
                    "Condition": "Lack of MFA implementation."
                }
            ],
            "Potential Impact": "Potential manipulation and disruption of control activities.",
            "MITRE ATT&CK Keywords": [
                "admin credentials",
                "compromise",
                "elevated permissions",
                "system"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit of Active Directory misconfigurations to gain elevated privileges across the network.",
            "Assumptions": [
                {
                    "Assumption": "AD configurations are improperly set up.",
                    "Role": "System Admin",
                    "Condition": "Incorrect or weak AD settings."
                },
                {
                    "Assumption": "No regular audits of AD permissions.",
                    "Role": "Compliance Officer",
                    "Condition": "Ignoring periodic AD audit practices."
                },
                {
                    "Assumption": "Vulnerabilities in AD exploited for privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Awareness and exploitation of AD flaws."
                }
            ],
            "Potential Impact": "Unauthorized access to and control over network and system resources.",
            "MITRE ATT&CK Keywords": [
                "Active Directory",
                "misconfigurations",
                "privilege escalation",
                "network"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs Active Directory credentials to gain unauthorized access to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained or guessed AD credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are weak or leaked."
                },
                {
                    "Assumption": "There is inadequate monitoring of login patterns.",
                    "Role": "System Admin",
                    "Condition": "Lack of advanced threat detection."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is implemented.",
                    "Role": "System Admin",
                    "Condition": "MFA is disabled or not enforced."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and control of DCS operations.",
            "MITRE ATT&CK Keywords": [
                "credentials",
                "spoofing",
                "Active Directory",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary spoofs the GPS signal to disrupt time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The GPS signal is not sufficiently secured.",
                    "Role": "System Admin",
                    "Condition": "Weak or no encryption on GPS signals."
                },
                {
                    "Assumption": "No alternate time synchronization method is available.",
                    "Role": "System Architect",
                    "Condition": "Reliance solely on GPS server."
                },
                {
                    "Assumption": "Attackers are able to get close to the GPS signal receiver.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the GPS devices."
                }
            ],
            "Potential Impact": "Disruption of time-sensitive operations and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "spoofing",
                "network",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a spoofed engineering workstation to send malicious commands to the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Network is not fully isolated."
                },
                {
                    "Assumption": "There is insufficient validation of workstation authenticity.",
                    "Role": "System Admin",
                    "Condition": "Lack of mutual authentication."
                },
                {
                    "Assumption": "Communication protocols lack robust security measures.",
                    "Role": "System Architect",
                    "Condition": "Weak or no encryption."
                }
            ],
            "Potential Impact": "Manipulation of control settings and potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "workstation",
                "spoofing",
                "DCS controller",
                "command injection"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized user modifies configuration settings on the Engineering Workstation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has bypassed authentication.",
                    "Role": "Attacker",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "There are insufficient logging and monitoring mechanisms.",
                    "Role": "System Admin",
                    "Condition": "No real-time alerts for configuration changes."
                },
                {
                    "Assumption": "No integrity checks on configuration files.",
                    "Role": "System Admin",
                    "Condition": "Lack of file integrity monitoring."
                }
            ],
            "Potential Impact": "Alteration of system behavior leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "configuration",
                "tampering",
                "engineering workstation",
                "settings"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious software injected into the DCS servers to alter process data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network defenses are weak."
                },
                {
                    "Assumption": "Software validation mechanisms are ineffective.",
                    "Role": "System Admin",
                    "Condition": "Lack of code signing or malware scanning."
                },
                {
                    "Assumption": "Insufficient monitoring of server activities.",
                    "Role": "System Admin",
                    "Condition": "Lack of anomaly detection systems."
                }
            ],
            "Potential Impact": "Corruption of process data leading to operational errors.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "tampering",
                "DCS servers",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies historical data in the Historian to mask an operational error.",
            "Assumptions": [
                {
                    "Assumption": "The insider has legitimate access to the Historian.",
                    "Role": "Insider",
                    "Condition": "Lack of user access reviews."
                },
                {
                    "Assumption": "There are no robust checks on data integrity.",
                    "Role": "System Admin",
                    "Condition": "Lack of integrity verification mechanisms."
                },
                {
                    "Assumption": "Monitoring and alerts for data changes are insufficient.",
                    "Role": "System Admin",
                    "Condition": "Weak or no real-time monitoring."
                }
            ],
            "Potential Impact": "Distortion of trend analysis and potential cover-up of faults.",
            "MITRE ATT&CK Keywords": [
                "insider",
                "tampering",
                "historian",
                "data alteration"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny making critical changes to process set-point values on the OWS.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are inadequate.",
                    "Role": "System Admin",
                    "Condition": "Lack of proper audit trails."
                },
                {
                    "Assumption": "There is inadequate enforcement of user accountability.",
                    "Role": "System Admin",
                    "Condition": "Lack of non-repudiation controls."
                },
                {
                    "Assumption": "Insufficient user activity monitoring on the OWS.",
                    "Role": "System Admin",
                    "Condition": "Absence of comprehensive logging."
                }
            ],
            "Potential Impact": "Difficulty in tracking and managing operator actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "operator workstation",
                "audit trails",
                "logging"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineers deny making configuration changes on the EWS.",
            "Assumptions": [
                {
                    "Assumption": "Configurations changes are not properly logged.",
                    "Role": "System Admin",
                    "Condition": "Weak or no configuration management."
                },
                {
                    "Assumption": "There is no detailed logging of user actions.",
                    "Role": "System Admin",
                    "Condition": "Lack of detailed user activity logs."
                },
                {
                    "Assumption": "Insufficient access controls on EWS.",
                    "Role": "System Admin",
                    "Condition": "Poorly enforced access permissions."
                }
            ],
            "Potential Impact": "Accountability issues and potential rollback difficulties.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "engineering workstation",
                "configuration changes",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies executing unauthorized code due to poor logging standards.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not capture detailed execution information.",
                    "Role": "System Admin",
                    "Condition": "Logs lack granularity."
                },
                {
                    "Assumption": "Logging systems are not tamper-proof.",
                    "Role": "System Admin",
                    "Condition": "Weak log integrity mechanisms."
                },
                {
                    "Assumption": "There is no automated log analysis.",
                    "Role": "System Admin",
                    "Condition": "Manual log review processes."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions to the correct user.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "unauthorized code",
                "logging",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive process data intercepted during transmission from sensors to DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not adequately encrypted.",
                    "Role": "System Admin",
                    "Condition": "Use of insecure communication protocols."
                },
                {
                    "Assumption": "Attackers have access to the network.",
                    "Role": "Attacker",
                    "Condition": "Network perimeter defenses are weak."
                },
                {
                    "Assumption": "There is insufficient network monitoring.",
                    "Role": "System Admin",
                    "Condition": "Lack of intrusion detection systems."
                }
            ],
            "Potential Impact": "Exposure of sensitive process data to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to Historian data for industrial espionage.",
            "Assumptions": [
                {
                    "Assumption": "Historian access controls are weak.",
                    "Role": "System Admin",
                    "Condition": "Poorly enforced access permissions."
                },
                {
                    "Assumption": "There is no encryption on stored data.",
                    "Role": "System Admin",
                    "Condition": "Data at rest is unencrypted."
                },
                {
                    "Assumption": "Lack of monitoring and alerting on data access.",
                    "Role": "System Admin",
                    "Condition": "Absence of real-time alerts."
                }
            ],
            "Potential Impact": "Leakage of proprietary operational data leading to competitive disadvantages.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "historian",
                "data access",
                "industrial espionage"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromise of AD leads to exposure of user credentials.",
            "Assumptions": [
                {
                    "Assumption": "AD is not hardened against attacks.",
                    "Role": "System Admin",
                    "Condition": "Use of default settings and configurations."
                },
                {
                    "Assumption": "AD logs are not regularly reviewed.",
                    "Role": "System Admin",
                    "Condition": "Absence of log review processes."
                },
                {
                    "Assumption": "Weak password policies are in place.",
                    "Role": "System Admin",
                    "Condition": "Lack of strong password enforcement."
                }
            ],
            "Potential Impact": "Exposes credentials that could be used for further attacks.",
            "MITRE ATT&CK Keywords": [
                "active directory",
                "information disclosure",
                "credentials",
                "compromise"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack on the DCS network to disrupt real-time process monitoring.",
            "Assumptions": [
                {
                    "Assumption": "External access points are poorly protected.",
                    "Role": "System Admin",
                    "Condition": "Weak firewall rules."
                },
                {
                    "Assumption": "There is insufficient network bandwidth to handle attack traffic.",
                    "Role": "System Architect",
                    "Condition": "Lack of DDoS mitigation strategies."
                },
                {
                    "Assumption": "Network anomaly detection systems are inadequate.",
                    "Role": "System Admin",
                    "Condition": "Absent or insufficient anomaly detection."
                }
            ],
            "Potential Impact": "Loss of availability of process monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "denial of service",
                "network",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on DCS servers causing system crash.",
            "Assumptions": [
                {
                    "Assumption": "Servers are not regularly patched.",
                    "Role": "System Admin",
                    "Condition": "Outdated software and systems."
                },
                {
                    "Assumption": "Malware defenses are not robust.",
                    "Role": "System Admin",
                    "Condition": "Lack of advanced endpoint protection."
                },
                {
                    "Assumption": "User awareness on phishing is low.",
                    "Role": "System Admin",
                    "Condition": "Inadequate user training."
                }
            ],
            "Potential Impact": "Disruption of system operations and loss of service availability.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "denial of service",
                "system crash",
                "availability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the communication channels between the DCS controller and actuators.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks traffic filtering mechanisms.",
                    "Role": "System Admin",
                    "Condition": "No or weak traffic filters."
                },
                {
                    "Assumption": "Insufficient capacity planning for communication channels.",
                    "Role": "System Architect",
                    "Condition": "Inadequate channel capacity."
                },
                {
                    "Assumption": "No redundancy in communication pathways.",
                    "Role": "System Architect",
                    "Condition": "Single point of failure in communication paths."
                }
            ],
            "Potential Impact": "Interruption in control signals leading to operational downtime.",
            "MITRE ATT&CK Keywords": [
                "communication channels",
                "denial of service",
                "flooding",
                "control signals"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the DCS software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The system contains unpatched vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Delayed or missed software updates."
                },
                {
                    "Assumption": "Access controls are poorly enforced.",
                    "Role": "System Admin",
                    "Condition": "Use of default or weak access rights."
                },
                {
                    "Assumption": "There is insufficient vulnerability scanning.",
                    "Role": "System Admin",
                    "Condition": "Lack of regular vulnerability assessments."
                }
            ],
            "Potential Impact": "Full control over the system allowing significant malicious activities.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "administrative access",
                "software"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider exploits misconfigured AD permissions to gain higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory permissions are misconfigured.",
                    "Role": "System Admin",
                    "Condition": "Incorrect or excessive privileges granted."
                },
                {
                    "Assumption": "Regular audits of AD permissions are not conducted.",
                    "Role": "System Admin",
                    "Condition": "Lack of routine reviews."
                },
                {
                    "Assumption": "Insiders have knowledge of existing misconfigurations.",
                    "Role": "Insider",
                    "Condition": "Awareness of AD setup."
                }
            ],
            "Potential Impact": "Unauthorized configuration changes and data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider",
                "Active Directory",
                "permissions"
            ],
            "mitre_technique": {
                "name": "Active Setup",
                "description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
                "id": "attack-pattern--22522668-ddf6-470b-a027-9d6866679f67",
                "technique_id": "T1547.014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised less-privileged account to escalate to system administrator rights.",
            "Assumptions": [
                {
                    "Assumption": "Compromise of a less-privileged account.",
                    "Role": "Attacker",
                    "Condition": "Weak or compromised credentials."
                },
                {
                    "Assumption": "Privilege escalation defenses are insufficient.",
                    "Role": "System Admin",
                    "Condition": "Lack of or weak escalation detection."
                },
                {
                    "Assumption": "Monitoring systems do not detect misuse of privileges.",
                    "Role": "System Admin",
                    "Condition": "Poorly configured monitoring systems."
                }
            ],
            "Potential Impact": "Complete system compromise and ability to conduct extensive malicious actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "account compromise",
                "administrator rights",
                "system"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user by compromising Active Directory (AD) credentials.",
            "Assumptions": [
                {
                    "Assumption": "AD authentication is used across the DCS",
                    "Role": "System Administrator",
                    "Condition": "Conditions where AD is the primary authentication method."
                },
                {
                    "Assumption": "User credentials are vulnerable to phishing attacks",
                    "Role": "DCS Users",
                    "Condition": "Conditions where users are not adequately trained in identifying phishing attempts."
                },
                {
                    "Assumption": "Attackers have network access to the AD servers",
                    "Role": "Network Defenders",
                    "Condition": "Conditions where adequate network segmentation is not in place."
                }
            ],
            "Potential Impact": "Unauthorized access to critical DCS functions and data.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "phishing",
                "user credentials",
                "Active Directory"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing the GPS server to provide incorrect time synchronization, leading to network and data inconsistencies.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals are not authenticated or encrypted",
                    "Role": "System Integrator",
                    "Condition": "Conditions where GPS signals are transmitted in plaintext."
                },
                {
                    "Assumption": "Physical security around the GPS server is inadequate",
                    "Role": "Facility Management",
                    "Condition": "Conditions where attackers can physically access the server."
                },
                {
                    "Assumption": "Weak or misconfigured network protocols",
                    "Role": "Network Engineer",
                    "Condition": "Conditions where network protocols don't include error-checking or validation."
                }
            ],
            "Potential Impact": "Incorrect time synchronization affecting data integrity and operational timings.",
            "MITRE ATT&CK Keywords": [
                "NTP",
                "time synchronization",
                "GPS spoofing",
                "network protocols"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers use fake engineering workstation software to trick operators and alter critical set points.",
            "Assumptions": [
                {
                    "Assumption": "DCS software does not have strong certificate-based authentication",
                    "Role": "Software Developer",
                    "Condition": "Conditions where application-layer security is not robust."
                },
                {
                    "Assumption": "Users cannot differentiate between legitimate and malicious software",
                    "Role": "Operations Team",
                    "Condition": "Conditions where there is a lack of software validation training."
                },
                {
                    "Assumption": "Attackers have network access",
                    "Role": "Network Administrator",
                    "Condition": "Conditions where system segmentation and access controls are weak."
                }
            ],
            "Potential Impact": "Operational disruption and potential plant damage from incorrect set points.",
            "MITRE ATT&CK Keywords": [
                "certificate spoofing",
                "engineering workstation",
                "malware",
                "user interface"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized modification of process set points by exploiting remote code execution vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "System components have known vulnerabilities",
                    "Role": "Security Team",
                    "Condition": "Conditions where known vulnerabilities are not patched."
                },
                {
                    "Assumption": "Remote access to sensitive components is possible",
                    "Role": "Network Engineer",
                    "Condition": "Conditions where remote access is not sufficiently controlled."
                },
                {
                    "Assumption": "Adequate input validation is lacking",
                    "Role": "Software Development Team",
                    "Condition": "Conditions where the software does not validate inputs or commands correctly."
                }
            ],
            "Potential Impact": "Data integrity compromise, unauthorized command execution, and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "input validation",
                "set point alteration",
                "ICS security"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers tamper with data in the Historian database to manipulate historical trends and reports.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access is not adequately monitored or restricted",
                    "Role": "Database Administrator",
                    "Condition": "Conditions without strict access policies and monitoring tools."
                },
                {
                    "Assumption": "No encryption for data at rest in the Historian",
                    "Role": "Data Security Team",
                    "Condition": "Conditions where database encryption is not implemented."
                },
                {
                    "Assumption": "Application lacks audit logs",
                    "Role": "Compliance Team",
                    "Condition": "Conditions where there are no mechanisms for tracking data access or modifications."
                }
            ],
            "Potential Impact": "Misleading operational insights could disrupt future operations and decision-making.",
            "MITRE ATT&CK Keywords": [
                "database tampering",
                "historical data manipulation",
                "ICS",
                "trend analysis"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies DCS configurations on the Engineering Workstation to disrupt operation.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for configuration changes",
                    "Role": "System Administrator",
                    "Condition": "Conditions where authentication policies are lax."
                },
                {
                    "Assumption": "Remote configuration access without adequate controls",
                    "Role": "Network Administrator",
                    "Condition": "Conditions where remote management lacks strict controls."
                },
                {
                    "Assumption": "Inadequate logging and monitoring of configuration changes",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Conditions where changes are not logged or actively monitored."
                }
            ],
            "Potential Impact": "Operational disruptions, data integrity issues, and potential safety risks from unauthorized configurations.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "engineering workstation",
                "ICS",
                "remote configuration"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny responsibility for changes made to process set points due to a lack of non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "System lacks audit logs or paper trails for changes",
                    "Role": "Compliance Manager",
                    "Condition": "Conditions without comprehensive logging mechanisms."
                },
                {
                    "Assumption": "Weak authentication and authorization methods",
                    "Role": "System Architect",
                    "Condition": "Conditions where user actions are not strongly authenticated."
                },
                {
                    "Assumption": "Unrestricted or poorly managed user accounts",
                    "Role": "User Management Team",
                    "Condition": "Conditions where user accounts are shared or not properly managed."
                }
            ],
            "Potential Impact": "Untraceable changes can disrupt accountability, leading to governance and compliance issues.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "audit logs",
                "user accountability",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineers deny deployment of untested configurations or software patches leading to operational failures.",
            "Assumptions": [
                {
                    "Assumption": "No version control or deployment logs",
                    "Role": "Development Team",
                    "Condition": "Conditions where there is no version control or deployment tracking."
                },
                {
                    "Assumption": "Inadequate separation of development, testing, and production environments",
                    "Role": "IT Operations",
                    "Condition": "Conditions where environments are not segregated."
                },
                {
                    "Assumption": "Weak user authentication processes",
                    "Role": "Security Team",
                    "Condition": "Conditions where user authentication to systems is not stringent."
                }
            ],
            "Potential Impact": "Loss of integrity and availability due to uncontrollable operational failures.",
            "MITRE ATT&CK Keywords": [
                "software patch",
                "ICS",
                "version control",
                "user authentication"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny viewing or altering sensitive information due to lack of access logs.",
            "Assumptions": [
                {
                    "Assumption": "No monitoring or logging tools active",
                    "Role": "System Monitoring Team",
                    "Condition": "Conditions without active access monitoring systems."
                },
                {
                    "Assumption": "Weak access control policies",
                    "Role": "Access Manager",
                    "Condition": "Conditions where access policies are not enforced."
                },
                {
                    "Assumption": "No alert system in place for suspicious behavior",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Conditions where there is no alert mechanism for unusual actions."
                }
            ],
            "Potential Impact": "Confidentiality and integrity issues, compromising sensitive information.",
            "MITRE ATT&CK Keywords": [
                "access logging",
                "ICS",
                "user behavior tracking",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is exfiltrated through a compromised engineering workstation.",
            "Assumptions": [
                {
                    "Assumption": "Compromised workstation with network access",
                    "Role": "Network Security Team",
                    "Condition": "Conditions where workstations have network access without strict monitoring."
                },
                {
                    "Assumption": "Engineering workstation lacks data encryption",
                    "Role": "Data Security Team",
                    "Condition": "Conditions where data encryption policies are not enforced."
                },
                {
                    "Assumption": "No DLP (Data Loss Prevention) tools in use",
                    "Role": "Security Team",
                    "Condition": "Conditions where implementing DLP tools is not a priority."
                }
            ],
            "Potential Impact": "Loss of data confidentiality can lead to competitive disadvantages and regulatory penalties.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "engineering workstation",
                "ICS",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between the DCS controller and sensors/actuators.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted",
                    "Role": "Network Engineer",
                    "Condition": "Conditions where encryption is not enforced for communication."
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Conditions where monitoring of network traffic is inadequate."
                },
                {
                    "Assumption": "Insufficient physical security for network equipment",
                    "Role": "Facility Security",
                    "Condition": "Conditions where physical access to network equipment is not restricted."
                }
            ],
            "Potential Impact": "Compromised data confidentiality, risking exposure of operational methods and control messages.",
            "MITRE ATT&CK Keywords": [
                "network interception",
                "ICS",
                "unencrypted communication",
                "data confidentiality"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Old and unpatched historian application leaks sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "Historian application not regularly updated",
                    "Role": "IT Operations",
                    "Condition": "Conditions where software updates and patches are not applied timely."
                },
                {
                    "Assumption": "Historian application accessed without adequate authentication",
                    "Role": "Security Team",
                    "Condition": "Conditions where access control mechanisms are weak."
                },
                {
                    "Assumption": "Insufficient network segmentation for historian",
                    "Role": "Network Engineer",
                    "Condition": "Conditions where network segmentation is inadequate for sensitive systems."
                }
            ],
            "Potential Impact": "Sensitive process data leakage could lead to industrial espionage and competitive risks.",
            "MITRE ATT&CK Keywords": [
                "application vulnerability",
                "historian",
                "ICS",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targeting the DCS servers, resulting in service disruption.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers are exposed to the internet without proper protection",
                    "Role": "Network Security",
                    "Condition": "Conditions where DCS servers lack firewall and intrusion prevention systems."
                },
                {
                    "Assumption": "No rate limiting or traffic filtering mechanisms in place",
                    "Role": "Network Administrator",
                    "Condition": "Conditions without DDoS protection strategies."
                },
                {
                    "Assumption": "Lack of redundancy and load balancing for servers",
                    "Role": "System Architect",
                    "Condition": "Conditions where failover strategies are not implemented."
                }
            ],
            "Potential Impact": "Operational downtime, affecting refinery control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "ICS",
                "service disruption",
                "network protection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploit of buffer overflow vulnerability in DCS server software causing a crash.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable software versions running on DCS servers",
                    "Role": "IT Operations",
                    "Condition": "Conditions where timely updates are not applied to vulnerable software."
                },
                {
                    "Assumption": "Network access to vulnerable service",
                    "Role": "Network Security Team",
                    "Condition": "Conditions where external network access is not restricted."
                },
                {
                    "Assumption": "Lack of input validation and security checks",
                    "Role": "Software Development Team",
                    "Condition": "Conditions where software does not validate inputs effectively."
                }
            ],
            "Potential Impact": "Loss of service availability, potentially causing operational halt in the refinery.",
            "MITRE ATT&CK Keywords": [
                "buffer overflow",
                "ICS",
                "software vulnerability",
                "service crash"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Ransomware infection on DCS servers, encrypting critical files and disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "No effective endpoint protection mechanisms",
                    "Role": "Endpoint Security Team",
                    "Condition": "Conditions where endpoint protection systems are outdated or ineffective."
                },
                {
                    "Assumption": "Inadequate network segmentation",
                    "Role": "Network Engineer",
                    "Condition": "Conditions where network segmentation does not limit infection spread."
                },
                {
                    "Assumption": "No proper data backup and recovery strategies",
                    "Role": "Data Management Team",
                    "Condition": "Conditions where data backup processes are deficient or non-existent."
                }
            ],
            "Potential Impact": "Data unavailability and potential loss of critical operational data.",
            "MITRE ATT&CK Keywords": [
                "ransomware",
                "ICS",
                "file encryption",
                "data recovery"
            ],
            "mitre_technique": {
                "name": "Safe Mode Boot",
                "description": "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",
                "id": "attack-pattern--28170e17-8384-415c-8486-2e6b294cb803",
                "technique_id": "T1562.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of unpatched privilege escalation vulnerability, granting attackers admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "System components running outdated and vulnerable software",
                    "Role": "System Administrator",
                    "Condition": "Conditions where software patches and updates are not applied promptly."
                },
                {
                    "Assumption": "Active Directory policies not adequately configured",
                    "Role": "AD Administrators",
                    "Condition": "Conditions where AD policies are not restrictive."
                },
                {
                    "Assumption": "No monitoring of privileged account activities",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Conditions where privileged account activities are not tracked or analyzed."
                }
            ],
            "Potential Impact": "Complete control over system operations, risking both data integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "ICS",
                "vulnerability exploitation",
                "admin access"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of user accounts through credential theft, resulting in administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Weak password policies",
                    "Role": "User Management Team",
                    "Condition": "Conditions where password complexity and change policies are inadequate."
                },
                {
                    "Assumption": "Insufficient multi-factor authentication",
                    "Role": "IT Security Team",
                    "Condition": "Conditions where multi-factor authentication is not enforced."
                },
                {
                    "Assumption": "No user activity monitoring and anomaly detection",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Conditions where user activities are not actively monitored."
                }
            ],
            "Potential Impact": "Full control over critical system functions, leading to operational and security breaches.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "ICS",
                "administrative access",
                "user accounts"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious code injection, exploiting software with remote code execution vulnerabilities to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Software components are not regularly tested for vulnerabilities",
                    "Role": "Development Team",
                    "Condition": "Conditions where secure coding practices and regular testing are not enforced."
                },
                {
                    "Assumption": "Misconfigured service permissions",
                    "Role": "System Administrator",
                    "Condition": "Conditions where service permissions are overly permissive."
                },
                {
                    "Assumption": "No application whitelisting on critical systems",
                    "Role": "Endpoint Security Team",
                    "Condition": "Conditions where application whitelisting policies are not implemented."
                }
            ],
            "Potential Impact": "Gain of unauthorized control over the system, leading to data and service control.",
            "MITRE ATT&CK Keywords": [
                "code injection",
                "ICS",
                "remote code execution",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof the identity of legitimate users to gain unauthorized access to the DCS system through compromised Active Directory credentials.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is used for authentication without strong multi-factor authentication enabled",
                    "Role": "System Administrator",
                    "Condition": "Without multi-factor authentication"
                },
                {
                    "Assumption": "Users have predictable or easily guessable passwords",
                    "Role": "End Users",
                    "Condition": "Using weak passwords"
                },
                {
                    "Assumption": "Logs are not monitored or insufficiently monitored for suspicious login activities",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of regular monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access, leading to potential tampering with controller settings and data.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Credential Access",
                "Active Directory",
                "Authentication Bypass"
            ],
            "mitre_technique": {
                "name": "Password Managers",
                "description": "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",
                "id": "attack-pattern--315f51f0-6b03-4c1e-bfb2-84740afb8e21",
                "technique_id": "T1555.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof the GPS server, leading to incorrect time synchronization across all DCS components.",
            "Assumptions": [
                {
                    "Assumption": "The GPS server does not use secure communication methods",
                    "Role": "Network Administrator",
                    "Condition": "Unencrypted or non-authenticated communication"
                },
                {
                    "Assumption": "There are no checks or alerts for time discrepancies in the DCS system",
                    "Role": "System Administrator",
                    "Condition": "Absence of anomaly detection for time synchronization"
                },
                {
                    "Assumption": "The DCS system relies solely on the GPS server for time synchronization",
                    "Role": "System Architect",
                    "Condition": "Lack of redundancy in time sources"
                }
            ],
            "Potential Impact": "Disruption in operations due to incorrect timing, leading to potential operational mishaps.",
            "MITRE ATT&CK Keywords": [
                "Network",
                "Time Synchronization",
                "Spoofing",
                "GPS Server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends malicious messages to the OWS posing as a legitimate DCS controller, causing operators to act on false information.",
            "Assumptions": [
                {
                    "Assumption": "OWS communication is not authenticated with the DCS controller",
                    "Role": "System Integrator",
                    "Condition": "Unsecured communication protocols"
                },
                {
                    "Assumption": "Operators trust the received messages without secondary validation",
                    "Role": "Operators",
                    "Condition": "Lack of verification mechanisms"
                },
                {
                    "Assumption": "The attacker has access to the network segment to intercept and inject messages",
                    "Role": "Network Administrator",
                    "Condition": "Network security vulnerabilities"
                }
            ],
            "Potential Impact": "Operators could make incorrect decisions based on false data, leading to operational safety risks.",
            "MITRE ATT&CK Keywords": [
                "Injection",
                "Network Traffic",
                "Spoofing",
                "DCS Controller"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers exploit a vulnerability (e.g., remote code execution) to tamper with the DCS controller firmware.",
            "Assumptions": [
                {
                    "Assumption": "The DCS controller firmware is not validated before execution",
                    "Role": "System Developer",
                    "Condition": "Lack of secure firmware practices"
                },
                {
                    "Assumption": "No integrity checks or cryptographic signatures are used for firmware updates",
                    "Role": "System Architect",
                    "Condition": "Absence of integrity verification mechanisms"
                },
                {
                    "Assumption": "The attacker has network access to deliver the malicious firmware",
                    "Role": "Network Security Team",
                    "Condition": "Lack of network segmentation and security controls"
                }
            ],
            "Potential Impact": "Corruption of control logic, potentially leading to unsafe operational conditions or shutdown.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Remote Code Execution",
                "Tampering",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actors tamper with Historian data, altering records to mask unauthorized activities or fabricate trends.",
            "Assumptions": [
                {
                    "Assumption": "Historian does not employ data integrity verification methods",
                    "Role": "Database Administrator",
                    "Condition": "Lack of data validation mechanisms"
                },
                {
                    "Assumption": "Access controls to the Historian database are weak",
                    "Role": "System Administrator",
                    "Condition": "Poor access control policies"
                },
                {
                    "Assumption": "The attacker has the ability to access the Historian network segment",
                    "Role": "Network Security Team",
                    "Condition": "Insufficient network security controls"
                }
            ],
            "Potential Impact": "Compromise of data integrity, leading to false analysis and potentially unsafe operational decisions.",
            "MITRE ATT&CK Keywords": [
                "Database",
                "Tampering",
                "Data Integrity",
                "Historian"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the Active Directory and modifies user permissions, granting elevated access to critical DCS components.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is not regularly audited for changes",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of audit and monitoring"
                },
                {
                    "Assumption": "Permissions are not configured with the principle of least privilege",
                    "Role": "System Administrator",
                    "Condition": "Improper access controls"
                },
                {
                    "Assumption": "The attacker has obtained initial access through phishing or other means",
                    "Role": "Network Users",
                    "Condition": "Successful phishing attack"
                }
            ],
            "Potential Impact": "Unauthorized changes to DCS settings, potentially endangering operational safety.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Active Directory",
                "Administrative Access",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs on the DCS servers to mask malicious activities and avoid detection.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not have integrity checks",
                    "Role": "System Developer",
                    "Condition": "Lack of immutable logging facilities"
                },
                {
                    "Assumption": "Logs are accessible and modifiable without proper access controls",
                    "Role": "System Administrator",
                    "Condition": "Lack of access control on logs"
                },
                {
                    "Assumption": "No centralized logging and monitoring systems in place",
                    "Role": "Security Operations Team",
                    "Condition": "Absence of centralized log management"
                }
            ],
            "Potential Impact": "Compromise of data integrity and potentially undetected malicious activities.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Replication",
                "Data Integrity",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attackers use stolen credentials to execute unauthorized actions and later deny their involvement due to the lack of non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "User actions are not logged with sufficient detail for non-repudiation",
                    "Role": "System Developer",
                    "Condition": "Lack of detailed logging"
                },
                {
                    "Assumption": "Log retention policies are insufficient for forensic analysis",
                    "Role": "System Administrator",
                    "Condition": "Poor log retention policies"
                },
                {
                    "Assumption": "Weak authentication mechanisms allow easy credential theft",
                    "Role": "End Users",
                    "Condition": "Using weak passwords or lacking multi-factor authentication"
                }
            ],
            "Potential Impact": "Successful malicious actions without traceability to specific users.",
            "MITRE ATT&CK Keywords": [
                "Non-repudiation",
                "Credential Theft",
                "Unauthorized Access",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Legitimate users deny actions taken after their credentials are stolen, causing confusion and operational delays in incident response.",
            "Assumptions": [
                {
                    "Assumption": "No detailed logs of user actions are maintained",
                    "Role": "System Developer",
                    "Condition": "Lack of activity logging"
                },
                {
                    "Assumption": "There is no incident response procedure in place",
                    "Role": "Incident Response Team",
                    "Condition": "Absence of incident response plan"
                },
                {
                    "Assumption": "Unauthorized access is not promptly detected",
                    "Role": "Security Operations Team",
                    "Condition": "Weak detection mechanisms"
                }
            ],
            "Potential Impact": "Delayed incident response and investigation, potentially exacerbating the security breach.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Non-repudiation",
                "Incident Response",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers exploit an information disclosure vulnerability to gain access to sensitive configurations and process data stored in the Historian.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data in the Historian is not encrypted",
                    "Role": "Database Administrator",
                    "Condition": "Lack of encryption of sensitive data"
                },
                {
                    "Assumption": "Access controls to the Historian are insufficient",
                    "Role": "System Administrator",
                    "Condition": "Poor access control policies"
                },
                {
                    "Assumption": "The attacker has gained initial access to the network",
                    "Role": "Network Security Team",
                    "Condition": "Presence of initial foothold"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data and configurations.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Sensitivity",
                "Historian",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Network traffic between DCS components and workstations is intercepted and analyzed, revealing sensitive command and control information.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted",
                    "Role": "System Architect",
                    "Condition": "Use of unencrypted communication protocols"
                },
                {
                    "Assumption": "No network segregation or traffic monitoring to detect unauthorized interception",
                    "Role": "Network Security Team",
                    "Condition": "Lack of network monitoring and segmentation"
                },
                {
                    "Assumption": "Attackers have physical or logical access to the network",
                    "Role": "Network Administrator",
                    "Condition": "Network access vulnerabilities"
                }
            ],
            "Potential Impact": "Disclosure of sensitive control information and possible replication of control commands.",
            "MITRE ATT&CK Keywords": [
                "Packet Capture",
                "Data in Transit",
                "Information Disclosure",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a file traversal flaw to access sensitive files on the DCS servers, including configuration files and user credentials.",
            "Assumptions": [
                {
                    "Assumption": "File traversal vulnerability exists in the software version used",
                    "Role": "System Developer",
                    "Condition": "Presence of known vulnerabilities"
                },
                {
                    "Assumption": "Sensitive files are stored in accessible directories without proper permissions",
                    "Role": "System Administrator",
                    "Condition": "Inadequate file permissions"
                },
                {
                    "Assumption": "The attacker can exploit this flaw due to unpatched systems",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of timely updates and patching"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive files, leading to potential data breach.",
            "MITRE ATT&CK Keywords": [
                "File Traversal",
                "Sensitive Files",
                "Information Disclosure",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the DCS network causes disruption in communication between the control center and the refinery equipment.",
            "Assumptions": [
                {
                    "Assumption": "Network border devices (routers, firewalls) are not configured to handle high traffic volumes",
                    "Role": "Network Administrator",
                    "Condition": "Improperly configured network devices"
                },
                {
                    "Assumption": "No DDoS protection mechanisms are in place",
                    "Role": "System Architect",
                    "Condition": "Absence of DDoS mitigation strategies"
                },
                {
                    "Assumption": "The attacker has sufficient resources to generate large-scale traffic",
                    "Role": "Attacker",
                    "Condition": "Availability of high-capacity botnet or other resources"
                }
            ],
            "Potential Impact": "Loss of availability, leading to potential operational halts and safety risks.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Network Saturation",
                "Denial of Service",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software causing resource exhaustion on the DCS servers, leading to halted or degraded processing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "No resource limitation policies in place on the servers",
                    "Role": "System Developer",
                    "Condition": "Lack of resource management strategies"
                },
                {
                    "Assumption": "Intrusion detection systems do not detect unusual resource consumption",
                    "Role": "Security Operations Team",
                    "Condition": "Insufficient monitoring for anomalous behavior"
                },
                {
                    "Assumption": "The attacker successfully uploads and executes the malware on the server",
                    "Role": "Attacker",
                    "Condition": "Successful malicious action"
                }
            ],
            "Potential Impact": "Loss of availability and potential data processing failures.",
            "MITRE ATT&CK Keywords": [
                "Resource Exhaustion",
                "Malware",
                "Denial of Service",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers exploit a vulnerability to crash the DCS controller, stopping all communications with sensors and actuators.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability exists and is unpatched",
                    "Role": "System Developer",
                    "Condition": "Presence of known vulnerabilities"
                },
                {
                    "Assumption": "The attacker has network access to deliver the exploit payload",
                    "Role": "Network Security Team",
                    "Condition": "Network accessibility for attackers"
                },
                {
                    "Assumption": "No failover systems are in place to handle controller failures",
                    "Role": "System Architect",
                    "Condition": "Lack of redundancy and failover mechanisms"
                }
            ],
            "Potential Impact": "Loss of availability and potential unsafe operating conditions.",
            "MITRE ATT&CK Keywords": [
                "Exploitation",
                "Vulnerability",
                "Denial of Service",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploit a known vulnerability in the DCS software to escalate privileges and gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The DCS software contains unpatched vulnerabilities",
                    "Role": "System Developer",
                    "Condition": "Failure to apply updates"
                },
                {
                    "Assumption": "Access control policies are not strictly defined",
                    "Role": "System Administrator",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "The attacker has initial foothold in the network",
                    "Role": "Network Security Team",
                    "Condition": "Presence of initial compromise"
                }
            ],
            "Potential Impact": "Complete system takeover with the ability to manipulate control settings and data.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Exploitation",
                "Administrative Access",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A lower-level operator account is compromised and used to gain higher privileges in the Active Directory, controlling critical DCS functions.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access control is not properly implemented",
                    "Role": "System Administrator",
                    "Condition": "Poor access control configuration"
                },
                {
                    "Assumption": "No multi-factor authentication is required for privilege escalation",
                    "Role": "Network Users",
                    "Condition": "Single factor authentication"
                },
                {
                    "Assumption": "Logs and access controls are not reviewed regularly",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of periodic audits"
                }
            ],
            "Potential Impact": "Unauthorized changes to critical DCS settings, leading to potential operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Active Directory",
                "Unauthorized Access",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a code injection vulnerability in the DCS web interface to execute commands with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS web interface contains a code injection vulnerability",
                    "Role": "System Developer",
                    "Condition": "Existence of coding flaw"
                },
                {
                    "Assumption": "No web application firewall is in place to detect and block such attacks",
                    "Role": "Network Security Team",
                    "Condition": "Absence of web application security"
                },
                {
                    "Assumption": "The attacker has access to the network segment hosting the DCS web interface",
                    "Role": "Network Administrator",
                    "Condition": "Network access vulnerabilities"
                }
            ],
            "Potential Impact": "Execution of malicious commands, leading to unauthorized control and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Code Injection",
                "Web Interface",
                "Privilege Escalation",
                "ICS/SCADA Systems"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to the DCS Controller by impersonating a legitimate user in Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory credentials are compromised.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to stolen/compromised credentials."
                },
                {
                    "Assumption": "The attacker can communicate with the DCS Controller over the network.",
                    "Role": "Attacker",
                    "Condition": "Network routes are not sufficiently segmented."
                },
                {
                    "Assumption": "The DCS Controller has no multi-factor authentication in place.",
                    "Role": "System",
                    "Condition": "System relies only on AD credentials for authentication."
                }
            ],
            "Potential Impact": "Access to critical operations, risk of malicious commands.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "credential theft",
                "network access"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses spoofed GPS signals to provide incorrect time synchronization to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "GPS server receives signals without verification.",
                    "Role": "GPS Server",
                    "Condition": "Server lacks authentication mechanisms for GPS signals."
                },
                {
                    "Assumption": "Attacker has the capability to broadcast spoofed GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Attacker owns or can deploy specialized signal equipment."
                },
                {
                    "Assumption": "System components rely solely on GPS for timekeeping.",
                    "Role": "DCS System",
                    "Condition": "No alternative time synchronization or failover mechanism."
                }
            ],
            "Potential Impact": "Disruption of time-sensitive operations, inaccurate data logging.",
            "MITRE ATT&CK Keywords": [
                "signal spoofing",
                "GPS",
                "time manipulation"
            ],
            "mitre_technique": {
                "name": "Location Identification",
                "description": "Adversaries may perform location identification using device data to inform operations and targeted impact for attacks. Location identification data can come in a number of forms, including geographic location, location relative to other control system devices, time zone, and current time. An adversary may use an embedded global positioning system (GPS) module in a device to figure out the physical coordinates of a device. NIST SP800-82 recommends that devices utilize GPS or another location determining mechanism to attach appropriate timestamps to log entries (Citation: Guidance - NIST SP800-82). While this assists in logging and event tracking, an adversary could use the underlying positioning mechanism to determine the general location of a device. An adversary can also infer the physical location of serially connected devices by using serial connection enumeration. \n\nAn adversary attempt to attack and cause Impact could potentially affect other control system devices in close proximity. Device local-time and time-zone settings can also provide adversaries a rough indicator of device location, when specific geographic identifiers cannot be determined from the system.",
                "id": "attack-pattern--7374ab87-0782-41f8-b415-678c0950bb2a",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing an engineering workstation (EWS) to push malicious configurations to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "EWS does not use mutual authentication methods.",
                    "Role": "EWS",
                    "Condition": "EWS relies only on network-based authentication."
                },
                {
                    "Assumption": "Attacker gains network access.",
                    "Role": "Attacker",
                    "Condition": "Network security is compromised."
                },
                {
                    "Assumption": "Attacker can mimic legitimate network traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker has knowledge of the network protocol."
                }
            ],
            "Potential Impact": "Corruption of system configurations, potential equipment damage.",
            "MITRE ATT&CK Keywords": [
                "workstation spoofing",
                "configuration manipulation",
                "network reconnaissance"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data commands sent from the DCS Controller to the actuators.",
            "Assumptions": [
                {
                    "Assumption": "Network communications are not encrypted.",
                    "Role": "DCS Network",
                    "Condition": "Data in transit is sent in plaintext."
                },
                {
                    "Assumption": "Attacker has access to the network path.",
                    "Role": "Attacker",
                    "Condition": "Network is either physically or logically compromised."
                },
                {
                    "Assumption": "There are no integrity checks on command data.",
                    "Role": "DCS System",
                    "Condition": "Command data integrity is not enforced."
                }
            ],
            "Potential Impact": "Manipulation of refinery operations, potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "network injection",
                "actuator control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies process data in the Historian to present falsified trends and reports.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access is inadequately protected.",
                    "Role": "Historian",
                    "Condition": "Weak or compromised authentication measures."
                },
                {
                    "Assumption": "Attacker has network-level access to the Historian.",
                    "Role": "Attacker",
                    "Condition": "Attacker has breached the network perimeter."
                },
                {
                    "Assumption": "No regular integrity validation on historical data.",
                    "Role": "DCS System",
                    "Condition": "Data integrity checks are not routinely performed."
                }
            ],
            "Potential Impact": "Misleading operational decisions, inaccurate safety assessments.",
            "MITRE ATT&CK Keywords": [
                "historical data tampering",
                "trend manipulation",
                "report falsification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters firmware in DCS devices to introduce malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update processes are not secure.",
                    "Role": "DCS Devices",
                    "Condition": "Lack of code signing and verification in updates."
                },
                {
                    "Assumption": "Attacker can upload firmware to DCS devices.",
                    "Role": "Attacker",
                    "Condition": "Attacker has administrative privileges or physical access."
                },
                {
                    "Assumption": "No integrity validation post-update.",
                    "Role": "DCS System",
                    "Condition": "Devices don\u2019t verify firmware integrity."
                }
            ],
            "Potential Impact": "Undetected malicious functionalities, system instability.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "malicious code",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies executing critical system actions on the OWS due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient.",
                    "Role": "DCS System",
                    "Condition": "Log integrity and completeness are not ensured."
                },
                {
                    "Assumption": "Operator actions are not uniquely identifiable.",
                    "Role": "Operator",
                    "Condition": "Multiple users can use the same credentials."
                },
                {
                    "Assumption": "Logs are not securely stored.",
                    "Role": "DCS Servers",
                    "Condition": "Logs can be altered or deleted without trace."
                }
            ],
            "Potential Impact": "Difficulty in tracing malicious activities, lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "log forging",
                "action repudiation",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineer denies making incorrect configuration changes on the EWS.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged.",
                    "Role": "EWS",
                    "Condition": "No logs or logs are incomplete."
                },
                {
                    "Assumption": "Multiple engineers share access credentials.",
                    "Role": "Engineering Team",
                    "Condition": "Lack of unique user accounts and proper auditing."
                },
                {
                    "Assumption": "No mechanism to verify the source of changes.",
                    "Role": "DCS System",
                    "Condition": "Changes are not digitally signed."
                }
            ],
            "Potential Impact": "Challenges in identifying responsible parties, possible cover-up of malicious changes.",
            "MITRE ATT&CK Keywords": [
                "configuration denial",
                "change repudiation",
                "source validation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Admin denies issuing unauthorized command overrides in the AD management interface.",
            "Assumptions": [
                {
                    "Assumption": "Administrative actions are not fully logged.",
                    "Role": "AD Management",
                    "Condition": "Log coverage and retention are insufficient."
                },
                {
                    "Assumption": "Logs can be altered by administrators.",
                    "Role": "System Admin",
                    "Condition": "Administrators have unrestricted log access."
                },
                {
                    "Assumption": "No strong authentication for admin actions.",
                    "Role": "AD System",
                    "Condition": "Lack of multi-factor authentication or audit mechanisms."
                }
            ],
            "Potential Impact": "Potential for unaccounted unauthorized activities, compromised AD management.",
            "MITRE ATT&CK Keywords": [
                "admin repudiation",
                "command override",
                "log alteration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive process data is intercepted by an attacker during network transport.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "DCS System",
                    "Condition": "Data sent over internal network without encryption."
                },
                {
                    "Assumption": "Attacker has access to the network segment.",
                    "Role": "Attacker",
                    "Condition": "Compromised network boundaries allowing access."
                },
                {
                    "Assumption": "No VPN or secure tunneling in place.",
                    "Role": "DCS Network",
                    "Condition": "Network does not use VPNs for communication."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data, potential competitive intelligence.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "man-in-the-middle",
                "unencrypted communication"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to historical data stored in the Historian.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access controls are weak.",
                    "Role": "Historian",
                    "Condition": "Insufficient authentication and authorization controls."
                },
                {
                    "Assumption": "Attacker has knowledge of database credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials are stolen or improperly stored."
                },
                {
                    "Assumption": "No database activity monitoring in place.",
                    "Role": "DCS System",
                    "Condition": "Database lacks real-time activity monitoring."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of historical data trends, risk of leakage of sensitive operations data.",
            "MITRE ATT&CK Keywords": [
                "database breach",
                "historical data access",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Confidential user credentials from Active Directory are exposed due to a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "AD system contains exploitable vulnerabilities.",
                    "Role": "AD System",
                    "Condition": "Unpatched or known vulnerabilities are present."
                },
                {
                    "Assumption": "Attacker has tools to exploit AD vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Attacker can deploy exploits and obtain results."
                },
                {
                    "Assumption": "AD communications are not encrypted.",
                    "Role": "AD System",
                    "Condition": "Encryption is not enforced for AD data."
                }
            ],
            "Potential Impact": "Exposure of user credentials, risk of further unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "AD exploitation",
                "unencrypted data"
            ],
            "mitre_technique": {
                "name": "Domain Accounts",
                "description": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",
                "id": "attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f",
                "technique_id": "T1078.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the DCS network with traffic to disrupt sensor and actuator communications.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks rate limiting or flood detection.",
                    "Role": "DCS Network",
                    "Condition": "No mechanisms in place to mitigate excessive traffic."
                },
                {
                    "Assumption": "Attacker can generate high traffic volumes.",
                    "Role": "Attacker",
                    "Condition": "Strong network resources or botnet under control."
                },
                {
                    "Assumption": "Network devices are susceptible to saturation.",
                    "Role": "Network Devices",
                    "Condition": "Devices do not have high throughput capacity."
                }
            ],
            "Potential Impact": "Disruptions in sensor-actuator communication, potential process malfunction.",
            "MITRE ATT&CK Keywords": [
                "traffic flooding",
                "network saturation",
                "DoS attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware on operator workstation (OWS) consumes system resources, leading to unavailability.",
            "Assumptions": [
                {
                    "Assumption": "OWS does not have robust anti-malware protection.",
                    "Role": "Operator Workstation",
                    "Condition": "No effective anti-malware solution or policies."
                },
                {
                    "Assumption": "Attacker has access to deploy malware.",
                    "Role": "Attacker",
                    "Condition": "Phishing or malicious download is successful."
                },
                {
                    "Assumption": "No resource utilization monitoring in place.",
                    "Role": "DCS System",
                    "Condition": "Lack of system health checks or monitoring."
                }
            ],
            "Potential Impact": "Loss of workstation availability, impact on monitoring and control capabilities.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "workstation malware",
                "system availability"
            ],
            "mitre_technique": {
                "name": "System Shutdown/Reboot",
                "description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A)\n\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)",
                "id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
                "technique_id": "T1529"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability to crash the DCS Server, disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "System runs outdated or vulnerable software.",
                    "Role": "DCS Server",
                    "Condition": "No recent patches or updates applied."
                },
                {
                    "Assumption": "Attacker identifies and exploits the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and tools to exploit vulnerability."
                },
                {
                    "Assumption": "No effective intrusion detection system (IDS) in place.",
                    "Role": "DCS Network",
                    "Condition": "No network or host IDS monitoring activities."
                }
            ],
            "Potential Impact": "Interruption of server operations, process control loss.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "server crash",
                "DoS"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Windows OS to gain SYSTEM privileges on an EWS.",
            "Assumptions": [
                {
                    "Assumption": "EWS runs vulnerable Windows version.",
                    "Role": "Engineering Workstation",
                    "Condition": "System not updated with security patches."
                },
                {
                    "Assumption": "Attacker can deliver and execute payload.",
                    "Role": "Attacker",
                    "Condition": "Access to network or phishing success."
                },
                {
                    "Assumption": "No restrictive least privilege enforcement.",
                    "Role": "DCS System",
                    "Condition": "Users have unnecessary high privileges."
                }
            ],
            "Potential Impact": "Access to critical engineering functions, potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "operating system exploit",
                "privilege escalation",
                "SYSTEM access"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses remote code execution vulnerability to gain administrative access on the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Known RCE vulnerability exists in DCS Controller.",
                    "Role": "DCS Controller",
                    "Condition": "Controller firmware or software is outdated."
                },
                {
                    "Assumption": "Network access to vulnerable service.",
                    "Role": "Attacker",
                    "Condition": "Attacker can interact with the vulnerable service."
                },
                {
                    "Assumption": "No network layer protection (e.g., firewall) in place.",
                    "Role": "DCS Network",
                    "Condition": "Lack of threat-filtering mechanisms."
                }
            ],
            "Potential Impact": "Full control over process controls, critical operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "administrator access",
                "DCS control compromise"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages AD misconfigurations to escalate privileges from a normal user to an AD administrator.",
            "Assumptions": [
                {
                    "Assumption": "AD is misconfigured with weak permissions.",
                    "Role": "Active Directory",
                    "Condition": "Improper permission assignments and role management."
                },
                {
                    "Assumption": "Attacker has initial access to user credentials.",
                    "Role": "Attacker",
                    "Condition": "Compromised user credentials."
                },
                {
                    "Assumption": "No regular AD configuration audits.",
                    "Role": "Admin",
                    "Condition": "Lack of security audits and reviews."
                }
            ],
            "Potential Impact": "Unrestricted access to AD, potential system-wide compromise.",
            "MITRE ATT&CK Keywords": [
                "AD misconfiguration",
                "privilege escalation",
                "administrator compromise"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized user in AD to gain access to the DCS system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen AD credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials obtained via phishing or other social engineering methods."
                },
                {
                    "Assumption": "The AD implementation does not have multifactor authentication enabled.",
                    "Role": "System Administrator",
                    "Condition": "System does not enforce additional authentication layers."
                },
                {
                    "Assumption": "The attacker has network access to reach the DCS system.",
                    "Role": "Attacker",
                    "Condition": "Corporate network is interconnected with DCS network."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive DCS controls.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "identity theft",
                "account compromise",
                "network access"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake GPS server to spoof time synchronization within the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can connect a rogue device to the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Lack of network segmentation and physical security."
                },
                {
                    "Assumption": "The DCS controllers rely on GPS server for time synchronization without validation.",
                    "Role": "System Designer",
                    "Condition": "DCS system doesn't verify GPS server authenticity."
                },
                {
                    "Assumption": "The legitimate GPS server is temporarily unavailable.",
                    "Role": "System Admin",
                    "Condition": "Technical issues or maintenance."
                }
            ],
            "Potential Impact": "Disruption in time-sensitive processes.",
            "MITRE ATT&CK Keywords": [
                "rogue device",
                "time spoofing",
                "network manipulation",
                "GPS compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed operator workstation (OWS) sends false control commands to DCS controllers.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the operator workstation network segment.",
                    "Role": "Attacker",
                    "Condition": "Weak network segregation between OWS and other segments."
                },
                {
                    "Assumption": "DCS controllers accept commands without verifying the source.",
                    "Role": "System Designer",
                    "Condition": "Lack of source verification protocols in DCS."
                },
                {
                    "Assumption": "The legitimate OWS is disconnected or compromised.",
                    "Role": "System Operator",
                    "Condition": "OWS under maintenance or attack."
                }
            ],
            "Potential Impact": "Unintended process adjustments and potential operational safety risks.",
            "MITRE ATT&CK Keywords": [
                "command spoofing",
                "OWS impersonation",
                "control manipulation",
                "network access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries with privileged network access may seek to modify network traffic in real time using adversary-in-the-middle (AiTM) attacks. (Citation: Gabriel Sanchez October 2017) This type of attack allows the adversary to intercept traffic to and/or from a particular device on the network. If a AiTM attack is established, then the adversary has the ability to block, log, modify, or inject traffic into the communication stream. There are several ways to accomplish this attack, but some of the most-common are Address Resolution Protocol (ARP) poisoning and the use of a proxy. (Citation: Bonnie Zhu, Anthony Joseph, Shankar Sastry 2011)  \n\nAn AiTM attack may allow an adversary to perform the following attacks:  \n[Block Reporting Message](https://attack.mitre.org/techniques/T0804), [Spoof Reporting Message](https://attack.mitre.org/techniques/T0856), [Modify Parameter](https://attack.mitre.org/techniques/T0836), [Unauthorized Command Message](https://attack.mitre.org/techniques/T0855)",
                "id": "attack-pattern--9a505987-ab05-4f46-a9a6-6441442eec3b",
                "technique_id": "T0830"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the Engineering Workstation (EWS) to alter DCS settings.",
            "Assumptions": [
                {
                    "Assumption": "EWS is vulnerable to file modification attacks.",
                    "Role": "System Designer",
                    "Condition": "Lack of file integrity monitoring on EWS."
                },
                {
                    "Assumption": "The attacker has sufficient privileges on the EWS.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or elevation of privileges."
                },
                {
                    "Assumption": "DCS configuration files are unencrypted and/or not adequately protected.",
                    "Role": "System Administrator",
                    "Condition": "Weak file protection mechanisms."
                }
            ],
            "Potential Impact": "Altered operation and potential process disruptions.",
            "MITRE ATT&CK Keywords": [
                "config tampering",
                "file modification",
                "EWS compromise",
                "settings manipulation"
            ],
            "mitre_technique": {
                "name": "Plist File Modification",
                "description": "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) \n\nAdversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\nFor example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application\u2019s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)",
                "id": "attack-pattern--7d20fff9-8751-404e-badd-ccd71bda0236",
                "technique_id": "T1647"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection through known Windows NVD vulnerabilities affecting DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers run susceptible versions of Windows with unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or missing security patches."
                },
                {
                    "Assumption": "Attackers have network access to exploit the vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Interconnected corporate and DCS networks."
                },
                {
                    "Assumption": "No effective malware detection in place on DCS servers.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust antivirus/malware protection."
                }
            ],
            "Potential Impact": "Execution of unauthorized commands and potential system control.",
            "MITRE ATT&CK Keywords": [
                "malware injection",
                "vulnerability exploitation",
                "Windows NVD exploitation",
                "remote code execution"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies historian data to provide false trend analysis information.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the historian database.",
                    "Role": "Attacker",
                    "Condition": "Weak database access controls."
                },
                {
                    "Assumption": "There are no integrity checks on stored data.",
                    "Role": "System Administrator",
                    "Condition": "Absence of data integrity protocols."
                },
                {
                    "Assumption": "The attacker has the knowledge to manipulate the data schema.",
                    "Role": "Attacker",
                    "Condition": "Skilled in database management and SQL manipulation."
                }
            ],
            "Potential Impact": "False data trends leading to incorrect decision-making.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "historian tampering",
                "trend analysis falsification",
                "database attack"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies performing critical actions on the DCS due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks detailed audit trails for user actions.",
                    "Role": "System Designer",
                    "Condition": "Poor logging and monitoring implementations."
                },
                {
                    "Assumption": "User accesses and actions are not uniquely identified and tied to specific individuals.",
                    "Role": "System Administrator",
                    "Condition": "Use of shared accounts or weak user accountability."
                },
                {
                    "Assumption": "There exists no tamper-evident technology for logs.",
                    "Role": "System Administrator",
                    "Condition": "Logs can be modified without detection."
                }
            ],
            "Potential Impact": "Inability to verify or hold users accountable for actions.",
            "MITRE ATT&CK Keywords": [
                "action denial",
                "user accountability",
                "insufficient logging",
                "log tampering"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attackers remove traces of malicious activities by deleting or altering log files.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have gained administrative access to DCS components.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation through exploits or stolen credentials."
                },
                {
                    "Assumption": "Logging mechanisms are not appropriately protected against tampering.",
                    "Role": "System Administrator",
                    "Condition": "Logs stored without encryption or sufficient security controls."
                },
                {
                    "Assumption": "No real-time log monitoring and alerts are in place.",
                    "Role": "System Administrator",
                    "Condition": "Lack of continuous surveillance and response mechanisms."
                }
            ],
            "Potential Impact": "Loss of evidence and inability to conduct forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "evidence tampering",
                "audit trail manipulation",
                "intrusion concealment"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny sending critical commands due to logging being disabled or bypassed during their session.",
            "Assumptions": [
                {
                    "Assumption": "Administrators can disable logging temporarily for troubleshooting or maintenance.",
                    "Role": "System Administrator",
                    "Condition": "Policies allowing log suspension."
                },
                {
                    "Assumption": "No mechanisms in place to ensure logging cannot be bypassed.",
                    "Role": "System Designer",
                    "Condition": "Lack of non-bypassable logging protocols."
                },
                {
                    "Assumption": "Users can operate during periods when logging is disabled.",
                    "Role": "System User",
                    "Condition": "System operations continue without logs."
                }
            ],
            "Potential Impact": "Certain actions go unrecorded and unaccountable.",
            "MITRE ATT&CK Keywords": [
                "log bypass",
                "activity denial",
                "command repudiation",
                "incomplete logging"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data like operational data from the historian is exfiltrated over the internet by attackers.",
            "Assumptions": [
                {
                    "Assumption": "The network is connected to the internet without sufficient protection.",
                    "Role": "System Administrator",
                    "Condition": "Direct or poorly secured network links."
                },
                {
                    "Assumption": "Attackers have tools to exfiltrate data undetected.",
                    "Role": "Attacker",
                    "Condition": "Use of advanced persistent threats and sophisticated tools."
                },
                {
                    "Assumption": "Sensitive data is not encrypted during storage or transmission.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption measures for data at rest and in transit."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "exfiltration",
                "data breach",
                "internet exposure"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Web Service",
                "description": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
                "id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
                "technique_id": "T1567"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses sensitive configuration details from the EWS and shares it with competitors.",
            "Assumptions": [
                {
                    "Assumption": "The insider has authorized access to EWS during their role.",
                    "Role": "Insider",
                    "Condition": "Job function relies on EWS access."
                },
                {
                    "Assumption": "There are limited controls to monitor and restrict insider data access.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access control and monitoring mechanisms."
                },
                {
                    "Assumption": "Sensitive information is stored in easily accessible formats.",
                    "Role": "System Designer",
                    "Condition": "Unprotected file formats and storage locations."
                }
            ],
            "Potential Impact": "Confidential information could be used against the organization.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data disclosure",
                "unauthorized sharing",
                "info theft"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted communication between sensors and the DCS controller reveals sensitive operational information.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are unsecured or weakly encrypted.",
                    "Role": "System Designer",
                    "Condition": "Use of outdated or vulnerable encryption protocols."
                },
                {
                    "Assumption": "Attackers can perform man-in-the-middle (MITM) attacks on the network.",
                    "Role": "Attacker",
                    "Condition": "Network interception capabilities and access."
                },
                {
                    "Assumption": "Sensitive operational data is transmitted without additional security layers.",
                    "Role": "System Administrator",
                    "Condition": "Standard communication without multi-layered security."
                }
            ],
            "Potential Impact": "Leaked operational details could guide further attacks.",
            "MITRE ATT&CK Keywords": [
                "MITM attack",
                "data interception",
                "communication compromise",
                "unencrypted transmission"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a Windows vulnerability to initiate a denial-of-service attack on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers run versions of Windows with unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Out-of-date software."
                },
                {
                    "Assumption": "Attackers have the capability to leverage high-risk vulnerabilities like those found in NVD.",
                    "Role": "Attacker",
                    "Condition": "Access to exploit tools and knowledge."
                },
                {
                    "Assumption": "The DCS network is accessible from external networks.",
                    "Role": "System Administrator",
                    "Condition": "Improper network isolation."
                }
            ],
            "Potential Impact": "Interruption of DCS functions and potential loss of control.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "exploit",
                "network outage",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack on the GPS server disrupts time synchronization across the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The GPS server runs susceptible software or firmware.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or outdated systems."
                },
                {
                    "Assumption": "Network protections do not prevent malware infiltration.",
                    "Role": "System Designer",
                    "Condition": "Weak network defense mechanisms."
                },
                {
                    "Assumption": "Time synchronization is critical for DCS operations.",
                    "Role": "System Administrator",
                    "Condition": "Dependable on accurate timekeeping."
                }
            ],
            "Potential Impact": "Disrupted operations due to incorrect timing.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "malware attack",
                "time disruption",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial-of-service (DDoS) attack targets the DCS network, leading to service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have the capability to launch high-volume DDoS attacks.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or amplification vectors."
                },
                {
                    "Assumption": "The DCS system is accessible over the internet.",
                    "Role": "System Administrator",
                    "Condition": "Internet connectivity for remote management or data exchange."
                },
                {
                    "Assumption": "Network defenses are inadequate to mitigate large-scale DDoS attacks.",
                    "Role": "System Administrator",
                    "Condition": "Lack of DDoS prevention solutions."
                }
            ],
            "Potential Impact": "Complete service outage and operational halt.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "service disruption",
                "internet-based",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability on DCS servers to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers have known or zero-day privilege escalation vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Use of vulnerable OS or applications."
                },
                {
                    "Assumption": "Attackers can execute code on DCS servers.",
                    "Role": "Attacker",
                    "Condition": "Initial access via RCE or local vulnerabilities."
                },
                {
                    "Assumption": "Elevated privileges are not adequately restricted.",
                    "Role": "System Designer",
                    "Condition": "Weak privilege separation."
                }
            ],
            "Potential Impact": "Unauthorized administrative actions and full system control.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "admin access",
                "system control",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware utilizes vulnerabilities in outdated software components of the DCS to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS components run outdated software with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or missed software updates."
                },
                {
                    "Assumption": "Attackers can deploy and execute malware within the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Compromised user credentials or other access vectors."
                },
                {
                    "Assumption": "Malware can evade detection by existing security measures.",
                    "Role": "Attacker",
                    "Condition": "Use of advanced persistent malware."
                }
            ],
            "Potential Impact": "Compromise of critical system functions and data.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "software vulnerabilities",
                "access elevation",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An authorized user exploits system misconfigurations to gain higher-level access than permitted.",
            "Assumptions": [
                {
                    "Assumption": "The system has misconfigured access controls allowing privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Incorrect system settings or ACLs."
                },
                {
                    "Assumption": "Users are aware of the misconfigurations and how to exploit them.",
                    "Role": "User",
                    "Condition": "Insider knowledge or technical skills."
                },
                {
                    "Assumption": "Monitoring and alerting mechanisms are insufficient to detect such actions.",
                    "Role": "System Designer",
                    "Condition": "Lack of adequate system surveillance."
                }
            ],
            "Potential Impact": "Unauthorized access leading to potential data and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "misconfiguration",
                "access control",
                "privilege misuse",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing Active Directory credentials to gain unauthorized access to the DCS.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have access to initial network credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial credentials are phished or intercepted."
                },
                {
                    "Assumption": "AD is not implementing multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "Valid if the system relies solely on single-factor authentication."
                },
                {
                    "Assumption": "Network monitoring and anomaly detection are insufficient.",
                    "Role": "Network Defense Team",
                    "Condition": "Valid if abnormal access patterns are not properly tracked."
                }
            ],
            "Potential Impact": "Unauthorized access leading to data corruption and operational disruption.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "authentication",
                "directory service",
                "infiltration"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker using a compromised network device to send spoofed controller commands within the OT network.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has infiltrated the OT network.",
                    "Role": "Attacker",
                    "Condition": "Valid if OT network segmentation is weak."
                },
                {
                    "Assumption": "Spoofed device is not authenticated adequately.",
                    "Role": "System Designer",
                    "Condition": "Valid if devices do not use strong mutual authentication."
                },
                {
                    "Assumption": "Network traffic is not encrypted or integrity-checked.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if data in transit is not protected."
                }
            ],
            "Potential Impact": "False commands result in operational hazards and potential safety incidents.",
            "MITRE ATT&CK Keywords": [
                "network injection",
                "control commands",
                "spoofing",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor spoofing GPS signals to disrupt time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "GPS receiver does not validate signal authenticity.",
                    "Role": "System Designer",
                    "Condition": "Valid if spoofing protection is not in place."
                },
                {
                    "Assumption": "Attacker has technical capability and proximity to broadcast GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker can deploy spoofing equipment near the facility."
                },
                {
                    "Assumption": "Time synchronization is critical for DCS operation.",
                    "Role": "System Operator",
                    "Condition": "Valid if time anomalies can affect system operations."
                }
            ],
            "Potential Impact": "Disrupted time synchronization causing data inconsistency and operational delays.",
            "MITRE ATT&CK Keywords": [
                "time synchronization",
                "GPS spoofing",
                "signal manipulation",
                "clock skew"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampering with firmware updates delivered through compromised servers.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not verified with cryptographic signatures.",
                    "Role": "System Administrator",
                    "Condition": "Valid if updates are applied without integrity checks."
                },
                {
                    "Assumption": "Attacker can access the update distribution server.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server security is compromised."
                },
                {
                    "Assumption": "Automatic updates are enabled without user intervention.",
                    "Role": "System Configuration Manager",
                    "Condition": "Valid if settings allow auto-update without checks."
                }
            ],
            "Potential Impact": "Introduction of malicious firmware leading to system takeover and prolonged operational outages.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "update injection",
                "supply chain attack",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker altering historical data in the historian to sabotage trend analysis.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access is not restricted properly.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if access controls are lax."
                },
                {
                    "Assumption": "No sufficient logging or monitoring of commands executed on the historian.",
                    "Role": "Security Operations Center (SOC) Team",
                    "Condition": "Valid if access actions are not logged or reviewed."
                },
                {
                    "Assumption": "Data integrity checks are not robust.",
                    "Role": "Data Engineer",
                    "Condition": "Valid if integrity mechanisms are weak or nonexistent."
                }
            ],
            "Potential Impact": "Inaccurate data analysis leading to incorrect operational decisions and potential resource misuse.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "historian tampering",
                "database corruption",
                "data integrity attack"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with privileged access tampering with DCS controller settings.",
            "Assumptions": [
                {
                    "Assumption": "Privileged access controls are not tightly managed.",
                    "Role": "Access Control Manager",
                    "Condition": "Valid if access is not periodically reviewed and revised."
                },
                {
                    "Assumption": "Logging of changes is inadequate or not reviewed regularly.",
                    "Role": "Security Admin",
                    "Condition": "Valid if changes are not thoroughly logged and audited."
                },
                {
                    "Assumption": "Change management procedures are lax.",
                    "Role": "System Administrator",
                    "Condition": "Valid if changes can be made without multiple approvals."
                }
            ],
            "Potential Impact": "Given wrong set-points causing process instability, safety incidents, or operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "configuration manipulation",
                "access control",
                "parameter tampering"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions but denies their involvement due to lack of logging or non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not comprehensive or tamper-proof.",
                    "Role": "System Administrator",
                    "Condition": "Valid if the log data can be easily modified or deleted."
                },
                {
                    "Assumption": "Non-repudiation controls like digital signatures are not implemented.",
                    "Role": "IT Security Architect",
                    "Condition": "Valid if there's no mechanism to bind actions to individual users."
                },
                {
                    "Assumption": "Event correlation and alerting are not properly configured.",
                    "Role": "SOC Analyst",
                    "Condition": "Valid if logs are not systematically reviewed and correlated."
                }
            ],
            "Potential Impact": "Difficulty in incident investigation and attribution, allowing persistent malicious activity.",
            "MITRE ATT&CK Keywords": [
                "log evasion",
                "action denial",
                "activity masking",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny unauthorized configuration changes due to unlogged or poorly logged system actions.",
            "Assumptions": [
                {
                    "Assumption": "System actions are not logged rigorously.",
                    "Role": "System Administrator",
                    "Condition": "Valid if changes are made without proper logging."
                },
                {
                    "Assumption": "Configuration controls do not enforce detailed provenance tracking.",
                    "Role": "Security Policy Manager",
                    "Condition": "Valid if system configuration changes lack traceability."
                },
                {
                    "Assumption": "Monitoring tools do not capture comprehensive audit trails.",
                    "Role": "Network Defense Team",
                    "Condition": "Valid if audit trails are incomplete or non-existent."
                }
            ],
            "Potential Impact": "Difficult root cause analysis and accountability failure leading to unmitigated vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "configuration evasion",
                "audit trail omission",
                "change repudiation",
                "logging inadequacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deleting critical logs to cover traces of malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Log deletion controls are not enforced stringently.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs can be easily deleted."
                },
                {
                    "Assumption": "No backup or archival solution for logging data.",
                    "Role": "IT Manager",
                    "Condition": "Valid if log data is not redundantly stored."
                },
                {
                    "Assumption": "Log integrity protection is weak or absent.",
                    "Role": "IT Security Manager",
                    "Condition": "Valid if logs are not tamper-proof."
                }
            ],
            "Potential Impact": "Inability to detect, investigate, and respond to security incidents effectively.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "activity concealment",
                "log evasion",
                "evidence destruction"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--11000005-0004-4000-a5e3-878660aff249",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data being intercepted due to lack of encryption in data transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if data transmission lacks encryption protocols."
                },
                {
                    "Assumption": "Attacker has access to network communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network perimeter is breached."
                },
                {
                    "Assumption": "There is no efficient network traffic monitoring in place.",
                    "Role": "Security Monitoring Team",
                    "Condition": "Valid if network activities are insufficiently monitored."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive refinery process data to external malicious entities.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "communication monitoring",
                "unauthorized access",
                "encryption bypass"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gaining unauthorized read access to the historian and exfiltrating sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access controls are weak.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if access restrictions are inadequate."
                },
                {
                    "Assumption": "No data exfiltration monitoring or controls are in place.",
                    "Role": "Cybersecurity Manager",
                    "Condition": "Valid if monitoring on outward data flow is weak."
                },
                {
                    "Assumption": "Credentials can be easily compromised.",
                    "Role": "User",
                    "Condition": "Valid if password policies are weak or unenforced."
                }
            ],
            "Potential Impact": "Leakage of critical operational data possibly leading to competitive disadvantage or targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "unauthorized read access",
                "data theft",
                "historian compromise",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised Active Directory leading to unauthorized access to user profile data.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is not sufficiently protected.",
                    "Role": "System Administrator",
                    "Condition": "Valid if AD lacks advanced security configurations."
                },
                {
                    "Assumption": "Multiple vulnerable endpoints provide access to AD.",
                    "Role": "End User",
                    "Condition": "Valid if endpoints are easily exploitable."
                },
                {
                    "Assumption": "No systematic review or audit of AD access.",
                    "Role": "Security Operations Center (SOC) Team",
                    "Condition": "Valid if AD access logs are not regularly audited."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user profiles compromising user privacy and facilitating further attacks.",
            "MITRE ATT&CK Keywords": [
                "user profiling",
                "AD compromise",
                "data exfiltration",
                "directory access"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on DCS servers making critical systems unavailable.",
            "Assumptions": [
                {
                    "Assumption": "Internet-facing servers lack adequate DDoS protection.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if DDoS mitigation measures are weak."
                },
                {
                    "Assumption": "Attacker has botnet capabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker controls multiple compromised systems."
                },
                {
                    "Assumption": "Critical operations are reliant on continuous server availability.",
                    "Role": "Operations Manager",
                    "Condition": "Valid if system outages impact operations directly."
                }
            ],
            "Potential Impact": "Severe disruption to refinery operations compromising safety and productivity.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "service disruption",
                "network overload",
                "availability compromise"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious firmware update causing devices to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not validated or tested properly.",
                    "Role": "System Administrator",
                    "Condition": "Valid if updates are applied automatically without validation."
                },
                {
                    "Assumption": "Devices have the ability to auto-update firmware.",
                    "Role": "Device Manager",
                    "Condition": "Valid if auto-updates are enabled."
                },
                {
                    "Assumption": "Attacker has access to the firmware distribution mechanism.",
                    "Role": "Attacker",
                    "Condition": "Valid if distribution points are compromised."
                }
            ],
            "Potential Impact": "Inoperable devices lead to interruption in the entire system's functionality.",
            "MITRE ATT&CK Keywords": [
                "firmware disruption",
                "device disablement",
                "service interruption",
                "hardware attack"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploiting a vulnerability to cause the historian to crash.",
            "Assumptions": [
                {
                    "Assumption": "Historian software has known vulnerabilities.",
                    "Role": "IT Security",
                    "Condition": "Valid if software is unpatched or outdated."
                },
                {
                    "Assumption": "Attacker can interact with the historian application.",
                    "Role": "Attacker",
                    "Condition": "Valid if input channels are exploitable."
                },
                {
                    "Assumption": "No adequate intrusion detection in place.",
                    "Role": "Security Operations Center (SOC) Team",
                    "Condition": "Valid if IDS/IPS systems are weak or missing."
                }
            ],
            "Potential Impact": "Loss of access to critical historical data impairing operational decision-making.",
            "MITRE ATT&CK Keywords": [
                "software crash",
                "vulnerability exploitation",
                "service denial",
                "historian attack"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0234cb56-f2cc-4a8d-b0ee-23468e45fbd9",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A remote attacker escalating privileges by exploiting an SSH vulnerability on Windows systems.",
            "Assumptions": [
                {
                    "Assumption": "Windows systems are running vulnerable SSH services.",
                    "Role": "System Administrator",
                    "Condition": "Valid if systems are unpatched or poorly configured."
                },
                {
                    "Assumption": "Attacker has network access to the target systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defense is inadequate."
                },
                {
                    "Assumption": "Privilege controls are not properly enforced.",
                    "Role": "Access Control Manager",
                    "Condition": "Valid if user privilege policies are lax."
                }
            ],
            "Potential Impact": "Attacker gains elevated control over systems leading to widespread compromise and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "remote code execution",
                "system vulnerability",
                "elevated privileges"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An internal attacker leveraging social engineering to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Users are not adequately trained on social engineering threats.",
                    "Role": "HR Manager",
                    "Condition": "Valid if security awareness training is lacking."
                },
                {
                    "Assumption": "Administrative access is granted based on easily manipulated authentication.",
                    "Role": "System Administrator",
                    "Condition": "Valid if strong authentication mechanisms are missing."
                },
                {
                    "Assumption": "Logging and monitoring of privilege changes are not robust.",
                    "Role": "Security Operations Center (SOC) Team",
                    "Condition": "Valid if changes in privileges are not logged adequately."
                }
            ],
            "Potential Impact": "Gaining unauthorized administrative access enabling the attacker to perform critical system changes undetected.",
            "MITRE ATT&CK Keywords": [
                "social engineering",
                "user manipulation",
                "admin access",
                "internal threat"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a software vulnerability in the GPS server to execute code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "GPS server software contains known vulnerabilities.",
                    "Role": "Software Maintenance Team",
                    "Condition": "Valid if the software is outdated or unpatched."
                },
                {
                    "Assumption": "Exploitation does not require significant user interaction.",
                    "Role": "Attacker",
                    "Condition": "Valid if the vulnerability is easily exploitable."
                },
                {
                    "Assumption": "Security monitoring and alerting on the GPS server is insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Valid if server activities are not closely monitored."
                }
            ],
            "Potential Impact": "Attacker executing code with elevated privileges causing operational disruptions and data misuse.",
            "MITRE ATT&CK Keywords": [
                "software exploitation",
                "elevation of privilege",
                "GPS server",
                "arbitrary code execution"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs Active Directory credentials to gain unauthorized access to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory credentials are inadequately secured or exposed.",
                    "Role": "Attacker",
                    "Condition": "Credentials are exposed through social engineering, brute force, or another method."
                },
                {
                    "Assumption": "The attacker can reach the authentication server over the network.",
                    "Role": "Network Access",
                    "Condition": "Attacker has network access to the Active Directory server."
                },
                {
                    "Assumption": "The attacker has some knowledge of legitimate usernames.",
                    "Role": "Attacker",
                    "Condition": "Usernames or patterns of usernames are predictable or have been discovered."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, data corruption, and system access disruption.",
            "MITRE ATT&CK Keywords": [
                "Credential Dumping",
                "Brute Force",
                "Network Intrusion",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a malicious GPS server to spoof time synchronization to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "DCS relies on GPS servers for time synchronization.",
                    "Role": "DCS Configuration",
                    "Condition": "DCS is configured to use GPS for time synchronization."
                },
                {
                    "Assumption": "The spoofed GPS signals are accepted by the GPS server.",
                    "Role": "Attacker",
                    "Condition": "GPS signals are not authenticated or verified."
                },
                {
                    "Assumption": "Physical proximity or sophisticated signal spoofing capabilities.",
                    "Role": "Attacker",
                    "Condition": "Attack takes place within signal range or by mimicking GPS satellite signals."
                }
            ],
            "Potential Impact": "Disruption of operations due to incorrect time stamps, impacting data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "GPS Spoofing",
                "Network Time Protocol (NTP)",
                "Critical Infrastructure",
                "Signal Manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs sensor data to mislead the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "Unsecured or weakly secured communication channels between sensors and DCS.",
                    "Role": "DCS Design",
                    "Condition": "Communication channels are vulnerable or lack encryption/authentication."
                },
                {
                    "Assumption": "Access to the physical network or compromised nodes in the network.",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical or network access to inject spoofed data."
                },
                {
                    "Assumption": "Knowledge of protocol used by sensors for communication.",
                    "Role": "Attacker",
                    "Condition": "Attacker has technical understanding of the communication protocols."
                }
            ],
            "Potential Impact": "Incorrect commands sent to actuators leading to unsafe operational states, threatening data integrity and physical safety.",
            "MITRE ATT&CK Keywords": [
                "Sensor Spoofing",
                "Protocol Manipulation",
                "Sensor Network",
                "Control Systems"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the configuration files of the DCS controller using remote code execution vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "The DCS uses vulnerable versions of software as indicated by the NVD CVE vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable software versions are in use."
                },
                {
                    "Assumption": "Access to the network where the DCS controller resides.",
                    "Role": "Attacker",
                    "Condition": "Network access through legitimate or illegitimate means."
                },
                {
                    "Assumption": "Exploitable remote code execution vulnerability is not patched.",
                    "Role": "System Maintenance",
                    "Condition": "Security patches are not applied in a timely manner."
                }
            ],
            "Potential Impact": "Corruption of configuration files leading to malfunction of control processes, impacting data integrity and operational availability.",
            "MITRE ATT&CK Keywords": [
                "Remote Code Execution",
                "Configuration Manipulation",
                "ICS Tampering",
                "Code Injection"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the historian database to alter operational trend data.",
            "Assumptions": [
                {
                    "Assumption": "Historian is accessible with inadequate security controls.",
                    "Role": "Attacker",
                    "Condition": "Historian database is exposed or poorly protected."
                },
                {
                    "Assumption": "The attacker has sufficient permissions to modify database records.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains access through credential theft or privilege escalation."
                },
                {
                    "Assumption": "Lack of database monitoring and integrity checks.",
                    "Role": "Database Management",
                    "Condition": "Database changes are not actively monitored or reviewed."
                }
            ],
            "Potential Impact": "Misleading operational trends affecting decision-making processes, compromising data integrity.",
            "MITRE ATT&CK Keywords": [
                "Database Tampering",
                "Data Manipulation",
                "Historian Database",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the engineering workstation (EWS) to manipulate control parameters directly.",
            "Assumptions": [
                {
                    "Assumption": "EWS is vulnerable to malware or direct attack.",
                    "Role": "Attacker",
                    "Condition": "EWS lacks sufficient endpoint protection."
                },
                {
                    "Assumption": "The attacker has physical or remote access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Attacker compromises network or gains physical access."
                },
                {
                    "Assumption": "Weak administrative controls allowing execution of malicious commands.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate user privilege management and monitoring."
                }
            ],
            "Potential Impact": "Direct manipulation of control parameters leading to unsafe operational conditions, compromising data integrity and physical safety.",
            "MITRE ATT&CK Keywords": [
                "Endpoint Compromise",
                "Malware",
                "Control Parameter Manipulation",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny involvement in unauthorized changes to DCS settings due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and audit capabilities.",
                    "Role": "System Configuration",
                    "Condition": "Logging is either disabled or not detailed enough."
                },
                {
                    "Assumption": "Privileged access does not leave a verifiable trail.",
                    "Role": "Administrator",
                    "Condition": "Administrator actions are not properly logged or monitored."
                },
                {
                    "Assumption": "Lack of multi-factor authentication (MFA) for critical actions.",
                    "Role": "System Security",
                    "Condition": "Inadequate security measures for authentication."
                }
            ],
            "Potential Impact": "Inability to verify and trace unauthorized actions, affecting data integrity and accountability.",
            "MITRE ATT&CK Keywords": [
                "Insufficient Logging",
                "Audit Trail Manipulation",
                "Privilege Misuse",
                "Identities"
            ],
            "mitre_technique": {
                "name": "Cloud Account",
                "description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nIn addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment.(Citation: Microsoft Entra ID Service Principals) In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005).(Citation: GCP Service Accounts) While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.(Citation: AWS Instance Profiles)(Citation: AWS Lambda Execution Role)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b",
                "technique_id": "T1136.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes log files to cover malicious activity within the DCS.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored locally without redundancy.",
                    "Role": "System Configuration",
                    "Condition": "Logs are not centrally collected or backed up adequately."
                },
                {
                    "Assumption": "Weak permissions on log files allowing unauthorized deletions.",
                    "Role": "Administrator",
                    "Condition": "Log file permissions are not strictly controlled."
                },
                {
                    "Assumption": "Attackers have access to critical files and directories.",
                    "Role": "Attacker",
                    "Condition": "Compromise of user accounts with sufficient permissions."
                }
            ],
            "Potential Impact": "Loss of critical forensic evidence, hindering incident response and recovery efforts, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Forensic Evasion",
                "File Manipulation",
                "ICS Security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny unauthorized shutdown of the DCS due to absence of strong non-repudiation controls.",
            "Assumptions": [
                {
                    "Assumption": "DCS lacks non-repudiation controls for shutdown commands.",
                    "Role": "System Design",
                    "Condition": "System does not require dual approval or cryptographic validation."
                },
                {
                    "Assumption": "Access logs do not capture sufficient detail.",
                    "Role": "System Configuration",
                    "Condition": "Logging mechanisms are either inadequate or improperly configured."
                },
                {
                    "Assumption": "Operators use shared or generic accounts.",
                    "Role": "Operator",
                    "Condition": "Use of non-individualized accounts for operations."
                }
            ],
            "Potential Impact": "Inability to hold individuals accountable for unauthorized shut-downs, increasing risk of malicious actions, affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "Non-repudiation Failure",
                "Shutdown Command",
                "Access Control",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Cyber espionage actors exfiltrate sensitive process data from the historian database using network sniffing tools.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive process data is transmitted over unsecured or weakly secured channels.",
                    "Role": "Network Design",
                    "Condition": "Communication within the network lacks encryption."
                },
                {
                    "Assumption": "The attacker has access to the network to implement sniffing tools.",
                    "Role": "Attacker",
                    "Condition": "Attacker has gained network access."
                },
                {
                    "Assumption": "Historian database is inadequately protected against unauthorized access.",
                    "Role": "Database Security",
                    "Condition": "Database lacks sufficient access controls and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive process data, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Data Exfiltration",
                "Network Sniffing",
                "Sensitive Data",
                "Information Leak"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the DCS through exposed Active Directory credentials to extract sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory credentials are exposed or easy to brute-force.",
                    "Role": "Attacker",
                    "Condition": "Credentials are insufficiently protected or exposed due to social engineering or weak policies."
                },
                {
                    "Assumption": "Network access to the DCS through compromised credentials.",
                    "Role": "Attacker",
                    "Condition": "Access path to DCS is available via exposed credentials."
                },
                {
                    "Assumption": "Lack of multi-factor authentication (MFA) for accessing sensitive data.",
                    "Role": "System Security",
                    "Condition": "MFA is not enforced for sensitive operations."
                }
            ],
            "Potential Impact": "Compromise of sensitive operational data impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Sensitive Data Access",
                "Active Directory",
                "Confidentiality"
            ],
            "mitre_technique": {
                "name": "Domain Account",
                "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.(Citation: CrowdStrike StellarParticle January 2022)  ",
                "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
                "technique_id": "T1087.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Phishing attack results in the disclosure of operator login credentials, granting unauthorized access to sensitive system data.",
            "Assumptions": [
                {
                    "Assumption": "Operators are susceptible to phishing attacks.",
                    "Role": "Operator",
                    "Condition": "Lack of security awareness or training among operators."
                },
                {
                    "Assumption": "Phishing filters and network defenses are inadequate.",
                    "Role": "Network Security",
                    "Condition": "Weak email and web filtering mechanisms."
                },
                {
                    "Assumption": "Single-factor authentication protects access to sensitive data.",
                    "Role": "System Security",
                    "Condition": "Lack of additional security measures such as MFA."
                }
            ],
            "Potential Impact": "Unauthorized access and disclosure of sensitive system data, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Credential Theft",
                "Sensitive Data",
                "Confidentiality"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against the DCS servers, causing a disruption in process control.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers are accessible over the internet.",
                    "Role": "Network Accessibility",
                    "Condition": "Servers expose services on the internet with potential vulnerabilities."
                },
                {
                    "Assumption": "Network defenses are inadequate or insufficiently implemented.",
                    "Role": "Network Security",
                    "Condition": "Lack of robust DDoS protection mechanisms."
                },
                {
                    "Assumption": "Attackers have sufficient resources to launch a coordinated DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnet or similar resources."
                }
            ],
            "Potential Impact": "Disruption of process control, affecting system availability and potentially jeopardizing safety.",
            "MITRE ATT&CK Keywords": [
                "DDoS Attack",
                "Service Disruption",
                "Network Flooding",
                "ICS Availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious insiders deliberately overload the network with unnecessary traffic, disrupting the DCS operations.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to the network.",
                    "Role": "Insider Threat",
                    "Condition": "Authorized users with potential malicious intent."
                },
                {
                    "Assumption": "Network lacks adequate monitoring and throttling mechanisms.",
                    "Role": "Network Management",
                    "Condition": "Inadequate controls to detect and prevent unusual traffic patterns."
                },
                {
                    "Assumption": "Critical network segments are not segregated from general user traffic.",
                    "Role": "Network Design",
                    "Condition": "Poor network segmentation design."
                }
            ],
            "Potential Impact": "Operational disruption due to network congestion, compromising system availability.",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Network Overload",
                "Service Disruption",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of vulnerabilities in the DCS operating systems leading to a crash or system unavailability.",
            "Assumptions": [
                {
                    "Assumption": "DCS components are running on vulnerable operating system versions.",
                    "Role": "System Management",
                    "Condition": "Operating systems are not regularly updated or patched."
                },
                {
                    "Assumption": "Attackers can identify and exploit these known vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Availability of exploit tools or techniques."
                },
                {
                    "Assumption": "Inadequate defensive measures against operating system vulnerabilities.",
                    "Role": "System Security",
                    "Condition": "Lack of compensating controls or intrusion detection mechanisms."
                }
            ],
            "Potential Impact": "Loss of system availability leading to operational downtime and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Exploit Vulnerability",
                "System Crash",
                "Service Unavailability",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits a vulnerability on the OWS to gain administrative privileges and control critical DCS functions.",
            "Assumptions": [
                {
                    "Assumption": "OWS has unpatched software vulnerabilities.",
                    "Role": "System Management",
                    "Condition": "Security patches are not applied in a timely manner."
                },
                {
                    "Assumption": "Attacker gains initial access through another compromised account or system.",
                    "Role": "Attacker",
                    "Condition": "Access to OWS through password theft or another breach point."
                },
                {
                    "Assumption": "Inadequate privilege separation and monitoring.",
                    "Role": "System Configuration",
                    "Condition": "Insufficient implementation of least privilege principles."
                }
            ],
            "Potential Impact": "Complete takeover of critical system functions, compromising data integrity and operational safety.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Administrative Control",
                "Full System Compromise",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access on DCS servers using vulnerabilities in the operating system and escalates privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS servers run a version of the operating system with known privilege escalation vulnerabilities.",
                    "Role": "System Management",
                    "Condition": "Operating system is not kept up to date."
                },
                {
                    "Assumption": "Attacker has network access to the DCS servers.",
                    "Role": "Attacker",
                    "Condition": "Network is not adequately segmented or protected."
                },
                {
                    "Assumption": "Inadequate security configurations and lack of hardened systems.",
                    "Role": "System Security",
                    "Condition": "Servers are not hardened according to industry best practices."
                }
            ],
            "Potential Impact": "Unauthorized system control and access to sensitive data, threatening data integrity and operational safety.",
            "MITRE ATT&CK Keywords": [
                "Root Access",
                "Privilege Escalation",
                "Operating System Vulnerability",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised user account is used to access and modify DCS controller configurations, escalating privileges within the system.",
            "Assumptions": [
                {
                    "Assumption": "User account credentials are compromised through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Weak account security practices or social engineering success."
                },
                {
                    "Assumption": "Attacker escalates privileges from a compromised account.",
                    "Role": "Attacker",
                    "Condition": "Compromised account has potential for privilege escalation."
                },
                {
                    "Assumption": "Controls do not enforce separation of duties.",
                    "Role": "System Configuration",
                    "Condition": "Inadequate role-based access controls."
                }
            ],
            "Potential Impact": "Unrestricted access to system control capabilities, compromising data integrity and operational safety.",
            "MITRE ATT&CK Keywords": [
                "Account Compromise",
                "Privilege Escalation",
                "Configuration Manipulation",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access the DCS Controller disguised as an authorized engineer.",
            "Assumptions": [
                {
                    "Assumption": "Valid user credentials are stolen or compromised.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains access to valid credentials through phishing or another method."
                },
                {
                    "Assumption": "Active Directory (AD) does not detect unusual login patterns.",
                    "Role": "Active Directory",
                    "Condition": "The AD lacks advanced anomaly detection capabilities."
                }
            ],
            "Potential Impact": "Unauthorized access leading to control over refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Phishing",
                "Authentication",
                "Spoofing",
                "Operator Workstation"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics the GPS server to send incorrect time synchronization signals.",
            "Assumptions": [
                {
                    "Assumption": "The network allows unchecked communication with the GPS server.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of stringent network monitoring and validation."
                },
                {
                    "Assumption": "The GPS server lacks authentication mechanisms.",
                    "Role": "GPS Server Admin",
                    "Condition": "Absence of authentication or integrity checks for GPS data."
                }
            ],
            "Potential Impact": "Disruption in time-sensitive operations due to incorrect time data.",
            "MITRE ATT&CK Keywords": [
                "MITM",
                "Time Synchronization",
                "Network",
                "Spoofing",
                "GPS Server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the Historian system to inject false operational data.",
            "Assumptions": [
                {
                    "Assumption": "Historian does not verify the source and integrity of received data.",
                    "Role": "Historian System Admin",
                    "Condition": "Lacking secure communication protocols."
                },
                {
                    "Assumption": "Insufficient network segmentation allowing attacker access.",
                    "Role": "Network Administrator",
                    "Condition": "Weak network isolation policies."
                }
            ],
            "Potential Impact": "Analytical errors and potential misconfigurations based on faulty data.",
            "MITRE ATT&CK Keywords": [
                "Injection",
                "Data Integrity",
                "Network",
                "Spoofing",
                "Historian Server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies control commands sent from the DCS Controller to actuators.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient encryption or validation on control commands.",
                    "Role": "System Architect",
                    "Condition": "Using unencrypted or poorly encrypted communication channels."
                },
                {
                    "Assumption": "The DCS Controller firmware is outdated and has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failure to update system software to mitigate known issues."
                }
            ],
            "Potential Impact": "Dangerous changes in operational processes, risking safety and equipment.",
            "MITRE ATT&CK Keywords": [
                "Command Injection",
                "Firmware",
                "Actuator",
                "Tampering",
                "DCS Controller"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the database configuration files on the DCS Servers.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate file monitoring on the DCS Servers.",
                    "Role": "System Administrator",
                    "Condition": "Lack of file integrity monitoring."
                },
                {
                    "Assumption": "DCS Servers run on vulnerable operating systems with known exploits.",
                    "Role": "System Administrator",
                    "Condition": "Using unpatched or outdated operating systems."
                }
            ],
            "Potential Impact": "Compromised data integrity leading to potential misoperations and misreporting.",
            "MITRE ATT&CK Keywords": [
                "File Manipulation",
                "Configuration Files",
                "Database",
                "Tampering",
                "DCS Servers"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker installs malware on the EWS to alter configuration settings remotely.",
            "Assumptions": [
                {
                    "Assumption": "The EWS is accessible from the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Weak external network defenses."
                },
                {
                    "Assumption": "The EWS does not have up-to-date antimalware protections.",
                    "Role": "System Administrator",
                    "Condition": "Neglecting regular updates and security patches."
                }
            ],
            "Potential Impact": "Uncontrolled or unexpected changes in system configurations causing operational issues.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Remote Access",
                "Configuration Settings",
                "Tampering",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineers deny making critical changes to the DCS Controller settings despite evidence in logs.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not adequately secured and can be tampered with.",
                    "Role": "System Administrator",
                    "Condition": "Lack of log integrity mechanisms."
                },
                {
                    "Assumption": "Audit trails do not include sufficient context for actions.",
                    "Role": "Auditor",
                    "Condition": "Incomplete or insufficient auditing practices."
                }
            ],
            "Potential Impact": "Inability to trace actions leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Audit Trail",
                "Log Manipulation",
                "Accountability",
                "Repudiation",
                "DCS Controller"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators claim not to have received alerts from the OWS.",
            "Assumptions": [
                {
                    "Assumption": "No acknowledgment receipt mechanism for alert notifications.",
                    "Role": "System Architect",
                    "Condition": "Alert system design does not require user acknowledgment."
                },
                {
                    "Assumption": "Alert logs are not immutable and can be altered.",
                    "Role": "System Administrator",
                    "Condition": "Lack of log management and integrity protections."
                }
            ],
            "Potential Impact": "Operational inefficiencies caused by disputes over received alerts.",
            "MITRE ATT&CK Keywords": [
                "Alert System",
                "Notification Management",
                "Log Integrity",
                "Repudiation",
                "Operator Workstation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker attempts to falsify configuration change logs in the Historian.",
            "Assumptions": [
                {
                    "Assumption": "Historian lacks robust authentication for access to logs.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control mechanisms."
                },
                {
                    "Assumption": "Network traffic is not sufficiently monitored or filtered.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of advanced network monitoring tools."
                }
            ],
            "Potential Impact": "Discrepancies in configuration change logs disrupting forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "Log Falsification",
                "Remote Access",
                "Configuration Changes",
                "Repudiation",
                "Historian Server"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to sensitive sensor data collected by the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "DCS Controller transmits data without encryption.",
                    "Role": "System Architect",
                    "Condition": "Using unencrypted communication channels for data transmission."
                },
                {
                    "Assumption": "The attacker has access to the network traffic.",
                    "Role": "Attacker",
                    "Condition": "Compromised network allowing eavesdropping."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "Data Eavesdropping",
                "Unencrypted Data",
                "Network Traffic",
                "Information Disclosure",
                "DCS Controller"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user credentials are exposed through a vulnerability in the Active Directory (AD).",
            "Assumptions": [
                {
                    "Assumption": "AD has known vulnerabilities that haven\u2019t been patched.",
                    "Role": "System Administrator",
                    "Condition": "Neglecting to apply security patches and updates."
                },
                {
                    "Assumption": "AD logs contain sensitive information without redaction.",
                    "Role": "System Administrator",
                    "Condition": "Improperly configured logging and auditing practices."
                }
            ],
            "Potential Impact": "Compromise of sensitive user accounts up to critical system access.",
            "MITRE ATT&CK Keywords": [
                "Active Directory",
                "Credential Access",
                "Patch Management",
                "Information Disclosure",
                "User Accounts"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthorized party accesses operational trends and historical data via the Historian server.",
            "Assumptions": [
                {
                    "Assumption": "Historian server lacks access control methods.",
                    "Role": "System Architect",
                    "Condition": "Inadequate implementation of secure authentication and authorization."
                },
                {
                    "Assumption": "The network allows unrestricted access to the Historian server.",
                    "Role": "Network Administrator",
                    "Condition": "Weak network segmentation and access controls."
                }
            ],
            "Potential Impact": "Exposure of confidential operational data revealing sensitive trends.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Access",
                "Data Trends",
                "Network Segmentation",
                "Information Disclosure",
                "Historian Server"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a distributed denial-of-service (DDoS) attack targeting the DCS Servers.",
            "Assumptions": [
                {
                    "Assumption": "DCS Servers are directly internet-facing without adequate protection.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of network firewalls and denial-of-service protection mechanisms."
                },
                {
                    "Assumption": "DCS Servers can be overwhelmed by high request volumes.",
                    "Role": "System Architect",
                    "Condition": "Inadequate server capacity and load balancing mechanisms."
                }
            ],
            "Potential Impact": "Disruption of critical control functions leading to operational downtimes.",
            "MITRE ATT&CK Keywords": [
                "DDoS Attack",
                "Server Overload",
                "Network Protection",
                "Denial of Service",
                "DCS Servers"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors send crafted packets to exploit a known vulnerability causing a crash on OWS.",
            "Assumptions": [
                {
                    "Assumption": "OWS systems run unpatched software with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failing to apply necessary software updates and security patches."
                },
                {
                    "Assumption": "The network allows these malicious packet transmissions.",
                    "Role": "Network Administrator",
                    "Condition": "Weak network perimeter defenses."
                }
            ],
            "Potential Impact": "Inability to monitor and adjust process set-point values jeopardizing refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Packet Injection",
                "Crash Exploit",
                "Patch Management",
                "Denial of Service",
                "Operator Workstation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the GPS Server with excessive NTP requests causing failure in time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on NTP requests to the GPS Server.",
                    "Role": "System Architect",
                    "Condition": "Absence of request limiting mechanisms on NTP services."
                },
                {
                    "Assumption": "NTP service runs on default settings without security enhancements.",
                    "Role": "System Administrator",
                    "Condition": "Not applying best practices for securing NTP services."
                }
            ],
            "Potential Impact": "System-wide disruption due to loss of synchronized timing on DCS Network.",
            "MITRE ATT&CK Keywords": [
                "NTP Amplification",
                "Service Misconfiguration",
                "Time Synchronization",
                "Denial of Service",
                "GPS Server"
            ],
            "mitre_technique": {
                "name": "Reflection Amplification",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",
                "id": "attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01",
                "technique_id": "T1498.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the EWS to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "EWS contains exploitable vulnerabilities that remain unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply security updates frquently."
                },
                {
                    "Assumption": "The network permits lateral movement from an initial access point to EWS.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network segmentation and monitoring."
                }
            ],
            "Potential Impact": "Complete control over the EWS allowing harmful configuration changes.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Exploitable Vulnerabilities",
                "Lateral Movement",
                "Elevation of Privilege",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware leveraging privilege escalation exploits targets Active Directory, granting the attacker system-level access.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory has unmitigated vulnerabilities based on known CVEs.",
                    "Role": "System Administrator",
                    "Condition": "Lack of prompt vulnerability management practices."
                },
                {
                    "Assumption": "Malware detection mechanisms are outdated or ineffective.",
                    "Role": "Security Administrator",
                    "Condition": "Failure to update and maintain antimalware definitions and rules."
                }
            ],
            "Potential Impact": "Escalated privileges allowing complete domain compromise.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Active Directory",
                "Malware",
                "Elevation of Privilege",
                "Infrastructure Compromise"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits kernel-mode vulnerabilities in Windows running on the DCS Servers to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS Servers run on an unpatched version of Windows with known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delays or omissions in applying security patches."
                },
                {
                    "Assumption": "Lack of host-based intrusion detection/prevention systems.",
                    "Role": "Security Administrator",
                    "Condition": "Absence of advanced host-based security measures."
                }
            ],
            "Potential Impact": "Root access on DCS Servers enabling full control and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Kernel Exploit",
                "Windows Vulnerability",
                "Privilege Escalation",
                "Elevation of Privilege",
                "DCS Server"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to gain access to the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the authentication system.",
                    "Role": "Attacker",
                    "Condition": "If network access controls are weak or compromised."
                },
                {
                    "Assumption": "The attacker possesses or can guess user credentials.",
                    "Role": "Attacker",
                    "Condition": "If password policies are weak or credentials are leaked."
                },
                {
                    "Assumption": "The attacker can intercept or forge AD packets.",
                    "Role": "Attacker",
                    "Condition": "If network traffic is not encrypted or secured."
                }
            ],
            "Potential Impact": "Unauthorized control over DCS operations, leading to potential sabotage or data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS server to disrupt time synchronization in the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The GPS signals or server communication are not sufficiently protected.",
                    "Role": "Attacker",
                    "Condition": "If signal encryption or secure communication channels are not implemented."
                },
                {
                    "Assumption": "The attacker has nearby physical proximity or network access to inject false GPS signals.",
                    "Role": "Attacker",
                    "Condition": "If the attacker can access or interfere with the GPS communication channels."
                },
                {
                    "Assumption": "The DCS relies heavily on accurate time synchronization for operation.",
                    "Role": "System",
                    "Condition": "Primary assumption given the nature of time-sensitive operations in the DCS."
                }
            ],
            "Potential Impact": "Disruption of coordinated operations and logging, leading to potential operational delays or failures.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "time synchronization",
                "GPS",
                "network disruption"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing emails to spoof legitimate communications and convince employees to divulge credentials.",
            "Assumptions": [
                {
                    "Assumption": "Employees have access to email on internet-facing devices.",
                    "Role": "Employee",
                    "Condition": "If employees can be reached via email on devices connected to the internet."
                },
                {
                    "Assumption": "The attacker has detailed knowledge of the organization's communication practices.",
                    "Role": "Attacker",
                    "Condition": "If the attacker performs sufficient reconnaissance."
                },
                {
                    "Assumption": "Employees are not sufficiently trained to recognize phishing attempts.",
                    "Role": "Employee",
                    "Condition": "If security awareness training is inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access to critical systems and data.",
            "MITRE ATT&CK Keywords": [
                "social engineering",
                "phishing",
                "email",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data in the Historian database.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the Historian.",
                    "Role": "Attacker",
                    "Condition": "If the Historian's network is accessible to unauthorized users."
                },
                {
                    "Assumption": "The attacker has the ability to exploit database vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Unpatched or zero-day vulnerabilities exist."
                },
                {
                    "Assumption": "Database access controls are insufficient.",
                    "Role": "System",
                    "Condition": "If roles and permissions are not appropriately configured."
                }
            ],
            "Potential Impact": "Corruption of historical data and erroneous trend analysis.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "historian",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware installation on operator workstations alters set-point values in the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The workstation is susceptible to malware (e.g., due to lack of updates).",
                    "Role": "System",
                    "Condition": "If the system is not regularly updated or protected by anti-malware solutions."
                },
                {
                    "Assumption": "The attacker has means to deliver and execute the malware.",
                    "Role": "Attacker",
                    "Condition": "If the attacker can bypass security controls to deliver the payload."
                },
                {
                    "Assumption": "Set-point values are not authenticated or secured before being accepted by the system.",
                    "Role": "System",
                    "Condition": "If there is no validation for changes in set-point values."
                }
            ],
            "Potential Impact": "Operational disruptions or unsafe conditions in the refinery processes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "workstation",
                "process control"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative-level access to the DCS controller.",
                    "Role": "Attacker",
                    "Condition": "If the attacker gains administrative privileges through social engineering or exploiting vulnerabilities."
                },
                {
                    "Assumption": "The firmware update process lacks strong security measures.",
                    "Role": "System",
                    "Condition": "If the firmware is not signed or verified before installation."
                },
                {
                    "Assumption": "Physical access controls to the DCS controller are weak.",
                    "Role": "System",
                    "Condition": "If physical security measures are not enforced."
                }
            ],
            "Potential Impact": "Potential system malfunction or compromise of operational control.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "DCS controller",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs destructive actions and deletes logs to erase evidence.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored locally and not backed up securely.",
                    "Role": "System",
                    "Condition": "If logging mechanisms rely on local storage without secure, redundant backups."
                },
                {
                    "Assumption": "The attacker has sufficient privileges to alter or delete logs.",
                    "Role": "Attacker",
                    "Condition": "If the attacker can escalate privileges to the level required to tamper with logs."
                },
                {
                    "Assumption": "The logging and monitoring system lacks tamper-detection mechanisms.",
                    "Role": "System",
                    "Condition": "If tamper-evident measures are not in place."
                }
            ],
            "Potential Impact": "Difficulty in forensic investigations and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "forensics",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses compromised credentials to make unauthorized changes, later denying their involvement.",
            "Assumptions": [
                {
                    "Assumption": "Compromise of legitimate user credentials is possible.",
                    "Role": "Attacker",
                    "Condition": "If credential theft or phishing attacks succeed."
                },
                {
                    "Assumption": "Changes are not sufficiently recorded with timestamps and actor identities.",
                    "Role": "System",
                    "Condition": "If the system does not maintain detailed logs of changes."
                },
                {
                    "Assumption": "Access control measures are insufficient to detect or prevent unauthorized actions.",
                    "Role": "System",
                    "Condition": "If access controls do not enforce separation of duties or sufficient monitoring."
                }
            ],
            "Potential Impact": "Unauthorized changes to system configurations or data with no traceable evidence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "credential theft",
                "configuration changes",
                "access controls"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates audit logs to cover their tracks after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are accessible and modifiable by privileged users.",
                    "Role": "Attacker",
                    "Condition": "If the attacker can escalate privileges and reach audit logs."
                },
                {
                    "Assumption": "There is no integrity verification for audit logs.",
                    "Role": "System",
                    "Condition": "If logs are not protected by integrity checks or tamper-evident technologies."
                },
                {
                    "Assumption": "Log alterations are not monitored in real-time.",
                    "Role": "System",
                    "Condition": "If real-time log monitoring is not implemented or effective."
                }
            ],
            "Potential Impact": "Loss of accountability and traceability of actions within the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit logs",
                "log manipulation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is exfiltrated via a compromised engineering workstation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can install data exfiltration tools on the EWS.",
                    "Role": "Attacker",
                    "Condition": "If the workstation lacks proper endpoint protection or monitoring."
                },
                {
                    "Assumption": "Data transmission from the EWS is not adequately monitored or controlled.",
                    "Role": "System",
                    "Condition": "If network monitoring and DLP (Data Loss Prevention) tools are not effectively deployed."
                },
                {
                    "Assumption": "Sensitive data is stored or processed on the EWS.",
                    "Role": "System",
                    "Condition": "If the EWS is not isolated from sensitive data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, leading to competitive or reputational damage.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exfiltration",
                "workstation",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communications between DCS components to capture sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Communications between components are not encrypted.",
                    "Role": "System",
                    "Condition": "If secure communication protocols (e.g., TLS) are not enforced."
                },
                {
                    "Assumption": "The attacker has access to network paths where data flows.",
                    "Role": "Attacker",
                    "Condition": "If network segmentation and access controls are inadequate."
                },
                {
                    "Assumption": "Sensitive data is transmitted between components.",
                    "Role": "System",
                    "Condition": "If data is not protected in transit."
                }
            ],
            "Potential Impact": "Capture and misuse of sensitive information regarding refinery operations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic interception",
                "unencrypted communication",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data stored on the Historian is accessed and copied by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "The Historian is accessible to users beyond those strictly necessary for its operation.",
                    "Role": "System",
                    "Condition": "If access controls are not strictly enforced."
                },
                {
                    "Assumption": "Data is not encrypted at rest in the Historian.",
                    "Role": "System",
                    "Condition": "If data encryption policies are not applied."
                },
                {
                    "Assumption": "Audit logs do not track access to stored data effectively.",
                    "Role": "System",
                    "Condition": "If logging mechanisms are not robust or detailed enough."
                }
            ],
            "Potential Impact": "Unauthorized access to historical operational data, potentially compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data access",
                "historian",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the DCS servers, overwhelming them with traffic.",
            "Assumptions": [
                {
                    "Assumption": "The DCS servers are exposed to the internet or inadequately protected network segments.",
                    "Role": "System",
                    "Condition": "If network exposure is not minimized."
                },
                {
                    "Assumption": "The attacker can generate sufficient traffic to disrupt services.",
                    "Role": "Attacker",
                    "Condition": "If the attacker has access to a botnet or similar resources."
                },
                {
                    "Assumption": "DDoS mitigation strategies are not in place.",
                    "Role": "System",
                    "Condition": "If DDoS protection measures are not deployed."
                }
            ],
            "Potential Impact": "Disruption of DCS operations and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware on the EWS causes it to crash or become unresponsive, hindering engineering operations.",
            "Assumptions": [
                {
                    "Assumption": "The EWS lacks sufficient protection against malware.",
                    "Role": "System",
                    "Condition": "If endpoint protection and monitoring are not enforced."
                },
                {
                    "Assumption": "Malware can be introduced through removable media or network vectors.",
                    "Role": "Attacker",
                    "Condition": "If removable media use is not controlled or network defenses are weak."
                },
                {
                    "Assumption": "The EWS is critical for continuous DCS operation.",
                    "Role": "System",
                    "Condition": "Given the EWS's role in managing settings and configurations."
                }
            ],
            "Potential Impact": "Interruption of engineering functions and system management.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "workstation",
                "availability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A network attack exploits a vulnerability in the DCS controller, causing it to enter a fault state.",
            "Assumptions": [
                {
                    "Assumption": "The DCS controller has known vulnerabilities that can be exploited.",
                    "Role": "System",
                    "Condition": "Unpatched or unmitigated vulnerabilities are present."
                },
                {
                    "Assumption": "The attacker can access the network segment where the DCS controller resides.",
                    "Role": "Attacker",
                    "Condition": "If network segmentation and access controls are inadequate."
                },
                {
                    "Assumption": "Network monitoring and intrusion detection are not effectively implemented.",
                    "Role": "System",
                    "Condition": "If real-time monitoring is insufficient."
                }
            ],
            "Potential Impact": "Operational disruptions and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "controller",
                "network attack",
                "fault state"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the AD authentication to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The AD system has unpatched or zero-day vulnerabilities.",
                    "Role": "System",
                    "Condition": "If vulnerabilities are not addressed promptly."
                },
                {
                    "Assumption": "The attacker has network access to interact with AD services.",
                    "Role": "Attacker",
                    "Condition": "If access controls to the AD are insufficient."
                },
                {
                    "Assumption": "Administrative auditing and monitoring controls are weak.",
                    "Role": "System",
                    "Condition": "If administrative actions are not well-monitored."
                }
            ],
            "Potential Impact": "Complete compromise of system control and access to all resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "AD",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a vulnerability in the operating system to gain higher privileges on the EWS.",
            "Assumptions": [
                {
                    "Assumption": "The EWS operates on Windows with known vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerabilities are present."
                },
                {
                    "Assumption": "The attacker has initial access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "If initial access can be achieved through phishing or other means."
                },
                {
                    "Assumption": "User privilege escalation is not adequately monitored or controlled.",
                    "Role": "System",
                    "Condition": "If privilege actions are not audited."
                }
            ],
            "Potential Impact": "Full control over the workstation, enabling further attacks on the DCS.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Windows",
                "EWS",
                "operating system"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A network-based attack exploits a firmware vulnerability to obtain direct control over the DCS controller.",
            "Assumptions": [
                {
                    "Assumption": "The DCS controller firmware contains exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "If the firmware is outdated or unpatched."
                },
                {
                    "Assumption": "The attacker can access the network segment where the DCS controller is deployed.",
                    "Role": "Attacker",
                    "Condition": "If network defenses are weak or compromised."
                },
                {
                    "Assumption": "Firmware updates are not securely managed or validated.",
                    "Role": "System",
                    "Condition": "If firmware integrity checks are not enforced."
                }
            ],
            "Potential Impact": "Unauthorised control over key operational functions and potential system sabotage.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "DCS controller",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of an Administrator to gain unauthorized access to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the corporate network.",
                    "Role": "Attacker",
                    "Condition": "Corporate network connection compromised."
                },
                {
                    "Assumption": "The attacker has valid credentials or can guess them.",
                    "Role": "Attacker",
                    "Condition": "Credentials weak or compromised."
                },
                {
                    "Assumption": "AD is not using multi-factor authentication.",
                    "Role": "System Configuration",
                    "Condition": "Single-factor authentication in place."
                }
            ],
            "Potential Impact": "Unauthorized access and control of DCS Controller, leading to data manipulation and disruption of refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Credential Access",
                "Unauthorized Access",
                "Corporate Network"
            ],
            "mitre_technique": {
                "name": "Token Impersonation/Theft",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
                "technique_id": "T1134.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing time synchronization signals from the GPS server.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network segment with the GPS server.",
                    "Role": "Attacker",
                    "Condition": "Network segment compromised."
                },
                {
                    "Assumption": "Insufficient verification of time signals.",
                    "Role": "System Configuration",
                    "Condition": "Weak signal verification protocols."
                },
                {
                    "Assumption": "GPS server software vulnerabilities exist.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched or misconfigured GPS server."
                }
            ],
            "Potential Impact": "Disruption of time-dependent operations and potential safety risks within refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Signal Spoofing",
                "Time Manipulation",
                "GPS Spoofing",
                "Operational Disruption"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
                "technique_id": "T1565.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attack to obtain EWS operator credentials.",
            "Assumptions": [
                {
                    "Assumption": "Engineering Workstation operators are targeted by phishing.",
                    "Role": "Attacker",
                    "Condition": "Phishing campaigns sent to EWS operators."
                },
                {
                    "Assumption": "Lack of user education on phishing threats.",
                    "Role": "User Training",
                    "Condition": "Inadequate cybersecurity training."
                },
                {
                    "Assumption": "Email filtering solutions are not robust.",
                    "Role": "System Configuration",
                    "Condition": "Weak email security protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to EWS leading to misconfiguration of the refinery's operational settings.",
            "MITRE ATT&CK Keywords": [
                "Social Engineering",
                "Phishing",
                "Credential Harvesting",
                "Email Security"
            ],
            "mitre_technique": {
                "name": "Spearphishing Attachment",
                "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
                "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
                "technique_id": "T1566.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Alteration of sensor data being sent to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between sensors and the DCS Controller are not encrypted.",
                    "Role": "System Configuration",
                    "Condition": "Unencrypted communication protocols."
                },
                {
                    "Assumption": "Attacker has access to the network where sensors communicate.",
                    "Role": "Attacker",
                    "Condition": "Network compromised."
                },
                {
                    "Assumption": "Insufficient integrity checks on incoming sensor data.",
                    "Role": "System Configuration",
                    "Condition": "Weak data validation mechanisms."
                }
            ],
            "Potential Impact": "Inaccurate sensor data causing incorrect system responses, leading to potential operational hazards.",
            "MITRE ATT&CK Keywords": [
                "Data Tampering",
                "Sensor Data",
                "Network Compromise",
                "Communication Interference"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Changing configuration files on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has compromised administrative privileges on DCS servers.",
                    "Role": "Attacker",
                    "Condition": "Privileged access obtained."
                },
                {
                    "Assumption": "Configuration files are not properly secured.",
                    "Role": "System Configuration",
                    "Condition": "Weak access controls."
                },
                {
                    "Assumption": "Insufficient monitoring of file system changes.",
                    "Role": "System Monitoring",
                    "Condition": "Weak or absent file integrity monitoring."
                }
            ],
            "Potential Impact": "Misconfigured DCS settings leading to unsafe or inefficient refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Configuration Tampering",
                "Admin Access",
                "File System",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of historical data in the Historian server.",
            "Assumptions": [
                {
                    "Assumption": "Compromised access to the Historian server.",
                    "Role": "Attacker",
                    "Condition": "Credential theft or privilege escalation."
                },
                {
                    "Assumption": "Data stored in the Historian is not adequately protected.",
                    "Role": "System Configuration",
                    "Condition": "Weak data protection mechanisms."
                },
                {
                    "Assumption": "Historian logs are not regularly audited.",
                    "Role": "System Monitoring",
                    "Condition": "Insufficient audit practices."
                }
            ],
            "Potential Impact": "Misleading historical data affecting trend analysis and decision-making processes.",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Historical Data",
                "Trend Analysis",
                "Audit Trail"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny malicious commands issued via Operator Workstations (OWS).",
            "Assumptions": [
                {
                    "Assumption": "Logging of commands is insufficient or tampered.",
                    "Role": "System Monitoring",
                    "Condition": "Weak logging mechanisms."
                },
                {
                    "Assumption": "Insufficient non-repudiation controls in place.",
                    "Role": "System Configuration",
                    "Condition": "Lack of robust logging and monitoring."
                },
                {
                    "Assumption": "Attackers can bypass authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Weak or bypassed authentication protocols."
                }
            ],
            "Potential Impact": "Difficult to trace malicious activities, leading to accountability issues and delayed response.",
            "MITRE ATT&CK Keywords": [
                "Non-Repudiation",
                "Logging",
                "Accountability",
                "Monitoring"
            ],
            "mitre_technique": {
                "name": "Network Address Translation Traversal",
                "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
                "id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
                "technique_id": "T1599.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineers deny making harmful changes to controller settings.",
            "Assumptions": [
                {
                    "Assumption": "Controller changes are not properly logged.",
                    "Role": "System Monitoring",
                    "Condition": "Weak or absent change logging."
                },
                {
                    "Assumption": "Authentication mechanisms are insufficiently robust.",
                    "Role": "System Configuration",
                    "Condition": "Weak authentication protocols."
                },
                {
                    "Assumption": "System lacks detailed audit trails.",
                    "Role": "System Design",
                    "Condition": "Lack of comprehensive audit features."
                }
            ],
            "Potential Impact": "Inability to attribute malicious changes, preventing effective incident response and remediation.",
            "MITRE ATT&CK Keywords": [
                "Change Log",
                "Admin Actions",
                "Audit Trail",
                "Incident Response"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "False denial of malicious activity on DCS Servers.",
            "Assumptions": [
                {
                    "Assumption": "System logs can be altered or deleted.",
                    "Role": "Attacker",
                    "Condition": "Admin access obtained."
                },
                {
                    "Assumption": "Insufficient access controls on logging mechanisms.",
                    "Role": "System Configuration",
                    "Condition": "Weak log protection."
                },
                {
                    "Assumption": "System events are not properly monitored and validated.",
                    "Role": "System Monitoring",
                    "Condition": "Weak system monitoring protocols."
                }
            ],
            "Potential Impact": "Difficulty in investigating incidents and attributing malicious actions, leading to security control evasion.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Admin Privileges",
                "Event Monitoring",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive process data stored in the Historian.",
            "Assumptions": [
                {
                    "Assumption": "Historian server is connected to the internet.",
                    "Role": "System Configuration",
                    "Condition": "Internet-facing Historian."
                },
                {
                    "Assumption": "Directories containing sensitive data are not properly secured.",
                    "Role": "System Configuration",
                    "Condition": "Weak data access controls."
                },
                {
                    "Assumption": "System vulnerabilities not patched in time.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched and outdated system."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Data Breach",
                "Sensitive Data",
                "Unauthorized Access",
                "Internet-facing"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Leaking of internal network configuration details via unsecured communication channels.",
            "Assumptions": [
                {
                    "Assumption": "Communications between DCS components are not encrypted.",
                    "Role": "System Configuration",
                    "Condition": "Unencrypted communication protocols."
                },
                {
                    "Assumption": "Network is accessible to unauthorized entities.",
                    "Role": "Network Configuration",
                    "Condition": "Weak network security."
                },
                {
                    "Assumption": "Lack of monitoring tools for network traffic.",
                    "Role": "System Monitoring",
                    "Condition": "Weak traffic monitoring protocols."
                }
            ],
            "Potential Impact": "Leakage of network configuration information aiding further attacks.",
            "MITRE ATT&CK Keywords": [
                "Unsecured Communication",
                "Network Information",
                "Data Leak",
                "Traffic Monitoring"
            ],
            "mitre_technique": {
                "name": "Gather Victim Network Information",
                "description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--9d48cab2-7929-4812-ad22-f536665f0109",
                "technique_id": "T1590"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromising AD server to steal user credentials.",
            "Assumptions": [
                {
                    "Assumption": "AD server is vulnerable due to unpatched exploits.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched system vulnerabilities."
                },
                {
                    "Assumption": "Attackers can access the network hosting the AD server.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "Insufficient monitoring of AD access logs.",
                    "Role": "System Monitoring",
                    "Condition": "Weak access log monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to user credentials leading to further intrusion attempts.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Active Directory",
                "Unauthorized Access",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the DCS Controller making it unavailable.",
            "Assumptions": [
                {
                    "Assumption": "DCS Controller is accessible from external networks.",
                    "Role": "System Configuration",
                    "Condition": "External network exposure."
                },
                {
                    "Assumption": "Lack of DDoS mitigation strategies.",
                    "Role": "System Design",
                    "Condition": "Ineffective DDoS protection."
                },
                {
                    "Assumption": "Insufficient monitoring and response to abnormal traffic.",
                    "Role": "System Monitoring",
                    "Condition": "Poor traffic monitoring and response."
                }
            ],
            "Potential Impact": "Disruption of refinery operations due to controller unavailable.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Unavailability",
                "Traffic Flood",
                "Network Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attribute-based attack on GPS server disrupting time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "GPS server is exposed to the internet.",
                    "Role": "System Configuration",
                    "Condition": "Internet-facing GPS server."
                },
                {
                    "Assumption": "Time synchronization protocols are not robust.",
                    "Role": "System Design",
                    "Condition": "Weak synchronization protocols."
                },
                {
                    "Assumption": "Attackers can generate disruptive signals.",
                    "Role": "Attacker",
                    "Condition": "Ability to generate signals."
                }
            ],
            "Potential Impact": "Disruption of time-dependent operations leading to operational inefficiency.",
            "MITRE ATT&CK Keywords": [
                "Time Manipulation",
                "Service Disruption",
                "GPS Attack",
                "Signal Disruption"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1042) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ca205a36-c1ad-488b-aa6c-ab34bdd3a36b",
                "technique_id": "T1494"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the AD server with requests to exhaust resources.",
            "Assumptions": [
                {
                    "Assumption": "AD server is reachable from attacker's network.",
                    "Role": "System Configuration",
                    "Condition": "Network exposure of AD server."
                },
                {
                    "Assumption": "Unable to detect and mitigate traffic spikes.",
                    "Role": "System Monitoring",
                    "Condition": "Weak detection mechanisms."
                },
                {
                    "Assumption": "Attackers can generate high volume traffic.",
                    "Role": "Attacker",
                    "Condition": "Ability to generate high traffic volume."
                }
            ],
            "Potential Impact": "Authentication service disruption affecting user access controls.",
            "MITRE ATT&CK Keywords": [
                "Flood Attack",
                "Resource Exhaustion",
                "Service Unavailability",
                "Traffic Spike"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerability in DCS Controller to gain admin privileges.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in DCS Controller are unpatched.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "Insufficient access controls to restrict privilege escalation.",
                    "Role": "System Configuration",
                    "Condition": "Weak privilege management."
                },
                {
                    "Assumption": "Attackers have means to reach the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "Access to controller endpoints."
                }
            ],
            "Potential Impact": "Unauthorized control over DCS leading to potential sabotage.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Vulnerability Exploit",
                "Admin Access",
                "Control Sabotage"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting shortcuts or script vulnerabilities on EWS for admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "EWS software contains exploitable vulnerabilities.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched software vulnerabilities."
                },
                {
                    "Assumption": "Scripts running on EWS do not have proper restrictions.",
                    "Role": "System Configuration",
                    "Condition": "Improper script configuration."
                },
                {
                    "Assumption": "Compromise can go undetected due to lack of monitoring.",
                    "Role": "System Monitoring",
                    "Condition": "Weak monitoring protocols."
                }
            ],
            "Potential Impact": "Unauthorized changes to engineering settings leading to operational failures.",
            "MITRE ATT&CK Keywords": [
                "Script Vulnerability",
                "Privilege Escalation",
                "Admin Access",
                "System Failure"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Leverage unprotected AD service to elevate privileges across the domain.",
            "Assumptions": [
                {
                    "Assumption": "AD service is not sufficiently protected.",
                    "Role": "System Configuration",
                    "Condition": "Weak AD protection mechanisms."
                },
                {
                    "Assumption": "AD vulnerabilities are unpatched.",
                    "Role": "System Vulnerability",
                    "Condition": "Unpatched AD vulnerabilities."
                },
                {
                    "Assumption": "Role-based access controls are improperly configured.",
                    "Role": "System Design",
                    "Condition": "Misconfigured role-based controls."
                }
            ],
            "Potential Impact": "Compromise of multiple user accounts leading to widespread unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Domain Compromise",
                "Role-based Access",
                "Unpatched Vulnerability"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an engineer's credentials to gain access to the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network or can intercept network traffic",
                    "Role": "Attacker",
                    "Condition": "Network access or compromised endpoints"
                },
                {
                    "Assumption": "Weak or compromised authentication mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured or outdated security policies"
                },
                {
                    "Assumption": "Lack of multi-factor authentication for accessing the EWS",
                    "Role": "System Designer",
                    "Condition": "Single-factor authentication in use"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive configurations and settings, potential tampering with control logic, leading to unsafe operating conditions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "engineering workstation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a GPS signal to the GPS Server, causing incorrect time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The GPS signals are not encrypted",
                    "Role": "System Architect",
                    "Condition": "Use of unprotected signals"
                },
                {
                    "Assumption": "An attacker has access to GPS signal emitters or can interfere with existing ones",
                    "Role": "Attacker",
                    "Condition": "Physical proximity or signal interception capabilities"
                },
                {
                    "Assumption": "There are no additional validation layers for the time synchronization data",
                    "Role": "System Administrator",
                    "Condition": "Lack of redundancy or cross-verification in time sync checks"
                }
            ],
            "Potential Impact": "Mismatch in time-stamped data can lead to errors in logging, monitoring, and control actions, potentially causing operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "time synchronization",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor could spoof network traffic to appear as though it is coming from a trusted DCS Controller, leading to unauthorized command issuance.",
            "Assumptions": [
                {
                    "Assumption": "The network lacks proper authentication and validation of data packets",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured network policies or vulnerabilities in the network protocol"
                },
                {
                    "Assumption": "The attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Compromise or physical access to network infrastructure"
                },
                {
                    "Assumption": "Lack of encryption and integrity checks for critical communications",
                    "Role": "System Architect",
                    "Condition": "Unprotected data communication protocols"
                }
            ],
            "Potential Impact": "Unauthorized commands could disrupt refinery processes, leading to unsafe operational conditions and potential downtime.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "DCS controller",
                "command injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify data stored in the Historian to alter operational trends and analysis results.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access control protections on the Historian",
                    "Role": "Database Administrator",
                    "Condition": "Weak or misconfigured access controls"
                },
                {
                    "Assumption": "Lack of data integrity verification mechanisms",
                    "Role": "System Architect",
                    "Condition": "Unprotected data at rest"
                },
                {
                    "Assumption": "An attacker has already gained some level of access to the network",
                    "Role": "Attacker",
                    "Condition": "Initial access via compromised credentials or vulnerabilities"
                }
            ],
            "Potential Impact": "Corrupted historical data could lead to incorrect trend analysis, adversely affecting operational decisions and safety protocols.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "historian",
                "database",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter configurations on the DCS Controller to disrupt normal operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the DCS Controller's configuration interface",
                    "Role": "Attacker",
                    "Condition": "Compromise of interface access credentials"
                },
                {
                    "Assumption": "Weak or insufficient authentication mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured security policies or outdated systems"
                },
                {
                    "Assumption": "Lack of rigorous monitoring and alerting for configuration changes",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient logging or alerting mechanisms"
                }
            ],
            "Potential Impact": "Unauthorized changes to controller configurations could lead to unsafe operating conditions, equipment damage, or process inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "DCS controller",
                "configuration",
                "unauthorized changes"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could inject malicious code into the Active Directory logs to disrupt user authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privilege to access and modify AD logs",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or insider threat"
                },
                {
                    "Assumption": "Insufficient logging and alerting on AD system changes",
                    "Role": "System Administrator",
                    "Condition": "Lack of security monitoring infrastructure"
                },
                {
                    "Assumption": "Weak internal network segmentation",
                    "Role": "Network Engineer",
                    "Condition": "Flat or insufficiently segmented network architecture"
                }
            ],
            "Potential Impact": "Disruption to user authentication mechanisms could result in system downtimes and denial of access to critical systems for authorized personnel.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "Active Directory",
                "authentication",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could perform actions on the network and delete log entries to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient audit logging and protection mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Weak or nonexistent logging policies"
                },
                {
                    "Assumption": "Attacker has privileged access to the logging systems",
                    "Role": "Attacker",
                    "Condition": "Compromised admin credentials or elevated privileges"
                },
                {
                    "Assumption": "Lack of redundancy in log storage",
                    "Role": "Data Manager",
                    "Condition": "Centralized and unprotected log storage"
                }
            ],
            "Potential Impact": "Lack of traceability for unauthorized actions, hindering forensic investigations and compliance efforts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log deletion",
                "audit logs",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could manipulate operation logs on the EWS to prevent detection of unauthorized configuration changes.",
            "Assumptions": [
                {
                    "Assumption": "The EWS operation logs are not protected against tampering",
                    "Role": "System Administrator",
                    "Condition": "Weak or insufficient protective mechanisms"
                },
                {
                    "Assumption": "Insufficient access controls on the EWS",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured security settings"
                },
                {
                    "Assumption": "Attacker has privileged access to the EWS",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or exploitation of vulnerabilities"
                }
            ],
            "Potential Impact": "Unauthorized configuration changes might go unnoticed, leading to potential safety and operational inefficiencies.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "operation logs",
                "EWS",
                "configuration changes"
            ],
            "mitre_technique": {
                "name": "SNMP (MIB Dump)",
                "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
                "technique_id": "T1602.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could falsely deny responsibility for changes in network configurations by exploiting logging gaps.",
            "Assumptions": [
                {
                    "Assumption": "Network configurations are not logged properly",
                    "Role": "Network Administrator",
                    "Condition": "Lack of comprehensive logging policy"
                },
                {
                    "Assumption": "Logging systems are vulnerable to tampering",
                    "Role": "System Administrator",
                    "Condition": "Unprotected or insufficiently protected logs"
                },
                {
                    "Assumption": "Attacker has access to modify network device configurations",
                    "Role": "Attacker",
                    "Condition": "Compromised admin accounts or network access"
                }
            ],
            "Potential Impact": "Altered configurations could impact network performance and security postures, with no accountability for the changes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network configuration",
                "logging gaps",
                "unauthorized changes"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data from the Historian could be exfiltrated via an unprotected internet-facing interface.",
            "Assumptions": [
                {
                    "Assumption": "Historian data is accessible via the internet",
                    "Role": "System Designer",
                    "Condition": "Misconfiguration or legacy system constraints"
                },
                {
                    "Assumption": "Lack of proper encryption and access control mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Weak security policies or outdated systems"
                },
                {
                    "Assumption": "Attacker has the capability to discover and exploit the unprotected interface",
                    "Role": "Attacker",
                    "Condition": "Access to network scanning and exploitation tools"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data could lead to competitive disadvantages and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "historian",
                "data exfiltration",
                "internet-facing interface"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept unencrypted communication between the DCS Controllers and sensors/actuators.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication protocols used",
                    "Role": "System Designer",
                    "Condition": "Legacy systems or misconfigurations"
                },
                {
                    "Assumption": "Network lacks secure segmentation",
                    "Role": "Network Engineer",
                    "Condition": "Flat network design or poor segmentation practices"
                },
                {
                    "Assumption": "Attacker has access to network traffic",
                    "Role": "Attacker",
                    "Condition": "Compromised devices or physical access"
                }
            ],
            "Potential Impact": "Interception of control data could lead to unauthorized disclosure of system operations and potential manipulation of control commands.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "communication interception",
                "DCS Controllers",
                "sensors and actuators"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An internal user could abuse access to the AD to gather sensitive user information.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory user accounts are not sufficiently protected",
                    "Role": "System Administrator",
                    "Condition": "Weak access control settings"
                },
                {
                    "Assumption": "Insufficient monitoring of privileged user actions",
                    "Role": "Security Analyst",
                    "Condition": "Lack of implementation of privileged access monitoring tools"
                },
                {
                    "Assumption": "Insider threat with malicious intent",
                    "Role": "Internal User",
                    "Condition": "Disgruntled employees or compromised insiders"
                }
            ],
            "Potential Impact": "Sensitive user information could be disclosed, leading to further targeted attacks or social engineering efforts.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Active Directory",
                "user information",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the network with traffic to disrupt communication between DCS components.",
            "Assumptions": [
                {
                    "Assumption": "Network lacks proper rate limiting and traffic filtering mechanisms",
                    "Role": "System Architect",
                    "Condition": "Misconfigured or absent network defenses"
                },
                {
                    "Assumption": "Attacker can generate significant amounts of network traffic",
                    "Role": "Attacker",
                    "Condition": "Access to botnet or other DDoS capabilities"
                },
                {
                    "Assumption": "Network is critical to DCS operations",
                    "Role": "System Designer",
                    "Condition": "Real-time control and monitoring dependencies"
                }
            ],
            "Potential Impact": "Disruption of communication between DCS components could lead to a breakdown in refinery operations and potentially unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network flood",
                "DCS components",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A vulnerability in the operating system of the DCS servers could be exploited to cause system crashes or reboots.",
            "Assumptions": [
                {
                    "Assumption": "Outdated or unpatched operating systems in use",
                    "Role": "System Administrator",
                    "Condition": "Lack of a robust patch management process"
                },
                {
                    "Assumption": "Identified vulnerabilities can be exploited remotely",
                    "Role": "Attacker",
                    "Condition": "Accessible network interfaces"
                },
                {
                    "Assumption": "The servers are critical for DCS operations",
                    "Role": "System Architect",
                    "Condition": "Dependency on centralized server functions"
                }
            ],
            "Potential Impact": "System crashes or reboots could interrupt DCS functionality, leading to operational downtimes and loss of control over refinery processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "operating system vulnerability",
                "DCS servers",
                "system crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could target the GPS Server with malicious traffic to disrupt time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "GPS Server lacks DDoS protection mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured or absent DDoS defenses"
                },
                {
                    "Assumption": "Critical systems depend on accurate time synchronization",
                    "Role": "System Designer",
                    "Condition": "Operational dependencies on GPS time signals"
                },
                {
                    "Assumption": "Attacker can generate or manipulate sufficient traffic",
                    "Role": "Attacker",
                    "Condition": "Access to tools or botnets for DDoS"
                }
            ],
            "Potential Impact": "Disruption in time synchronization could lead to logging errors, operational delays, and data inconsistency within the DCS network.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GPS Server",
                "time synchronization",
                "malicious traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in the AD to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "AD software contains known vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Lack of patching or updates"
                },
                {
                    "Assumption": "Attacker has initial access to the network",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or entry points"
                },
                {
                    "Assumption": "Insufficient monitoring of privilege escalation attempts",
                    "Role": "Security Analyst",
                    "Condition": "Weak or absent security monitoring protocols"
                }
            ],
            "Potential Impact": "Elevated privileges could allow the attacker to execute any number of attacks such as tampering, data theft, or further penetration into the network.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Active Directory",
                "vulnerabilities",
                "network access"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with legitimate access might exploit their role to gain unauthorized privileges on the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to DCS components",
                    "Role": "Insider",
                    "Condition": "Authorized role with insufficient oversight"
                },
                {
                    "Assumption": "Privilege escalation mechanisms are inadequately controlled",
                    "Role": "System Administrator",
                    "Condition": "Lax security protocols or misconfigurations"
                },
                {
                    "Assumption": "Insufficient monitoring of insider activities",
                    "Role": "Security Analyst",
                    "Condition": "Lack of comprehensive insider threat program"
                }
            ],
            "Potential Impact": "Compromised DCS Controller could lead to unauthorized operational changes, impacting refinery safety and efficiency.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "DCS Controller",
                "insider threat",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit unpatched vulnerabilities in the operating system to execute arbitrary code on the EWS with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Operating system vulnerabilities are known but unpatched",
                    "Role": "System Administrator",
                    "Condition": "Delays or failures in patch management"
                },
                {
                    "Assumption": "Attacker has knowledge of these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access to exploit information or tools"
                },
                {
                    "Assumption": "Sensitive operations on EWS depend on elevated privileges",
                    "Role": "Engineer",
                    "Condition": "High-level tasks require admin access"
                }
            ],
            "Potential Impact": "Execution of arbitrary code with elevated privileges could compromise critical DCS operations and lead to unauthorized control over refinery processes.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "operating system",
                "EWS",
                "arbitrary code execution"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs Active Directory credentials to gain unauthorized access to the DCS Engineer Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "Active Directory (AD) is not adequately protected.",
                    "Role": "Attacker",
                    "Condition": "Valid if AD security policies are weak or not enforced."
                },
                {
                    "Assumption": "The attacker has knowledge of an AD user with sufficient privileges.",
                    "Role": "Attacker",
                    "Condition": "Valid if user credentials are leaked or guessed."
                },
                {
                    "Assumption": "The attacker has a network path to the AD.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not properly segmented."
                }
            ],
            "Potential Impact": "Loss of Confidentiality and Integrity.",
            "MITRE ATT&CK Keywords": [
                "Credential Theft",
                "Account Manipulation",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An external attacker masquerades as the GPS Server to provide incorrect time synchronization data.",
            "Assumptions": [
                {
                    "Assumption": "The GPS Server does not use authentication for communication.",
                    "Role": "Attacker",
                    "Condition": "Valid if the GPS Server's network traffic is unencrypted and unauthenticated."
                },
                {
                    "Assumption": "The attacker has access to the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Valid if the network is not adequately isolated."
                },
                {
                    "Assumption": "Time synchronization is critical for the DCS operations.",
                    "Role": "System Owner",
                    "Condition": "Valid if precise timing is essential for operation coordination."
                }
            ],
            "Potential Impact": "Loss of Integrity and Availability.",
            "MITRE ATT&CK Keywords": [
                "Network Sniffing",
                "Man-in-the-Middle",
                "System Time Changes"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker poses as a legitimate operator to gain access to OWS.",
            "Assumptions": [
                {
                    "Assumption": "Operator credentials can be intercepted or guessed.",
                    "Role": "Attacker",
                    "Condition": "Valid if credential management is weak."
                },
                {
                    "Assumption": "OWS does not enforce multi-factor authentication (MFA).",
                    "Role": "Attacker",
                    "Condition": "Valid if additional authentication mechanisms are not in place."
                },
                {
                    "Assumption": "The attacker has network access to OWS.",
                    "Role": "Attacker",
                    "Condition": "Valid if network controls are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized access leading to potential loss of Integrity and Availability.",
            "MITRE ATT&CK Keywords": [
                "Impersonation",
                "Session Hijacking",
                "Network Exploitation"
            ],
            "mitre_technique": {
                "name": "RDP Hijacking",
                "description": "Adversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)",
                "id": "attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c",
                "technique_id": "T1563.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious code is inserted into DCS Controller's firmware to alter sensor readings.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not verified.",
                    "Role": "Attacker",
                    "Condition": "Valid if proper integrity checks are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the firmware distribution mechanism.",
                    "Role": "Attacker",
                    "Condition": "Valid if the supply chain is compromised."
                },
                {
                    "Assumption": "Firmware access controls are weak.",
                    "Role": "System Manager",
                    "Condition": "Valid if strong access controls are not implemented."
                }
            ],
            "Potential Impact": "Loss of Integrity leading to incorrect sensor data processing.",
            "MITRE ATT&CK Keywords": [
                "Firmware Modification",
                "Supply Chain Attack",
                "Unauthorized Hardware Access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of Historian data to hide critical incidents and anomalies.",
            "Assumptions": [
                {
                    "Assumption": "Historian data is not protected with integrity checks.",
                    "Role": "Attacker",
                    "Condition": "Valid if hash checks or similar mechanisms are absent."
                },
                {
                    "Assumption": "The attacker can gain privileged access to Historian data.",
                    "Role": "Attacker",
                    "Condition": "Valid if user privileges are not properly managed."
                },
                {
                    "Assumption": "Logs and audit trails are insufficient or non-existent.",
                    "Role": "System Administrator",
                    "Condition": "Valid if monitoring and logging are inadequate."
                }
            ],
            "Potential Impact": "Loss of Integrity and undetected incidents affecting monitoring.",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Audit Evasion",
                "Privilege Manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromise of EWS to alter controller configurations undetected.",
            "Assumptions": [
                {
                    "Assumption": "EWS lacks adequate security measures.",
                    "Role": "Attacker",
                    "Condition": "Valid if security patches are not up-to-date or configurations are default."
                },
                {
                    "Assumption": "Network segmentation is inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Valid if network zones are not properly isolated."
                },
                {
                    "Assumption": "No real-time monitoring of EWS activity.",
                    "Role": "IT Security",
                    "Condition": "Valid if monitoring systems are insufficient."
                }
            ],
            "Potential Impact": "Loss of Integrity and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "Configuration Changes",
                "Insider Threat",
                "Systems Manipulation"
            ],
            "mitre_technique": {
                "name": "Program Download",
                "description": "Adversaries may perform a program download to transfer a user program to a controller. \n\nVariations of program download, such as online edit and program append, allow a controller to continue running during the transfer and reconfiguration process without interruption to process control. However, before starting a full program download (i.e., download all) a controller may need to go into a stop state. This can have negative consequences on the physical process, especially if the controller is not able to fulfill a time-sensitive action. Adversaries may choose to avoid a download all in favor of an online edit or program append to avoid disrupting the physical process. An adversary may need to use the technique Detect Operating Mode or Change Operating Mode to make sure the controller is in the proper mode to accept a program download.\n\nThe granularity of control to transfer a user program in whole or parts is dictated by the management protocol (e.g., S7CommPlus, TriStation) and underlying controller API. Thus, program download is a high-level term for the suite of vendor-specific API calls used to configure a controllers user program memory space.  \n\n[Modify Controller Tasking](https://attack.mitre.org/techniques/T0821) and [Modify Program](https://attack.mitre.org/techniques/T0889) represent the configuration changes that are transferred to a controller via a program download.",
                "id": "attack-pattern--be69c571-d746-4b1f-bdd0-c0c9817e9068",
                "technique_id": "T0843"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes logs from AD and OWS to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Logging is not tamper-proof.",
                    "Role": "Attacker",
                    "Condition": "Valid if logs can be edited or deleted."
                },
                {
                    "Assumption": "Log access controls are weak.",
                    "Role": "System Administrator",
                    "Condition": "Valid if log management lacks strong access controls."
                },
                {
                    "Assumption": "No redundant logging solutions.",
                    "Role": "IT Security",
                    "Condition": "Valid if logs are not backed up in real-time."
                }
            ],
            "Potential Impact": "Loss of Integrity and challenges in incident investigation.",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Forensic Evasion",
                "Audit Evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Engineers manipulate controller settings but deny the changes for accountability.",
            "Assumptions": [
                {
                    "Assumption": "No robust change management process.",
                    "Role": "System Manager",
                    "Condition": "Valid if change logs are not maintained."
                },
                {
                    "Assumption": "Engineering actions are not properly logged.",
                    "Role": "System Administrator",
                    "Condition": "Valid if activity logging is inadequate."
                },
                {
                    "Assumption": "Limited access controls to EWS.",
                    "Role": "System Administrator",
                    "Condition": "Valid if EWS is accessible without strict controls."
                }
            ],
            "Potential Impact": "Loss of Accountability and Integrity.",
            "MITRE ATT&CK Keywords": [
                "Unauthorized Changes",
                "Access Violation",
                "Pretexting"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators misconfigure process set-point values and blame system malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Set-point changes are not tracked in detail.",
                    "Role": "System Administrator",
                    "Condition": "Valid if detailed audit trails are missing."
                },
                {
                    "Assumption": "Operators have extensive control without oversight.",
                    "Role": "System Manager",
                    "Condition": "Valid if operator actions are not monitored."
                },
                {
                    "Assumption": "Misconfiguration detection mechanisms are weak.",
                    "Role": "System Administrator",
                    "Condition": "Valid if no automatic checks for configuration consistency are in place."
                }
            ],
            "Potential Impact": "Loss of Integrity and Accountability.",
            "MITRE ATT&CK Keywords": [
                "Misconfiguration",
                "Incident Masking",
                "False Reporting"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data exfiltrated through Active Directory due to vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "AD contains operational data.",
                    "Role": "System Manager",
                    "Condition": "Valid if sensitive data is stored on AD."
                },
                {
                    "Assumption": "AD vulnerabilities are not patched.",
                    "Role": "System Administrator",
                    "Condition": "Valid if updates are not regularly applied."
                },
                {
                    "Assumption": "The DCS network has pathways to the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if segmentation is poor."
                }
            ],
            "Potential Impact": "Loss of Confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Data Exfiltration",
                "Directory Traversal",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "External attackers intercept unencrypted communication between DCS and sensors.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption protocols are not used."
                },
                {
                    "Assumption": "Attackers have network access.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network defenses are inadequate."
                },
                {
                    "Assumption": "Sensitive data is transmitted.",
                    "Role": "System Administrator",
                    "Condition": "Valid if critical data flows through the system."
                }
            ],
            "Potential Impact": "Loss of Confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Network Sniffing",
                "Information Interception",
                "Unencrypted Communication"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Stolen time synchronization data from GPS server exposing system activity patterns.",
            "Assumptions": [
                {
                    "Assumption": "Time synchronization data is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if data is transmitted in plaintext."
                },
                {
                    "Assumption": "Attackers can access network traffic.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if security controls are weak."
                },
                {
                    "Assumption": "Time data correlates with system operations.",
                    "Role": "System Administrator",
                    "Condition": "Valid if time stamps can reveal operational details."
                }
            ],
            "Potential Impact": "Loss of Confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Network Sniffing",
                "Unencrypted Traffic"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack on the GPS Server causes loss of synchronization.",
            "Assumptions": [
                {
                    "Assumption": "GPS Server is accessible from the internet.",
                    "Role": "Attacker",
                    "Condition": "Valid if there is no network segmentation."
                },
                {
                    "Assumption": "The server lacks DDoS protection measures.",
                    "Role": "System Administrator",
                    "Condition": "Valid if mitigations are not in place."
                },
                {
                    "Assumption": "Time synchronization is critical for DCS operations.",
                    "Role": "System Manager",
                    "Condition": "Valid if DCS heavily relies on synchronized timing."
                }
            ],
            "Potential Impact": "Loss of Availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Disruption",
                "Network Flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection on DCS Servers causing system unavailability.",
            "Assumptions": [
                {
                    "Assumption": "DCS Servers are vulnerable to known malware threats.",
                    "Role": "Attacker",
                    "Condition": "Valid if servers are unpatched or running outdated software."
                },
                {
                    "Assumption": "Malware can spread through the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses are insufficient."
                },
                {
                    "Assumption": "DCS lacks robust malware detection systems.",
                    "Role": "IT Security",
                    "Condition": "Valid if antimalware solutions are inadequate."
                }
            ],
            "Potential Impact": "Loss of Availability and potentially Integrity.",
            "MITRE ATT&CK Keywords": [
                "Malware Injection",
                "Ransomware",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Loss of Availability",
                "description": "Adversaries may attempt to disrupt essential components or systems to prevent owner and operator from delivering products or services. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay) \n\nAdversaries may leverage malware to delete or encrypt critical data on HMIs, workstations, or databases.\n\nIn the 2021 Colonial Pipeline ransomware incident, pipeline operations were temporally halted on May 7th and were not fully restarted until May 12th. (Citation: Colonial Pipeline Company May 2021)",
                "id": "attack-pattern--b5b9bacb-97f2-4249-b804-47fd44de1f95",
                "technique_id": "T0826"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Network saturation attack on communication channels between DCS Controller and sensors.",
            "Assumptions": [
                {
                    "Assumption": "Network bandwidth is limited.",
                    "Role": "System Designer",
                    "Condition": "Valid if the network is not designed for high loads."
                },
                {
                    "Assumption": "Attackers have access to network entry points.",
                    "Role": "Attacker",
                    "Condition": "Valid if external access points are exposed."
                },
                {
                    "Assumption": "Network monitoring tools are insufficient.",
                    "Role": "IT Security",
                    "Condition": "Valid if there are no effective monitoring systems."
                }
            ],
            "Potential Impact": "Loss of Availability.",
            "MITRE ATT&CK Keywords": [
                "Network Saturation",
                "Bandwidth Exhaustion",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in the Windows operating system used in DCS Servers.",
            "Assumptions": [
                {
                    "Assumption": "Windows servers are not fully patched.",
                    "Role": "System Administrator",
                    "Condition": "Valid if patches are not up-to-date."
                },
                {
                    "Assumption": "Attackers can reach the vulnerable servers.",
                    "Role": "Attacker",
                    "Condition": "Valid if network segmentation is inadequate."
                },
                {
                    "Assumption": "Users have unnecessary administrative privileges.",
                    "Role": "IT Security",
                    "Condition": "Valid if principle of least privilege is not enforced."
                }
            ],
            "Potential Impact": "Loss of Integrity and Confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Operating System Exploits",
                "Patch Management"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Remote code execution on DCS components due to unpatched vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Multiple components are outdated and unpatched.",
                    "Role": "System Administrator",
                    "Condition": "Valid if software updates are not managed effectively."
                },
                {
                    "Assumption": "Attackers identify exposed vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are public and known."
                },
                {
                    "Assumption": "External access points are poorly secured.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network entry points are exposed."
                }
            ],
            "Potential Impact": "Loss of Integrity and potentially Availability.",
            "MITRE ATT&CK Keywords": [
                "Remote Code Execution",
                "Software Exploits",
                "Unpatched Vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker escalates privileges within the network through Active Directory misconfigurations.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Valid if AD permissions are not properly set."
                },
                {
                    "Assumption": "Attackers have initial low-privilege access.",
                    "Role": "Attacker",
                    "Condition": "Valid if initial foothold is acquired."
                },
                {
                    "Assumption": "Administrative controls are weak or insufficient.",
                    "Role": "IT Security",
                    "Condition": "Valid if access monitoring is minimal or absent."
                }
            ],
            "Potential Impact": "Loss of Confidentiality and Integrity.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Directory Traversal",
                "Misconfiguration"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized access to the DCS Controller via compromised AD credentials.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory credentials are compromised.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains access to AD database or successfully performs phishing attack."
                },
                {
                    "Assumption": "AD accounts are used to manage the DCS Controller.",
                    "Role": "System Administrators",
                    "Condition": "System administrators utilize AD accounts for authentication."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is required for accessing the DCS Controller.",
                    "Role": "System Configuration",
                    "Condition": "MFA is not enforced for critical system access."
                }
            ],
            "Potential Impact": "Leads to unauthorized control over refinery operations, resulting in operational disruptions and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "phishing",
                "account manipulation",
                "active directory"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of legitimate OWS commands through network spoofing.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is unencrypted or poorly encrypted.",
                    "Role": "Network Configuration",
                    "Condition": "ENS traffic is not secured with strong encryption methods."
                },
                {
                    "Assumption": "Lack of network monitoring and anomaly detection tools.",
                    "Role": "Security Measures",
                    "Condition": "No robust monitoring for abnormal network activities."
                },
                {
                    "Assumption": "OWS communicates over a network segment accessible to attackers.",
                    "Role": "Network Segmentation",
                    "Condition": "Inadequate network segregation between control systems and other network areas."
                }
            ],
            "Potential Impact": "Results in false commands being executed, potentially leading to data errors, integrity loss, and facility risks.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "network sniffing",
                "injection",
                "command manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Masquerading as the GPS server to manipulate time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "GPS server communications are not authenticated.",
                    "Role": "Device Configuration",
                    "Condition": "No mutual authentication exists between GPS server and DCS components."
                },
                {
                    "Assumption": "Attackers have access to the network where the GPS server resides.",
                    "Role": "Network Security",
                    "Condition": "Insufficient network access controls permit unauthorized access."
                },
                {
                    "Assumption": "Time-sensitive operations are critical for refinery stability.",
                    "Role": "Operational Procedures",
                    "Condition": "Processes are heavily dependent on accurate time synchronization."
                }
            ],
            "Potential Impact": "Causes time discrepancies leading to data integrity issues and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "time manipulation",
                "identity spoofing",
                "network service"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Altering DCS controller settings via an exploited remote code execution (RCE) vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "RCE vulnerabilities in the Windows-based DCS controllers.",
                    "Role": "Technology Vulnerability",
                    "Condition": "Existence of unpatched high-risk vulnerabilities."
                },
                {
                    "Assumption": "Remote access to DCS controllers via corporate network or internet.",
                    "Role": "System Configuration",
                    "Condition": "Remote management features are enabled without proper security."
                },
                {
                    "Assumption": "Insufficient validation checks on command inputs.",
                    "Role": "Software Design",
                    "Condition": "Lack of input sanitization and validation on controller commands."
                }
            ],
            "Potential Impact": "Enables attackers to execute harmful commands, leading to integrity and operational reliability issues.",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "exploitation",
                "command injection",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulating data streams between sensors and the DCS controller to send false information.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication between sensors and DCS controller.",
                    "Role": "Network Design",
                    "Condition": "Communications are not secured with encryption."
                },
                {
                    "Assumption": "Sensors are accessible over the network.",
                    "Role": "Network Access",
                    "Condition": "Network policies allow access to sensor data streams."
                },
                {
                    "Assumption": "No validation mechanisms to verify sensor data integrity.",
                    "Role": "Data Handling",
                    "Condition": "DCS controller does not verify data received from sensors."
                }
            ],
            "Potential Impact": "Leads to incorrect data analysis and potentially unsafe operational adjustments.",
            "MITRE ATT&CK Keywords": [
                "data injection",
                "manipulation",
                "sensor tampering",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modifying historic operation data to mislead analysis and decision-making.",
            "Assumptions": [
                {
                    "Assumption": "Access to Historian database without proper controls.",
                    "Role": "Database Security",
                    "Condition": "Insufficient access controls on historic data storage."
                },
                {
                    "Assumption": "Lack of logging and monitoring on data access.",
                    "Role": "Security Operations",
                    "Condition": "No comprehensive audit trails for data access actions."
                },
                {
                    "Assumption": "Insufficient backup and integrity verification mechanisms.",
                    "Role": "Data Protection",
                    "Condition": "Backups are not frequently checked for integrity or tampering."
                }
            ],
            "Potential Impact": "Results in flawed decisions based on corrupted historical data, affecting future operations.",
            "MITRE ATT&CK Keywords": [
                "data tampering",
                "database manipulation",
                "ICS historian",
                "integrity loss"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Execution of unauthorized commands on OWS with no traceable audit logs.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not robust enough to capture all events.",
                    "Role": "Logging Configuration",
                    "Condition": "Limited or incomplete logging on system activities."
                },
                {
                    "Assumption": "Administrative privileges can be used to clear logs.",
                    "Role": "Access Control",
                    "Condition": "Admins or attackers can erase audit trails."
                },
                {
                    "Assumption": "No real-time monitoring to detect log tampering.",
                    "Role": "Monitoring",
                    "Condition": "Lack of real-time alerts for abnormal log activities."
                }
            ],
            "Potential Impact": "Makes it impossible to trace malicious activities, complicating incident response and remediation.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "auditing evasion",
                "non-repudiation",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "False accusation of operator errors due to tampered system logs.",
            "Assumptions": [
                {
                    "Assumption": "Logs can be edited without detection.",
                    "Role": "System Configuration",
                    "Condition": "Log files are not protected from modification."
                },
                {
                    "Assumption": "No integrity checks for log authenticity.",
                    "Role": "Log Management",
                    "Condition": "Lack of mechanisms to verify logs against tampering."
                },
                {
                    "Assumption": "System logs are accessible to unauthorized users.",
                    "Role": "Access Control",
                    "Condition": "Poor access control policies for log files."
                }
            ],
            "Potential Impact": "Misleads investigations, incorrectly targeting operators and affecting morale and accountability.",
            "MITRE ATT&CK Keywords": [
                "log forgery",
                "data integrity",
                "logging vulnerabilities",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Compromised AD leading to untraceable unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "No MFA enabled for AD access.",
                    "Role": "Authentication Management",
                    "Condition": "Critical systems lack multi-factor authentication."
                },
                {
                    "Assumption": "AD logs are not sufficiently protected or monitored.",
                    "Role": "Log Security",
                    "Condition": "AD log files can be accessed or altered without detection."
                },
                {
                    "Assumption": "Privileged AD accounts can access systems without adequate logging.",
                    "Role": "Privilege Management",
                    "Condition": "High-priority accounts are not monitored comprehensively."
                }
            ],
            "Potential Impact": "Leads to unauthorized actions without auditing, creating serious tracking and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "active directory",
                "audit evasion",
                "authentication bypass",
                "privilege misuse"
            ],
            "mitre_technique": {
                "name": "Domain or Tenant Policy Modification",
                "description": "Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.\n\nModifications to domain or tenant settings may include altering domain Group Policy Objects (GPOs) in Microsoft Active Directory (AD) or changing trust settings for domains, including federation trusts relationships between domains or tenants.\n\nWith sufficient permissions, adversaries can modify domain or tenant policy settings. Since configuration settings for these services apply to a large number of identity resources, there are a great number of potential attacks malicious outcomes that can stem from this abuse. Examples of such abuse include:  \n\n* modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)\n* modifying domain trusts to include an adversary-controlled domain, allowing adversaries to  forge access tokens that will subsequently be accepted by victim domain resources(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks)\n* changing configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\n* adding new, adversary-controlled federated identity providers to identity tenants, allowing adversaries to authenticate as any user managed by the victim tenant (Citation: Okta Cross-Tenant Impersonation 2023)\n\nAdversaries may temporarily modify domain or tenant policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",
                "id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
                "technique_id": "T1484"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data exfiltration via exploiting remote code execution (RCE) vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "RCE vulnerability exists in the controllers or servers.",
                    "Role": "Software Vulnerability",
                    "Condition": "Unpatched high-risk vulnerabilities on critical servers."
                },
                {
                    "Assumption": "Internet facing access to compromised system.",
                    "Role": "Network Exposure",
                    "Condition": "Systems are accessible from the internet without adequate protections."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest or in transit.",
                    "Role": "Data Security",
                    "Condition": "Lack of encryption for sensitive information."
                }
            ],
            "Potential Impact": "Unauthorized data access leads to confidentiality breaches and exposure of operational details.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "remote code execution",
                "confidentiality breach",
                "ICS vulnerability"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of unencrypted sensor data being transmitted.",
            "Assumptions": [
                {
                    "Assumption": "Sensor data transmissions are unencrypted.",
                    "Role": "Data Transmission",
                    "Condition": "Communication between sensors and controllers lacks encryption."
                },
                {
                    "Assumption": "Network traffic can be intercepted by unauthorized entities.",
                    "Role": "Network Security",
                    "Condition": "Poorly monitored networks allow eavesdropping."
                },
                {
                    "Assumption": "No detection mechanisms for data interception or sniffing.",
                    "Role": "Intrusion Detection",
                    "Condition": "Insufficient intrusion detection measures."
                }
            ],
            "Potential Impact": "Leakage of operational data compromises confidentiality and enables detailed attack targeting.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "network sniffing",
                "unencrypted data",
                "confidentiality interception"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to historian data causing leakage of sensitive operational trends.",
            "Assumptions": [
                {
                    "Assumption": "Historian data is not sufficiently protected.",
                    "Role": "Data Protection",
                    "Condition": "Inadequate permissions and encryption for historic data."
                },
                {
                    "Assumption": "Attackers gain access to the network where the Historian is located.",
                    "Role": "Network Security",
                    "Condition": "Weak network defenses permit unauthorized access."
                },
                {
                    "Assumption": "Lack of robust access controls for database management.",
                    "Role": "Access Control",
                    "Condition": "Poor access control policies for database access."
                }
            ],
            "Potential Impact": "Exposure of operational trends and historical data to unauthorized entities compromises confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "historian access",
                "operational data exposure",
                "ICS confidentiality breach"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted DDoS attack on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "Servers are exposed to the internet.",
                    "Role": "Network Exposure",
                    "Condition": "DCS servers have internet-facing interfaces."
                },
                {
                    "Assumption": "Lack of adequate DDoS mitigation.",
                    "Role": "Network Defense",
                    "Condition": "No DDoS protection mechanisms in place."
                },
                {
                    "Assumption": "Critical services are not redundant or load-balanced.",
                    "Role": "System Design",
                    "Condition": "Single points of failure exist without redundancy."
                }
            ],
            "Potential Impact": "Service unavailability leads to operational disruptions and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network flooding",
                "service unavailability",
                "ICS disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious network traffic causing CPU overload on DCS controllers.",
            "Assumptions": [
                {
                    "Assumption": "Controllers have unfiltered network access.",
                    "Role": "Network Monitoring",
                    "Condition": "No network traffic filtering for critical controllers."
                },
                {
                    "Assumption": "Malicious traffic can reach controllers without detection.",
                    "Role": "Security Monitoring",
                    "Condition": "Lack of IDS/IPS to detect malicious network traffic."
                },
                {
                    "Assumption": "Controllers are not designed to handle abnormal traffic loads.",
                    "Role": "System Design",
                    "Condition": "Controllers lack protections against traffic overload."
                }
            ],
            "Potential Impact": "CPU overload hampers controller operations, leading to unavailability and operational hazards.",
            "MITRE ATT&CK Keywords": [
                "traffic overload",
                "CPU exhaustion",
                "ICS controller",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a vulnerability in DCS control software to crash services.",
            "Assumptions": [
                {
                    "Assumption": "Existence of exploitable software vulnerabilities.",
                    "Role": "Software Security",
                    "Condition": "Software contains unpatched vulnerabilities."
                },
                {
                    "Assumption": "Remote access to vulnerable software via network.",
                    "Role": "Network Security",
                    "Condition": "Vulnerable services accessible over the network."
                },
                {
                    "Assumption": "Lack of update and patching mechanisms.",
                    "Role": "System Maintenance",
                    "Condition": "No effective patch management practice."
                }
            ],
            "Potential Impact": "Service crashes cause operational downtime and safety risks in refinery operations.",
            "MITRE ATT&CK Keywords": [
                "service crash",
                "software vulnerability",
                "ICS crash",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of RCE vulnerability to gain SYSTEM-level access on DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "RCE vulnerability is present on the server platform.",
                    "Role": "Platform Security",
                    "Condition": "Unpatched RCE vulnerabilities exist."
                },
                {
                    "Assumption": "Servers are accessible over the internet or corporate network.",
                    "Role": "Network Accessibility",
                    "Condition": "Servers have network exposure allowing for RCE."
                },
                {
                    "Assumption": "No robust privilege management or containment mechanisms.",
                    "Role": "Privilege Management",
                    "Condition": "Lack of privilege containment or separation."
                }
            ],
            "Potential Impact": "Allows attackers to execute commands with SYSTEM privileges, leading to full control and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "RCE",
                "SYSTEM access",
                "privilege escalation",
                "full system control"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege escalation via exploitation of a vulnerable Active Directory configuration.",
            "Assumptions": [
                {
                    "Assumption": "AD is misconfigured allowing for privilege escalation.",
                    "Role": "AD Configuration",
                    "Condition": "Insecure AD configuration exists."
                },
                {
                    "Assumption": "Information is not sufficiently protected from directory enumeration.",
                    "Role": "Information Management",
                    "Condition": "AD allows excessive information retrieval."
                },
                {
                    "Assumption": "No monitoring of unusual AD account activities.",
                    "Role": "Security Monitoring",
                    "Condition": "Lack of alerts for abnormal account activities."
                }
            ],
            "Potential Impact": "Leads to unauthorized access with elevated privileges, compromising data and operational integrity.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "active directory",
                "misconfiguration",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Using phishing to obtain admin credentials for DCS administration.",
            "Assumptions": [
                {
                    "Assumption": "Administrators can be targeted successfully via phishing.",
                    "Role": "User Interaction",
                    "Condition": "Administrators are vulnerable to phishing attempts."
                },
                {
                    "Assumption": "Phishing attempts circumvent existing security protocols.",
                    "Role": "Email Security",
                    "Condition": "Insufficient phishing detection and prevention."
                },
                {
                    "Assumption": "Admin accounts control critical DCS functions.",
                    "Role": "Access Management",
                    "Condition": "Admin accounts have high-level privileges in DCS."
                }
            ],
            "Potential Impact": "Compromised admin accounts permit system access, control, and manipulation activities.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential theft",
                "admin credentials",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Spearphishing Attachment",
                "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
                "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
                "technique_id": "T1566.001"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen AD credentials to impersonate a legitimate user and gain access to DCS components.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid AD credentials",
                    "Role": "Attacker",
                    "Condition": "Credential theft or phishing successful"
                },
                {
                    "Assumption": "AD is integrated with DCS for authentication",
                    "Role": "System Integrators",
                    "Condition": "AD is the primary authentication mechanism"
                },
                {
                    "Assumption": "The system does not have multi-factor authentication",
                    "Role": "System Administrators",
                    "Condition": "Single-factor authentication in place"
                }
            ],
            "Potential Impact": "Unauthorized access to critical system components affecting data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "phishing",
                "account manipulation",
                "network"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS server to provide incorrect time synchronization data to the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the network segment with the GPS server",
                    "Role": "Attacker",
                    "Condition": "Network segmentation controls are weak"
                },
                {
                    "Assumption": "The GPS time is not cross-verified",
                    "Role": "System Administrators",
                    "Condition": "Lack of redundancy or cross-verification for time sources"
                },
                {
                    "Assumption": "GPS time is critical to system operations",
                    "Role": "System Designers",
                    "Condition": "Time synchronization is crucial for operations"
                }
            ],
            "Potential Impact": "Disruption to system operations causing potential incorrect data logging or command execution, impacting availability and integrity.",
            "MITRE ATT&CK Keywords": [
                "network spoofing",
                "time synchronization attack",
                "device manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs communications between DCS controllers and actuators to send false commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept communication channels",
                    "Role": "Attacker",
                    "Condition": "Lack of secure communication protocols"
                },
                {
                    "Assumption": "DCS controllers rely on unverified communications",
                    "Role": "System Designers",
                    "Condition": "No message authentication in place"
                },
                {
                    "Assumption": "Actuators do not verify the source of commands",
                    "Role": "Device Manufacturers",
                    "Condition": "Lack of command validation on actuators"
                }
            ],
            "Potential Impact": "Unauthorized control over refinery operations, impacting both data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "network spoofing",
                "command injection",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the DCS controller to alter operational settings.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained privileged access",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation successful"
                },
                {
                    "Assumption": "Configuration files have inadequate protection",
                    "Role": "System Administrators",
                    "Condition": "Weak file permissions or lack of integrity checks"
                },
                {
                    "Assumption": "Changes are not logged or monitored effectively",
                    "Role": "Security Administrators",
                    "Condition": "Lack of comprehensive logging or SIEM integration"
                }
            ],
            "Potential Impact": "Altered operational settings leading to potential unsafe conditions, impacting both integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "file modification",
                "privilege escalation",
                "ICS"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the Historian system altering stored operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can execute code on the Historian system",
                    "Role": "Attacker",
                    "Condition": "RCE vulnerability exists"
                },
                {
                    "Assumption": "Historian data integrity is not verified",
                    "Role": "System Administrators",
                    "Condition": "No data integrity mechanisms in place"
                },
                {
                    "Assumption": "The modified data influences operational decisions",
                    "Role": "Operators",
                    "Condition": "Reliance on stored data for operations"
                }
            ],
            "Potential Impact": "Compromised historical data affecting trend analysis and operational planning, impacting data integrity.",
            "MITRE ATT&CK Keywords": [
                "code injection",
                "data manipulation",
                "RCE",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the software on operator workstations to display incorrect process values.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the OWS software",
                    "Role": "Attacker",
                    "Condition": "Privileges obtained through exploitation"
                },
                {
                    "Assumption": "Operators rely on displayed values for decisions",
                    "Role": "Operators",
                    "Condition": "Trust in system outputs"
                },
                {
                    "Assumption": "There is no secondary method of value verification",
                    "Role": "System Designers",
                    "Condition": "Lack of redundancy in data verification"
                }
            ],
            "Potential Impact": "Operators are misled, causing potential mishandling of processes, affecting data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "software tampering",
                "display manipulation",
                "ICS",
                "operator workstation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or alters logs on the DCS servers to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative access",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation successful"
                },
                {
                    "Assumption": "Logs are not written to an immutable storage",
                    "Role": "System Administrators",
                    "Condition": "Logs stored locally without WORM mechanisms"
                },
                {
                    "Assumption": "There is no real-time log monitoring",
                    "Role": "Security Administrators",
                    "Condition": "Absence of SIEM or real-time monitoring tools"
                }
            ],
            "Potential Impact": "Loss of forensic evidence, impairing incident response and recovery efforts, impacting auditability and system integrity.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "log deletion",
                "hide traces",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies having sent specific commands due to inadequate logging and monitoring.",
            "Assumptions": [
                {
                    "Assumption": "System does not log user activities comprehensively",
                    "Role": "System Administrators",
                    "Condition": "Inadequate logging policies"
                },
                {
                    "Assumption": "User actions are not tied to specific identifiers",
                    "Role": "System Designers",
                    "Condition": "Lack of user activity tagging"
                },
                {
                    "Assumption": "Operators have ability to disavow actions easily",
                    "Role": "Operators",
                    "Condition": "Weak checks and balances"
                }
            ],
            "Potential Impact": "Difficulty in holding users accountable for actions, impairing system integrity and operational audits.",
            "MITRE ATT&CK Keywords": [
                "activity repudiation",
                "log inadequacy",
                "accountability",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker denies having interacted with the DCS due to gaps in network activity logging.",
            "Assumptions": [
                {
                    "Assumption": "The attacker uses anonymous or misleading access paths",
                    "Role": "Attacker",
                    "Condition": "Use of proxies or anonymization tools"
                },
                {
                    "Assumption": "Network traffic analysis is incomplete",
                    "Role": "Network Administrators",
                    "Condition": "Lack of full-packet capture and analysis"
                },
                {
                    "Assumption": "Logs do not capture source IP addresses accurately",
                    "Role": "System Administrators",
                    "Condition": "Inadequate logging of network sessions"
                }
            ],
            "Potential Impact": "Challenges in attributing actions to specific sources, affecting system integrity and forensics.",
            "MITRE ATT&CK Keywords": [
                "network activity disguising",
                "anonymization",
                "log evasion",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exfiltrates sensitive operational data from the Historian system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the Historian system",
                    "Role": "Attacker",
                    "Condition": "Unauthorized system access"
                },
                {
                    "Assumption": "Sensitive data is stored unencrypted",
                    "Role": "System Administrators",
                    "Condition": "Lack of data encryption"
                },
                {
                    "Assumption": "There are no data exfiltration monitoring mechanisms",
                    "Role": "Security Administrators",
                    "Condition": "Absence of DLP solutions"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, reducing data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "sensitive information",
                "historian",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communications between DCS servers and workstations.",
            "Assumptions": [
                {
                    "Assumption": "The network traffic is not encrypted",
                    "Role": "System Administrators",
                    "Condition": "Lack of secure communication protocols"
                },
                {
                    "Assumption": "The attacker has access to the network",
                    "Role": "Attacker",
                    "Condition": "Weak network segmentation or security measures"
                },
                {
                    "Assumption": "Sensitive information is transmitted in plain text",
                    "Role": "System Designers",
                    "Condition": "No data encryption in transit"
                }
            ],
            "Potential Impact": "Sensitive operational data compromised during transmission, reducing data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "unencrypted traffic",
                "network traffic interception",
                "plain text communication",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks sensitive configuration details about the DCS to external parties.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to critical configuration information",
                    "Role": "Insiders",
                    "Condition": "Access granted for operational needs"
                },
                {
                    "Assumption": "There is no monitoring of insider activities",
                    "Role": "Security Administrators",
                    "Condition": "Lack of user activity monitoring"
                },
                {
                    "Assumption": "Sensitive information is not labeled or protected adequately",
                    "Role": "System Administrators",
                    "Condition": "Lack of data classification and protection"
                }
            ],
            "Potential Impact": "Disclosure of configuration details allowing external attackers to gain insights into system vulnerabilities, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data leakage",
                "configuration information",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker triggers a flood of network traffic to overload the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high-volume traffic",
                    "Role": "Attacker",
                    "Condition": "Access to botnet or sufficient resources"
                },
                {
                    "Assumption": "The DCS servers lack effective network traffic filtering",
                    "Role": "Network Administrators",
                    "Condition": "Absence of DDoS protection measures"
                },
                {
                    "Assumption": "Servers cannot handle traffic spikes adequately",
                    "Role": "System Administrators",
                    "Condition": "Inadequate server capacity or load balancing"
                }
            ],
            "Potential Impact": "Service disruption affecting system availability and operational continuity.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network traffic flooding",
                "service disruption",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in the DCS software to crash critical system components.",
            "Assumptions": [
                {
                    "Assumption": "Software vulnerabilities exist in the DCS",
                    "Role": "System Administrators",
                    "Condition": "Unpatched or outdated software versions"
                },
                {
                    "Assumption": "The attacker can access vulnerable endpoints",
                    "Role": "Attacker",
                    "Condition": "Knowledge or discovery of vulnerable components"
                },
                {
                    "Assumption": "Mitigation measures for known vulnerabilities are not enforced",
                    "Role": "Security Administrators",
                    "Condition": "Lack of timely patch application"
                }
            ],
            "Potential Impact": "Shutdown or unresponsiveness of critical DCS components, affecting system availability and operational safety.",
            "MITRE ATT&CK Keywords": [
                "software vulnerability exploitation",
                "system crash",
                "endpoint targeting",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts the GPS server, causing system-wide time synchronization issues.",
            "Assumptions": [
                {
                    "Assumption": "The GPS server is a single point of failure for time synchronization",
                    "Role": "System Designers",
                    "Condition": "Lack of redundancy in time sources"
                },
                {
                    "Assumption": "DCS relies heavily on precise time synchronization",
                    "Role": "Operators",
                    "Condition": "Dependence on synchronized time for operations"
                },
                {
                    "Assumption": "There is no fallback mechanism for time synchronization",
                    "Role": "System Administrators",
                    "Condition": "Absence of alternate time sources"
                }
            ],
            "Potential Impact": "Disruption in operations due to incorrect time synchronization, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "time synchronization attack",
                "GPS disruption",
                "system-wide impact",
                "ICS"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability to gain administrative control over the DCS servers.",
            "Assumptions": [
                {
                    "Assumption": "Privilege escalation vulnerabilities exist",
                    "Role": "System Administrators",
                    "Condition": "Unpatched or known vulnerabilities"
                },
                {
                    "Assumption": "Actors have initial access at lower privilege levels",
                    "Role": "Attacker",
                    "Condition": "Successful initial system compromise"
                },
                {
                    "Assumption": "Effective access control mechanisms are not in place",
                    "Role": "Security Administrators",
                    "Condition": "Weak RBAC or privilege management"
                }
            ],
            "Potential Impact": "Unauthorized access to critical system controls, affecting both data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "administrative control",
                "vulnerability exploitation",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker injects a malicious script into the EWS, exploiting vulnerabilities to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "The EWS is vulnerable to script injection attacks",
                    "Role": "System Administrators",
                    "Condition": "Inadequate input validation"
                },
                {
                    "Assumption": "The attacker has user access to the EWS",
                    "Role": "Attacker",
                    "Condition": "Compromised user account or access point"
                },
                {
                    "Assumption": "Injected scripts can execute with higher privileges",
                    "Role": "System Designers",
                    "Condition": "Improper privilege separation"
                }
            ],
            "Potential Impact": "Execution of scripts with elevated privileges, compromising system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "script injection",
                "EWS exploitation",
                "elevated privileges",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses hard-coded credentials found in system components to gain high-level access.",
            "Assumptions": [
                {
                    "Assumption": "Hard-coded credentials are present within system components",
                    "Role": "System Developers",
                    "Condition": "Static credentials embedded in code"
                },
                {
                    "Assumption": "The attacker can discover or use these credentials",
                    "Role": "Attacker",
                    "Condition": "Knowledge or discovery of credential locations"
                },
                {
                    "Assumption": "No immediate remediation for discovered hard-coded credentials",
                    "Role": "System Administrators",
                    "Condition": "Absence of credential rotation or fix"
                }
            ],
            "Potential Impact": "Unauthorized high-level access to system components, impacting data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "hard-coded credentials",
                "unauthorized access",
                "system exploitation",
                "ICS"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a legitimate operator to gain unauthorized access to the Operator Workstation (OWS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised the Operator's Active Directory credentials.",
                    "Role": "Attacker",
                    "Condition": "Operator's credentials are weak or obtained via phishing."
                },
                {
                    "Assumption": "The attacker has network access to the DCS environment.",
                    "Role": "Attacker",
                    "Condition": "Corporate network connectivity is secure."
                },
                {
                    "Assumption": "No multi-factor authentication is in place.",
                    "Role": "Administration",
                    "Condition": "Multi-factor authentication is not implemented or enforced."
                }
            ],
            "Potential Impact": "Unauthorized access to system monitoring and control functions.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "spoofing",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "VNC",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
                "id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
                "technique_id": "T1021.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the DCS Controller\u2019s identity to send false commands to actuators.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient knowledge about the network structure and communication protocols.",
                    "Role": "Attacker",
                    "Condition": "Detailed network information is accessible."
                },
                {
                    "Assumption": "The network lacks proper encryption and authentication for controller commands.",
                    "Role": "Network Engineer",
                    "Condition": "Communication between devices and controllers is unencrypted."
                },
                {
                    "Assumption": "The attacker can inject malicious data packets into the network.",
                    "Role": "Attacker",
                    "Condition": "Network segmentation and security controls are weak."
                }
            ],
            "Potential Impact": "Manipulation of refinery operations leading to unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "command injection",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the GPS Server to provide incorrect time synchronization, disrupting the DCS operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can send signals mimicking the GPS Server.",
                    "Role": "Attacker",
                    "Condition": "GPS signal is not authenticated."
                },
                {
                    "Assumption": "The DCS relies heavily on accurate time synchronization from a single GPS Server.",
                    "Role": "System Architect",
                    "Condition": "No redundancy or validation for time signals."
                },
                {
                    "Assumption": "The attacker is able to position themselves close enough to interfere with the GPS signal.",
                    "Role": "Attacker",
                    "Condition": "Physical security around the premises is insufficient."
                }
            ],
            "Potential Impact": "Disruption in communication and control functions dependent on accurate time data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "network",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter process data stored in the Historian to provide misleading trend analysis.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has authorized or unauthorized access to the Historian's database.",
                    "Role": "Attacker/Insider",
                    "Condition": "Weak database security controls."
                },
                {
                    "Assumption": "Data integrity checks are not enforced on historical data.",
                    "Role": "Database Admin",
                    "Condition": "Insufficient data validation processes."
                },
                {
                    "Assumption": "The attacker has knowledge of database structure and schema.",
                    "Role": "Attacker/Insider",
                    "Condition": "Documentation or insider knowledge is available."
                }
            ],
            "Potential Impact": "Corruption of historical data leading to inaccurate decision making.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "database",
                "data corruption",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the settings of the DCS Controller via the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the EWS, either physically or remotely.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are insufficient."
                },
                {
                    "Assumption": "The EWS does not implement stringent access controls or logging.",
                    "Role": "System Admin",
                    "Condition": "Poor access control policies."
                },
                {
                    "Assumption": "The attacker has knowledge of the control settings and their implications.",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or extensive reconnaissance."
                }
            ],
            "Potential Impact": "Potential for manipulation of refinery processes causing operational hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "engineering",
                "device",
                "settings"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the AD configuration to create unauthorized user accounts.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has Admin-level credentials or has achieved privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Credential security is low."
                },
                {
                    "Assumption": "Logging and monitoring for AD changes is not stringent.",
                    "Role": "System Admin",
                    "Condition": "Insufficient monitoring."
                },
                {
                    "Assumption": "The attacker has detailed knowledge of the AD structure.",
                    "Role": "Attacker/Insider",
                    "Condition": "Insider threat or extensive reconnaissance."
                }
            ],
            "Potential Impact": "Unauthorized access creation leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "AD tampering",
                "account",
                "network",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny malicious changes made to the system set-points using their credentials.",
            "Assumptions": [
                {
                    "Assumption": "Detailed access logging is not enforced for all changes.",
                    "Role": "System Admin",
                    "Condition": "Logs are either not comprehensive or not maintained."
                },
                {
                    "Assumption": "Multi-factor authentication is not in use.",
                    "Role": "System Admin",
                    "Condition": "Credential theft is possible via simple passwords."
                },
                {
                    "Assumption": "Change audits are not periodically reviewed.",
                    "Role": "Auditor",
                    "Condition": "Insufficient change management processes."
                }
            ],
            "Potential Impact": "Accountability issues leading to difficulty in tracking the source of the attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "credential theft",
                "change management"
            ],
            "mitre_technique": {
                "name": "Accessibility Features",
                "description": "Windows contains accessibility features that may be launched with a key combination before a user has logged in (for example, when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways because of code integrity enhancements. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced. Examples for both methods:\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1076) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nFor the debugger method on Windows Vista and later as well as Windows Server 2008 and later, for example, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for the accessibility program (e.g., \"utilman.exe\"). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with RDP will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
                "id": "attack-pattern--9b99b83a-1aac-4e29-b975-b374950551a3",
                "technique_id": "T1015"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could erase logs on the Engineering Workstation to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privileges to alter or erase logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation exploits are successful."
                },
                {
                    "Assumption": "Logging mechanisms are not tamper-proof or backed up.",
                    "Role": "System Admin",
                    "Condition": "Logs are stored locally and not secured."
                },
                {
                    "Assumption": "No intrusion detection systems are monitoring log-related activities.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of IDS deployment."
                }
            ],
            "Potential Impact": "Loss of forensic data hindering incident response and recovery.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "tampering",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Disabling Security Tools",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "technique_id": "T1089"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could modify log data to cover up unauthorized changes made to system configurations.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not write-protected or encrypted.",
                    "Role": "System Admin",
                    "Condition": "Weak log management policies."
                },
                {
                    "Assumption": "The attacker has write access to the log files or database.",
                    "Role": "Attacker",
                    "Condition": "Privileges are compromised or not managed effectively."
                },
                {
                    "Assumption": "Log modification is not periodically verified by security audits.",
                    "Role": "Auditor",
                    "Condition": "Lack of regular security audits."
                }
            ],
            "Potential Impact": "Compromised integrity of logs undermining trust in system audits.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "data integrity",
                "audit"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept communication between DCS components to extract sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is unencrypted or uses weak encryption.",
                    "Role": "Network Engineer",
                    "Condition": "Ineffective encryption policies."
                },
                {
                    "Assumption": "The attacker has access to the network traffic either physically or remotely.",
                    "Role": "Attacker",
                    "Condition": "Network segmentation is weak."
                },
                {
                    "Assumption": "Sensitive data is transmitted in plaintext.",
                    "Role": "System Architect",
                    "Condition": "Design fails to encrypt sensitive data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "data interception",
                "confidentiality"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could access unsecured database backups containing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Database backups are not encrypted.",
                    "Role": "Database Admin",
                    "Condition": "Weak backup security policies."
                },
                {
                    "Assumption": "Backup storage is accessible to unauthorized users.",
                    "Role": "Attacker",
                    "Condition": "Inadequate access controls on backup storage."
                },
                {
                    "Assumption": "Identification and logging of backup access is insufficient.",
                    "Role": "System Admin",
                    "Condition": "Lack of proper logging mechanisms."
                }
            ],
            "Potential Impact": "Exposure of critical data compromising business operations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "backup",
                "data breach",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit vulnerabilities in the DCS Servers to access user profile information.",
            "Assumptions": [
                {
                    "Assumption": "DCS Servers are not updated with the latest security patches.",
                    "Role": "System Admin",
                    "Condition": "Ineffective patch management processes."
                },
                {
                    "Assumption": "Exploitable vulnerabilities exist in the deployed software.",
                    "Role": "Attacker",
                    "Condition": "Known vulnerabilities are unaddressed."
                },
                {
                    "Assumption": "The attacker has network access to the servers.",
                    "Role": "Attacker",
                    "Condition": "Weak network security controls."
                }
            ],
            "Potential Impact": "Confidentiality breach through unauthorized access to sensitive user profiles.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerabilities",
                "user profiles",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overload the DCS Controller with high volumes of data, rendering it unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high data traffic directed at the Controller.",
                    "Role": "Attacker",
                    "Condition": "No rate-limiting mechanisms are in place."
                },
                {
                    "Assumption": "The network has insufficient defenses against DoS attacks.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of network defense measures."
                },
                {
                    "Assumption": "Controller software does not handle unexpected data volumes gracefully.",
                    "Role": "Software Developer",
                    "Condition": "Poor software resilience design."
                }
            ],
            "Potential Impact": "Disruption of process control functions affecting refinery operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "high traffic",
                "network",
                "controller"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit known vulnerabilities in the DCS Servers to crash them.",
            "Assumptions": [
                {
                    "Assumption": "Servers are not patched for known vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Ineffective patch management policies."
                },
                {
                    "Assumption": "Vulnerability details are publicly known.",
                    "Role": "Attacker",
                    "Condition": "Known exploits are available."
                },
                {
                    "Assumption": "The attacker has access to exploit the servers.",
                    "Role": "Attacker",
                    "Condition": "Network access to servers is unsecured."
                }
            ],
            "Potential Impact": "Server downtime affecting control and monitoring capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerabilities",
                "server crash",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could disable the GPS Server to prevent time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "No fallback mechanisms exist for time synchronization.",
                    "Role": "System Architect",
                    "Condition": "Lack of redundancy in time synchronization."
                },
                {
                    "Assumption": "DCS components are highly dependent on synchronized time.",
                    "Role": "System Architect",
                    "Condition": "Design reliance on single time source."
                },
                {
                    "Assumption": "The attacker can physically or logically disrupt the GPS Server.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to the server."
                }
            ],
            "Potential Impact": "Disruption in coordination and scheduling of automated processes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GPS",
                "time synchronization",
                "network"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit vulnerabilities in the EWS to gain administrative access to the DCS environment.",
            "Assumptions": [
                {
                    "Assumption": "EWS running vulnerable software with privilege escalation exploit.",
                    "Role": "Attacker",
                    "Condition": "Known vulnerabilities are unpatched."
                },
                {
                    "Assumption": "The attacker has initial access to the EWS.",
                    "Role": "Attacker",
                    "Condition": "Initial point of compromise."
                },
                {
                    "Assumption": "Logging and monitoring are insufficient to detect such activities.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of comprehensive monitoring."
                }
            ],
            "Potential Impact": "Complete control over the DCS environment allowing manipulation of system operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerabilities",
                "administrative access",
                "network"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain administrative rights by exploiting misconfigurations in Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations or weak policies in AD.",
                    "Role": "System Admin",
                    "Condition": "Poor AD management practices."
                },
                {
                    "Assumption": "The attacker has network access to AD.",
                    "Role": "Attacker",
                    "Condition": "AD network access is not restricted."
                },
                {
                    "Assumption": "AD logging and monitoring are inadequate.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of effective log management."
                }
            ],
            "Potential Impact": "Unauthorized privilege escalation granting control over user accounts and resources.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "misconfiguration",
                "Active Directory",
                "network"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in Windows running on the DCS Servers to execute code with SYSTEM privileges.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in Windows OS are not patched.",
                    "Role": "System Admin",
                    "Condition": "Delayed patch management."
                },
                {
                    "Assumption": "Windows OS is susceptible to privilege escalation exploits.",
                    "Role": "Attacker",
                    "Condition": "Identified unpatched exploit."
                },
                {
                    "Assumption": "The attacker has initial access to the server environment.",
                    "Role": "Attacker",
                    "Condition": "Access vulnerability or phishing success."
                }
            ],
            "Potential Impact": "Execution of arbitrary code with highest privileges compromising entire system security.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "Windows",
                "vulnerabilities",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an authorized user and gain access to the DCS via stolen Active Directory credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen user credentials.",
                    "Role": "Attacker",
                    "Condition": "User credentials can be accessed via phishing or other methods."
                },
                {
                    "Assumption": "The attacker can access the network through an external or internal entry point.",
                    "Role": "Attacker",
                    "Condition": "Network access is possible due to misconfiguration or other vulnerabilities."
                },
                {
                    "Assumption": "The Active Directory is not configured to detect and alert on suspicious logins.",
                    "Role": "System Administrator",
                    "Condition": "Advanced alerting and monitoring mechanisms are not in place."
                }
            ],
            "Potential Impact": "Could lead to unauthorized access, data breach, or data tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "active directory",
                "credential access",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Golden Ticket",
                "description": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",
                "id": "attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1",
                "technique_id": "T1558.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a GPS server to provide incorrect time synchronization data, causing disruption in the DCS operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the DCS network.",
                    "Role": "Attacker",
                    "Condition": "The network is exposed through internet-facing interfaces or misconfigurations."
                },
                {
                    "Assumption": "The GPS server is not secured against spoofing attacks.",
                    "Role": "System Administrator",
                    "Condition": "No specific security measures on the GPS server."
                },
                {
                    "Assumption": "The DCS relies on GPS time data for critical functions.",
                    "Role": "System Designer",
                    "Condition": "System design depends on precise time data."
                }
            ],
            "Potential Impact": "Disruption of operations due to incorrect timing, affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "gps server",
                "network",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An intruder uses ARP spoofing to impersonate devices in the DCS network and intercept or alter communications.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the local network.",
                    "Role": "Attacker",
                    "Condition": "Local network access through compromised devices or weak physical security."
                },
                {
                    "Assumption": "Network devices do not implement defenses against ARP spoofing.",
                    "Role": "Network Administrator",
                    "Condition": "No protections such as dynamic ARP inspection or DHCP snooping are in place."
                },
                {
                    "Assumption": "Sensitive data is transmitted within the network without additional encryption.",
                    "Role": "System Architect",
                    "Condition": "Data in transit is not encrypted."
                }
            ],
            "Potential Impact": "Compromise of data integrity and confidentiality, potential interception and tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "arp",
                "network",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the DCS Servers through a known RCE vulnerability in Windows, altering firmware or critical configurations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker finds and exploits a known RCE vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability is unpatched or newly discovered."
                },
                {
                    "Assumption": "The servers are not isolated properly or are reachable from other vulnerable devices.",
                    "Role": "Network Engineer",
                    "Condition": "Network segmentation or isolation is inadequately implemented."
                },
                {
                    "Assumption": "There is no effective monitoring for unauthorized changes.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Lack of comprehensive monitoring and alerting mechanisms."
                }
            ],
            "Potential Impact": "Potential system compromise, leading to unauthorized code execution and possibly full system control.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "remote code execution",
                "windows"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware is introduced into the Historian server, leading to manipulation of historical operation data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has established access to the Historian server.",
                    "Role": "Attacker",
                    "Condition": "Access is gained through phishing, malware, or other insider threats."
                },
                {
                    "Assumption": "The Historian does not have robust integrity checks on stored data.",
                    "Role": "Data Manager",
                    "Condition": "Lack of regular data verification processes."
                },
                {
                    "Assumption": "Antivirus or endpoint protection solutions are not up-to-date or capable of detecting the specific malware.",
                    "Role": "IT Administrator",
                    "Condition": "Outdated or inadequate endpoint protection."
                }
            ],
            "Potential Impact": "Corruption of historical data, impacting decision-making and trend analysis.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "historian",
                "malware",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely modifies configurations on the DCS Controller, leading to incorrect commands sent to actuators.",
            "Assumptions": [
                {
                    "Assumption": "Remote configuration interfaces are exposed without adequate protection.",
                    "Role": "System Architect",
                    "Condition": "Weak or insufficient interface security controls."
                },
                {
                    "Assumption": "The attacker has credentials or exploits a vulnerability to alter configurations.",
                    "Role": "Attacker",
                    "Condition": "Credentials obtained through phishing or other methods, or exploiting vulnerabilities."
                },
                {
                    "Assumption": "There are no multi-factor authentication mechanisms for critical actions.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies do not require additional authentication layers."
                }
            ],
            "Potential Impact": "Could cause operational failures or unsafe conditions, affecting system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration change",
                "actuators",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized user accesses the DCS engineering workstation and changes settings, but later denies involvement.",
            "Assumptions": [
                {
                    "Assumption": "Logs and audit trails do not contain sufficient detail or are not tamper-evident.",
                    "Role": "System Administrator",
                    "Condition": "Logging configuration is minimal or easily manipulated."
                },
                {
                    "Assumption": "The user has insufficient authentication and authorization controls.",
                    "Role": "System Architect",
                    "Condition": "Weak authentication or insufficient access control measures."
                },
                {
                    "Assumption": "The organization lacks strong non-repudiation mechanisms.",
                    "Role": "Security Policy Maker",
                    "Condition": "Lack of measures to ensure actions can be definitively attributed to individuals."
                }
            ],
            "Potential Impact": "Compromised system settings causing operational issues, and challenges in incident response due to inability to attribute actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit logs",
                "settings change",
                "engineering workstation"
            ],
            "mitre_technique": {
                "name": "Engineering Workstation Compromise",
                "description": "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "id": "attack-pattern--d614a9cf-18eb-4800-81e4-ab8ddf0baa73",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies altering process values in the DCS, claiming unauthorized access, but there are insufficient logs to prove otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Detailed activity logging and time stamps are insufficient.",
                    "Role": "System Architect",
                    "Condition": "Logs are not detailed or timestamped reliably."
                },
                {
                    "Assumption": "Operator actions are not monitored in real-time.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Real-time monitoring mechanisms are not in place."
                },
                {
                    "Assumption": "There is no validation on data changes to ensure proper authorization.",
                    "Role": "Data Manager",
                    "Condition": "Changes are implemented without validation checks."
                }
            ],
            "Potential Impact": "Difficulties in attributing actions and resolving incidents, potential process disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "process values",
                "audit log insufficiency",
                "operator"
            ],
            "mitre_technique": {
                "name": "Loss of View",
                "description": "Adversaries may cause a sustained or permanent loss of view where the ICS equipment will require local, hands-on operator intervention; for instance, a restart or manual operation. By causing a sustained reporting or visibility loss, the adversary can effectively hide the present state of operations. This loss of view can occur without affecting the physical processes themselves. (Citation: Corero) (Citation: Michael J. Assante and Robert M. Lee) (Citation: Tyson Macaulay)",
                "id": "attack-pattern--138979ba-0430-4de6-a128-2fc0b056ba36",
                "technique_id": "T0829"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An engineer makes unauthorized changes to the DCS and later denies responsibility due to lack of sufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not capture engineer activities adequately.",
                    "Role": "System Administrator",
                    "Condition": "Logging policies are weak or inadequate."
                },
                {
                    "Assumption": "Engineering workstations lack robust user authentication.",
                    "Role": "System Architect",
                    "Condition": "Authentication controls on workstations are weak."
                },
                {
                    "Assumption": "Audit logs are not protected from tampering.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Log files are not tamper-evident or adequately protected."
                }
            ],
            "Potential Impact": "Unauthorised configuration changes and lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "engineering changes",
                "log tampering",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data from the Historian server is exfiltrated due to a security flaw.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has found and exploited a flaw in the server software.",
                    "Role": "Attacker",
                    "Condition": "Flaw is unpatched and the attacker has the necessary knowledge and tools."
                },
                {
                    "Assumption": "Data encryption is not implemented for stored or transmitted Historian data.",
                    "Role": "System Architect",
                    "Condition": "Data protection policies are not enforced."
                },
                {
                    "Assumption": "The network is not adequately monitored for unusual data transfer activities.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of anomaly detection within network monitoring practices."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, potentially compromising operational secrets.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "historian server",
                "data exfiltration",
                "security flaw"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the Active Directory and accesses user account information leading to exposure of user credentials.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is vulnerable and lacks robust access controls.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control measures and configurations."
                },
                {
                    "Assumption": "User credentials are stored without strong encryption.",
                    "Role": "System Architect",
                    "Condition": "Encryption mechanisms for stored credentials are weak or absent."
                },
                {
                    "Assumption": "Incident response mechanisms are not proactive in detecting and mitigating such breaches.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Insufficient or inactive incident response plans."
                }
            ],
            "Potential Impact": "Compromise of user credentials leading to further unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "active directory",
                "user credentials",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Hooking",
                "description": "Windows processes often leverage application programming interface (API) functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions. \n\nHooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs. (Citation: Microsoft Hook Overview) (Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored. (Citation: Elastic Process Injection July 2017) (Citation: Adlice Software IAT Hooks Oct 2014) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow. (Citation: Elastic Process Injection July 2017) (Citation: HighTech Bridge Inline Hooking Sept 2011) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), adversaries may use hooking to load and execute malicious code within the context of another process, masking the execution while also allowing access to the process's memory and possibly elevated privileges. Installing hooking mechanisms may also provide Persistence via continuous invocation when the functions are called through normal use.\n\nMalicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access. (Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017)\n\nHooking is commonly utilized by [Rootkit](https://attack.mitre.org/techniques/T1014)s to conceal files, processes, Registry keys, and other objects in order to hide malware and associated behaviors. (Citation: Symantec Windows Rootkits)",
                "id": "attack-pattern--66f73398-8394-4711-85e5-34c8540b22a5",
                "technique_id": "T1179"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A phishing attack leads to an operator revealing sensitive DCS information through social engineering.",
            "Assumptions": [
                {
                    "Assumption": "An operator is successfully targeted and deceived by a phishing attempt.",
                    "Role": "Attacker",
                    "Condition": "Phishing email bypasses email security filters and is convincing."
                },
                {
                    "Assumption": "Operators are not adequately trained on cybersecurity awareness.",
                    "Role": "Training Coordinator",
                    "Condition": "Lack of regular cybersecurity training and awareness programs."
                },
                {
                    "Assumption": "Sensitive information can be readily accessed and disclosed by individual operators.",
                    "Role": "System Architect",
                    "Condition": "Insufficient access control to sensitive information."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive process and operational information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "phishing",
                "social engineering",
                "operator"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack, overwhelming the DCS Controllers and causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a high volume of traffic to target the controllers.",
                    "Role": "Attacker",
                    "Condition": "Availability of sufficient resources to generate traffic."
                },
                {
                    "Assumption": "The network lacks redundancy and failover mechanisms.",
                    "Role": "Network Engineer",
                    "Condition": "Single points of failure exist in network design."
                },
                {
                    "Assumption": "Monitoring and mitigation mechanisms for DoS attacks are inadequate.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "No or insufficient DoS attack detection and mitigation measures."
                }
            ],
            "Potential Impact": "Severe disruption of DCS operations, leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "dos attack",
                "dcs controller",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malware attack is designed to trigger deliberate application crashes on the Operator Workstations by exploiting software vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Software vulnerabilities exist and are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Exploits for known or zero-day vulnerabilities are available."
                },
                {
                    "Assumption": "Workstations are not equipped with robust endpoint defense mechanisms.",
                    "Role": "IT Administrator",
                    "Condition": "Endpoint protection measures are weak or outdated."
                },
                {
                    "Assumption": "Network segmentation between workstations is inadequate, allowing malware spread.",
                    "Role": "Network Engineer",
                    "Condition": "Poor network segmentation or security controls."
                }
            ],
            "Potential Impact": "Operator Workstations become unavailable, leading to loss of monitoring and control capabilities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "operator workstation",
                "software vulnerabilities"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A network-based DCS component is targeted with a flood of malformed packets designed to consume resources and disrupt service.",
            "Assumptions": [
                {
                    "Assumption": "Network components are susceptible to packet overload and malformed packets.",
                    "Role": "Attacker",
                    "Condition": "Devices or applications are vulnerable to crafted network traffic."
                },
                {
                    "Assumption": "There is no rate limiting or anomaly detection at the network perimeter.",
                    "Role": "Network Administrator",
                    "Condition": "Network perimeter defenses are improper or absent."
                },
                {
                    "Assumption": "Critical DCS components lack redundancy and failover support.",
                    "Role": "System Architect",
                    "Condition": "Critical elements do not have failover mechanisms."
                }
            ],
            "Potential Impact": "System component unavailability, potentially leading to broader operational impact.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network flood",
                "resource exhaustion",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability on the Active Directory, escalating privileges to gain administrative access on the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability exists in the Active Directory system.",
                    "Role": "Attacker",
                    "Condition": "AD is vulnerable and patches are absent."
                },
                {
                    "Assumption": "The attacker has baseline user access or physical access to a compromised node.",
                    "Role": "Attacker",
                    "Condition": "Initial access through stolen credentials or insider threats."
                },
                {
                    "Assumption": "Weaknesses in access control policies allow privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Access control and role-based security policies are not properly implemented."
                }
            ],
            "Potential Impact": "Complete control over the DCS network, unauthorized configuration changes, and potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "active directory",
                "privilege escalation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages code execution vulnerabilities in the Engineering Workstation to elevate privileges and manipulate DCS configurations.",
            "Assumptions": [
                {
                    "Assumption": "Code execution vulnerabilities on the Engineering Workstation are unpatched.",
                    "Role": "Attacker",
                    "Condition": "Known or zero-day vulnerabilities are not mitigated."
                },
                {
                    "Assumption": "Initial access is achieved through phishing or other user-targeted attacks.",
                    "Role": "Attacker",
                    "Condition": "Attacker successfully lures a user."
                },
                {
                    "Assumption": "Monitoring mechanisms that detect privilege escalation attempts are insufficient.",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Lack of proactive monitoring for such events."
                }
            ],
            "Potential Impact": "Unauthorised changes to DCS configurations, impacting system integrity and stability.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "engineering workstation",
                "code execution",
                "configuration manipulation"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
                "id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
                "technique_id": "T1021"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of weak access controls on the Operator Workstations allows an attacker to gain higher privileges and control process set-point values.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms are in place for Operator Workstations.",
                    "Role": "System Architect",
                    "Condition": "Authentication policies are weak or easily bypassed."
                },
                {
                    "Assumption": "Privileged actions lack adequate oversight and fail to require multi-factor authentication.",
                    "Role": "System Administrator",
                    "Condition": "Actions are performed without additional verification."
                },
                {
                    "Assumption": "Insufficient segregation of duties permits widespread access.",
                    "Role": "System Designer",
                    "Condition": "Design does not enforce the principle of least privilege."
                }
            ],
            "Potential Impact": "Unauthorized modifications to control parameters, leading to potential safety and operational issues.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "operator workstation",
                "privilege escalation",
                "set-point control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an operator's credentials to gain unauthorized access to the DCS system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the corporate network.",
                    "Role": "Attacker",
                    "Condition": "Corporate Network Access"
                },
                {
                    "Assumption": "The attacker's target account uses weak or predictable passwords.",
                    "Role": "Operator",
                    "Condition": "Weak Passwords"
                },
                {
                    "Assumption": "The attacker can access unencrypted network traffic.",
                    "Role": "Attacker",
                    "Condition": "Insufficient Network Security"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information and potential disruption of system operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "network access",
                "operator workstation"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a trusted GPS Server and supply incorrect time synchronization data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the DCS network.",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "The DCS system does not validate GPS data authenticity.",
                    "Role": "DCS System",
                    "Condition": "Lack of Data Validation"
                },
                {
                    "Assumption": "The attacker possesses knowledge of the network's architecture.",
                    "Role": "Attacker",
                    "Condition": "Insider Knowledge"
                }
            ],
            "Potential Impact": "Disruption of system operations and potential safety risks due to incorrect time data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "gps",
                "time synchronization",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof Active Directory (AD) authentication to gain unauthorized access to user accounts.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the domain controller or AD service.",
                    "Role": "Attacker",
                    "Condition": "Access to AD"
                },
                {
                    "Assumption": "Authentication measures are insufficient to detect spoofing.",
                    "Role": "AD Service",
                    "Condition": "Weak Authentication"
                },
                {
                    "Assumption": "The attacker possesses or can capture valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential Capture"
                }
            ],
            "Potential Impact": "Unauthorized access to the system, potential data tampering, and loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "active directory",
                "authentication",
                "user accounts"
            ],
            "mitre_technique": {
                "name": "DNS",
                "description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",
                "id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
                "technique_id": "T1071.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter historical data in the Historian database to manipulate trend analysis.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the Historian database.",
                    "Role": "Attacker",
                    "Condition": "Write Access"
                },
                {
                    "Assumption": "Data integrity checks are inadequate or absent.",
                    "Role": "DCS System",
                    "Condition": "Lack of Integrity Checks"
                },
                {
                    "Assumption": "The attacker has insider knowledge or access credentials.",
                    "Role": "Insider",
                    "Condition": "Insider Access"
                }
            ],
            "Potential Impact": "Altered or inaccurate trend analysis, leading to incorrect operational decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "historian",
                "database",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could inject malicious code into the DCS Controller through engineering workstations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to an Engineering Workstation.",
                    "Role": "Attacker",
                    "Condition": "Workstation Access"
                },
                {
                    "Assumption": "Access controls on engineering workstations are insufficient.",
                    "Role": "DCS System",
                    "Condition": "Weak Access Controls"
                },
                {
                    "Assumption": "The attacker can upload unverified code to the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "Lack of Code Verification"
                }
            ],
            "Potential Impact": "Potential system malfunction, disruption of refinery operations, or safety risks.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "dcs controller",
                "engineering workstation"
            ],
            "mitre_technique": {
                "name": "Engineering Workstation Compromise",
                "description": "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "id": "attack-pattern--d614a9cf-18eb-4800-81e4-ab8ddf0baa73",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify sensor input data to the DCS Controller, leading to incorrect system commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and alter sensor data.",
                    "Role": "Attacker",
                    "Condition": "Network Interception"
                },
                {
                    "Assumption": "Sensor data transmission lacks encryption.",
                    "Role": "DCS System",
                    "Condition": "Unencrypted Transmission"
                },
                {
                    "Assumption": "The DCS Controller does not perform validation on sensor data.",
                    "Role": "DCS Controller",
                    "Condition": "No Data Validation"
                }
            ],
            "Potential Impact": "Incorrect system operation and potential for unsafe operating conditions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "sensor data",
                "dcs controller",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies making critical changes to process set-point values without sufficient logging to prove otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient or non-existent.",
                    "Role": "DCS System",
                    "Condition": "Lack of Logging"
                },
                {
                    "Assumption": "Operators have the ability to make significant changes unlogged.",
                    "Role": "Operator",
                    "Condition": "Unlogged Changes"
                },
                {
                    "Assumption": "No traceability of user actions in the system.",
                    "Role": "DCS System",
                    "Condition": "No Traceability"
                }
            ],
            "Potential Impact": "Lack of accountability and potential for unauthorized changes going undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "process set-point",
                "operator actions"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An engineer denies uploading a potentially harmful configuration change to the controller without sufficient digital evidence.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or monitored.",
                    "Role": "DCS System",
                    "Condition": "Lack of Monitoring"
                },
                {
                    "Assumption": "Engineers can upload configurations without validation.",
                    "Role": "Engineer",
                    "Condition": "Lack of Validation"
                },
                {
                    "Assumption": "Logs do not contain enough detail to trace actions.",
                    "Role": "DCS System",
                    "Condition": "Insufficient Logging"
                }
            ],
            "Potential Impact": "Potential system compromise and disruption of operations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "logging",
                "controller"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could manipulate log files to cover traces of unauthorized actions within the system.",
            "Assumptions": [
                {
                    "Assumption": "Log files can be accessed and edited by unauthorized users.",
                    "Role": "Attacker",
                    "Condition": "Log Access"
                },
                {
                    "Assumption": "There are no mechanisms for detecting log tampering.",
                    "Role": "DCS System",
                    "Condition": "No Tamper Detection"
                },
                {
                    "Assumption": "Logs are not secured or write-protected.",
                    "Role": "DCS System",
                    "Condition": "Unsecured Logs"
                }
            ],
            "Potential Impact": "Cover-up of malicious activities and hindrance of forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log files",
                "unauthorized actions",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmitted between sensors and the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted.",
                    "Role": "DCS System",
                    "Condition": "Unencrypted Data"
                },
                {
                    "Assumption": "The attacker has the ability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "Data security protocols are not enforced.",
                    "Role": "DCS System",
                    "Condition": "Lack of Protocols"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted data",
                "network traffic",
                "sensor"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the Historian database and exfiltrates sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the Historian database.",
                    "Role": "Attacker",
                    "Condition": "Database Access"
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "DCS System",
                    "Condition": "Unencrypted Data"
                },
                {
                    "Assumption": "Access controls and monitoring are weak or absent.",
                    "Role": "DCS System",
                    "Condition": "Weak Access Controls"
                }
            ],
            "Potential Impact": "Breach of data confidentiality and potential leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "historian",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities to eavesdrop on AD authentication processes, intercepting credentials.",
            "Assumptions": [
                {
                    "Assumption": "AD authentication traffic is unencrypted.",
                    "Role": "DCS System",
                    "Condition": "Unencrypted Authentication"
                },
                {
                    "Assumption": "The attacker has the ability to intercept network communications.",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                },
                {
                    "Assumption": "Authentication mechanisms do not enforce secure connections.",
                    "Role": "AD Service",
                    "Condition": "Insecure Authentication"
                }
            ],
            "Potential Impact": "Potential compromise of user credentials and unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "active directory",
                "authentication",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with traffic, overwhelming the DCS servers and disrupting operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Network Flooding Capability"
                },
                {
                    "Assumption": "The network lacks sufficient DDoS protection mechanisms.",
                    "Role": "DCS System",
                    "Condition": "Insufficient DDoS Protection"
                },
                {
                    "Assumption": "The DCS servers are unable to handle excessive load.",
                    "Role": "DCS System",
                    "Condition": "Server Capacity"
                }
            ],
            "Potential Impact": "Disruption of system availability and operation.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network traffic",
                "dcs server",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the GPS Server causing it to malfunction and disrupt time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit known vulnerabilities in the GPS Server.",
                    "Role": "Attacker",
                    "Condition": "Exploit Knowledge"
                },
                {
                    "Assumption": "The GPS Server lacks necessary security patches.",
                    "Role": "DCS System",
                    "Condition": "Unpatched System"
                },
                {
                    "Assumption": "No alternative time synchronization mechanisms are in place.",
                    "Role": "DCS System",
                    "Condition": "No Alternate Synchronization"
                }
            ],
            "Potential Impact": "Disruption of system operations and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "gps server",
                "vulnerability",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Artificial Intelligence",
                "description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI)\n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing](https://attack.mitre.org/techniques/T1566)/[Phishing for Information](https://attack.mitre.org/techniques/T1598) campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities](https://attack.mitre.org/techniques/T1587). AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)) malicious scripts and payloads.(Citation: OpenAI-CTI)\n",
                "id": "attack-pattern--0cc222f5-c3ff-48e6-9f52-3314baf9d37e",
                "technique_id": "T1588.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker triggers a vulnerability, causing the DCS Controller to crash and halting refinery operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified a critical vulnerability in the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability Knowledge"
                },
                {
                    "Assumption": "The DCS Controller remains vulnerable to known exploits.",
                    "Role": "DCS System",
                    "Condition": "Unpatched Vulnerability"
                },
                {
                    "Assumption": "No redundant systems are in place for failover.",
                    "Role": "DCS System",
                    "Condition": "Lack of Redundancy"
                }
            ],
            "Potential Impact": "Complete halt of refinery operations and significant downtime.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "dcs controller",
                "crash",
                "refinery operations"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the Windows OS on an Engineering Workstation to gain SYSTEM privileges.",
            "Assumptions": [
                {
                    "Assumption": "The Engineering Workstation runs a vulnerable version of Windows OS.",
                    "Role": "DCS System",
                    "Condition": "Vulnerable OS"
                },
                {
                    "Assumption": "The attacker can execute code on the Engineering Workstation.",
                    "Role": "Attacker",
                    "Condition": "Code Execution Capability"
                },
                {
                    "Assumption": "Security patches are not up to date.",
                    "Role": "DCS System",
                    "Condition": "Unpatched System"
                }
            ],
            "Potential Impact": "Unauthorized access with SYSTEM-level privileges, potential for significant system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "windows os",
                "engineering workstation",
                "system privileges"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting insufficient file name parameter validation in Genian NAC.",
            "Assumptions": [
                {
                    "Assumption": "The system uses Genian NAC with the identified vulnerability.",
                    "Role": "DCS System",
                    "Condition": "Use of Vulnerable NAC"
                },
                {
                    "Assumption": "The attacker can send crafted payloads to the NAC.",
                    "Role": "Attacker",
                    "Condition": "Payload Delivery Capability"
                },
                {
                    "Assumption": "Security measures do not detect or block the exploit.",
                    "Role": "DCS System",
                    "Condition": "Lack of Security Measures"
                }
            ],
            "Potential Impact": "Gain of SYSTEM privileges on all connected nodes, potentially leading to widespread system control.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "genian nac",
                "file validation",
                "system control"
            ],
            "mitre_technique": {
                "name": "Masquerade File Type",
                "description": "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header\u2019s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)",
                "id": "attack-pattern--208884f1-7b83-4473-ac22-4e1cf6c41471",
                "technique_id": "T1036.008"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a command injection vulnerability in ssh2 before version 1.4.0 to escalate privileges on the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "DCS utilizes the ssh2 library below version 1.4.0.",
                    "Role": "DCS System",
                    "Condition": "Vulnerable Library"
                },
                {
                    "Assumption": "The attacker can interact with the ssh2 module.",
                    "Role": "Attacker",
                    "Condition": "Interaction Capability"
                },
                {
                    "Assumption": "No mitigation measures are in place for command injection.",
                    "Role": "DCS System",
                    "Condition": "Lack of Mitigation"
                }
            ],
            "Potential Impact": "Gain of elevated privileges and potential command execution across the DCS network.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "command injection",
                "ssh2",
                "dcs network"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized user to gain access to the DCS through compromised AD credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid AD credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Credentials are not protected by multi-factor authentication."
                },
                {
                    "Assumption": "The DCS system relies solely on AD for user authentication.",
                    "Role": "System Designer",
                    "Condition": "No additional authentication checks are implemented."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential control over system operations.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "phishing",
                "active directory",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofing the DCS Controller to communicate false information to the sensors and actuators.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the communication protocol used between the DCS Controller and other components.",
                    "Role": "Attacker",
                    "Condition": "Communication protocol information is not sufficiently secured."
                },
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Lack of encryption in internal communications."
                }
            ],
            "Potential Impact": "Incorrect operational commands leading to potential safety and operational risks.",
            "MITRE ATT&CK Keywords": [
                "network traffic manipulation",
                "protocol spoofing",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the GPS server to send incorrect time synchronization signals to the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network and tools to intercept and spoof GPS signals.",
                    "Role": "Attacker",
                    "Condition": "GPS signals are not authenticated or validated."
                },
                {
                    "Assumption": "The DCS relies solely on the GPS server for time synchronization.",
                    "Role": "System Designer",
                    "Condition": "No alternate time sources or validation."
                }
            ],
            "Potential Impact": "Desynchronization of system clocks, leading to potential data integrity issues and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "gps spoofing",
                "time synchronization",
                "network desynchronization"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on DCS servers to alter operational parameters.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the configuration files.",
                    "Role": "Attacker",
                    "Condition": "Access controls are insufficient or bypassed."
                },
                {
                    "Assumption": "Configuration files are not integrity-checked.",
                    "Role": "System Administrator",
                    "Condition": "Lack of integrity validation mechanisms."
                }
            ],
            "Potential Impact": "Incorrect operational settings leading to unsafe operating conditions and potential equipment damage.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "file manipulation",
                "inadequate access control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious data into the historian database to manipulate trend analysis records.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to write to the historian database.",
                    "Role": "Attacker",
                    "Condition": "Historian access controls are compromised."
                },
                {
                    "Assumption": "Data integrity checks are not performed on the historian inputs.",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity validation and monitoring."
                }
            ],
            "Potential Impact": "Misleading trend analysis, leading to incorrect operational decisions and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "data injection",
                "database manipulation",
                "historian data tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware on the DCS Controller to introduce malicious behavior.",
            "Assumptions": [
                {
                    "Assumption": "The DCS Controller's firmware update process is not secured.",
                    "Role": "Attacker",
                    "Condition": "Firmware updates are not authenticated."
                },
                {
                    "Assumption": "Access to the DCS Controller is possible without physical security breaches.",
                    "Role": "System Administrator",
                    "Condition": "Remote access capability to the controller."
                }
            ],
            "Potential Impact": "Altered control logic leading to unsafe operations, equipment damage, or system failures.",
            "MITRE ATT&CK Keywords": [
                "firmware tampering",
                "device manipulation",
                "unauthorized firmware updates"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies initiating configuration changes by manipulating system logs on the engineering workstation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to edit or delete system logs.",
                    "Role": "Attacker",
                    "Condition": "Logs are not adequately protected or monitored."
                },
                {
                    "Assumption": "Logging mechanisms lack integrity checks.",
                    "Role": "System Designer",
                    "Condition": "No cryptographic integrity validation for logs."
                }
            ],
            "Potential Impact": "Lack of accountability and traceability for actions performed on the system, hindering forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "repudiation",
                "audit log tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies historical records in the historian to hide unauthorized changes made to the system.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has write access to historical records.",
                    "Role": "Attacker",
                    "Condition": "Historian access controls are compromised."
                },
                {
                    "Assumption": "Data integrity mechanisms are not enforced on historical records.",
                    "Role": "System Administrator",
                    "Condition": "Lack of integrity validation for historical data."
                }
            ],
            "Potential Impact": "Compromised data integrity and traceability, reducing trust in historical data and hindering investigative efforts.",
            "MITRE ATT&CK Keywords": [
                "historian data manipulation",
                "data tampering",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes system logs after performing malicious activities to avoid detection.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access and modify or delete log files.",
                    "Role": "Attacker",
                    "Condition": "Log files are not secured against unauthorized access."
                },
                {
                    "Assumption": "Log retention policies and backup mechanisms are inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust log retention and backup policies."
                }
            ],
            "Potential Impact": "Critical loss of evidence required for forensic analysis and tracking the origin of the attacks.",
            "MITRE ATT&CK Keywords": [
                "log deletion",
                "repudiation",
                "evidence destruction"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive operational data is exfiltrated by an attacker through a compromised DCS server.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to DCS server data.",
                    "Role": "Attacker",
                    "Condition": "DCS server access controls are compromised."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest or in transit.",
                    "Role": "System Administrator",
                    "Condition": "Lack of encryption mechanisms for sensitive data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, potentially leading to competitive intelligence or targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "information disclosure",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between sensors and the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between sensors and the DCS Controller is unencrypted.",
                    "Role": "Attacker",
                    "Condition": "Communications lack encryption."
                },
                {
                    "Assumption": "The attacker can access the network to intercept traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access controls are bypassed."
                }
            ],
            "Potential Impact": "Potential leakage of operational data and capability to perform further targeted attacks based on intercepted information.",
            "MITRE ATT&CK Keywords": [
                "network traffic capture",
                "information disclosure",
                "unencrypted communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to user credentials by capturing credentials transmitted over the network.",
            "Assumptions": [
                {
                    "Assumption": "User credentials are transmitted in plain text over the network.",
                    "Role": "Attacker",
                    "Condition": "Authentication mechanisms do not use secure channels."
                },
                {
                    "Assumption": "The attacker has network access to intercept such traffic.",
                    "Role": "Attacker",
                    "Condition": "Network security controls are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized access to the system using captured user credentials, potentially leading to further exploitation.",
            "MITRE ATT&CK Keywords": [
                "credential interception",
                "network sniffing",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with traffic, causing disruption in communication between DCS components.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to generate a large volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Insufficient rate-limiting and network protection mechanisms."
                },
                {
                    "Assumption": "Network infrastructure lacks redundancy and failover mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust network design."
                }
            ],
            "Potential Impact": "Disruption of communication and potential downtime of critical control and monitoring systems.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "network disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed packets to the DCS Controller, causing a crash or malfunction.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows the communication protocol and packet structure used by the DCS Controller.",
                    "Role": "Attacker",
                    "Condition": "Protocol and packet structure information is not secured."
                },
                {
                    "Assumption": "The DCS Controller lacks robust input validation and error-handling mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Insufficient validation and error handling."
                }
            ],
            "Potential Impact": "System crash or malfunction, leading to potential loss of control over refinery operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "packet manipulation",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the GPS server with requests, disrupting time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a large volume of requests to the GPS server.",
                    "Role": "Attacker",
                    "Condition": "Lack of rate limiting and abuse protection for the GPS server."
                },
                {
                    "Assumption": "The DCS network relies heavily on a single GPS server for time synchronization.",
                    "Role": "System Designer",
                    "Condition": "No redundancy in time synchronization sources."
                }
            ],
            "Potential Impact": "Desynchronization of system clocks, causing potential data integrity issues and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "time synchronization"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in the DCS server software to escalate privileges to an administrative level.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified an unpatched vulnerability.",
                    "Role": "Attacker",
                    "Condition": "The system is running vulnerable software versions."
                },
                {
                    "Assumption": "The system lacks up-to-date patches and security measures.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate patch management procedures."
                }
            ],
            "Potential Impact": "Full administrative access to the system, allowing complete control over DCS operations and data.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "software vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weak permission settings to gain higher privileges on the engineering workstation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has initial access to the workstation.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls and permission settings."
                },
                {
                    "Assumption": "User accounts with elevated privileges are not properly managed.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate user account management policies."
                }
            ],
            "Potential Impact": "Higher privileges on the engineering workstation, enabling modification of critical configuration settings.",
            "MITRE ATT&CK Keywords": [
                "permission bypass",
                "privilege escalation",
                "engineering workstation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits misconfigured AD settings to elevate privileges within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "Active Directory is not configured with the principle of least privilege.",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured roles and permission settings."
                },
                {
                    "Assumption": "The attacker has user-level access.",
                    "Role": "Attacker",
                    "Condition": "Initial access to a compromised user account."
                }
            ],
            "Potential Impact": "Elevated privileges across the network, allowing extensive control over resources and operations.",
            "MITRE ATT&CK Keywords": [
                "active directory",
                "privilege escalation",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an engineer's credentials to gain access to the Engineering Workstation (EWS) using Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "The attacker's network has access to the AD authentication process.",
                    "Role": "Attacker",
                    "Condition": "Valid when corporate network is compromised."
                },
                {
                    "Assumption": "Proper logging and monitoring are not in place for AD events.",
                    "Role": "Network Administrator",
                    "Condition": "Valid when AD security logs are not reviewed regularly."
                }
            ],
            "Potential Impact": "Unauthorized access to critical configuration settings.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "active directory",
                "spoofing",
                "engineering workstation"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts network traffic and pretends to be the GPS Server to provide incorrect time synchronization.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and insert packets on the network.",
                    "Role": "Attacker",
                    "Condition": "Valid when network traffic is not encrypted."
                },
                {
                    "Assumption": "There is no secondary verification for time sources within the DCS.",
                    "Role": "System Designer",
                    "Condition": "Valid when single GPS server provides time synchronization."
                }
            ],
            "Potential Impact": "Process disruptions due to incorrect time data.",
            "MITRE ATT&CK Keywords": [
                "network",
                "spoofing",
                "time synchronization",
                "gps"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing to gain an AD credential of an operator and access the Operator Workstation (OWS).",
            "Assumptions": [
                {
                    "Assumption": "Phishing protections like email filtering are not in place or insufficient.",
                    "Role": "Security Team",
                    "Condition": "Valid when phishing emails bypass defenses."
                },
                {
                    "Assumption": "Users are susceptible to phishing attacks.",
                    "Role": "Operators",
                    "Condition": "Valid when training on phishing is infrequent."
                }
            ],
            "Potential Impact": "Manipulation of process set-point values.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential access",
                "operator workstation",
                "active directory"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits an RCE vulnerability in the DCS Server to deploy malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access to the DCS Server.",
                    "Role": "Attacker",
                    "Condition": "Valid when segmentation is weak."
                },
                {
                    "Assumption": "DCS Server has unpatched vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Valid when patch management is not enforced."
                }
            ],
            "Potential Impact": "Corruption of collected sensor data and command instructions.",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "vulnerability",
                "dcs server",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies configuration files on the Historian server to alter recorded data.",
            "Assumptions": [
                {
                    "Assumption": "The Historian server does not have file integrity monitoring enabled.",
                    "Role": "System Admin",
                    "Condition": "Valid when file changes are not logged or monitored."
                },
                {
                    "Assumption": "Attackers have sufficient privileges to modify the Historian.",
                    "Role": "Attacker",
                    "Condition": "Valid when access control policies are weak."
                }
            ],
            "Potential Impact": "Invalid historical data analysis impacts process optimizations.",
            "MITRE ATT&CK Keywords": [
                "historian",
                "data tampering",
                "configuration files",
                "file integrity"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the EWS and alters the controller settings.",
            "Assumptions": [
                {
                    "Assumption": "Access control on EWS is inadequate.",
                    "Role": "Network Administrator",
                    "Condition": "Valid when privileged accounts are not restricted properly."
                },
                {
                    "Assumption": "Engineering workstations have exploitable vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Valid when workstations are not regularly updated or patched."
                }
            ],
            "Potential Impact": "Compromised controller settings lead to unsafe operating conditions.",
            "MITRE ATT&CK Keywords": [
                "engineering workstation",
                "tampering",
                "controller settings",
                "access control"
            ],
            "mitre_technique": {
                "name": "Disable Crypto Hardware",
                "description": "Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5",
                "technique_id": "T1600.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes log files on the DCS server to cover tracks after unauthorized changes.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored locally without sufficient access controls.",
                    "Role": "System Administrator",
                    "Condition": "Valid when log protection mechanisms are weak."
                },
                {
                    "Assumption": "There is no secure, external logging mechanism in place.",
                    "Role": "Security Admin",
                    "Condition": "Valid when log forwarding is not used."
                }
            ],
            "Potential Impact": "Difficulty in detecting and attributing malicious activities.",
            "MITRE ATT&CK Keywords": [
                "logs",
                "repudiation",
                "dcs server",
                "cover tracks"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses stolen credentials to perform actions on the OWS and denies responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Account access events are not monitored adequately.",
                    "Role": "System Admin",
                    "Condition": "Valid when lacking effective logging and monitoring."
                },
                {
                    "Assumption": "Credentials can be used without second-factor authentication.",
                    "Role": "User Account Manager",
                    "Condition": "Valid when systems rely only on passwords."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions to the actual perpetrator.",
            "MITRE ATT&CK Keywords": [
                "stolen credentials",
                "operator workstation",
                "repudiation",
                "multifactor authentication"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits a vulnerability to execute unauthorized actions on the Active Directory server and later denies the actions.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in the AD server remain unpatched.",
                    "Role": "System Admin",
                    "Condition": "Valid when patch management policies are not followed."
                },
                {
                    "Assumption": "Audit logs for AD are not thoroughly reviewed or protected.",
                    "Role": "Security Admin",
                    "Condition": "Valid when monitoring practices are inadequate."
                }
            ],
            "Potential Impact": "Obfuscation of changes and actions taken within the AD environment.",
            "MITRE ATT&CK Keywords": [
                "active directory",
                "unauthorized actions",
                "vulnerability",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Rogue Domain Controller",
                "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
                "id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "T1207"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses a vulnerability in the EWS to extract sensitive configuration files.",
            "Assumptions": [
                {
                    "Assumption": "The EWS has exploitable vulnerabilities for information extraction.",
                    "Role": "Attacker",
                    "Condition": "Valid when system updates and patches are not current."
                },
                {
                    "Assumption": "Sensitive files are stored without adequate encryption.",
                    "Role": "System Admin",
                    "Condition": "Valid when encryption policies are not enforced."
                }
            ],
            "Potential Impact": "Exposure of sensitive configuration data leading to further exploitation.",
            "MITRE ATT&CK Keywords": [
                "engineering workstation",
                "information disclosure",
                "configuration files",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted network traffic to capture monitoring data from the DCS server.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Valid when encryption protocols are not enforced."
                },
                {
                    "Assumption": "Traffic monitoring tools are inadequate to detect interceptors.",
                    "Role": "Security Team",
                    "Condition": "Valid when there is a lack of network monitoring solutions."
                }
            ],
            "Potential Impact": "Breach of confidential operational data.",
            "MITRE ATT&CK Keywords": [
                "network traffic",
                "information disclosure",
                "dcs server",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the Historian database and extracts operational trends and patterns.",
            "Assumptions": [
                {
                    "Assumption": "Historian database access controls are weak.",
                    "Role": "Database Administrator",
                    "Condition": "Valid when inadequate user permission management."
                },
                {
                    "Assumption": "Sensitive data within the Historian is not encrypted.",
                    "Role": "System Admin",
                    "Condition": "Valid when data encryption is not applied."
                }
            ],
            "Potential Impact": "Compromise of sensitive trend analysis data.",
            "MITRE ATT&CK Keywords": [
                "historian",
                "database access",
                "information disclosure",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the DCS Controller with malicious traffic to disrupt communication with sensors.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid when network traffic controls are insufficient."
                },
                {
                    "Assumption": "Intrusion detection systems are not properly configured.",
                    "Role": "Security Admin",
                    "Condition": "Valid when IDS/IPS tools are not tuned."
                }
            ],
            "Potential Impact": "Loss of sensor data and process control information.",
            "MITRE ATT&CK Keywords": [
                "network",
                "denial of service",
                "dcs controller",
                "traffic flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the GPS Server causing time-sync failure across the network.",
            "Assumptions": [
                {
                    "Assumption": "The GPS Server has exposed vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid when server patches are not applied timely."
                },
                {
                    "Assumption": "Dependence on a single time-sync source.",
                    "Role": "System Designer",
                    "Condition": "Valid when redundant time-sync sources are not used."
                }
            ],
            "Potential Impact": "Disruption in time-dependent operations throughout the DCS.",
            "MITRE ATT&CK Keywords": [
                "gps server",
                "denial of service",
                "time synchronization",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a ransomware attack on the DCS Servers, making critical operating data unavailable.",
            "Assumptions": [
                {
                    "Assumption": "Endpoint security is inadequate to prevent malware execution.",
                    "Role": "Security Team",
                    "Condition": "Valid when endpoints lack robust security measures."
                },
                {
                    "Assumption": "Data backups are not properly maintained or accessible for recovery.",
                    "Role": "Operations Team",
                    "Condition": "Valid when backup policies are not adhered to."
                }
            ],
            "Potential Impact": "Unavailability of critical DCS operational data, strangling refinery operations.",
            "MITRE ATT&CK Keywords": [
                "ransomware",
                "dcs server",
                "malware",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability on the OWS to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Operating system vulnerabilities exist on OWS.",
                    "Role": "System Admin",
                    "Condition": "Valid when OWS is not updated regularly."
                },
                {
                    "Assumption": "User accounts with minimal access privileges are insufficiently isolated.",
                    "Role": "User Account Manager",
                    "Condition": "Valid when access control policies are weak."
                }
            ],
            "Potential Impact": "Unauthorized administrative-level access to operator functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "operator workstation",
                "vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a user account on the AD to gain additional privileges within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "User roles and privileges within AD are not properly managed.",
                    "Role": "User Account Manager",
                    "Condition": "Valid when access rights are not regularly reviewed."
                },
                {
                    "Assumption": "There is no multifactor authentication for privilege escalation.",
                    "Role": "Security Admin",
                    "Condition": "Valid when enhanced authentication measures are absent."
                }
            ],
            "Potential Impact": "Compromised control over DCS operations and settings.",
            "MITRE ATT&CK Keywords": [
                "active directory",
                "privilege escalation",
                "dcs network",
                "user account"
            ],
            "mitre_technique": {
                "name": "Permission Groups Discovery",
                "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
                "id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
                "technique_id": "T1069"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a remote code execution vulnerability in the Historian to escalate privileges across other interconnected systems.",
            "Assumptions": [
                {
                    "Assumption": "The Historian's remote code execution vulnerabilities are unpatched.",
                    "Role": "System Admin",
                    "Condition": "Valid when patch updates are delayed."
                },
                {
                    "Assumption": "Interconnected systems share administrative roles/configurations.",
                    "Role": "System Designer",
                    "Condition": "Valid when network segmentation and isolation practices are not robust."
                }
            ],
            "Potential Impact": "Extended control over DCS network and potential manipulation of operational data.",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "historian",
                "elevation of privilege",
                "network security"
            ],
            "mitre_technique": {
                "name": "Data Historian Compromise",
                "description": "Adversaries may compromise and gain control of a data historian to gain a foothold into the control system environment. Access to a data historian may be used to learn stored database archival and analysis information on the control system. A dual-homed data historian may provide adversaries an interface from the IT environment to the OT environment. \n\nDragos has released an updated analysis on CrashOverride that outlines the attack from the ICS network breach to payload delivery and execution.  (Citation: Industroyer - Dragos - 201810) The report summarized that CrashOverride represents a new application of malware, but relied on standard intrusion techniques. In particular, new artifacts include references to a Microsoft Windows Server 2003 host, with a SQL Server. Within the ICS environment, such a database server can act as a data historian. Dragos noted a device with this role should be \"expected to have extensive connections\" within the ICS environment. Adversary activity leveraged database capabilities to perform reconnaissance, including directory queries and network connectivity checks.\n\nPermissions Required: Administrator\n\nContributors: Joe Slowik - Dragos",
                "id": "attack-pattern--50d3222f-7550-4a3c-94e1-78cb6c81d064",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to valid network credentials through phishing and poses as a legitimate user via Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can successfully trick a user into providing credentials.",
                    "Role": "Attacker",
                    "Condition": "The target user falls for the phishing attack."
                },
                {
                    "Assumption": "The system does not enforce multi-factor authentication (MFA).",
                    "Role": "System Administrator",
                    "Condition": "MFA is not enabled."
                },
                {
                    "Assumption": "Active Directory does not detect and block unusual login locations or behaviors.",
                    "Role": "System Administrator",
                    "Condition": "AD security monitoring is insufficient."
                }
            ],
            "Potential Impact": "Unauthorized access leading to data breaches, data tampering, and potential disruption of operations.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential access",
                "Active Directory",
                "network access"
            ],
            "mitre_technique": {
                "name": "Domain Account",
                "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code>on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.(Citation: CrowdStrike StellarParticle January 2022)  ",
                "id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
                "technique_id": "T1087.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS server to send incorrect time synchronization data to the DCS network components.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network or a way to interfere with GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Network or physical access to GPS equipment."
                },
                {
                    "Assumption": "The GPS server does not validate or authenticate time sources.",
                    "Role": "System Administrator",
                    "Condition": "Weak time source validation and authentication."
                },
                {
                    "Assumption": "There is no secondary time synchronization method to cross-verify the GPS time.",
                    "Role": "System Designer",
                    "Condition": "No redundant time synchronization."
                }
            ],
            "Potential Impact": "Incorrect operation scheduling, leading to process disruptions and potential safety hazards due to misalignment of event times.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "time injection",
                "GPS",
                "network manipulation"
            ],
            "mitre_technique": {
                "name": "Location Identification",
                "description": "Adversaries may perform location identification using device data to inform operations and targeted impact for attacks. Location identification data can come in a number of forms, including geographic location, location relative to other control system devices, time zone, and current time. An adversary may use an embedded global positioning system (GPS) module in a device to figure out the physical coordinates of a device. NIST SP800-82 recommends that devices utilize GPS or another location determining mechanism to attach appropriate timestamps to log entries (Citation: Guidance - NIST SP800-82). While this assists in logging and event tracking, an adversary could use the underlying positioning mechanism to determine the general location of a device. An adversary can also infer the physical location of serially connected devices by using serial connection enumeration. \n\nAn adversary attempt to attack and cause Impact could potentially affect other control system devices in close proximity. Device local-time and time-zone settings can also provide adversaries a rough indicator of device location, when specific geographic identifiers cannot be determined from the system.",
                "id": "attack-pattern--7374ab87-0782-41f8-b415-678c0950bb2a",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses spoofed IP packets to impersonate DCS controllers and send malicious commands to actuators.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access and can inject IP packets.",
                    "Role": "Attacker",
                    "Condition": "Network segmentation is weak or compromised."
                },
                {
                    "Assumption": "DCS controllers and actuators do not have mutual authentication in the communication protocol.",
                    "Role": "System Architect",
                    "Condition": "Lack of mutual authentication."
                },
                {
                    "Assumption": "Network monitoring does not detect unusual traffic patterns or command sequences.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network monitoring."
                }
            ],
            "Potential Impact": "Malicious commands could cause unsafe operating conditions, equipment damage, or operational downtime.",
            "MITRE ATT&CK Keywords": [
                "IP spoofing",
                "command injection",
                "DCS",
                "network communication"
            ],
            "mitre_technique": {
                "name": "Rogue Master",
                "description": "Adversaries may setup a rogue master to leverage control server functions to communicate with outstations. A rogue master can be used to send legitimate control messages to other control system devices, affecting processes in unintended ways. It may also be used to disrupt network communications by capturing and receiving the network traffic meant for the actual master. Impersonating a master may also allow an adversary to avoid detection. \n\nIn the case of the 2017 Dallas Siren incident, adversaries used a rogue master to send command messages to the 156 distributed sirens across the city, either through a single rogue transmitter with a strong signal, or using many distributed repeaters. (Citation: Bastille April 2017) (Citation: Zack Whittaker April 2017)",
                "id": "attack-pattern--b14395bd-5419-4ef4-9bd8-696936f509bb",
                "technique_id": "T0848"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a known vulnerability in the DCS server to modify system configurations and tamper with sensor data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker identifies a known vulnerability with an existing exploit.",
                    "Role": "Attacker",
                    "Condition": "Publicly available exploit code."
                },
                {
                    "Assumption": "The DCS server is not patched with the latest security updates.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or missing security updates."
                },
                {
                    "Assumption": "Intrusion detection systems do not monitor or detect unusual configuration changes.",
                    "Role": "Security Team",
                    "Condition": "Weak monitoring of configuration changes."
                }
            ],
            "Potential Impact": "Compromised sensor data integrity, leading to faulty decision-making and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "exploitation",
                "tampering",
                "sensor data",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with admin privileges modifies engineering workstation configurations to disable important safety checks.",
            "Assumptions": [
                {
                    "Assumption": "An insider has the necessary admin permissions.",
                    "Role": "Insider Threat",
                    "Condition": "Admin-level access is granted to the insider."
                },
                {
                    "Assumption": "Configuration changes are not logged or monitored closely.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging and monitoring."
                },
                {
                    "Assumption": "There is no separation of duties or checks to prevent single-point changes.",
                    "Role": "System Designer",
                    "Condition": "Lack of enforced separation of duties."
                }
            ],
            "Potential Impact": "Compromised system integrity and increased risk of system failures or unsafe operations.",
            "MITRE ATT&CK Keywords": [
                "admin privilege",
                "insider threat",
                "configuration tampering",
                "safety checks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters the command data between the DCS controller and actuators to cause unsafe operating conditions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept and modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access and tools for interception."
                },
                {
                    "Assumption": "The communication channel between the controller and actuators is not encrypted or authenticated.",
                    "Role": "System Architect",
                    "Condition": "Unencrypted and unauthenticated communication."
                },
                {
                    "Assumption": "Network monitoring tools do not detect tampered communication.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of effective network monitoring."
                }
            ],
            "Potential Impact": "Malicious commands can cause unsafe operations, equipment damage, and potentially hazardous conditions leading to safety risks.",
            "MITRE ATT&CK Keywords": [
                "communication interception",
                "tampering",
                "actuator commands",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker gains unauthorized access and performs actions without leaving logs or traces, making it difficult to attribute malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can bypass logging mechanisms or clear logs.",
                    "Role": "Attacker",
                    "Condition": "Weak or vulnerable logging systems."
                },
                {
                    "Assumption": "Audit trails are not periodically reviewed or backed up.",
                    "Role": "System Administrator",
                    "Condition": "Infrequent audit reviews and backups."
                },
                {
                    "Assumption": "Logs are stored on compromised systems that can be tampered with.",
                    "Role": "Security Team",
                    "Condition": "Logs are not securely stored."
                }
            ],
            "Potential Impact": "Increased difficulty in incident response, forensic analysis, and attributing the attack, leading to prolonged remediation time.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "audit evasion",
                "unauthorized access",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider manipulates logs on the EWS to cover up unauthorized configuration changes or tampering actions.",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileges to access and alter logs.",
                    "Role": "Insider Threat",
                    "Condition": "Log access permissions granted to insider."
                },
                {
                    "Assumption": "Log alterations are not instantly flagged or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Weak monitoring of log integrity."
                },
                {
                    "Assumption": "Configuration changes are not cross-verified with an independent log source.",
                    "Role": "Security Team",
                    "Condition": "No independent log verification."
                }
            ],
            "Potential Impact": "Tampered logs lead to missed detection of unauthorized actions, compromising system integrity and audit reliability.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "insider threat",
                "unauthorized actions",
                "audit evasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker utilizes valid credentials but anonymous connections to execute commands, making it difficult to track the source of actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential theft or compromise."
                },
                {
                    "Assumption": "Anonymous connections are allowed or difficult to trace.",
                    "Role": "System Architect",
                    "Condition": "Insufficient control over connection anonymity."
                },
                {
                    "Assumption": "Command execution logs do not capture detailed source information.",
                    "Role": "System Administrator",
                    "Condition": "Non-detailed logging."
                }
            ],
            "Potential Impact": "Actions are unattributable, delaying detection and response, potentially leading to extended periods of unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "command execution",
                "anonymous connections",
                "repudiation",
                "credential compromise"
            ],
            "mitre_technique": {
                "name": "Indirect Command Execution",
                "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
                "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
                "technique_id": "T1202"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the DCS server to extract sensitive operational data and refinery performance metrics.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit the vulnerability remotely.",
                    "Role": "Attacker",
                    "Condition": "Accessibility of the vulnerable service remotely."
                },
                {
                    "Assumption": "Sensitive data is not encrypted or sufficiently protected.",
                    "Role": "Data Custodian",
                    "Condition": "Weak or no encryption."
                },
                {
                    "Assumption": "Data access control mechanisms are insufficient to prevent unauthorized access.",
                    "Role": "System Administrator",
                    "Condition": "Weak access controls."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data, compromising data confidentiality and potentially providing competitive or strategic advantages to adversaries.",
            "MITRE ATT&CK Keywords": [
                "data extraction",
                "vulnerability exploitation",
                "operational data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Theft of Operational Information",
                "description": "Adversaries may steal operational information on a production environment as a direct mission outcome for personal gain or to inform future operations. This information may include design documents, schedules, rotational data, or similar artifacts that provide insight on operations.    In the Bowman Dam incident, adversaries probed systems for operational data. (Citation: Mark Thompson March 2016) (Citation: Danny Yadron December 2015)",
                "id": "attack-pattern--b7e13ee8-182c-4f19-92a4-a88d7d855d54",
                "technique_id": "T0882"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised historian server leads to unauthorized access and exfiltration of long-term operational data stored for trend analysis.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access through a compromised system.",
                    "Role": "Attacker",
                    "Condition": "Historian server vulnerability or weak protection."
                },
                {
                    "Assumption": "Long-term data is stored unprotected or insufficiently encrypted.",
                    "Role": "Data Custodian",
                    "Condition": "Weak data protection."
                },
                {
                    "Assumption": "Monitoring of data access patterns and anomalies is insufficient.",
                    "Role": "Security Team",
                    "Condition": "Poor anomaly detection on data access."
                }
            ],
            "Potential Impact": "Confidentiality of historical operation data compromised, which could reveal sensitive process information and operational habits.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "historian server",
                "long-term data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communication between DCS controllers and sensors, gaining access to real-time operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to network path to intercept traffic."
                },
                {
                    "Assumption": "The communication protocol between controllers and sensors lacks encryption.",
                    "Role": "System Architect",
                    "Condition": "Lack of encrypted communication."
                },
                {
                    "Assumption": "Network monitoring tools do not detect and alert on interception attempts.",
                    "Role": "Network Administrator",
                    "Condition": "No active monitoring of intercepted traffic."
                }
            ],
            "Potential Impact": "Operational data confidentiality compromised, allowing an attacker to monitor and potentially manipulate real-time data flow.",
            "MITRE ATT&CK Keywords": [
                "network interception",
                "unencrypted communication",
                "real-time data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A remote attacker exploits a vulnerability in the DCS servers to perform a distributed denial of service (DDoS) attack, overwhelming the servers and causing them to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable services are exposed to the internet.",
                    "Role": "Attacker",
                    "Condition": "Publicly accessible vulnerabilities."
                },
                {
                    "Assumption": "There are insufficient protections against DDoS attacks, such as rate-limiting or traffic filtering.",
                    "Role": "System Administrator",
                    "Condition": "Lack of DDoS mitigation measures."
                },
                {
                    "Assumption": "The network infrastructure cannot efficiently handle large volumes of malicious traffic.",
                    "Role": "Network Administrator",
                    "Condition": "Network is not optimized for handling high traffic loads."
                }
            ],
            "Potential Impact": "Unavailability of the DCS servers, causing interruptions in refinery operations and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "vulnerability exploitation",
                "server unavailability",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious software installed on the EWS by an attacker repeatedly crashes critical system services, preventing engineers from accessing and controlling the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The EWS is vulnerable to malware installation.",
                    "Role": "Attacker",
                    "Condition": "Successful delivery and execution of malware."
                },
                {
                    "Assumption": "Critical system services do not have failover mechanisms or redundancy.",
                    "Role": "System Designer",
                    "Condition": "Lack of service failover and redundancy."
                },
                {
                    "Assumption": "The EWS is not adequately protected by endpoint security solutions.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient endpoint protection."
                }
            ],
            "Potential Impact": "Disruption of engineering capabilities, potentially leading to loss of control over the DCS and increased safety risks.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "system crash",
                "endpoint security",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Screen Capture",
                "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
                "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
                "technique_id": "T1113"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker corrupts the GPS server's time synchronization data, causing desynchronization of DCS components and operational delays.",
            "Assumptions": [
                {
                    "Assumption": "The GPS server data can be altered or corrupted by the attacker.",
                    "Role": "Attacker",
                    "Condition": "Accessible and alterable GPS server data."
                },
                {
                    "Assumption": "There is no alternative method to verify the accuracy of time data in the DCS.",
                    "Role": "System Architect",
                    "Condition": "No redundant time synchronization verification."
                },
                {
                    "Assumption": "The system relies heavily on accurate time synchronization for operational decisions.",
                    "Role": "System Designer",
                    "Condition": "Strong dependency on time synchronization."
                }
            ],
            "Potential Impact": "Operational desynchronization leading to process inefficiencies, potential safety risks, and reduced system availability.",
            "MITRE ATT&CK Keywords": [
                "time manipulation",
                "GPS corruption",
                "DCS desynchronization",
                "operational disruption"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
                "technique_id": "T1565.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in Active Directory to escalate privileges from a regular user account to an administrative account, gaining control over the DCS environment.",
            "Assumptions": [
                {
                    "Assumption": "A vulnerability exists in Active Directory that allows privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Identifiable and exploitable AD vulnerability."
                },
                {
                    "Assumption": "There are insufficient restrictions on modifying user roles and permissions.",
                    "Role": "System Administrator",
                    "Condition": "Weak role modification controls."
                },
                {
                    "Assumption": "Advanced monitoring and detection systems are not in place or are ineffective at detecting anomalous privilege escalations.",
                    "Role": "Security Team",
                    "Condition": "Ineffective monitoring and detection."
                }
            ],
            "Potential Impact": "Full administrative control over the DCS environment, leading to potential data breaches, data tampering, and disruption of operations.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "Active Directory",
                "control takeover",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider uses their existing privileges to modify access controls and grant themselves higher privileges within the EWS, bypassing normal approval processes.",
            "Assumptions": [
                {
                    "Assumption": "The insider has sufficient initial privileges to modify access controls.",
                    "Role": "Insider Threat",
                    "Condition": "Initial privileged access."
                },
                {
                    "Assumption": "Access control modifications are not verified by another party or automated system.",
                    "Role": "System Administrator",
                    "Condition": "Unverified access control changes."
                },
                {
                    "Assumption": "Access logs are not adequately monitored to detect unauthorized privilege changes.",
                    "Role": "Security Team",
                    "Condition": "Insufficient log monitoring."
                }
            ],
            "Potential Impact": "Unrestricted access to sensitive components and data, leading to potential misuse, data corruption, and unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "access control modification",
                "privilege escalation",
                "EWS"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains control of the DCS servers through a privilege escalation vulnerability in Windows, allowing them to perform any actions as a system administrator.",
            "Assumptions": [
                {
                    "Assumption": "There is a privilege escalation vulnerability present in the Windows operating system.",
                    "Role": "Attacker",
                    "Condition": "Known or zero-day vulnerability."
                },
                {
                    "Assumption": "DCS servers are accessible and vulnerable to exploitation.",
                    "Role": "System Administrator",
                    "Condition": "Exposed and vulnerable DCS servers."
                },
                {
                    "Assumption": "There is no timely application of patches and security updates to mitigate these vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delayed patch and update management."
                }
            ],
            "Potential Impact": "Complete administrative access to the DCS servers, leading to unauthorized control, potential sabotage, and data breaches.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "Windows vulnerability",
                "DCS",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate user's credentials to access the DCS through Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained compromised credentials",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker's phishing attempt or credential stuffing is successful"
                },
                {
                    "Assumption": "Active Directory has not been adequately configured with multifactor authentication",
                    "Role": "System Administrator",
                    "Condition": "Valid if multifactor authentication is disabled or improperly implemented"
                },
                {
                    "Assumption": "There is a lack of real-time monitoring on Active Directory login attempts,",
                    "Role": "Security Monitoring Team",
                    "Condition": "Valid if the SIEM (Security Information and Event Management) is not actively monitoring or poorly configured"
                }
            ],
            "Potential Impact": "Unauthorized access to the DCS system leading to potential unauthorized changes and system disruption.",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Spoofing",
                "Authentication Bypass",
                "User Account Compromise"
            ],
            "mitre_technique": {
                "name": "Remote Desktop Protocol",
                "description": "Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS). (Citation: TechNet Remote Desktop Services) There are other implementations and third-party tools that provide graphical access [Remote Services](https://attack.mitre.org/techniques/T1021) similar to RDS.\n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1015) technique for Persistence. (Citation: Alperovitch Malware)\n\nAdversaries may also perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session and prompted with a question. With System permissions and using Terminal Services Console, <code>c:\\windows\\system32\\tscon.exe [session number to be stolen]</code>, an adversary can hijack a session without the need for credentials or prompts to the user. (Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions. (Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in RedSnarf. (Citation: Kali Redsnarf)",
                "id": "attack-pattern--51dea151-0898-4a45-967c-3ebee0420484",
                "technique_id": "T1076"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing GPS Server signals to provide incorrect time synchronization within the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a device capable of broadcasting GPS signals",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to necessary equipment"
                },
                {
                    "Assumption": "The GPS Server lacks authentication mechanisms to validate time signals",
                    "Role": "System Administrator",
                    "Condition": "Valid if the GPS Server accepts signals without verification"
                },
                {
                    "Assumption": "The DCS system relies solely on the GPS Server for time synchronization",
                    "Role": "System Engineer",
                    "Condition": "Valid if there is no alternative time synchronization method implemented"
                }
            ],
            "Potential Impact": "Disruption of coordinated operations within the DCS due to incorrect time data impacting system responses.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Time Synchronization",
                "Network Protocol Manipulation",
                "GPS"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an operator station to send false commands to the DCS Controller.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic between operator stations and the DCS Controller is not encrypted",
                    "Role": "Network Engineer",
                    "Condition": "Valid if encryption protocols are not used or improperly configured"
                },
                {
                    "Assumption": "Operator stations connect to the DCS Controller over a potentially insecure network",
                    "Role": "System Administrator",
                    "Condition": "Valid if network segmentation and security measures are inadequate"
                },
                {
                    "Assumption": "Lack of mutual authentication between devices, allowing attacker to impersonate an operator station",
                    "Role": "System Enginner",
                    "Condition": "Valid if secure device authentication protocols are not implemented"
                }
            ],
            "Potential Impact": "Unauthorized commands could lead to unsafe operational changes, potentially compromising safety and efficiency.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "DCS Controller",
                "Operator Station",
                "Command Injection"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with access to the Active Directory could modify user permissions to grant themselves elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained administrative credentials or compromised an admin account",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains access through phishing or another method"
                },
                {
                    "Assumption": "Lack of monitoring and alerting for changes in user permissions within Active Directory",
                    "Role": "System Administrator",
                    "Condition": "Valid if changes to user permissions are not logged or reviewed"
                },
                {
                    "Assumption": "Current access permissions and roles are not periodically reviewed or audited",
                    "Role": "Security Team",
                    "Condition": "Valid if there are no regular audits or reviews of user permissions"
                }
            ],
            "Potential Impact": "Unauthorized access across the system, leading to increased risk of data tampering or system disruption.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Active Directory",
                "Privilege Escalation",
                "User Permissions"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could deploy malware to the DCS Servers, modifying critical system files.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access through an unpatched vulnerability",
                    "Role": "Attacker",
                    "Condition": "Valid if a known or zero-day vulnerability is exploited"
                },
                {
                    "Assumption": "DCS Servers are not running up-to-date antivirus or malware detection tools",
                    "Role": "System Administrator",
                    "Condition": "Valid if security tools are outdated or not functioning"
                },
                {
                    "Assumption": "There is limited network segmentation within the DCS network",
                    "Role": "Network Engineer",
                    "Condition": "Valid if the network architecture does not isolate critical components"
                }
            ],
            "Potential Impact": "Compromise of data integrity and potential system disruptions due to corrupted system files.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Malware Deployment",
                "System Files",
                "DCS Servers",
                "File Modification"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter Historical data within the Historian to mislead system performance analysis.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the Historian database",
                    "Role": "Attacker",
                    "Condition": "Valid if legitimate credentials or an exploit provide access"
                },
                {
                    "Assumption": "No integrity checks for historical data changes",
                    "Role": "System Administrator",
                    "Condition": "Valid if database changes are not automatically logged and monitored"
                },
                {
                    "Assumption": "Historian database is not encrypted",
                    "Role": "Database Administrator",
                    "Condition": "Valid if encryption protocols are not applied to stored data"
                }
            ],
            "Potential Impact": "Compromise of data integrity, potentially leading to incorrect operational decisions based on false data.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Historical Data",
                "Data Integrity",
                "Historian Database"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny having executed critical commands by erasing or altering audit logs within the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privileges to access and modify audit logs",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains administrative access"
                },
                {
                    "Assumption": "There are inadequate protections in place to secure log files from modification",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs can be altered easily by privileged users"
                },
                {
                    "Assumption": "Lack of redundancy or backup systems for audit logs",
                    "Role": "System Administrator",
                    "Condition": "Valid if audit logs are single-instance and not duplicated"
                }
            ],
            "Potential Impact": "Difficulty in forensic investigations and inability to trace unauthorized activities accurately.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Audit Logs",
                "Log Modification",
                "DCS System"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Repudiation of malicious changes in configuration files on the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised an engineer's credentials",
                    "Role": "Attacker",
                    "Condition": "Valid if credentials are weakened or compromised"
                },
                {
                    "Assumption": "No automated configuration backup and comparison systems in place",
                    "Role": "System Engineer",
                    "Condition": "Valid if changes are not tracked against a known good state"
                },
                {
                    "Assumption": "Configuration changes are not logged in granular detail",
                    "Role": "System Administrator",
                    "Condition": "Valid if logging level is insufficient to capture all actions"
                }
            ],
            "Potential Impact": "Loss of system integrity and difficulty in restoring systems to a known good configuration.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Configuration Files",
                "Engineering Workstation",
                "Log Evasion"
            ],
            "mitre_technique": {
                "name": "Remote Services",
                "description": "Adversaries may leverage remote services to move between assets and network segments. These services are often used to allow operators to interact with systems remotely within the network, some examples are RDP, SMB, SSH, and other similar mechanisms. (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) (Citation: Dragos December 2017) (Citation: Joe Slowik April 2019) \n\nRemote services could be used to support remote access, data transmission, authentication, name resolution, and other remote functions. Further, remote services may be necessary to allow operators and administrators to configure systems within the network from their engineering or management workstations. An adversary may use this technique to access devices which may be dual-homed (Citation: Blake Johnson, Dan Caban, Marina Krotofil, Dan Scali, Nathan Brubaker, Christopher Glyer December 2017) to multiple network segments, and can be used for [Program Download](https://attack.mitre.org/techniques/T0843) or to execute attacks on control devices directly through [Valid Accounts](https://attack.mitre.org/techniques/T0859).\n\nSpecific remote services (RDP & VNC) may be a precursor to enable [Graphical User Interface](https://attack.mitre.org/techniques/T0823) execution on devices such as HMIs or engineering workstation software.\n\nBased on incident data, CISA and FBI assessed that Chinese state-sponsored actors also compromised various authorized remote access channels, including systems designed to transfer data and/or allow access between corporate and ICS networks.  (Citation: CISA AA21-201A Pipeline Intrusion July 2021)",
                "id": "attack-pattern--e1f9cdd2-9511-4fca-90d7-f3e92cfdd0bf",
                "technique_id": "T0886"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denying unauthorized remote access attempts by modifying network logs.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient network monitoring tools and protocols",
                    "Role": "Network Engineer",
                    "Condition": "Valid if monitoring and alerting are inadequate"
                },
                {
                    "Assumption": "The attacker has compromised the network logging system",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker gains access to logging systems"
                },
                {
                    "Assumption": "Network logs are not immutable and can be modified post-creation",
                    "Role": "Network Administrator",
                    "Condition": "Valid if logs are not protected from alteration"
                }
            ],
            "Potential Impact": "Hindrance in detecting security incidents and accurately attributing malicious actions.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Network Logs",
                "Remote Access",
                "Log Modification"
            ],
            "mitre_technique": {
                "name": "Modify Registry",
                "description": "Adversaries may interact with the Windows Registry to hide configuration information within Registry keys, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution.\n\nAccess to specific areas of the Registry depends on account permissions, some requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification. (Citation: Microsoft Reg) Other tools may also be used, such as a remote access tool, which may contain functionality to interact with the Registry through the Windows API.\n\nRegistry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API. (Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence. (Citation: TrendMicro POWELIKS AUG 2014) (Citation: SpectorOps Hiding Reg Jul 2017)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system. (Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.",
                "id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
                "technique_id": "T1112"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the Windows operating system to access sensitive data in the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker identifies and utilizes an existing operating system vulnerability",
                    "Role": "Attacker",
                    "Condition": "Valid if no security patches are applied"
                },
                {
                    "Assumption": "Sensitive data stored on systems without proper encryption",
                    "Role": "System Administrator",
                    "Condition": "Valid if sensitive data is stored in plaintext"
                },
                {
                    "Assumption": "Lack of network segmentation or isolation for sensitive data stores",
                    "Role": "Network Engineer",
                    "Condition": "Valid if sensitive systems are accessible from less-secure segments"
                }
            ],
            "Potential Impact": "Potential for unauthorized disclosure of sensitive operational and business data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Vulnerability Exploitation",
                "Sensitive Data",
                "DCS Network"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Phishing emails lead to unauthorized access to sensitive operator or engineer accounts within the Active Directory.",
            "Assumptions": [
                {
                    "Assumption": "The attacker successfully delivers a phishing email and deceives the user",
                    "Role": "Attacker",
                    "Condition": "Valid if the phishing campaign is effective and targets are not vigilant"
                },
                {
                    "Assumption": "Multifactor authentication is not enforced for sensitive accounts",
                    "Role": "System Administrator",
                    "Condition": "Valid if sensitive accounts are accessed with just a password"
                },
                {
                    "Assumption": "No regular user training on phishing attack patterns",
                    "Role": "Security Team",
                    "Condition": "Valid if user awareness training is inadequate or non-existent"
                }
            ],
            "Potential Impact": "Unauthorized access to critical data and potential for further system compromise.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Phishing",
                "User Accounts",
                "Email"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted communication channels between operator workstations and the Historian reveal sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over unencrypted channels",
                    "Role": "Network Engineer",
                    "Condition": "Valid if encryption protocols like TLS are not implemented"
                },
                {
                    "Assumption": "Sensitive data includes critical operational insights",
                    "Role": "System Administrator",
                    "Condition": "Valid if data transmitted can be used to infer operational details"
                },
                {
                    "Assumption": "Network traffic can be intercepted by unauthorized personnel",
                    "Role": "IT Security",
                    "Condition": "Valid if network segments are inadequately secured"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of operational data, potentially compromising competitive or operational secrets.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Network Traffic",
                "Unencrypted Communication",
                "Historian"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DCS Controller subjected to a Distributed Denial of Service (DDoS) attack, disrupting communication with sensors and actuators.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has control over sufficient resources to execute a DDoS attack",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers use botnets or other attack vectors"
                },
                {
                    "Assumption": "Insufficient network traffic monitoring and rate-limit enforcement",
                    "Role": "Network Engineer",
                    "Condition": "Valid if the system lacks proper DDoS protections"
                },
                {
                    "Assumption": "No redundancy or failover systems for critical communication channels",
                    "Role": "System Designer",
                    "Condition": "Valid if single points of failure exist without failover mechanisms"
                }
            ],
            "Potential Impact": "Disruption of process control functions, potentially halting critical refinery operations.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "DCS Controller",
                "Network Traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a known vulnerability in the Windows operating system to execute code that crashes the DCS Servers.",
            "Assumptions": [
                {
                    "Assumption": "Attackers exploit an unpatched vulnerability",
                    "Role": "Attacker",
                    "Condition": "Valid if patches for known vulnerabilities have not been applied"
                },
                {
                    "Assumption": "DCS Servers run a vulnerable version of Windows",
                    "Role": "System Administrator",
                    "Condition": "Valid if servers are not updated to the latest secure version"
                },
                {
                    "Assumption": "There are no real-time intrusion detection or prevention systems",
                    "Role": "IT Security",
                    "Condition": "Valid if monitoring systems are absent or not configured properly"
                }
            ],
            "Potential Impact": "Operational disruption due to server crashes, severely impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Vulnerability Exploitation",
                "DCS Servers",
                "Code Execution"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the GPS Server with spurious time requests, causing it to fail and disrupting time synchronization across the DCS.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high traffic volumes to the GPS Server",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to resources capable of generating the necessary traffic"
                },
                {
                    "Assumption": "The GPS Server lacks rate-limiting mechanisms or protections against request flooding",
                    "Role": "System Administrator",
                    "Condition": "Valid if traffic flood protections are not enforced"
                },
                {
                    "Assumption": "No alternative or backup time synchronization mechanisms in place",
                    "Role": "System Designer",
                    "Condition": "Valid if the system depends solely on the GPS Server"
                }
            ],
            "Potential Impact": "Loss of synchronized operations, potentially leading to unsafe or inefficient refinery processes.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Flooding",
                "GPS Server",
                "Time Synchronization"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of RCE vulnerability in a server module to gain system privileges and spread malware.",
            "Assumptions": [
                {
                    "Assumption": "A known vulnerability remains unpatched",
                    "Role": "System Administrator",
                    "Condition": "Valid if timely updates and patches are not applied"
                },
                {
                    "Assumption": "The attacker successfully exploits the vulnerability to execute arbitrary code",
                    "Role": "Attacker",
                    "Condition": "Valid if defenses do not prevent the exploitation"
                },
                {
                    "Assumption": "Lack of adequate access control and segmentation",
                    "Role": "Network Engineer",
                    "Condition": "Valid if access controls are lax or incorrectly implemented"
                }
            ],
            "Potential Impact": "Potential compromise of the entire system network, leading to loss of sensitive data and control.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Remote Code Execution",
                "Server Module",
                "Malware Spread"
            ],
            "mitre_technique": {
                "name": "Software Deployment Tools",
                "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Azure AD.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
                "id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
                "technique_id": "T1072"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege escalation through exploitation of weak file permissions on the Active Directory server.",
            "Assumptions": [
                {
                    "Assumption": "The attacker identifies directories or files with weak permissions",
                    "Role": "Attacker",
                    "Condition": "Valid if weak permissions are discovered through reconnaissance"
                },
                {
                    "Assumption": "File permissions are not regularly audited and enforced",
                    "Role": "System Administrator",
                    "Condition": "Valid if permissions are not reviewed for security best practices"
                },
                {
                    "Assumption": "The attacker has initial access to the system",
                    "Role": "Attacker",
                    "Condition": "Valid if any form of authenticated entry is possible"
                }
            ],
            "Potential Impact": "Elevation of privileges leading to broader unauthorized access and control.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "File Permissions",
                "Active Directory",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a vulnerable service running with high privileges on the Operator Workstation.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerable service is running with elevated privileges",
                    "Role": "System Administrator",
                    "Condition": "Valid if services run with more privileges than necessary"
                },
                {
                    "Assumption": "The attacker successfully identifies and exploits the vulnerable service",
                    "Role": "Attacker",
                    "Condition": "Valid if exploitation vectors are not mitigated"
                },
                {
                    "Assumption": "No proper isolation and sandboxing of high-privilege services",
                    "Role": "System Architect",
                    "Condition": "Valid if services are not correctly isolated"
                }
            ],
            "Potential Impact": "Gain of administrative rights on the Operator Workstation, leading to potential system-wide compromises.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Vulnerable Service",
                "Operator Workstation",
                "Administrative Rights"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "5",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized engineer's Active Directory credentials to gain access to the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained valid AD credentials or can guess weak passwords.",
                    "Role": "Attacker",
                    "Condition": "Weak password policy or stolen credentials"
                },
                {
                    "Assumption": "The EWS does not have multi-factor authentication enabled.",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication in use"
                },
                {
                    "Assumption": "Network monitoring does not detect unusual login patterns.",
                    "Role": "Network Security Team",
                    "Condition": "Insufficient monitoring controls"
                }
            ],
            "Potential Impact": "Unauthorized modification of DCS settings",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "credentials",
                "Active Directory",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor poses as the GPS Server to send incorrect time synchronization data to the DCS network components.",
            "Assumptions": [
                {
                    "Assumption": "There is no authentication or validation of time synchronization data.",
                    "Role": "System Administrator",
                    "Condition": "Time data not secured"
                },
                {
                    "Assumption": "The GPS Server's communications are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "No encryption in communication links"
                },
                {
                    "Assumption": "Network isolation is not enforced strictly.",
                    "Role": "Network Security Team",
                    "Condition": "Misconfigured or insufficient network segmentation"
                }
            ],
            "Potential Impact": "System instability and malfunction due to incorrect time data",
            "MITRE ATT&CK Keywords": [
                "time synchronization",
                "GPS",
                "spoofing",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a rogue DCS Controller to send false commands to actuators.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient authentication for DCS Controller communication.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure device authentication"
                },
                {
                    "Assumption": "Network access controls do not restrict unauthorized devices.",
                    "Role": "Network Security Team",
                    "Condition": "Weak network access controls"
                },
                {
                    "Assumption": "Rogue devices can physically connect to the network.",
                    "Role": "Physical Security Team",
                    "Condition": "Poor physical security measures"
                }
            ],
            "Potential Impact": "Unauthorized control of physical processes, potentially causing safety hazards",
            "MITRE ATT&CK Keywords": [
                "DCS Controller",
                "rogue device",
                "spoofing",
                "actuators"
            ],
            "mitre_technique": {
                "name": "Modify Control Logic",
                "description": "Adversaries may place malicious code in a system, which can cause the system to malfunction by modifying its control logic. Control system devices use programming languages (e.g. relay ladder logic) to control physical processes by affecting actuators, which cause machines to operate, based on environment sensor readings. These devices often include the ability to perform remote control logic updates. \n\nProgram code is normally edited in a vendor-specific Integrated Development Environment (IDE) that relies on proprietary tools and features. These IDEs allow an engineer to perform host target development and may have the ability to run the code on the machine it is programmed for. The IDE will transmit the control logic to the testing device, and will perform the required device-specific functions to apply the changes and make them active.\n\nAn adversary may attempt to use this host target IDE to modify device control logic. Even though proprietary tools are often used to edit and update control logic, the process can usually be reverse-engineered and reproduced with open-source tools.\n\nAn adversary can de-calibrate a sensor by removing functions in control logic that account for sensor error. This can be used to change a control process without actually spoofing command messages to a controller or device. \n\nIt is believed this process happened in the lesser known over-pressurizer attacks build into Stuxnet. Pressure sensors are not perfect at translating pressure into an analog output signal, but their errors can be corrected by calibration. The pressure controller can be told what the \u201creal\u201d pressure is for given analog signals and then automatically linearize the measurement to what would be the \u201creal\u201d pressure. If the linearization is overwritten by malicious code on the S7-417 controller, analog pressure readings will be \u201ccorrected\u201d during the attack by the pressure controller, which then interprets all analog pressure readings as perfectly normal pressure no matter how high or low their analog values are. The pressure controller then acts accordingly by never opening the stage exhaust valves. In the meantime, actual pressure keeps rising. (Citation: Stuxnet - Langner - 201311)\n\nIn the Maroochy Attack, Vitek Boden gained remote computer access to the control system and altered data so that whatever function should have occurred at affected pumping stations did not occur or occurred in a different way. The software program installed in the laptop was one developed by Hunter Watertech for its use in changing configurations in the PDS computers. This ultimately led to 800,000 liters of raw sewage being spilled out into the community. (Citation: Maroochy - MITRE - 200808)",
                "id": "attack-pattern--e0d74479-86d2-465d-bf36-903ebecef43e",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration files on the DCS Servers to alter process control parameters.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has privileged access to the DCS Servers.",
                    "Role": "Attacker",
                    "Condition": "Compromised user account with high privileges"
                },
                {
                    "Assumption": "File integrity monitoring is not implemented or is insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust file monitoring"
                },
                {
                    "Assumption": "Configuration files are not encrypted at rest.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted sensitive data"
                }
            ],
            "Potential Impact": "Compromise of process integrity leading to unsafe operational conditions",
            "MITRE ATT&CK Keywords": [
                "configuration modification",
                "DCS Server",
                "tampering",
                "process control"
            ],
            "mitre_technique": {
                "name": "Manipulation of Control",
                "description": "Adversaries may manipulate physical process control within the industrial environment. Methods of manipulating control can include changes to set point values, tags, or other parameters. Adversaries may manipulate control systems devices or possibly leverage their own, to communicate with and command physical control processes. The duration of manipulation may be temporary or longer sustained, depending on operator detection.   \n\nMethods of Manipulation of Control include: \n\n* Man-in-the-middle  \n* Spoof command message \n* Changing setpoints  \n\nA Polish student used a remote controller device to interface with the Lodz city tram system in Poland. (Citation: John Bill May 2017) (Citation: Shelley Smith February 2008) (Citation: Bruce Schneier January 2008) Using this remote, the student was able to capture and replay legitimate tram signals. As a consequence, four trams were derailed and twelve people injured due to resulting emergency stops. (Citation: Shelley Smith February 2008) The track controlling commands issued may have also resulted in tram collisions, a further risk to those on board and nearby the areas of impact. (Citation: Bruce Schneier January 2008)",
                "id": "attack-pattern--1af9e3fd-2bcc-414d-adbd-fe3b95c02ca1",
                "technique_id": "T0831"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware is introduced into the system via a compromised USB device to tamper with software on the Engineering Workstation (EWS).",
            "Assumptions": [
                {
                    "Assumption": "USB ports on EWS are not disabled or controlled.",
                    "Role": "System Administrator",
                    "Condition": "Enabled USB ports"
                },
                {
                    "Assumption": "Lack of endpoint security controls to detect and block malicious software.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient endpoint protection"
                },
                {
                    "Assumption": "Physical security does not prevent unauthorized access to workstations.",
                    "Role": "Physical Security Team",
                    "Condition": "Weak physical security measures"
                }
            ],
            "Potential Impact": "Installation of malicious software leading to data integrity issues and potential system compromise",
            "MITRE ATT&CK Keywords": [
                "malware",
                "USB device",
                "tampering",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized user gains access to the network and alters communication protocols between DCS Controllers and Sensors.",
            "Assumptions": [
                {
                    "Assumption": "Compromised network devices allow unauthorized access.",
                    "Role": "Network Security Team",
                    "Condition": "Unsecured network devices"
                },
                {
                    "Assumption": "Lack of encrypted communication for sensor data.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted communication protocols"
                },
                {
                    "Assumption": "Absence of anomaly detection systems for network traffic.",
                    "Role": "Network Security Team",
                    "Condition": "No real-time network monitoring"
                }
            ],
            "Potential Impact": "Compromise of data integrity affecting operational decisions",
            "MITRE ATT&CK Keywords": [
                "protocol manipulation",
                "network tampering",
                "DCS Controller",
                "sensor data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or manipulates logs on the Historian server to cover tracks of an intrusion.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not stored in a secure, tamper-evident manner.",
                    "Role": "System Administrator",
                    "Condition": "Unsecured log storage"
                },
                {
                    "Assumption": "Access to log files is not restricted to authorized personnel only.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access control"
                },
                {
                    "Assumption": "Log integrity verification processes are not in place.",
                    "Role": "System Administrator",
                    "Condition": "No integrity checking"
                }
            ],
            "Potential Impact": "Loss of forensic evidence and ability to trace malicious actions",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "repudiation",
                "Historian server",
                "forensic data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--621bac63-8620-40cf-88f2-50ed99b83cc7",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An operator denies making unauthorized changes to process set-points on the Operator Workstation (OWS) after those changes cause an incident.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not provide a clear audit trail linking actions to users.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient audit logging"
                },
                {
                    "Assumption": "Multi-factor authentication is not enforced at the OWS.",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication"
                },
                {
                    "Assumption": "System lacks non-reputable logging mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No non-repudiation controls"
                }
            ],
            "Potential Impact": "Compromised accountability for actions leading to difficulty in incident response",
            "MITRE ATT&CK Keywords": [
                "process set-point",
                "audit trail",
                "Operator Workstation",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An intruder alters configuration files and denies any wrongdoing by exploiting weak administrative controls.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient oversight over administrative access.",
                    "Role": "System Administrator",
                    "Condition": "Weak administrative controls"
                },
                {
                    "Assumption": "Absence of automated alerts for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "No alerting mechanisms"
                },
                {
                    "Assumption": "User activity is not closely monitored.",
                    "Role": "System Administrator",
                    "Condition": "Lack of user activity monitoring"
                }
            ],
            "Potential Impact": "Inability to hold intruders accountable, complicating system recovery",
            "MITRE ATT&CK Keywords": [
                "configuration changes",
                "repudiation",
                "administrative controls",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the DCS Server software to exfiltrate sensitive process data.",
            "Assumptions": [
                {
                    "Assumption": "DCS Server is running vulnerable software versions.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched software"
                },
                {
                    "Assumption": "Network defenses do not detect exfiltration attempts.",
                    "Role": "Network Security Team",
                    "Condition": "Insufficient exfiltration monitoring"
                },
                {
                    "Assumption": "Process data is not encrypted during transmission.",
                    "Role": "System Designer",
                    "Condition": "No data encryption"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive process data",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "data exfiltration",
                "DCS Server",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Information Repositories",
                "description": "Adversaries may target and collect data from information repositories. This can include sensitive data such as specifications, schematics, or diagrams of control system layouts, devices, and processes. Examples of information repositories include reference databases in the process environment, as well as databases in the corporate network that might contain information about the ICS.(Citation: Cybersecurity & Infrastructure Security Agency March 2018)\n\nInformation collected from these systems may provide the adversary with a better understanding of the operational environment, vendors used, processes, or procedures of the ICS.\n\nIn a campaign between 2011 and 2013 against ONG organizations, Chinese state-sponsored actors searched document repositories for specific information such as, system manuals, remote terminal unit (RTU) sites, personnel lists, documents that included the string SCAD*, user credentials, and remote dial-up access information. (Citation: CISA AA21-201A Pipeline Intrusion July 2021)",
                "id": "attack-pattern--3405891b-16aa-4bd7-bd7c-733501f9b20f",
                "technique_id": "T0811"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious insider copies configuration details from the Engineering Workstation to an external device.",
            "Assumptions": [
                {
                    "Assumption": "No restrictions on copying files to external devices.",
                    "Role": "System Administrator",
                    "Condition": "Enabled file copy operations"
                },
                {
                    "Assumption": "Insufficient monitoring of insider activities.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of insider threat detection"
                },
                {
                    "Assumption": "Engineering Workstation stores sensitive information in unencrypted form.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted sensitive data"
                }
            ],
            "Potential Impact": "Leakage of critical configuration information",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data leakage",
                "Engineering Workstation",
                "configuration details"
            ],
            "mitre_technique": {
                "name": "Engineering Workstation Compromise",
                "description": "Adversaries will compromise and gain control of an engineering workstation for Initial Access into the control system environment. Access to an engineering workstation may occur through or physical means, such as a Valid Accounts with privileged access or infection by removable media. A dual-homed engineering workstation may allow the adversary access into multiple networks. For example, unsegregated process control, safety system, or information system networks. An Engineering Workstation is designed as a reliable computing platform that configures, maintains, and diagnoses control system equipment and applications. Compromise of an engineering workstation may provide access to, and control of, other control system applications and equipment. In the Maroochy attack, the adversary utilized a computer, possibly stolen, with proprietary engineering software to communicate with a wastewater system.",
                "id": "attack-pattern--d614a9cf-18eb-4800-81e4-ab8ddf0baa73",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on unencrypted communication between DCS Controllers and sensors to gather operational data.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "No encrypted communication protocols"
                },
                {
                    "Assumption": "Network traffic is not monitored for anomalies.",
                    "Role": "Network Security Team",
                    "Condition": "Insufficient traffic monitoring"
                },
                {
                    "Assumption": "Physical network access is not adequately secured.",
                    "Role": "Physical Security Team",
                    "Condition": "Weak physical network security"
                }
            ],
            "Potential Impact": "Compromise of operational confidentiality",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "unencrypted communication",
                "DCS Controller",
                "sensor data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0042be63-bfcd-4c9d-a1f5-02a1e2935c75",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack targets the DCS Controller, overwhelming it with traffic.",
            "Assumptions": [
                {
                    "Assumption": "Lack of DDoS mitigation measures on the network.",
                    "Role": "Network Security Team",
                    "Condition": "No DDoS protection"
                },
                {
                    "Assumption": "DCS Controller is accessible from the internet.",
                    "Role": "System Designer",
                    "Condition": "Internet-facing system"
                },
                {
                    "Assumption": "Insufficient network segmentation and protection.",
                    "Role": "Network Security Team",
                    "Condition": "Poor network segmentation"
                }
            ],
            "Potential Impact": "Disruption of control processes, potentially halting refinery operations",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "traffic overload",
                "network disruption",
                "DCS Controller"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection causes the Historian server to crash, preventing access to historical process data.",
            "Assumptions": [
                {
                    "Assumption": "Endpoint protection measures are not robust.",
                    "Role": "System Administrator",
                    "Condition": "Weak endpoint security"
                },
                {
                    "Assumption": "Historian software is vulnerable to known exploits.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched software"
                },
                {
                    "Assumption": "Regular backups and recovery processes are not in place.",
                    "Role": "System Administrator",
                    "Condition": "Lack of backup procedures"
                }
            ],
            "Potential Impact": "Loss of access to critical historical data used for trend analysis",
            "MITRE ATT&CK Keywords": [
                "malware",
                "server crash",
                "historian server",
                "data access"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Time synchronization disruption from the GPS Server causes desynchronization across the DCS network.",
            "Assumptions": [
                {
                    "Assumption": "GPS Server does not have backup or redundant time sources.",
                    "Role": "System Designer",
                    "Condition": "Single time source"
                },
                {
                    "Assumption": "Network does not have detection for time desynchronization issues.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of time monitoring"
                },
                {
                    "Assumption": "Critical systems dependent on precise time are not designed to operate without it.",
                    "Role": "System Designer",
                    "Condition": "Rigid dependency on time data"
                }
            ],
            "Potential Impact": "System desynchronization leading to operational inefficiencies or failures",
            "MITRE ATT&CK Keywords": [
                "time synchronization",
                "GPS disruption",
                "network desynchronization",
                "DCS"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A remote code execution vulnerability in the DCS Controller software is exploited to gain SYSTEM privileges.",
            "Assumptions": [
                {
                    "Assumption": "DCS Controller software has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched vulnerabilities"
                },
                {
                    "Assumption": "No application whitelisting or execution control in place.",
                    "Role": "System Administrator",
                    "Condition": "Absence of execution restrictions"
                },
                {
                    "Assumption": "Insufficient network segmentation exposing vulnerable components.",
                    "Role": "Network Security Team",
                    "Condition": "Improper network segmentation"
                }
            ],
            "Potential Impact": "Full control over system operations leading to potential sabotage",
            "MITRE ATT&CK Keywords": [
                "remote code execution",
                "privilege escalation",
                "DCS Controller",
                "SYSTEM privileges"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a privilege escalation vulnerability in the operating system of the Engineering Workstation to become an administrator.",
            "Assumptions": [
                {
                    "Assumption": "Operating system has unpatched privilege escalation vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched OS"
                },
                {
                    "Assumption": "Endpoint security controls do not detect and mitigate elevation attempts.",
                    "Role": "System Administrator",
                    "Condition": "Weak endpoint protection"
                },
                {
                    "Assumption": "User accounts with regular privileges are permitted to execute administrative commands.",
                    "Role": "System Administrator",
                    "Condition": "Permissive user account policies"
                }
            ],
            "Potential Impact": "Gaining administrative access to modify critical configurations and settings",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "operating system",
                "admin access",
                "Engineering Workstation"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the GPS Server software, leading to elevated privileges and control over the time synchronization process.",
            "Assumptions": [
                {
                    "Assumption": "GPS Server software has known vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched software"
                },
                {
                    "Assumption": "No network monitoring to detect abnormal activities.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of monitoring"
                },
                {
                    "Assumption": "Credential management practices allow the compromise of privileged accounts.",
                    "Role": "System Administrator",
                    "Condition": "Weak credential management"
                }
            ],
            "Potential Impact": "Loss of control over time synchronization, affecting entire DCS network",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "GPS Server",
                "time synchronization",
                "network control"
            ],
            "mitre_technique": {
                "name": "Time Providers",
                "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
                "id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
                "technique_id": "T1547.003"
            }
        }
    ]
}
]