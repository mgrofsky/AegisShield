[
{
    "case_number": "8",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker pretends to be a legitimate user by intercepting and replaying NFC or Bluetooth communication between user devices and the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC or Bluetooth connection is not sufficiently encrypted or secured",
                    "Role": "Attacker",
                    "Condition": "Attacker is within physical range of NFC or Bluetooth communication"
                },
                {
                    "Assumption": "User devices are configured to accept connections without thorough authentication",
                    "Role": "User",
                    "Condition": "Default configurations or user-practiced weak security standards"
                }
            ],
            "Potential Impact": "Unauthorized control over infotainment system functionalities and potential data theft.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "Bluetooth",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious app installed on user device mimics legitimate infotainment app to gain access to the system.",
            "Assumptions": [
                {
                    "Assumption": "User installs third-party apps from untrusted sources",
                    "Role": "User",
                    "Condition": "Lack of awareness about app security"
                },
                {
                    "Assumption": "Infotainment system checks apps based on superficial checks",
                    "Role": "Infotainment System",
                    "Condition": "Insufficient app verification mechanisms"
                }
            ],
            "Potential Impact": "Compromise of sensitive data from the infotainment system and potential disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "malicious app",
                "mobile device",
                "infotainment"
            ],
            "mitre_technique": {
                "name": "Steal Application Access Token",
                "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019)  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nFor example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.(Citation: Cider Security Top 10 CICD Security Risks) If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n",
                "id": "attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a",
                "technique_id": "T1528"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake GPS signals spoof system's navigation controls leading to incorrect directions or tracking.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals can be easily intercepted and altered within certain range",
                    "Role": "Attacker",
                    "Condition": "GPS jammers/spoofers used in the vicinity of the vehicle"
                },
                {
                    "Assumption": "Infotainment system does not validate signal integrity",
                    "Role": "Infotainment System",
                    "Condition": "Lack of advanced GPS signal verification"
                }
            ],
            "Potential Impact": "Misleading route information, potential privacy breaches due to incorrect location data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS signal",
                "navigation",
                "location data"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker gains physical access to the vehicle and tampers with the CAN bus, sending malicious commands to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the vehicle is accessible",
                    "Role": "Attacker",
                    "Condition": "Vehicle is left in unsecured locations"
                },
                {
                    "Assumption": "CAN bus lacks adequate encryption/authentication mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "Legacy systems or cost-saving measures compromising security"
                }
            ],
            "Potential Impact": "Corruption of vehicle control systems, potential for accidents or system malfunctions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN bus",
                "vehicle control",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker remotely injects malicious firmware updates into the infotainment system over Wi-Fi or Cellular networks.",
            "Assumptions": [
                {
                    "Assumption": "Weakness in firmware update mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "Lack of secure update protocols or signing mechanisms"
                },
                {
                    "Assumption": "Wi-Fi or Cellular network is compromised or weakly secured",
                    "Role": "Network Provider",
                    "Condition": "Usage of unsecured or public networks"
                }
            ],
            "Potential Impact": "System corruption, unauthorized access to sensitive data, disruption of normal system operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware update",
                "Wi-Fi",
                "Cellular network"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infects a connected device and spreads to the infotainment system via Bluetooth.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connection permissions are too broad or insecure",
                    "Role": "Infotainment System",
                    "Condition": "Unrestricted or insecure connection protocols"
                },
                {
                    "Assumption": "User device is compromised and used to transmit malware",
                    "Role": "User Device",
                    "Condition": "Infection at the app level or OS vulnerabilities"
                }
            ],
            "Potential Impact": "Malicious control of infotainment functionalities, data corruption, privacy violations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "Bluetooth",
                "device infection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User performs unauthorized actions on the infotainment system and denies involvement, leveraging weak logs or traceability measures.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust logging mechanisms on the infotainment system",
                    "Role": "Infotainment System",
                    "Condition": "Inadequate logging or poor log management"
                },
                {
                    "Assumption": "System accessibility without requiring strong user authentication",
                    "Role": "User",
                    "Condition": "Weak or no authentication policies"
                }
            ],
            "Potential Impact": "Inability to track malicious actions, accountability issues, operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "traceability",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Multiple user accounts created without proper verification, users commit exploits and deny actions.",
            "Assumptions": [
                {
                    "Assumption": "System allows easy creation of multiple accounts",
                    "Role": "Infotainment System",
                    "Condition": "Absence of strict account verification procedures"
                },
                {
                    "Assumption": "Insufficient monitoring of account activities",
                    "Role": "Infotainment System",
                    "Condition": "Poor oversight and tracking mechanisms"
                }
            ],
            "Potential Impact": "Compromised system operations, difficulty in identifying malicious users, data breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user accounts",
                "accountability",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "App updates from third-party sources result in unexpected actions being performed without logs capturing responsible parties.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system allows installation from third-party sources",
                    "Role": "Infotainment System",
                    "Condition": "Lack of restrictive app source policies"
                },
                {
                    "Assumption": "Inadequate logging of application actions",
                    "Role": "Infotainment System",
                    "Condition": "Weak logging infrastructure"
                }
            ],
            "Potential Impact": "Difficult accountability, contention over rightful app actions, critical issues untraceable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "app updates",
                "third-party",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disabling Security Tools",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "technique_id": "T1089"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data intercepted during communication over unsecured Wi-Fi networks.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi communication lacks proper encryption",
                    "Role": "Network Administrator",
                    "Condition": "Unsecured network settings or protocols"
                },
                {
                    "Assumption": "Infotainment system transmits sensitive data over Wi-Fi without additional encryption layers",
                    "Role": "Infotainment System",
                    "Condition": "System design shortcomings"
                }
            ],
            "Potential Impact": "Unauthorized data access, privacy breaches, potential identity theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "data interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker eavesdrops on Bluetooth communications between user devices and infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not adequately encrypted",
                    "Role": "Infotainment System",
                    "Condition": "Weak or outdated Bluetooth security measures"
                },
                {
                    "Assumption": "Attacker is within range to intercept Bluetooth signals",
                    "Role": "Attacker",
                    "Condition": "Close proximity to vehicle"
                }
            ],
            "Potential Impact": "Disclosure of sensitive personal information, unauthorized access to infotainment features.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "eavesdropping",
                "data security"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious application installed on a user device collects sensitive infotainment system data and transmits it to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "User installs untrusted applications with broad permissions",
                    "Role": "User",
                    "Condition": "Lack of app security awareness"
                },
                {
                    "Assumption": "Infotainment system interacts with user devices without stringent checks",
                    "Role": "Infotainment System",
                    "Condition": "Poor validation mechanisms"
                }
            ],
            "Potential Impact": "Compromise of private data, potential for broader security vulnerabilities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malicious app",
                "data collection",
                "unauthorized transmission"
            ],
            "mitre_technique": {
                "name": "Steal Application Access Token",
                "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019)  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nFor example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.(Citation: Cider Security Top 10 CICD Security Risks) If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n",
                "id": "attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a",
                "technique_id": "T1528"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker floods the infotainment system's communication channels (Wi-Fi, Bluetooth) with excessive connection attempts causing system unavailability.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system has limited capacity for handling simultaneous connections",
                    "Role": "Infotainment System",
                    "Condition": "Design or resource limitations"
                },
                {
                    "Assumption": "Attackers can generate high volumes of traffic without detection",
                    "Role": "Attacker",
                    "Condition": "Capable of sustaining high traffic generation"
                }
            ],
            "Potential Impact": "System slowdowns or complete denial of service, impacting user experience and usability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Wi-Fi",
                "Bluetooth",
                "connection flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware on a connected device sends continuous commands to the OBC causing it to crash or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Connected devices have influence over OBC commands",
                    "Role": "Infotainment System",
                    "Condition": "Weak isolation of commands between devices"
                },
                {
                    "Assumption": "Malware can communicate effectively without raising alerts",
                    "Role": "Malware",
                    "Condition": "Stealthy operational conditions"
                }
            ],
            "Potential Impact": "Unavailability of critical infotainment services, potential safety risks if related to navigation components.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "OBC",
                "malware",
                "system crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Packet injection attack on the CAN bus causing network congestion and disruption of communications between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus is susceptible to packet injection without validation",
                    "Role": "Infotainment System",
                    "Condition": "Lack of authentication for CAN messages"
                },
                {
                    "Assumption": "Attacker has means to physically or wirelessly access the CAN bus",
                    "Role": "Attacker",
                    "Condition": "Physical or close wireless access"
                }
            ],
            "Potential Impact": "Disruption of vehicle control systems, possible safety hazards from control loss.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN bus",
                "packet injection",
                "network congestion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious code exploit in the infotainment firmware allows lower-privileged users to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has exploitable vulnerabilities",
                    "Role": "Infotainment System",
                    "Condition": "Patches not regularly applied"
                },
                {
                    "Assumption": "Lower-privileged users can interact with system components",
                    "Role": "User/Attacker",
                    "Condition": "Multi-user environment or shared access"
                }
            ],
            "Potential Impact": "Full compromise of infotainment system, access to sensitive data, and control over all functionalities.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "firmware exploit",
                "administrative access",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "App vulnerabilities exploited to gain root access to the underlying OS of the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Apps have elevated privileges due to misconfiguration",
                    "Role": "Infotainment System",
                    "Condition": "Misconfigured app permissions"
                },
                {
                    "Assumption": "Exploits can run unnoticed on the OS level",
                    "Role": "Attacker",
                    "Condition": "Use of stealth techniques in exploit"
                }
            ],
            "Potential Impact": "Complete control of the OS, unrestricted access to data and system settings.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "app vulnerabilities",
                "root access",
                "OS control"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker leverages weak authentication mechanisms to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms are easily bypassed or weakly implemented",
                    "Role": "Infotainment System",
                    "Condition": "Inadequate security configuration of authentication processes"
                },
                {
                    "Assumption": "Attacker has initial access to the system",
                    "Role": "Attacker",
                    "Condition": "Compromised account or device"
                }
            ],
            "Potential Impact": "Unauthorized access and control over the system, potential for extensive data compromise.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "weak authentication",
                "privilege escalation",
                "system control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a falsified identity to gain access to the infotainment system via Wi-Fi.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the vehicle's Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The system lacks robust authentication mechanisms to validate the user identity.",
                    "Role": "System Designer",
                    "Condition": "Weak or no authentication in place"
                },
                {
                    "Assumption": "The attacker possesses the necessary knowledge to falsify network credentials.",
                    "Role": "Attacker",
                    "Condition": "Moderate technical skill"
                }
            ],
            "Potential Impact": "Unauthorized access to system functionalities and data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network access",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker clones the NFC device to execute commands on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the NFC communication range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "NFC communication is not secured or encrypted.",
                    "Role": "System Designer",
                    "Condition": "Weak or no encryption on NFC"
                },
                {
                    "Assumption": "The attacker can emulate the NFC signal of a legitimate device.",
                    "Role": "Attacker",
                    "Condition": "High technical skill"
                }
            ],
            "Potential Impact": "Compromise of system integrity through unauthorized command execution.",
            "MITRE ATT&CK Keywords": [
                "NFC",
                "unauthorized command",
                "device cloning"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker simulates GPS signals to mislead the navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate false GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of GPS signal spoofing equipment"
                },
                {
                    "Assumption": "The vehicle relies on GPS signals without additional verification.",
                    "Role": "System Designer",
                    "Condition": "No signal verification protocols"
                },
                {
                    "Assumption": "The GPS receiver can be influenced by stronger false signals.",
                    "Role": "Attacker",
                    "Condition": "GPS signal strength priority"
                }
            ],
            "Potential Impact": "Misleading navigation, potentially causing safety hazards.",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "navigation compromise",
                "signal manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Injection of malicious code via Bluetooth to alter system operations.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth pairing is not secure.",
                    "Role": "System Designer",
                    "Condition": "Weak or no pairing authentication"
                },
                {
                    "Assumption": "The attacker can inject code within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The system lacks runtime code integrity checks.",
                    "Role": "System Designer",
                    "Condition": "No integrity monitoring"
                }
            ],
            "Potential Impact": "Corruption of system operations and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "code injection",
                "integrity compromise"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Physical access to the OBC allows an attacker to implant a malicious device.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle's OBC.",
                    "Role": "Attacker",
                    "Condition": "Proximity and access to vehicle"
                },
                {
                    "Assumption": "The OBC is not tamper-proof.",
                    "Role": "System Designer",
                    "Condition": "Inadequate physical security"
                },
                {
                    "Assumption": "The attacker can bypass internal security measures.",
                    "Role": "Attacker",
                    "Condition": "High technical skill"
                }
            ],
            "Potential Impact": "Complete compromise of data integrity and system operations.",
            "MITRE ATT&CK Keywords": [
                "physical access",
                "OBC tampering",
                "malicious implant"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized software update via CAN Bus to alter ECU settings.",
            "Assumptions": [
                {
                    "Assumption": "Access to the CAN Bus is possible without authentication.",
                    "Role": "System Designer",
                    "Condition": "Weak or no CAN Bus security"
                },
                {
                    "Assumption": "The attacker has the tools to interact with the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Possession of CAN Bus interfacing tools"
                },
                {
                    "Assumption": "The attacker can craft and inject valid CAN messages.",
                    "Role": "Attacker",
                    "Condition": "High technical skill"
                }
            ],
            "Potential Impact": "Corruption or alteration of critical vehicle control settings.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "unauthorized update",
                "ECU compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Manipulation of activity logs to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has credentials to access the logging system.",
                    "Role": "Attacker",
                    "Condition": "Stolen or spoofed credentials"
                },
                {
                    "Assumption": "The logging system does not have immutability protections.",
                    "Role": "System Designer",
                    "Condition": "Inadequate logging security"
                },
                {
                    "Assumption": "The attacker can modify or delete records without detection.",
                    "Role": "Attacker",
                    "Condition": "Administrative privileges"
                }
            ],
            "Potential Impact": "Loss of evidence and inability to trace unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "audit evasion",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "False denial of system interactions through modified network logs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to network log files.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Network logs are not secured against tampering.",
                    "Role": "System Designer",
                    "Condition": "Inadequately secured logs"
                },
                {
                    "Assumption": "The attacker can edit or erase specific log entries.",
                    "Role": "Attacker",
                    "Condition": "Write access to logs"
                }
            ],
            "Potential Impact": "Inability to confirm or deny interaction history, causing trust issues.",
            "MITRE ATT&CK Keywords": [
                "network logs",
                "log tampering",
                "interaction denial"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Using authorized access to perform actions and then deny them.",
            "Assumptions": [
                {
                    "Assumption": "The user has legitimate administrative access.",
                    "Role": "User",
                    "Condition": "Granted privileges"
                },
                {
                    "Assumption": "There are no detailed audit trails for administrative actions.",
                    "Role": "System Designer",
                    "Condition": "Lack of comprehensive logging"
                },
                {
                    "Assumption": "Actions are not linked to unique user identifiers.",
                    "Role": "User",
                    "Condition": "No user-specific tracking"
                }
            ],
            "Potential Impact": "Unable to hold individuals accountable for their actions.",
            "MITRE ATT&CK Keywords": [
                "authorized access",
                "action denial",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leakage through compromised Bluetooth pairing.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can initiate a Bluetooth connection.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Bluetooth connections are not encrypted or secured.",
                    "Role": "System Designer",
                    "Condition": "Weak security standards"
                },
                {
                    "Assumption": "The attacker can intercept and capture transmitted data.",
                    "Role": "Attacker",
                    "Condition": "Possession of data interception tools"
                }
            ],
            "Potential Impact": "Exposure of sensitive data such as call logs and contacts.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "data interception",
                "information leakage"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Accessing sensitive data via unsecured Wi-Fi communication.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can join the vehicle's Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Proximity and access to network"
                },
                {
                    "Assumption": "Communications on the Wi-Fi network are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "The attacker has the tools to capture network traffic.",
                    "Role": "Attacker",
                    "Condition": "Possession of packet capture tools"
                }
            ],
            "Potential Impact": "Exposure of personal and vehicle-related information.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "unencrypted communication",
                "data capture"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to data stored in the onboard computer through physical access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access the onboard computer.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Data storage is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of data encryption"
                },
                {
                    "Assumption": "The attacker can extract and interpret stored information.",
                    "Role": "Attacker",
                    "Condition": "Possession of data extraction tools"
                }
            ],
            "Potential Impact": "Disclosure of sensitive data such as navigation history and user settings.",
            "MITRE ATT&CK Keywords": [
                "physical access",
                "data extraction",
                "unencrypted storage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the system through excessive Bluetooth connection attempts.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth does not limit connection attempts.",
                    "Role": "System Designer",
                    "Condition": "No throttling or rate limiting"
                },
                {
                    "Assumption": "The attacker can remain within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "System lacks robust protections against connection spam.",
                    "Role": "System Designer",
                    "Condition": "Inadequate anti-spam measures"
                }
            ],
            "Potential Impact": "System responsiveness is degraded, impacting user experience.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "connection flood",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Network flooding attack through Wi-Fi, rendering the infotainment system unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi does not have protections against flooding.",
                    "Role": "System Designer",
                    "Condition": "No flood prevention mechanisms"
                },
                {
                    "Assumption": "The attacker can generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to flood generation tools"
                },
                {
                    "Assumption": "Network infrastructure cannot handle excessive traffic.",
                    "Role": "System Designer",
                    "Condition": "Insufficient network capacity"
                }
            ],
            "Potential Impact": "Complete unavailability of network-dependent features.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "network flooding",
                "service unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Resource exhaustion attack via CAN Bus to disrupt ECU communication.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus traffic is not adequately monitored.",
                    "Role": "System Designer",
                    "Condition": "Lack of traffic monitoring"
                },
                {
                    "Assumption": "The attacker can inject a high volume of CAN messages.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN interfacing tools"
                },
                {
                    "Assumption": "ECU lacks defenses against message flooding.",
                    "Role": "System Designer",
                    "Condition": "No flood protection mechanisms"
                }
            ],
            "Potential Impact": "Critical vehicle functions may fail or be impaired.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "message flooding",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of software vulnerabilities to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The system has unpatched software vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Poor patch management"
                },
                {
                    "Assumption": "The attacker can find and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Possession of exploit tools"
                },
                {
                    "Assumption": "The system does not implement multiple layers of security.",
                    "Role": "System Designer",
                    "Condition": "Lack of defense in depth"
                }
            ],
            "Potential Impact": "Attacker gains full control over the system and data.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "administrative access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious app installation through unsecured app store.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system allows third-party apps.",
                    "Role": "System Designer",
                    "Condition": "Support for third-party apps"
                },
                {
                    "Assumption": "App store security measures are inadequate.",
                    "Role": "System Designer",
                    "Condition": "Weak app store vetting process"
                },
                {
                    "Assumption": "The attacker can submit a malicious app.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of app submission process"
                }
            ],
            "Potential Impact": "Gain of unauthorized privileges via malicious app functionalities.",
            "MITRE ATT&CK Keywords": [
                "third-party apps",
                "malicious app",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Browser Extensions",
                "description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for [Command and Control](https://attack.mitre.org/tactics/TA0011).(Citation: Stantinko Botnet)(Citation: Chrome Extension C2 Malware) Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for [Defense Evasion](https://attack.mitre.org/tactics/TA0005).(Citation: Browers FriarFox)(Citation: Browser Adrozek) ",
                "id": "attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8",
                "technique_id": "T1176"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Jailbreaking the infotainment system to unlock restricted features.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the system.",
                    "Role": "Attacker",
                    "Condition": "Proximity or network access"
                },
                {
                    "Assumption": "The system's security protections can be bypassed.",
                    "Role": "System Designer",
                    "Condition": "Weak or exploitable security protections"
                },
                {
                    "Assumption": "The attacker can execute unauthorized code.",
                    "Role": "Attacker",
                    "Condition": "Advanced technical skill"
                }
            ],
            "Potential Impact": "Full control over system functionalities and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "jailbreaking",
                "restricted feature access",
                "security bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the vehicle's Wi-Fi network and deceive the infotainment system into connecting to a malicious network.",
            "Assumptions": [
                {
                    "Assumption": "Vehicle's Wi-Fi network is configured to auto-connect to known networks.",
                    "Role": "Network configuration",
                    "Condition": "Auto-connect enabled"
                },
                {
                    "Assumption": "Malicious network is within range and not easily distinguishable from legitimate network.",
                    "Role": "Attacker",
                    "Condition": "Proximity and network spoofing capability"
                },
                {
                    "Assumption": "No additional security measures like two-factor authentication.",
                    "Role": "System designers",
                    "Condition": "Absence of multi-factor authentication"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information via network eavesdropping.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Man-in-the-Middle",
                "Eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Forged GPS signals are broadcasted to mislead the vehicle's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "GPS receivers in the vehicle do not verify signal integrity.",
                    "Role": "System designers",
                    "Condition": "No signal integrity checks"
                },
                {
                    "Assumption": "Attacker has necessary equipment to broadcast forged GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of GPS spoofer"
                },
                {
                    "Assumption": "Vehicle relies solely on GPS for navigation without cross-referencing with other data sources.",
                    "Role": "System designers",
                    "Condition": "Unverified reliance on GPS"
                }
            ],
            "Potential Impact": "Disruption of navigation services and potential misdirection.",
            "MITRE ATT&CK Keywords": [
                "GPS Spoofing",
                "Device",
                "Signal Manipulation",
                "Navigation"
            ],
            "mitre_technique": {
                "name": "Network Devices",
                "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
                "id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
                "technique_id": "T1584.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized person gains access to the car's system via the NFC interface pretending to be an authorized device.",
            "Assumptions": [
                {
                    "Assumption": "NFC interface allows for automatic pairing without robust authentication.",
                    "Role": "System designers",
                    "Condition": "Weak NFC authentication"
                },
                {
                    "Assumption": "Attacker possesses a device capable of mimicking a legitimate NFC device.",
                    "Role": "Attacker",
                    "Condition": "Possession of NFC cloning device"
                },
                {
                    "Assumption": "Driver or passengers are unaware of the attack happening in close proximity.",
                    "Role": "Users",
                    "Condition": "Unawareness of proximity threats"
                }
            ],
            "Potential Impact": "Unauthorized system access and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "NFC",
                "Spoofing",
                "Physical Access",
                "Credential Access"
            ],
            "mitre_technique": {
                "name": "Password Managers",
                "description": "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",
                "id": "attack-pattern--315f51f0-6b03-4c1e-bfb2-84740afb8e21",
                "technique_id": "T1555.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to the OBC and modifies firmware to introduce malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to vehicle components is possible.",
                    "Role": "Attacker",
                    "Condition": "Physical access granted"
                },
                {
                    "Assumption": "Firmware integrity checks are insufficient or nonexistent.",
                    "Role": "System designers",
                    "Condition": "Inadequate firmware validation"
                },
                {
                    "Assumption": "Malicious code is capable of bypassing existing security controls.",
                    "Role": "Attacker",
                    "Condition": "Malware sophistication sufficient"
                }
            ],
            "Potential Impact": "Data corruption and unauthorized control of system operations.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Tampering",
                "Device",
                "Malware"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "CAN bus messages are intercepted and altered by an attacker, causing disruptive behavior in vehicle systems.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus communication is not encrypted or authenticated.",
                    "Role": "System designers",
                    "Condition": "Lack of secure communication protocols"
                },
                {
                    "Assumption": "Attacker has access to the physical CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical access to network"
                },
                {
                    "Assumption": "No anomaly detection mechanisms are in place to identify abnormal CAN traffic.",
                    "Role": "System designers",
                    "Condition": "Absence of anomaly detection"
                }
            ],
            "Potential Impact": "Unauthorized commands and interference with vehicle operations.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Tampering",
                "Network",
                "Injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Altered software updates for the infotainment system are downloaded from a compromised server.",
            "Assumptions": [
                {
                    "Assumption": "Software updates are obtained from a central server without verifying authenticity.",
                    "Role": "System designers",
                    "Condition": "No update authenticity verification"
                },
                {
                    "Assumption": "Attacker has compromised the server or update delivery mechanism.",
                    "Role": "Attacker",
                    "Condition": "Compromised delivery infrastructure"
                },
                {
                    "Assumption": "Vehicle downloads and installs updates automatically.",
                    "Role": "System configuration",
                    "Condition": "Automatic update installation"
                }
            ],
            "Potential Impact": "Introduction of malicious code and system instability.",
            "MITRE ATT&CK Keywords": [
                "Software Update",
                "Tampering",
                "Server",
                "Compromise"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having interacted with the infotainment system to perform a certain action, such as modifying settings or accessing certain data.",
            "Assumptions": [
                {
                    "Assumption": "System lacks fine-grained logging and auditing capabilities.",
                    "Role": "System designers",
                    "Condition": "Inadequate logging"
                },
                {
                    "Assumption": "No user authentication mechanism is in place to ensure actions are properly attributed.",
                    "Role": "System designers",
                    "Condition": "Absence of user authentication"
                },
                {
                    "Assumption": "Multiple users can interact with the system without individual accountability.",
                    "Role": "System users",
                    "Condition": "Shared or non-unique user access"
                }
            ],
            "Potential Impact": "Inability to trace actions back to a specific user, leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Accountability",
                "Auditing"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Logs of sensitive transactions within the infotainment system are altered to remove traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not implement tamper-evident features.",
                    "Role": "System designers",
                    "Condition": "Logs are not tamper-evident"
                },
                {
                    "Assumption": "Attacker has sufficient privileges to access and modify logs.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation achieved"
                },
                {
                    "Assumption": "System lacks continuous monitoring of log integrity.",
                    "Role": "System administrators",
                    "Condition": "Absence of log monitoring"
                }
            ],
            "Potential Impact": "Covering up unauthorized actions and potential system misuse.",
            "MITRE ATT&CK Keywords": [
                "Log Manipulation",
                "Repudiation",
                "Transaction",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Service Registry Permissions Weakness",
                "description": "Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe, [PowerShell](https://attack.mitre.org/techniques/T1086), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through Access Control Lists and permissions. (Citation: MSDN Registry Key Security)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, then adversaries can change the service binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter Registry keys associated with service failure parameters (such as <code>FailureCommand</code>) that may be executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: TrustedSignal Service Failure)(Citation: Twitter Service Recovery Nov 2017)",
                "id": "attack-pattern--39a130e1-6ab7-434a-8bd2-418e7d9d6427",
                "technique_id": "T1058"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial of service logs are obscured by an attacker to avoid detection of their blocking attempts.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanism does not send logs to a secure and immutable location.",
                    "Role": "System designers",
                    "Condition": "Logs stored only locally"
                },
                {
                    "Assumption": "Attacker has access to alter or delete local log files.",
                    "Role": "Attacker",
                    "Condition": "Log file access obtained"
                },
                {
                    "Assumption": "System does not have redundant logging to a secure remote server.",
                    "Role": "System designers",
                    "Condition": "No off-site logging"
                }
            ],
            "Potential Impact": "Hindrance in identifying and mitigating DoS attacks effectively.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "Repudiation",
                "Log Deletion",
                "Incident Obfuscation"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data such as personal user settings, contacts, or usage history is transmitted over unencrypted wireless communication channels.",
            "Assumptions": [
                {
                    "Assumption": "Wireless communications are not encrypted or use weak encryption.",
                    "Role": "System designers",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "Sensitive data is transmitted without additional protection mechanisms.",
                    "Role": "System designers",
                    "Condition": "Unprotected data transmission"
                },
                {
                    "Assumption": "Attacker is within range to intercept wireless communications.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                }
            ],
            "Potential Impact": "Compromise of user privacy and potential misuse of exposed data.",
            "MITRE ATT&CK Keywords": [
                "Wireless Eavesdropping",
                "Information Disclosure",
                "Unencrypted Data",
                "Interception"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the rear screen video buffer allows an attacker to view and capture media content being played.",
            "Assumptions": [
                {
                    "Assumption": "Video buffer is not adequately protected by access controls.",
                    "Role": "System designers",
                    "Condition": "Weak or no access controls"
                },
                {
                    "Assumption": "Attacker has physical access to the vehicle or proximity to intercept video buffer data.",
                    "Role": "Attacker",
                    "Condition": "Proximity or physical access"
                },
                {
                    "Assumption": "Buffer data is not encrypted or obfuscated.",
                    "Role": "System designers",
                    "Condition": "Unencrypted buffer"
                }
            ],
            "Potential Impact": "Unauthorized viewing or recording of media content.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Video Buffer",
                "Media Capture",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "CAN bus data containing sensitive vehicle metrics and operational data is intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus messages are not encrypted or obfuscated.",
                    "Role": "System designers",
                    "Condition": "Cleartext communication"
                },
                {
                    "Assumption": "Attacker can physically tap into the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical access to CAN bus"
                },
                {
                    "Assumption": "No intrusion detection systems are monitoring CAN bus traffic for anomalies.",
                    "Role": "System administrators",
                    "Condition": "Absence of IDS"
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data which can be exploited.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Eavesdropping",
                "Information Disclosure",
                "Vehicle Metrics"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the infotainment system with unnecessary network requests leading to system unresponsiveness.",
            "Assumptions": [
                {
                    "Assumption": "Network interfaces are not equipped with rate limiting or DoS prevention mechanisms.",
                    "Role": "System designers",
                    "Condition": "Absence of traffic control"
                },
                {
                    "Assumption": "Attacker has the capability to bombard the system with excessive traffic.",
                    "Role": "Attacker",
                    "Condition": "Adequate resources for attack"
                },
                {
                    "Assumption": "System does not have redundancy to handle high traffic loads.",
                    "Role": "System administrators",
                    "Condition": "Lack of system redundancy"
                }
            ],
            "Potential Impact": "Temporary suspension of services and unavailability of infotainment functionalities.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Flooding",
                "Network",
                "Availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious code injected via the infotainment system disrupts its operations, causing crash or reboot loops.",
            "Assumptions": [
                {
                    "Assumption": "System accepts executable code from untrusted sources.",
                    "Role": "System designers",
                    "Condition": "Lack of code validation"
                },
                {
                    "Assumption": "Attacker can exploit a vulnerability to inject code.",
                    "Role": "Attacker",
                    "Condition": "Presence of an exploit"
                },
                {
                    "Assumption": "System does not isolate or sandbox executed code.",
                    "Role": "System administrators",
                    "Condition": "No code isolation"
                }
            ],
            "Potential Impact": "System crashes, reboots, and continuous disruption of services.",
            "MITRE ATT&CK Keywords": [
                "Code Injection",
                "Denial of Service",
                "System Crash",
                "Exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "GPS jamming leads to loss of navigation capabilities, resulting in a DoS scenario for location-based services.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals are necessary for critical navigation functions.",
                    "Role": "System designers",
                    "Condition": "Dependence on GPS"
                },
                {
                    "Assumption": "Attacker possesses GPS jamming equipment.",
                    "Role": "Attacker",
                    "Condition": "Possession of jamming device"
                },
                {
                    "Assumption": "Vehicle lacks alternative navigation systems to mitigate GPS signal loss.",
                    "Role": "System designers",
                    "Condition": "No backup navigation"
                }
            ],
            "Potential Impact": "Disruption of navigation and safety-related services.",
            "MITRE ATT&CK Keywords": [
                "GPS Jamming",
                "Denial of Service",
                "Navigation",
                "Signal Disruption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit chain allows attacker to escalate privileges from a basic user to root within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "System contains unpatched vulnerabilities that allow privilege escalation.",
                    "Role": "System designers",
                    "Condition": "Presence of vulnerabilities"
                },
                {
                    "Assumption": "Attacker has initial access with basic user privileges.",
                    "Role": "Attacker",
                    "Condition": "Basic user access"
                },
                {
                    "Assumption": "No effective privilege separation and monitoring in place.",
                    "Role": "System administrators",
                    "Condition": "Lack of separation"
                }
            ],
            "Potential Impact": "Full control over system operations and sensitive data access.",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Root Access",
                "Vulnerability Exploitation",
                "System Control"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a flaw in the touch screen controller firmware to gain higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Firmware has a vulnerability that can be exploited.",
                    "Role": "System designers",
                    "Condition": "Vulnerable firmware"
                },
                {
                    "Assumption": "Attacker has the ability to interact with the touch screen controller.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote interaction capability"
                },
                {
                    "Assumption": "No integrity checks are performed on the touch screen controller firmware.",
                    "Role": "System designers",
                    "Condition": "Lack of integrity checks"
                }
            ],
            "Potential Impact": "Unauthorized access and potential modification of system behavior.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploit",
                "Elevation of Privilege",
                "Touch Screen Controller",
                "Access Management"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of Bluetooth module allows an attacker to elevate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth security controls are inadequately configured.",
                    "Role": "System designers",
                    "Condition": "Weak Bluetooth security"
                },
                {
                    "Assumption": "Attacker can establish a connection via Bluetooth.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth connection capability"
                },
                {
                    "Assumption": "System does not segregate Bluetooth module privileges properly.",
                    "Role": "System designers",
                    "Condition": "Poor privilege segregation"
                }
            ],
            "Potential Impact": "Unauthorized system control and potential data exposure.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth Exploit",
                "Elevation of Privilege",
                "Wireless",
                "Module Compromise"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the NFC or Bluetooth connection to gain unauthorized access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is in physical proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Valid when attacker has physical access within NFC/Bluetooth range."
                },
                {
                    "Assumption": "The OBC trusts incoming NFC/Bluetooth connections without strong authentication.",
                    "Role": "System",
                    "Condition": "Valid when insufficient authentication mechanisms are in place on OBC."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and control over infotainment system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "Bluetooth",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a GPS signal to mislead the navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a GPS spoofer device.",
                    "Role": "Attacker",
                    "Condition": "Valid when GPS spoofing devices are accessible to the attacker."
                },
                {
                    "Assumption": "The infotainment system does not validate GPS signals against other location data.",
                    "Role": "System",
                    "Condition": "Valid if GPS signal validation is not implemented."
                }
            ],
            "Potential Impact": "Misleading navigation data, potentially causing incorrect routing and driver confusion.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a Wi-Fi network to intercept communications between the infotainment system and the internet.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can set up a rogue Wi-Fi access point near the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Valid when the attacker is physically close and can create a rogue access point."
                },
                {
                    "Assumption": "The infotainment system automatically connects to available Wi-Fi networks without verification.",
                    "Role": "System",
                    "Condition": "Valid when automatic and unverified Wi-Fi connections are allowed."
                }
            ],
            "Potential Impact": "Interception of sensitive data and potential injection of malicious data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Wi-Fi",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a vulnerability in the software to modify the OBC firmware.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered a vulnerability in the system.",
                    "Role": "Attacker",
                    "Condition": "Valid when there are known vulnerabilities."
                },
                {
                    "Assumption": "The system does not have robust firmware protection mechanisms.",
                    "Role": "System",
                    "Condition": "Valid when firmware protections such as validation checks are weak or missing."
                }
            ],
            "Potential Impact": "Corruption or malicious modification of firmware, leading to compromised system integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "software",
                "OBC",
                "firmware"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to the vehicle and replaces the legitimate infotainment system with a compromised one.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can physically access and replace the infotainment system hardware.",
                    "Role": "Attacker",
                    "Condition": "Valid when attackers have sufficient time and tools to access the vehicle."
                },
                {
                    "Assumption": "The vehicle does not have tamper-evident features for its infotainment system.",
                    "Role": "System",
                    "Condition": "Valid if physical tamper protection is inadequate."
                }
            ],
            "Potential Impact": "Full control over the infotainment system and potential access to sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "physical",
                "hardware",
                "compromise"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters CAN bus messages between the OBC and vehicle subsystems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Valid when there are insufficient access controls on the CAN bus."
                },
                {
                    "Assumption": "The CAN bus messages are not encrypted or authenticated.",
                    "Role": "System",
                    "Condition": "Valid when message encryption or authentication is not implemented."
                }
            ],
            "Potential Impact": "Tampered data causing incorrect operation of vehicle subsystems.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN bus",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a command executed by the infotainment system due to lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "There is no robust logging or audit trail for commands.",
                    "Role": "System",
                    "Condition": "Valid when logging mechanisms are inadequate."
                },
                {
                    "Assumption": "The system does not enforce user authentication for critical actions.",
                    "Role": "System",
                    "Condition": "Valid if authentication checks for critical actions are weak or missing."
                }
            ],
            "Potential Impact": "Non-repudiation issues leading to disputes over actions taken on the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trail",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions on the infotainment system that cannot be traced back to them.",
            "Assumptions": [
                {
                    "Assumption": "There are no mechanisms to uniquely identify users.",
                    "Role": "System",
                    "Condition": "Valid when user identification is weak or not enforced."
                },
                {
                    "Assumption": "The system lacks detailed operational logging.",
                    "Role": "System",
                    "Condition": "Valid if logging of user actions is insufficient."
                }
            ],
            "Potential Impact": "Actions taken by the attacker cannot be attributed, leading to difficulties in forensic investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "forensics",
                "tracking",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user claims that unauthorized changes to their infotainment settings were not made by them.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log setting changes adequately.",
                    "Role": "System",
                    "Condition": "Valid if detailed logs for setting changes are missing."
                },
                {
                    "Assumption": "Different users share the same credentials or possess weak authentication policies.",
                    "Role": "System",
                    "Condition": "Valid when authentication enforcement is weak."
                }
            ],
            "Potential Impact": "Challenges in identifying the actual origin of setting changes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "settings",
                "logging",
                "identification"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted NFC or Bluetooth communications reveal sensitive data during transmission.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data is transmitted over NFC/Bluetooth without encryption.",
                    "Role": "System",
                    "Condition": "Valid if encryption is not enforced for data transmission."
                },
                {
                    "Assumption": "The attacker can eavesdrop on NFC/Bluetooth transmissions.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are inadequate measures to detect and prevent eavesdropping."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user information such as contacts or media content.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "NFC",
                "Bluetooth",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to GPS data provides the attacker's insight into vehicle location and driving patterns.",
            "Assumptions": [
                {
                    "Assumption": "The GPS data is accessible without requiring authenticated access.",
                    "Role": "System",
                    "Condition": "Valid when GPS data access controls are weak or missing."
                },
                {
                    "Assumption": "The attacker can connect to the system through physical or wireless means.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can establish a connection to the system."
                }
            ],
            "Potential Impact": "Privacy violation resulting in disclosure of vehicle location and movement patterns.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "GPS",
                "location",
                "tracking"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the Wi-Fi module allows an attacker to access data stored on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi module is vulnerable to attacks such as buffer overflow.",
                    "Role": "System",
                    "Condition": "Valid if the Wi-Fi module has known exploit vulnerabilities."
                },
                {
                    "Assumption": "Sensitive data is stored on the infotainment system without proper encryption.",
                    "Role": "System",
                    "Condition": "Valid when data encryption is not enforced."
                }
            ],
            "Potential Impact": "Compromise of stored user data such as media files, contacts, and personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "data",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the CAN bus with spurious messages, disrupting communication between the OBC and ECUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Valid when the attacker can physically or wirelessly connect to the CAN bus."
                },
                {
                    "Assumption": "The CAN bus lacks robust filtering mechanisms to prevent spurious messages.",
                    "Role": "System",
                    "Condition": "Valid if message filtering is weak or missing."
                }
            ],
            "Potential Impact": "Disruption of vehicle subsystem operations, potentially leading to malfunction or degraded performance.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN bus",
                "network",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a botnet-driven DDoS attack against the infotainment system's internet-facing components.",
            "Assumptions": [
                {
                    "Assumption": "The attacker controls a botnet capable of launching DDoS attacks.",
                    "Role": "Attacker",
                    "Condition": "Valid when the attacker has botnet resources."
                },
                {
                    "Assumption": "Internet-facing components are exposed without adequate DDoS mitigation measures.",
                    "Role": "System",
                    "Condition": "Valid if the system lacks DDoS protection."
                }
            ],
            "Potential Impact": "Unavailability of internet services, affecting navigation, media streaming, and communication features.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "botnet",
                "internet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a software vulnerability to crash the OBC, rendering the infotainment system unusable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows a specific vulnerability in the OBC software.",
                    "Role": "Attacker",
                    "Condition": "Valid when there are known software vulnerabilities."
                },
                {
                    "Assumption": "The OBC software is not resilient to exploitation attempts or crashes.",
                    "Role": "System",
                    "Condition": "Valid when software resilience measures are absent."
                }
            ],
            "Potential Impact": "System crash leading to unavailability of the infotainment system's features.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "software",
                "OBC",
                "crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the OBC through an unpatched vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified an unpatched vulnerability in the OBC.",
                    "Role": "Attacker",
                    "Condition": "Valid when there are known but unpatched vulnerabilities."
                },
                {
                    "Assumption": "The system lacks mechanisms to restrict privilege escalation.",
                    "Role": "System",
                    "Condition": "Valid when privilege escalation protections are weak or non-existent."
                }
            ],
            "Potential Impact": "Full control over the OBC, enabling unauthorized actions and data access.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "root",
                "OBC",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker connects to the system through Wi-Fi and escalates privileges using weak authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can successfully connect to the Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Valid when there are insufficient Wi-Fi security measures."
                },
                {
                    "Assumption": "Authentication and access control mechanisms are weak.",
                    "Role": "System",
                    "Condition": "Valid if authentication enforcement is inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access and control over system functions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Wi-Fi",
                "authentication",
                "access control"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised app installed on the infotainment system escalates its privileges using a flaw in the system\u2019s OS.",
            "Assumptions": [
                {
                    "Assumption": "The compromised app can be installed on the infotainment system.",
                    "Role": "System",
                    "Condition": "Valid if app installation checks are weak."
                },
                {
                    "Assumption": "The OS has a vulnerability that allows privilege escalation.",
                    "Role": "System",
                    "Condition": "Valid if the OS is vulnerable to privilege escalation attacks."
                }
            ],
            "Potential Impact": "Compromised app gains control, leading to data breach and system compromise.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "app",
                "OS",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a rogue Wi-Fi access point to trick the infotainment system into connecting to it.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's Wi-Fi module is set to automatically connect to known networks.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Default Wi-Fi settings are used."
                },
                {
                    "Assumption": "The attacker is within wireless range of the target vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the attack target."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "wireless",
                "network",
                "rogue access point"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses Bluetooth spoofing techniques to impersonate a trusted device.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's Bluetooth module lacks strong authentication mechanisms.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Vulnerable Bluetooth security settings are in use."
                },
                {
                    "Assumption": "The attacker knows how to clone Bluetooth MAC addresses.",
                    "Role": "Attacker",
                    "Condition": "Technical knowledge of Bluetooth spoofing."
                }
            ],
            "Potential Impact": "Unauthorized device access and data theft.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker leverages NFC spoofing to inject malicious commands into the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The OBC accepts NFC inputs without proper validation.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Insecure NFC input handling."
                },
                {
                    "Assumption": "The attacker has physical access to the vehicle or can get close enough to it.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the target vehicle."
                }
            ],
            "Potential Impact": "Unauthorized commands execution and system compromise.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device",
                "commands"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious firmware into the On-Board Computer (OBC) to manipulate its functions.",
            "Assumptions": [
                {
                    "Assumption": "The OBC has a vulnerability that allows firmware updates without proper authentication.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Firmware update mechanism is insecure."
                },
                {
                    "Assumption": "The attacker has access to the firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Access to firmware delivery channels."
                }
            ],
            "Potential Impact": "Device malfunction and unauthorized control over vehicle systems.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "OBC",
                "system"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies CAN Bus messages to interfere with vehicle subsystem communications.",
            "Assumptions": [
                {
                    "Assumption": "The CAN Bus is not encrypted or authenticated.",
                    "Role": "Vehicle network configuration",
                    "Condition": "Poor CAN Bus security."
                },
                {
                    "Assumption": "The attacker has access to the CAN Bus interface.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the CAN Bus network."
                }
            ],
            "Potential Impact": "Corruption of data and potentially catastrophic vehicle malfunctions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "network",
                "ECUs"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the touch screen data to send fake inputs to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller does not validate input data.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Touch screen inputs are not thoroughly checked."
                },
                {
                    "Assumption": "The attacker can physically reach the touch screen or exploit remote vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the touch screen."
                }
            ],
            "Potential Impact": "Incorrect system actions and potential user harm.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "touch screen",
                "inputs",
                "controller"
            ],
            "mitre_technique": {
                "name": "Hooking",
                "description": "Windows processes often leverage application programming interface (API) functions to perform tasks that require reusable system resources. Windows API functions are typically stored in dynamic-link libraries (DLLs) as exported functions. \n\nHooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs. (Citation: Microsoft Hook Overview) (Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored. (Citation: Elastic Process Injection July 2017) (Citation: Adlice Software IAT Hooks Oct 2014) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow. (Citation: Elastic Process Injection July 2017) (Citation: HighTech Bridge Inline Hooking Sept 2011) (Citation: MWRInfoSecurity Dynamic Hooking 2015)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), adversaries may use hooking to load and execute malicious code within the context of another process, masking the execution while also allowing access to the process's memory and possibly elevated privileges. Installing hooking mechanisms may also provide Persistence via continuous invocation when the functions are called through normal use.\n\nMalicious hooking mechanisms may also capture API calls that include parameters that reveal user authentication credentials for Credential Access. (Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017)\n\nHooking is commonly utilized by [Rootkit](https://attack.mitre.org/techniques/T1014)s to conceal files, processes, Registry keys, and other objects in order to hide malware and associated behaviors. (Citation: Symantec Windows Rootkits)",
                "id": "attack-pattern--66f73398-8394-4711-85e5-34c8540b22a5",
                "technique_id": "T1179"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses the infotainment system without leaving any traceable logs.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not log sufficient details of user actions.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Inadequate logging policies."
                },
                {
                    "Assumption": "The attacker knows how to conceal their actions.",
                    "Role": "Attacker",
                    "Condition": "Technical knowledge of log evasion techniques."
                }
            ],
            "Potential Impact": "Difficulty in tracking unauthorized actions and maintaining accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "evasion",
                "forensics"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker clears or modifies system logs to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The OBC allows modification of system logs without adequate protections.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Log files are not protected against tampering."
                },
                {
                    "Assumption": "The attacker has sufficient access to modify system logs.",
                    "Role": "Attacker",
                    "Condition": "Access to the log storage or logging system interface."
                }
            ],
            "Potential Impact": "Loss of event history and lack of evidence for incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "modification",
                "evasion"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits a vulnerability to disable logging on the OBC.",
            "Assumptions": [
                {
                    "Assumption": "There exists a vulnerability that can be exploited to disable logging.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Known or unknown logging vulnerabilities."
                },
                {
                    "Assumption": "The attacker is knowledgeable about exploiting this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Attacker's technical proficiency."
                }
            ],
            "Potential Impact": "No records of activities for forensic analysis and troubleshooting.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Disabling Security Tools",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "technique_id": "T1089"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on Wi-Fi communications to capture unencrypted data.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi communications are not encrypted with strong encryption protocols.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Weak or no encryption is used."
                },
                {
                    "Assumption": "The attacker is within range to capture Wi-Fi signals.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the target vehicle."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user or system data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "eavesdropping",
                "unencrypted data"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts CAN Bus messages containing sensitive vehicle information.",
            "Assumptions": [
                {
                    "Assumption": "The CAN Bus does not use encryption or secure messaging protocols.",
                    "Role": "Vehicle network configuration",
                    "Condition": "Lack of CAN Bus message security."
                },
                {
                    "Assumption": "The attacker has access to the CAN Bus interface.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to the CAN Bus network."
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle operation data that could be used maliciously.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "CAN Bus",
                "network",
                "messages"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the Bluetooth module to access private user data.",
            "Assumptions": [
                {
                    "Assumption": "A vulnerability exists in the Bluetooth module that allows unauthorized access.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Presence of exploitable Bluetooth vulnerabilities."
                },
                {
                    "Assumption": "The attacker can exploit the vulnerability remotely or from close proximity.",
                    "Role": "Attacker",
                    "Condition": "Access to the Bluetooth signal range."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal user information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "vulnerability",
                "data access"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Wi-Fi interface with requests, causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi module is susceptible to flood attack vectors.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Inadequate protection against flood attacks."
                },
                {
                    "Assumption": "The attacker can generate sufficient network traffic.",
                    "Role": "Attacker",
                    "Condition": "Ability to perform network flood attacks."
                }
            ],
            "Potential Impact": "Disruption of Wi-Fi services and degradation of user experience.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "flooding",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker jams the Bluetooth signal to cause communication failures.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth module does not have countermeasures against signal jamming.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Lack of anti-jamming measures."
                },
                {
                    "Assumption": "The attacker has the equipment to jam Bluetooth frequencies.",
                    "Role": "Attacker",
                    "Condition": "Access to Bluetooth jamming devices."
                }
            ],
            "Potential Impact": "Disruption of Bluetooth communications affecting user connectivity.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "jamming",
                "communication"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends a flood of malformed CAN Bus messages causing network congestion.",
            "Assumptions": [
                {
                    "Assumption": "The CAN Bus lacks mechanisms to detect and handle malformed messages.",
                    "Role": "Vehicle network configuration",
                    "Condition": "Insufficient message validation."
                },
                {
                    "Assumption": "The attacker has access to the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to CAN Bus."
                }
            ],
            "Potential Impact": "Disruption of vehicle subsystems and potential operational hazards.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "flooding",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the OBC through an unpatched vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "A known or unknown vulnerability exists in the OBC firmware or software.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Presence of security vulnerabilities."
                },
                {
                    "Assumption": "The attacker can execute an exploit targeting this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical capability to exploit OBC vulnerabilities."
                }
            ],
            "Potential Impact": "Complete control over the infotainment system and potentially other vehicle systems.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting a Bluetooth service vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth service has a vulnerability that can be exploited for privilege escalation.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Presence of exploitable Bluetooth service vulnerabilities."
                },
                {
                    "Assumption": "The attacker is within range to exploit the Bluetooth vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Proximity or remote Bluetooth access."
                }
            ],
            "Potential Impact": "Unauthorized access to system functions and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Bluetooth",
                "vulnerability",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Component Object Model",
                "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",
                "id": "attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64",
                "technique_id": "T1559.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised NFC module to gain elevated access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The NFC module does not adequately secure its communication channels.",
                    "Role": "Infotainment system configuration",
                    "Condition": "Vulnerable NFC communication protocols."
                },
                {
                    "Assumption": "The attacker has the capability to compromise the NFC interaction.",
                    "Role": "Attacker",
                    "Condition": "Technical proficiency in NFC attacks."
                }
            ],
            "Potential Impact": "Unauthorized access to higher-level system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFC",
                "vulnerability",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Bluetooth device to take control of the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle"
                },
                {
                    "Assumption": "The attacker has the technical capability to create a Bluetooth spoofing device.",
                    "Role": "Attacker",
                    "Condition": "Attacker's skill level"
                },
                {
                    "Assumption": "The vehicle's Bluetooth connection does not have adequate authentication mechanisms.",
                    "Role": "System",
                    "Condition": "Weak or no Bluetooth security configurations"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, possible control of infotainment functions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Bluetooth",
                "Device control",
                "Wireless communication"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends malicious GPS signals to spoof the vehicle's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a GPS signal spoofer.",
                    "Role": "Attacker",
                    "Condition": "Access to spoofing hardware"
                },
                {
                    "Assumption": "The vehicle relies heavily on GPS data without cross-verifying the data.",
                    "Role": "System",
                    "Condition": "Inadequate data validation"
                },
                {
                    "Assumption": "The GPS signal is not encrypted or otherwise secured.",
                    "Role": "System",
                    "Condition": "Unsecured GPS signals"
                }
            ],
            "Potential Impact": "Incorrect navigation directions, leading to potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "GPS",
                "Navigation",
                "Signal interference"
            ],
            "mitre_technique": {
                "name": "Forced Authentication",
                "description": "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\n\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\[remote address]\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)",
                "id": "attack-pattern--b77cf5f3-6060-475d-bd60-40ccbf28fdc2",
                "technique_id": "T1187"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a known NFC tag to unlock premium features without authorization.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's NFC authentication relies on tag recognition.",
                    "Role": "System",
                    "Condition": "Dependency on NFC for feature control"
                },
                {
                    "Assumption": "The attacker has access to a programmable NFC tag.",
                    "Role": "Attacker",
                    "Condition": "Physical access to NFC device"
                },
                {
                    "Assumption": "NFC communications are not encrypted or adequately protected.",
                    "Role": "System",
                    "Condition": "Weak or no encryption on NFC"
                }
            ],
            "Potential Impact": "Unauthorized access to premium features, potential revenue loss for OEM.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "NFC",
                "Unauthorized access",
                "Device theft"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the OBC to introduce malicious functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to update the firmware.",
                    "Role": "Attacker",
                    "Condition": "Physical/remote access to OBC"
                },
                {
                    "Assumption": "The firmware update process does not validate the source or content.",
                    "Role": "System",
                    "Condition": "Lack of firmware validation"
                },
                {
                    "Assumption": "The malicious firmware bypasses existing security controls.",
                    "Role": "Attacker",
                    "Condition": "Capability to design evasion techniques"
                }
            ],
            "Potential Impact": "Compromised system integrity, potential for arbitrary code execution.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "OBC",
                "Code injection"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data on the CAN bus to manipulate vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the vehicle's CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to CAN bus"
                },
                {
                    "Assumption": "The CAN bus messages are not encrypted or authenticated.",
                    "Role": "System",
                    "Condition": "Unsecured CAN bus communication"
                },
                {
                    "Assumption": "The vehicle's critical functions rely on data from the CAN bus.",
                    "Role": "System",
                    "Condition": "Dependency on CAN bus data"
                }
            ],
            "Potential Impact": "Incorrect vehicle behavior, potential safety hazards and data integrity loss.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "CAN bus",
                "Network communication",
                "Vehicle control"
            ],
            "mitre_technique": {
                "name": "DNS Server",
                "description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)",
                "id": "attack-pattern--c2f59d25-87fe-44aa-8f83-e8e59d077bf5",
                "technique_id": "T1584.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies multimedia files to execute a code upon playback.",
            "Assumptions": [
                {
                    "Assumption": "The multimedia files lack integrity checks.",
                    "Role": "System",
                    "Condition": "No integrity verification on files"
                },
                {
                    "Assumption": "The player does not sandbox the playback environment.",
                    "Role": "System",
                    "Condition": "Inadequate sandboxing and isolation"
                },
                {
                    "Assumption": "The attacker has the capability to craft malicious media files.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise in media file crafting"
                }
            ],
            "Potential Impact": "Execution of arbitrary code, potential data breach or denial of service.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Multimedia",
                "Code execution",
                "File injection"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a command that resulted in unauthorized vehicle control.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust logging and monitoring.",
                    "Role": "System",
                    "Condition": "Insufficient logging mechanisms"
                },
                {
                    "Assumption": "The attacker or user has access to the command interface.",
                    "Role": "User/Attacker",
                    "Condition": "Access to interface"
                },
                {
                    "Assumption": "There are no measures to ensure command authenticity.",
                    "Role": "System",
                    "Condition": "Lack of command validation"
                }
            ],
            "Potential Impact": "Difficulty in tracing malicious activities, potential legal and security concerns.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Authentication",
                "Command execution",
                "Audit logs"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates infotainment logs to cover their unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the infotainment system logs.",
                    "Role": "Attacker",
                    "Condition": "Access to system logs"
                },
                {
                    "Assumption": "The system does not protect the integrity of log files.",
                    "Role": "System",
                    "Condition": "Unprotected log files"
                },
                {
                    "Assumption": "There are no redundant logging mechanisms in place.",
                    "Role": "System",
                    "Condition": "Single point of logging"
                }
            ],
            "Potential Impact": "Obfuscation of attack traces, difficulty in forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log manipulation",
                "Forensic evasion",
                "Data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having accessed sensitive data through the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "There is no user authentication mechanism for access tracking.",
                    "Role": "System",
                    "Condition": "Lack of user authentication"
                },
                {
                    "Assumption": "Access logs are not properly maintained or are missing.",
                    "Role": "System",
                    "Condition": "Insufficient log maintenance"
                },
                {
                    "Assumption": "Sensitive data access events are not logged.",
                    "Role": "System",
                    "Condition": "No logging for sensitive data access"
                }
            ],
            "Potential Impact": "Inability to track unauthorized data accesses, potential data exposure issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Sensitive data access",
                "Audit logs",
                "User authentication"
            ],
            "mitre_technique": {
                "name": "Log Enumeration",
                "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agent\u2019s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.",
                "id": "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969",
                "technique_id": "T1654"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on unencrypted Wi-Fi communication between the infotainment system and external networks.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi communication is not encrypted.",
                    "Role": "System",
                    "Condition": "Unencrypted Wi-Fi communication"
                },
                {
                    "Assumption": "The attacker is within range of the Wi-Fi signal.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle"
                },
                {
                    "Assumption": "The attacker possesses Wi-Fi sniffing tools.",
                    "Role": "Attacker",
                    "Condition": "Access to Wi-Fi sniffing tools"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data transmitted over Wi-Fi.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Wi-Fi",
                "Encryption",
                "Data interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the CAN bus and intercepts sensitive operational data.",
            "Assumptions": [
                {
                    "Assumption": "The CAN bus communication is unencrypted.",
                    "Role": "System",
                    "Condition": "Unsecured CAN bus communication"
                },
                {
                    "Assumption": "The attacker has physical or network access to the CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN bus"
                },
                {
                    "Assumption": "The attacker has tools for CAN bus sniffing.",
                    "Role": "Attacker",
                    "Condition": "Technological capability"
                }
            ],
            "Potential Impact": "Exposure of operational data, potential misuse of sensitive vehicle information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "CAN bus",
                "Data interception",
                "Vehicle communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits an unsecured Bluetooth pairing process to leak sensitive device data.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth pairing process lacks adequate security.",
                    "Role": "System",
                    "Condition": "Weak Bluetooth security configurations"
                },
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle"
                },
                {
                    "Assumption": "The attacker has Bluetooth sniffing tools.",
                    "Role": "Attacker",
                    "Condition": "Capabilities to sniff Bluetooth traffic"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive device data shared via Bluetooth.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Bluetooth",
                "Device data",
                "Data interception"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the cellular network interface with requests, causing the infotainment system to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows the IP address or cellular network details of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of network details"
                },
                {
                    "Assumption": "The system does not have adequate rate-limiting or DDoS protection mechanisms.",
                    "Role": "System",
                    "Condition": "Lack of DDoS protection"
                },
                {
                    "Assumption": "The cellular network bandwidth is limited.",
                    "Role": "System",
                    "Condition": "Limited network resources"
                }
            ],
            "Potential Impact": "Disruption of infotainment services, potential safety hazards due to distraction.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Cellular network",
                "Network flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the OBC firmware to cause a system crash.",
            "Assumptions": [
                {
                    "Assumption": "The firmware vulnerability is known and exploitable.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of vulnerability"
                },
                {
                    "Assumption": "The attacker has access to the OBC.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access"
                },
                {
                    "Assumption": "The OBC does not have adequate exploitation protection mechanisms.",
                    "Role": "System",
                    "Condition": "Lack of security patches"
                }
            ],
            "Potential Impact": "System crashes causing interruption in infotainment services and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Firmware vulnerability",
                "OBC",
                "System crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker transmits malformed data packets over the CAN bus to disable vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The CAN bus does not validate packet integrity.",
                    "Role": "System",
                    "Condition": "Unprotected CAN bus communication"
                },
                {
                    "Assumption": "The attacker can access the CAN bus physically or through a network.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN bus"
                },
                {
                    "Assumption": "There are critical vehicle functions that are reliant on CAN bus signals.",
                    "Role": "System",
                    "Condition": "Dependency on CAN bus data"
                }
            ],
            "Potential Impact": "Disruption of vehicle functions, potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN bus",
                "Malformed data",
                "Vehicle control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the touch screen controller to gain unauthorized access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller has a known exploitable vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of vulnerability"
                },
                {
                    "Assumption": "The attacker has physical access to the touch screen.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the interface"
                },
                {
                    "Assumption": "There are no mitigations in place to restrict access from the touch screen controller to the OBC.",
                    "Role": "System",
                    "Condition": "Lack of isolation"
                }
            ],
            "Potential Impact": "Unauthorized access and potential control over the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Touch screen",
                "Controller vulnerability",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses NFC to introduce a malicious payload that exploits a privilege escalation vulnerability in the system.",
            "Assumptions": [
                {
                    "Assumption": "NFC communications are inadequately secured.",
                    "Role": "System",
                    "Condition": "Unprotected NFC communication"
                },
                {
                    "Assumption": "The attacker has access to an NFC device and is within range.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the vehicle"
                },
                {
                    "Assumption": "There is an exploitable vulnerability in the system to allow escalation.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and exploitation of vulnerability"
                }
            ],
            "Potential Impact": "Compromised vehicle control through elevated privileges.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "NFC",
                "Payload",
                "Privilege escalation"
            ],
            "mitre_technique": {
                "name": "Embedded Payloads",
                "description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
                "id": "attack-pattern--0533ab23-3f7d-463f-9bd8-634d27e4dee1",
                "technique_id": "T1027.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a Bluetooth vulnerability to escalate privileges and gain administrative access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth interface has a known vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of Bluetooth vulnerability"
                },
                {
                    "Assumption": "The attacker is within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the vehicle"
                },
                {
                    "Assumption": "There is no adequate security control to mitigate unauthorized Bluetooth access.",
                    "Role": "System",
                    "Condition": "Weak Bluetooth security"
                }
            ],
            "Potential Impact": "Complete control over the infotainment system, with possible spread to other vehicle systems.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Bluetooth",
                "Administrative access",
                "Privilege escalation"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a rogue Wi-Fi hotspot to impersonate the vehicle's trusted Wi-Fi network.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's Wi-Fi connection is not using strong encryption.",
                    "Role": "Attacker",
                    "Condition": "The vehicle is in range of the attacker's Wi-Fi hotspot."
                },
                {
                    "Assumption": "Users connect to available Wi-Fi without verifying its authenticity.",
                    "Role": "User",
                    "Condition": "Users are unaware of the potential threat."
                }
            ],
            "Potential Impact": "Unauthorized access to data and potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Rogue Access Point",
                "Man-in-the-Middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts NFC communications to impersonate authorized devices.",
            "Assumptions": [
                {
                    "Assumption": "NFC communications are not encrypted or use weak encryption.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within NFC range of the vehicle."
                },
                {
                    "Assumption": "There are no mechanisms to validate the authenticity of NFC devices.",
                    "Role": "On-Board Computer (OBC)",
                    "Condition": "NFC devices are trusted by default."
                }
            ],
            "Potential Impact": "Unauthorized control of the infotainment system and potential data exposure.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device",
                "NFC",
                "Impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Bluetooth device to gain access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system automatically pairs with nearby Bluetooth devices.",
                    "Role": "Infotainment System",
                    "Condition": "Bluetooth devices are not manually verified."
                },
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "The attacker can initiate a pairing request."
                }
            ],
            "Potential Impact": "Compromise of sensitive data and potential system control.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Device",
                "Bluetooth",
                "Pairing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malware through a connected USB device.",
            "Assumptions": [
                {
                    "Assumption": "The USB port accepts input without proper validation.",
                    "Role": "Attacker",
                    "Condition": "The vehicle allows unknown USB devices to connect."
                },
                {
                    "Assumption": "Users connect USB devices without considering security implications.",
                    "Role": "User",
                    "Condition": "Users need to transfer data or charge devices."
                }
            ],
            "Potential Impact": "Malware execution leading to data corruption and system compromise.",
            "MITRE ATT&CK Keywords": [
                "Injection",
                "Device",
                "USB",
                "Malware"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker accesses the CAN bus to alter vehicle subsystem commands.",
            "Assumptions": [
                {
                    "Assumption": "The CAN bus does not have robust authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The attacker has physical access to the vehicle."
                },
                {
                    "Assumption": "Electronic control units (ECUs) within the vehicle implicitly trust messages from the CAN bus.",
                    "Role": "Vehicle Subsystem",
                    "Condition": "ECUs do not validate message authenticity."
                }
            ],
            "Potential Impact": "Manipulation of vehicle controls and compromised vehicle operation.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Vehicle",
                "CAN Bus",
                "ECU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies firmware updates to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are not signed or validated.",
                    "Role": "On-Board Computer (OBC)",
                    "Condition": "Firmware update process does not check for authenticity."
                },
                {
                    "Assumption": "The update mechanism allows over-the-air updates without strong security measures.",
                    "Role": "Attacker",
                    "Condition": "The attacker can intercept and modify update traffic."
                }
            ],
            "Potential Impact": "Compromise of system functionality and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "Firmware",
                "Tampering",
                "Update",
                "Malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a specific command to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The system does not keep detailed logs of user commands.",
                    "Role": "Infotainment System",
                    "Condition": "Logging mechanisms are disabled or not comprehensive."
                },
                {
                    "Assumption": "Commands are executed without user authentication.",
                    "Role": "User",
                    "Condition": "Not all commands require user verification."
                }
            ],
            "Potential Impact": "Difficulty in tracing actions, potentially leading to unauthorized usage without accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log",
                "Command",
                "Authentication"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker alters log files to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not securely stored.",
                    "Role": "Infotainment System",
                    "Condition": "Logging mechanisms are vulnerable to tampering."
                },
                {
                    "Assumption": "The system lacks integrity checks for log files.",
                    "Role": "Infotainment System",
                    "Condition": "No integrity verification is performed on log data."
                }
            ],
            "Potential Impact": "Loss of audit trails and difficulty in investigating unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "Log",
                "Tampering",
                "Audit",
                "Integrity"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party service provider denies responsibility for a software update causing system malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Third-party updates are not verified for integrity and authenticity.",
                    "Role": "Infotainment System",
                    "Condition": "The update process lacks robust verification."
                },
                {
                    "Assumption": "There is no contractual logging or auditing of update deployments.",
                    "Role": "Service Provider",
                    "Condition": "Service agreements do not mandate detailed logging."
                }
            ],
            "Potential Impact": "Accountability issues and difficulty in determining fault or malpractice.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Update",
                "Third-Party",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted data transmission over the vehicle's Wi-Fi.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi data transmissions are not encrypted.",
                    "Role": "Infotainment System",
                    "Condition": "The system relies on insecure communication channels."
                },
                {
                    "Assumption": "Attackers can easily position themselves within range of the Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "The vehicle is in a public or insecure location."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Wi-Fi",
                "Intercept",
                "Unencrypted"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is accessible through an unsecured Bluetooth connection.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connections are not properly secured.",
                    "Role": "Infotainment System",
                    "Condition": "Bluetooth data transmission is unencrypted or uses weak security."
                },
                {
                    "Assumption": "The system allows easy pairing without user verification.",
                    "Role": "User",
                    "Condition": "Users pair devices without security checks."
                }
            ],
            "Potential Impact": "Compromise of user privacy and sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Information Disclosure",
                "Pairing",
                "Unsecured"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Location data from the GPS module is leaked due to insecure data handling.",
            "Assumptions": [
                {
                    "Assumption": "GPS data is transmitted without encryption.",
                    "Role": "Infotainment System",
                    "Condition": "No encryption protocols are applied to GPS data."
                },
                {
                    "Assumption": "Data handling processes do not consider privacy implications.",
                    "Role": "Vehicle System",
                    "Condition": "Data is shared with third parties without proper anonymization."
                }
            ],
            "Potential Impact": "Exposure of user location and route information.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "Information Disclosure",
                "Location Data",
                "Unsecured"
            ],
            "mitre_technique": {
                "name": "Downgrade Attack",
                "description": "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation. \n\nAdversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) or [Network Sniffing](https://attack.mitre.org/techniques/T1040).(Citation: Praetorian TLS Downgrade Attack 2014) For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL) which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)\n\nAdversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.(Citation: Targeted SSL Stripping Attacks Are Real)(Citation: Crowdstrike Downgrade)",
                "id": "attack-pattern--824add00-99a1-4b15-9a2d-6c5683b7b497",
                "technique_id": "T1562.010"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack targets the vehicle's cellular network connectivity.",
            "Assumptions": [
                {
                    "Assumption": "Vehicle connectivity relies on cellular networks for critical functions.",
                    "Role": "Infotainment System",
                    "Condition": "Cellular data is essential for system operations."
                },
                {
                    "Assumption": "The system does not have mitigation strategies for DDoS attacks.",
                    "Role": "Infotainment System",
                    "Condition": "DDoS protections are not implemented or inadequate."
                }
            ],
            "Potential Impact": "Disruption of internet connectivity and related services.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Cellular Network",
                "DDoS",
                "Connectivity"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the CAN bus with high volumes of messages, causing disruption.",
            "Assumptions": [
                {
                    "Assumption": "The CAN bus does not have sufficient bandwidth management.",
                    "Role": "Vehicle System",
                    "Condition": "No rate limiting on CAN bus messages."
                },
                {
                    "Assumption": "The vehicle's ECUs cannot distinguish between legitimate and malicious traffic.",
                    "Role": "Electronic Control Units (ECUs)",
                    "Condition": "No filtering mechanisms are in place."
                }
            ],
            "Potential Impact": "Interruption of vehicle subsystems and compromised safety.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN Bus",
                "Flooding",
                "Vehicle Subsystems"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware installed on the infotainment system consumes resources, causing system slowdown.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not have adequate malware protection.",
                    "Role": "Infotainment System",
                    "Condition": "Insufficient antivirus or antimalware solutions."
                },
                {
                    "Assumption": "Malware can exhaust system resources unchecked.",
                    "Role": "Attacker",
                    "Condition": "The system is vulnerable to resource-based attacks."
                }
            ],
            "Potential Impact": "Degraded system performance and reduced availability of services.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Resource Exhaustion",
                "Malware",
                "System Slowdown"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the touch screen controller to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller has unpatched vulnerabilities.",
                    "Role": "Infotainment System",
                    "Condition": "Security patches have not been applied."
                },
                {
                    "Assumption": "Attackers have knowledge of the specific vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation techniques are publicly available."
                }
            ],
            "Potential Impact": "Unauthorized administrative control and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Vulnerability Exploitation",
                "Touch Screen",
                "Administrative Access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the OBC by exploiting firmware vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "The OBC firmware is outdated and has known security flaws.",
                    "Role": "On-Board Computer (OBC)",
                    "Condition": "Firmware updates are not regularly performed."
                },
                {
                    "Assumption": "There are no controls to prevent root access exploitation.",
                    "Role": "Vehicle System",
                    "Condition": "Existing security measures are inadequate."
                }
            ],
            "Potential Impact": "Complete system compromise and unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Firmware",
                "Root Access",
                "System Compromise"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "The attacker uses a weakly encrypted Bluetooth connection to escalate privileges and control other connected devices.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connections use weak or no encryption.",
                    "Role": "Infotainment System",
                    "Condition": "Security settings are not configured properly."
                },
                {
                    "Assumption": "Attacker has the ability to connect to the Bluetooth network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to the vehicle's Bluetooth signal."
                }
            ],
            "Potential Impact": "Compromised security of other devices and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Bluetooth",
                "Weak Encryption",
                "Device Control"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs NFC communication to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC communication is active",
                    "Role": "Attacker",
                    "Condition": "Valid if NFC is not secure."
                },
                {
                    "Assumption": "Proximity to the vehicle",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is close enough to the vehicle to intercept NFC signals."
                },
                {
                    "Assumption": "Lack of mutual authentication",
                    "Role": "System",
                    "Condition": "Valid if the NFC implementation does not require mutual authentication."
                }
            ],
            "Potential Impact": "Unauthorized access and control over infotainment features.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Wireless Communication",
                "NFC",
                "Device Authentication"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Wi-Fi access point to intercept communication between the infotainment system and external networks.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system scans for available Wi-Fi networks",
                    "Role": "System",
                    "Condition": "Valid if automatic Wi-Fi scanning is enabled."
                },
                {
                    "Assumption": "Weak or no encryption on public Wi-Fi",
                    "Role": "System",
                    "Condition": "Valid if using unsecured Wi-Fi connections."
                },
                {
                    "Assumption": "User connects to untrusted Wi-Fi",
                    "Role": "User",
                    "Condition": "Valid if users are unaware of the risks of connecting to unrecognized Wi-Fi networks."
                }
            ],
            "Potential Impact": "Eavesdropping and interception of sensitive data such as personal information, navigation history, and emails.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Man-in-the-Middle",
                "Wi-Fi",
                "Network Interception"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a GPS signal to mislead the vehicle's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "GPS receivers rely on unencrypted signals",
                    "Role": "System",
                    "Condition": "Valid if GPS signals are not encrypted or authenticated."
                },
                {
                    "Assumption": "No secondary validation",
                    "Role": "System",
                    "Condition": "Valid if the system does not cross-check GPS data with other sources."
                },
                {
                    "Assumption": "Attacker has GPS spoofing equipment",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker possesses the necessary tools to spoof GPS signals."
                }
            ],
            "Potential Impact": "Misleading navigation data, potentially causing the vehicle to take incorrect routes or become lost.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "GPS",
                "Signal Manipulation",
                "Navigation System"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to the OBC and tampers with the firmware.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the vehicle's OBC",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can physically access the OBC."
                },
                {
                    "Assumption": "No secure boot process",
                    "Role": "System",
                    "Condition": "Valid if the system lacks secure boot mechanisms."
                },
                {
                    "Assumption": "Firmware is not encrypted",
                    "Role": "System",
                    "Condition": "Valid if the firmware is stored unencrypted."
                }
            ],
            "Potential Impact": "System instability, inclusion of malware, or unauthorized modification of system behavior.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Physical Access",
                "Device Manipulation"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies CAN bus messages to disrupt communication between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Access to the CAN bus network",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can physically or wirelessly connect to the CAN bus."
                },
                {
                    "Assumption": "No message authentication",
                    "Role": "System",
                    "Condition": "Valid if the CAN bus messages are not authenticated."
                },
                {
                    "Assumption": "Lack of encryption on CAN bus",
                    "Role": "System",
                    "Condition": "Valid if the CAN bus data is unencrypted."
                }
            ],
            "Potential Impact": "Incorrect data received by ECUs, leading to malfunction of vehicle subsystems.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "CAN Bus",
                "ECU",
                "Network Messages"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code through the infotainment system's software update process.",
            "Assumptions": [
                {
                    "Assumption": "Remote software update capability",
                    "Role": "System",
                    "Condition": "Valid if remote updates are enabled."
                },
                {
                    "Assumption": "Weak or no digital signatures",
                    "Role": "System",
                    "Condition": "Valid if software updates are not cryptographically signed."
                },
                {
                    "Assumption": "No secure channels for updates",
                    "Role": "System",
                    "Condition": "Valid if updates are downloaded over unsecured channels."
                }
            ],
            "Potential Impact": "Malware infection, data corruption, or unauthorized control of the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Software Update",
                "Malware Injection",
                "Remote Access"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies responsibility for unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Lack of detailed access logs",
                    "Role": "System",
                    "Condition": "Valid if the system does not log access attempts comprehensively."
                },
                {
                    "Assumption": "Insufficient authentication",
                    "Role": "System",
                    "Condition": "Valid if authentication methods are weak or nonexistent."
                },
                {
                    "Assumption": "Shared access credentials",
                    "Role": "User",
                    "Condition": "Valid if users often share authentication credentials."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions to specific users, complicating incident response and accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "User Authentication",
                "Access Logs",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Log Enumeration",
                "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agent\u2019s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.",
                "id": "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969",
                "technique_id": "T1654"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A passenger denies sending specific commands through the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Multiple users can access the system",
                    "Role": "System",
                    "Condition": "Valid if the system is designed for multi-user access."
                },
                {
                    "Assumption": "No user action logging",
                    "Role": "System",
                    "Condition": "Valid if user actions are not logged."
                },
                {
                    "Assumption": "No individual user authentication",
                    "Role": "System",
                    "Condition": "Valid if the system does not authenticate each user separately."
                }
            ],
            "Potential Impact": "Inability to verify the authenticity of actions or commands issued through the system.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Command Logging",
                "Authentication",
                "Multi-User Access"
            ],
            "mitre_technique": {
                "name": "Authentication Package",
                "description": "Windows Authentication Package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system. (Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA Authentication Packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=<target binary></code>. The binary will then be executed by the system when the authentication packages are loaded.",
                "id": "attack-pattern--52d40641-c480-4ad5-81a3-c80ccaddf82d",
                "technique_id": "T1131"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party provider denies providing a malicious software update.",
            "Assumptions": [
                {
                    "Assumption": "Use of third-party software components",
                    "Role": "System",
                    "Condition": "Valid if the system relies on third-party software."
                },
                {
                    "Assumption": "Inadequate vetting of third-party software",
                    "Role": "System",
                    "Condition": "Valid if third-party software is not thoroughly vetted."
                },
                {
                    "Assumption": "No update provenance verification",
                    "Role": "System",
                    "Condition": "Valid if the origin of software updates is not verified."
                }
            ],
            "Potential Impact": "Challenges in identifying the source of contaminated software and holding responsible parties accountable.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Third-Party Software",
                "Malicious Updates",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Upload Malware",
                "description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",
                "id": "attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e",
                "technique_id": "T1608.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data (navigation history, personal info) is exposed due to an insecure Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "Usage of unsecured Wi-Fi networks",
                    "Role": "User",
                    "Condition": "Valid if users connect to unsecured networks."
                },
                {
                    "Assumption": "No encrypted communication",
                    "Role": "System",
                    "Condition": "Valid if the data transmission over Wi-Fi is not encrypted."
                },
                {
                    "Assumption": "Presence of an eavesdropping attacker",
                    "Role": "Attacker",
                    "Condition": "Valid if there is an attacker actively monitoring the Wi-Fi network."
                }
            ],
            "Potential Impact": "Confidentiality breach as sensitive personal data is exposed to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Wi-Fi Security",
                "Unencrypted Data",
                "Eavesdropping"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the infotainment system to access stored sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable software components",
                    "Role": "System",
                    "Condition": "Valid if the software has known or unknown vulnerabilities."
                },
                {
                    "Assumption": "No secure data storage",
                    "Role": "System",
                    "Condition": "Valid if sensitive data is stored unencrypted or without proper protection."
                },
                {
                    "Assumption": "Attack is able to execute",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities can be exploited remotely or locally."
                }
            ],
            "Potential Impact": "Data breach leading to unauthorized disclosure of sensitive user and system information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Vulnerability Exploitation",
                "Data Breach",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Bluetooth communication is intercepted, leading to leakage of personal audio and communication data.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted Bluetooth communication",
                    "Role": "System",
                    "Condition": "Valid if Bluetooth communication is not encrypted."
                },
                {
                    "Assumption": "Attacker within range",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is within Bluetooth range of the vehicle."
                },
                {
                    "Assumption": "Lack of connection protection",
                    "Role": "System",
                    "Condition": "Valid if Bluetooth connections do not use strong protection mechanisms."
                }
            ],
            "Potential Impact": "Personal conversations and multimedia data are exposed to unauthorized listeners.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Bluetooth",
                "Unencrypted Communication",
                "Personal Data"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Wi-Fi module with excessive traffic, disrupting the infotainment system's connectivity.",
            "Assumptions": [
                {
                    "Assumption": "Internet-facing Wi-Fi module",
                    "Role": "System",
                    "Condition": "Valid if the Wi-Fi module is exposed to the internet."
                },
                {
                    "Assumption": "No rate limiting or DDoS protections",
                    "Role": "System",
                    "Condition": "Valid if the Wi-Fi module lacks protections against excessive traffic."
                },
                {
                    "Assumption": "Attacker can generate sufficient traffic",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can generate a high volume of traffic."
                }
            ],
            "Potential Impact": "Disruption of internet connectivity, affecting navigation, communication, and entertainment features.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Wi-Fi",
                "Traffic Flooding",
                "Connectivity Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed data packets to the CAN bus, causing ECU communication failures.",
            "Assumptions": [
                {
                    "Assumption": "Access to the CAN bus network",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can connect to the CAN bus."
                },
                {
                    "Assumption": "No data validation on CAN bus",
                    "Role": "System",
                    "Condition": "Valid if the CAN bus does not validate incoming data packets."
                },
                {
                    "Assumption": "Attacker can generate malformed packets",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can create and transmit malformed data packets."
                }
            ],
            "Potential Impact": "Communication between ECUs is disrupted, potentially leading to malfunction of critical vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN Bus",
                "Malformed Packets",
                "ECU Communication"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability to crash the infotainment system, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "Presence of software vulnerabilities",
                    "Role": "System",
                    "Condition": "Valid if there are unpatched vulnerabilities in the system software."
                },
                {
                    "Assumption": "Attacker can exploit the vulnerability",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can access and exploit the vulnerability."
                },
                {
                    "Assumption": "No mitigation for software crashes",
                    "Role": "System",
                    "Condition": "Valid if the system lacks mechanisms to prevent or recover from crashes."
                }
            ],
            "Potential Impact": "Infotainment system becomes unresponsive, affecting all dependent functionalities such as navigation and entertainment.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Vulnerability Exploitation",
                "System Crash",
                "Software Vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains higher-level access to the infotainment system through a security flaw, allowing unauthorized operations.",
            "Assumptions": [
                {
                    "Assumption": "System contains privilege escalation vulnerabilities",
                    "Role": "System",
                    "Condition": "Valid if the system has unpatched privilege escalation flaws."
                },
                {
                    "Assumption": "Attacker has initial limited access",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has some form of initial access."
                },
                {
                    "Assumption": "Lack of privilege separation",
                    "Role": "System",
                    "Condition": "Valid if the system does not enforce strict privilege separation."
                }
            ],
            "Potential Impact": "Attacker performs unauthorized actions, potentially compromising system integrity and functionality.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Privilege Escalation",
                "Security Flaw",
                "Unauthorized Operations"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised Bluetooth connection to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connection is not secure",
                    "Role": "System",
                    "Condition": "Valid if the Bluetooth communication lacks robust security measures."
                },
                {
                    "Assumption": "Initial access through Bluetooth",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can establish a connection via Bluetooth."
                },
                {
                    "Assumption": "Available privilege escalation path",
                    "Role": "System",
                    "Condition": "Valid if there is a path for privilege escalation from Bluetooth access."
                }
            ],
            "Potential Impact": "Attacker gains higher privileges, allowing manipulation of critical system components and data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Bluetooth",
                "Compromised Connection",
                "Privilege Escalation Path"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software bug to achieve root access on the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable software bugs",
                    "Role": "System",
                    "Condition": "Valid if the system has unpatched software bugs."
                },
                {
                    "Assumption": "Attacker can trigger the bug",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can interact with the system to exploit the bug."
                },
                {
                    "Assumption": "No robust access control mechanisms",
                    "Role": "System",
                    "Condition": "Valid if the system lacks strong access control measures."
                }
            ],
            "Potential Impact": "Root access enables full control over the system, facilitating extensive unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Software Bug",
                "Root Access",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate ECU on the CAN Bus, sending false messages to the On-Board Computer, resulting in unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus",
                    "Role": "Attacker",
                    "Condition": "Physical access to the vehicle's internal network"
                },
                {
                    "Assumption": "The CAN Bus protocol lacks authentication",
                    "Role": "System Architect",
                    "Condition": "Protocol design without authentication mechanisms"
                },
                {
                    "Assumption": "No anomaly detection for CAN Bus messages",
                    "Role": "System Administrator",
                    "Condition": "Lack of anomaly detection systems"
                }
            ],
            "Potential Impact": "Compromise of vehicle operations, potential safety hazards",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "CAN Bus",
                "vehicle network",
                "ECU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofed GPS signals could provide incorrect navigation data to the infotainment system, leading to wrong directions or location-based service disruptions.",
            "Assumptions": [
                {
                    "Assumption": "Attacker is within range to transmit GPS signals",
                    "Role": "Attacker",
                    "Condition": "Close geographic proximity"
                },
                {
                    "Assumption": "The infotainment system treats any detected GPS signal as legitimate",
                    "Role": "System Architect",
                    "Condition": "Lack of GPS signal validation"
                },
                {
                    "Assumption": "No secondary validation for GPS signals",
                    "Role": "System Administrator",
                    "Condition": "Absence of dual-source validation"
                }
            ],
            "Potential Impact": "Incorrect navigation data, potential safety concerns",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "signal interception"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof NFC signals to interact with the On-Board Computer, potentially gaining unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within NFC range",
                    "Role": "Attacker",
                    "Condition": "Near the vehicle"
                },
                {
                    "Assumption": "NFC authentication is not robust",
                    "Role": "System Architect",
                    "Condition": "Weak authentication mechanisms"
                },
                {
                    "Assumption": "No additional checks for NFC interactions",
                    "Role": "System Administrator",
                    "Condition": "Lack of multi-factor authentication"
                }
            ],
            "Potential Impact": "Unauthorized system access, potential data breaches",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device access",
                "infotainment system"
            ],
            "mitre_technique": {
                "name": "Device Registration",
                "description": "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user\u2019s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)\n\nSimilarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) \n\nDevices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",
                "id": "attack-pattern--7decb26c-715c-40cf-b7e0-026f7d7cc215",
                "technique_id": "T1098.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware on the On-Board Computer, leading to unauthorized system behavior.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains physical or remote access to the OBC",
                    "Role": "Attacker",
                    "Condition": "Physical presence or wireless access"
                },
                {
                    "Assumption": "Weak or no firmware validation mechanisms",
                    "Role": "System Architect",
                    "Condition": "Lack of cryptographic checks"
                },
                {
                    "Assumption": "No secure boot mechanism present",
                    "Role": "System Administrator",
                    "Condition": "Absence of secure boot procedures"
                }
            ],
            "Potential Impact": "Compromised system integrity, potential control loss",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "OBC",
                "system control"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious app installation via Bluetooth connection allows the attacker to alter infotainment system settings and behavior.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to pair with Bluetooth",
                    "Role": "Attacker",
                    "Condition": "Within Bluetooth range"
                },
                {
                    "Assumption": "Weak app installation controls",
                    "Role": "System Architect",
                    "Condition": "Inadequate app permissions"
                },
                {
                    "Assumption": "No runtime integrity checks",
                    "Role": "System Administrator",
                    "Condition": "Absence of integrity verification systems"
                }
            ],
            "Potential Impact": "Altered user experience and data integrity",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "Bluetooth",
                "app installation",
                "infotainment"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromise of the video buffer leading to unauthorized video display to rear screens.",
            "Assumptions": [
                {
                    "Assumption": "Attackers gain access to the video buffer",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access"
                },
                {
                    "Assumption": "Weak segregation of video buffer",
                    "Role": "System Architect",
                    "Condition": "Poorly isolated video handling"
                },
                {
                    "Assumption": "No validation of video content origin",
                    "Role": "System Administrator",
                    "Condition": "Lack of content validation"
                }
            ],
            "Potential Impact": "Unauthorized content display, potential distractions",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "video buffer",
                "content display",
                "infotainment"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of proper logging allows an attacker to deny actions taken on the infotainment system, such as installing unauthorized software.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient or disabled logging mechanisms",
                    "Role": "System Architect",
                    "Condition": "Logging not prioritized"
                },
                {
                    "Assumption": "Attackers can perform actions without leaving traces",
                    "Role": "Attacker",
                    "Condition": "Actions not logged"
                },
                {
                    "Assumption": "No tamper-evident logs",
                    "Role": "System Administrator",
                    "Condition": "Logs can be modified or deleted"
                }
            ],
            "Potential Impact": "Denial of actions, difficulty in forensics",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "unauthorized software",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Driver actions on the touch screen are not logged, allowing users to deny interactive commands (e.g., disabling safety features).",
            "Assumptions": [
                {
                    "Assumption": "No logging of touch screen interactions",
                    "Role": "System Architect",
                    "Condition": "No interactive logging implemented"
                },
                {
                    "Assumption": "Attackers have means to interfere without detection",
                    "Role": "Attacker",
                    "Condition": "Interfere without leaving evidence"
                },
                {
                    "Assumption": "No multi-user accountability",
                    "Role": "System Administrator",
                    "Condition": "Shared user actions not tracked"
                }
            ],
            "Potential Impact": "Denial of misuse, unsafe system states",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "touch screen",
                "user actions",
                "interaction logging"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Audio commands via the car's microphone are not tracked, enabling denial of user-issued voice commands.",
            "Assumptions": [
                {
                    "Assumption": "Voice commands are not logged",
                    "Role": "System Architect",
                    "Condition": "Design excludes voice logging"
                },
                {
                    "Assumption": "No tamper-proof evidence of audio commands",
                    "Role": "System Administrator",
                    "Condition": "Logs can be altered"
                },
                {
                    "Assumption": "Attackers can issue voice commands undetected",
                    "Role": "Attacker",
                    "Condition": "Presence without identification"
                }
            ],
            "Potential Impact": "Denial of issued commands, lack of accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "voice commands",
                "microphone",
                "audio logging"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted Wi-Fi communication exposes sensitive data to nearby eavesdroppers.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi communication is not encrypted",
                    "Role": "System Architect",
                    "Condition": "No encryption enforced"
                },
                {
                    "Assumption": "Attackers are within Wi-Fi range",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Sensitive data is transmitted via Wi-Fi",
                    "Role": "System User",
                    "Condition": "Data transmitted over Wi-Fi"
                }
            ],
            "Potential Impact": "Unauthorized data access, potential data breaches",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "unencrypted communication",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "GPS data intercepted via cellular network communication reveals vehicle location and routes.",
            "Assumptions": [
                {
                    "Assumption": "Cellular network traffic is insecure",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "Attackers can intercept cellular signals",
                    "Role": "Attacker",
                    "Condition": "Knowledge and tools for interception"
                },
                {
                    "Assumption": "GPS data is communicated over cellular network",
                    "Role": "System User",
                    "Condition": "Use of GPS services"
                }
            ],
            "Potential Impact": "Disclosure of sensitive location information",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "GPS",
                "cellular network",
                "location data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Microphone misuse could lead to unauthorized audio recording exposing sensitive conversations within the vehicle.",
            "Assumptions": [
                {
                    "Assumption": "Microphone data is not adequately protected",
                    "Role": "System Architect",
                    "Condition": "Design flaw or oversight"
                },
                {
                    "Assumption": "Attackers gain access to the microphone",
                    "Role": "Attacker",
                    "Condition": "Access via wireless or physical methods"
                },
                {
                    "Assumption": "No real-time monitoring of audio recording",
                    "Role": "System Administrator",
                    "Condition": "Lack of monitoring systems"
                }
            ],
            "Potential Impact": "Exposure of sensitive audio information",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "microphone",
                "audio recording",
                "privacy breach"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the cellular network interface with traffic to exhaust resources, causing the infotainment system to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Cellular interface is not rate-limited",
                    "Role": "System Architect",
                    "Condition": "No limits enforced"
                },
                {
                    "Assumption": "Attackers have means to generate high traffic volume",
                    "Role": "Attacker",
                    "Condition": "Access to traffic generation tools"
                },
                {
                    "Assumption": "No DoS protection mechanisms",
                    "Role": "System Administrator",
                    "Condition": "Absence of DoS mitigation"
                }
            ],
            "Potential Impact": "System unavailability, disrupted services",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cellular network",
                "traffic flooding",
                "unresponsive system"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of high-CPU computational tasks on the OBC to exhaust processing resources, leading to system slowdowns or crashes.",
            "Assumptions": [
                {
                    "Assumption": "OBC lacks resource limitation measures",
                    "Role": "System Architect",
                    "Condition": "No computational limits set"
                },
                {
                    "Assumption": "Attackers can run demanding computations",
                    "Role": "Attacker",
                    "Condition": "Access to system resources"
                },
                {
                    "Assumption": "No real-time resource usage monitoring",
                    "Role": "System Administrator",
                    "Condition": "Lack of monitoring tools"
                }
            ],
            "Potential Impact": "Degraded performance, potential system crashes",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "OBC",
                "high CPU usage",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the touch screen interface with inputs, causing the interface controller to become overwhelmed and unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Touch screen input handling is not rate-limited",
                    "Role": "System Architect",
                    "Condition": "No rate limits on input"
                },
                {
                    "Assumption": "Attackers can simulate numerous touch inputs",
                    "Role": "Attacker",
                    "Condition": "Access to touch interface"
                },
                {
                    "Assumption": "No input sanity checks",
                    "Role": "System Administrator",
                    "Condition": "Lack of validation"
                }
            ],
            "Potential Impact": "Interface unavailability, degraded user experience",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "touch screen",
                "input flooding",
                "unresponsive interface"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in the Wi-Fi module firmware to gain higher privileges on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi firmware contains exploitable vulnerabilities",
                    "Role": "System Architect",
                    "Condition": "Unpatched firmware"
                },
                {
                    "Assumption": "Attackers have network access to Wi-Fi module",
                    "Role": "Attacker",
                    "Condition": "Within Wi-Fi range and knowledge of exploit"
                },
                {
                    "Assumption": "No privilege separation in system design",
                    "Role": "System Administrator",
                    "Condition": "Lack of privilege separation mechanisms"
                }
            ],
            "Potential Impact": "Unauthorized system control, potential full system compromise",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Wi-Fi",
                "firmware exploit",
                "system control"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising Bluetooth communication to escalate privileges to higher system functionalities in the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth security flaws present",
                    "Role": "System Architect",
                    "Condition": "Vulnerable Bluetooth implementation"
                },
                {
                    "Assumption": "Attackers can pair with Bluetooth",
                    "Role": "Attacker",
                    "Condition": "Access to Bluetooth range"
                },
                {
                    "Assumption": "No multifactor authentication for higher privileges",
                    "Role": "System Administrator",
                    "Condition": "Single-factor authentication"
                }
            ],
            "Potential Impact": "Advanced system operation control, unauthorized access",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Bluetooth",
                "communication exploit",
                "system functionality"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Using compromised NFC interactions to gain unauthorized access and control over the infotainment system's core functionalities.",
            "Assumptions": [
                {
                    "Assumption": "NFC lacks secure authentication protocols",
                    "Role": "System Architect",
                    "Condition": "Weak NFC security"
                },
                {
                    "Assumption": "Attackers are within NFC range",
                    "Role": "Attacker",
                    "Condition": "Close proximity to the vehicle"
                },
                {
                    "Assumption": "System lacks monitoring for NFC-based access",
                    "Role": "System Administrator",
                    "Condition": "No intrusion detection"
                }
            ],
            "Potential Impact": "Unauthorized core system control, potential data theft",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFC",
                "interaction exploit",
                "core system control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized device to connect to the OBC via Bluetooth.",
            "Assumptions": [
                {
                    "Assumption": "The attacker's device is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Attacker is physically close enough to establish a Bluetooth connection."
                },
                {
                    "Assumption": "The attacker has the technical capability to spoof a Bluetooth device.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to software/hardware tools for Bluetooth spoofing."
                }
            ],
            "Potential Impact": "Unauthorized access to infotainment features and possible control over connected systems.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "Bluetooth",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs NFC signals to access sensitive data stored on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC communication is enabled on the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "NFC functionality is active."
                },
                {
                    "Assumption": "The attacker has a device capable of emulating NFC signals.",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses necessary NFC emulation tools."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data such as user preferences, contacts, and communication logs.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and replays GPS signals to alter the vehicle's perceived location.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is in a position to intercept GPS signals intended for the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Attacker is geographically close or has elevation access."
                },
                {
                    "Assumption": "The attacker has equipment capable of transmitting spoofed GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses GPS spoofing tools."
                }
            ],
            "Potential Impact": "Navigation deception and potential rerouting to unsafe or unintended destinations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "signal",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious software is installed on the On-Board Computer (OBC) through a compromised firmware update.",
            "Assumptions": [
                {
                    "Assumption": "The firmware update mechanism does not verify the integrity of the update.",
                    "Role": "Application Developer",
                    "Condition": "Update mechanism lacks integrity verification checks."
                },
                {
                    "Assumption": "The attacker has access to the firmware distribution system.",
                    "Role": "Attacker",
                    "Condition": "Attacker infiltrates the firmware distribution channel."
                }
            ],
            "Potential Impact": "Compromise of system operations and potential control over vehicle subsystems.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to the vehicle and modifies the CAN Bus signals.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the vehicle's internal components is not sufficiently restricted.",
                    "Role": "Vehicle Owner",
                    "Condition": "Vehicle lacks physical security measures."
                },
                {
                    "Assumption": "The attacker has the knowledge to alter CAN Bus communication.",
                    "Role": "Attacker",
                    "Condition": "Attacker is knowledgeable about CAN Bus protocols."
                }
            ],
            "Potential Impact": "Disruption of vehicle control systems, leading to unsafe driving conditions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "signal",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters Wi-Fi communications between the OBC and external networks.",
            "Assumptions": [
                {
                    "Assumption": "Encryption is not enforced on Wi-Fi communications.",
                    "Role": "Application Developer",
                    "Condition": "Wi-Fi data transmission is unencrypted."
                },
                {
                    "Assumption": "The attacker is within the acceptable Wi-Fi range.",
                    "Role": "Attacker",
                    "Condition": "Attacker can access the vehicle's Wi-Fi signals."
                }
            ],
            "Potential Impact": "Altered data leading to misinformation and potential control over infotainment features.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "Wi-Fi",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies making specific settings changes or in-app purchases on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not maintained or are easily altered.",
                    "Role": "Application Developer",
                    "Condition": "Absence of comprehensive logging mechanisms."
                },
                {
                    "Assumption": "The system lacks user authentication tracking.",
                    "Role": "Application Developer",
                    "Condition": "User actions are not linked to authenticated sessions."
                }
            ],
            "Potential Impact": "Disputes over user actions, potentially leading to financial disputes and trust issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "authentication",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Logs of vehicle telemetry data are altered to hide evidence of tampering by the attacker.",
            "Assumptions": [
                {
                    "Assumption": "Telemetry data logs are stored without integrity checks.",
                    "Role": "Application Developer",
                    "Condition": "Data logs are not protected by integrity mechanisms."
                },
                {
                    "Assumption": "The attacker has access to modify log data.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains write access to log storage."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, making it difficult to trace the source of an attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "telemetry",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates communication logs to obscure unauthorized access attempts.",
            "Assumptions": [
                {
                    "Assumption": "Communication logs are stored without encryption.",
                    "Role": "Application Developer",
                    "Condition": "Logs are not encrypted."
                },
                {
                    "Assumption": "The attacker can access and alter log files.",
                    "Role": "Attacker",
                    "Condition": "Attacker has sufficient permissions."
                }
            ],
            "Potential Impact": "Obfuscation of unauthorized activities leading to untraceable breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "communication",
                "access attempts"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data such as contact information and personal preferences is exposed via unencrypted NFC communications.",
            "Assumptions": [
                {
                    "Assumption": "The NFC communication does not use encryption.",
                    "Role": "Application Developer",
                    "Condition": "NFC transmissions are plaintext."
                },
                {
                    "Assumption": "Attacker can intercept NFC signals.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within NFC range."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal information, leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "NFC",
                "communication",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Wi-Fi network traffic between the OBC and external services is intercepted, revealing user credentials and vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi traffic is transmitted without encryption.",
                    "Role": "Application Developer",
                    "Condition": "Data is in plaintext over the network."
                },
                {
                    "Assumption": "The attacker has the capability to sniff Wi-Fi traffic.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within Wi-Fi range."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, enabling further attacks and compromises.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "network traffic",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious app accesses GPS data without proper permissions, exposing user location history.",
            "Assumptions": [
                {
                    "Assumption": "GPS data is accessible to apps without strict permission checks.",
                    "Role": "Application Developer",
                    "Condition": "Permissions are poorly implemented."
                },
                {
                    "Assumption": "A malicious app is installed on the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Infotainment system allows third-party app installations."
                }
            ],
            "Potential Impact": "Unauthorized tracking of user movements leading to privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "GPS",
                "location data",
                "application"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the CAN Bus network with spurious messages, overwhelming vehicle control systems.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus does not have rate limiting or protection mechanisms.",
                    "Role": "Application Developer",
                    "Condition": "Network lacks controls against message flooding."
                },
                {
                    "Assumption": "Attacker can inject messages into the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains access to network injection points."
                }
            ],
            "Potential Impact": "Loss of communication between vehicle subsystems, leading to unresponsive or unsafe driving conditions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "network",
                "flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the Wi-Fi module to initiate a DoS attack, preventing the OBC from accessing external networks.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi module lacks protections against DoS attacks.",
                    "Role": "Application Developer",
                    "Condition": "No DoS protection mechanisms implemented."
                },
                {
                    "Assumption": "The attacker can initiate Wi-Fi based attacks.",
                    "Role": "Attacker",
                    "Condition": "Attacker has tools to exploit Wi-Fi vulnerabilities."
                }
            ],
            "Potential Impact": "Disruption of infotainment services reliant on external connectivity.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "network",
                "connectivity"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A ransomware attack encrypts critical system files on the OBC, rendering the infotainment system inoperable.",
            "Assumptions": [
                {
                    "Assumption": "No effective anti-ransomware measures are in place.",
                    "Role": "Application Developer",
                    "Condition": "Lack of robust cybersecurity defenses against ransomware."
                },
                {
                    "Assumption": "The attacker can deliver and execute ransomware on the OBC.",
                    "Role": "Attacker",
                    "Condition": "Attacker exploits system vulnerabilities."
                }
            ],
            "Potential Impact": "Complete loss of infotainment system functionality until a ransom is paid or files are restored.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ransomware",
                "OBC",
                "encryption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting a vulnerability in the touchscreen controller software.",
            "Assumptions": [
                {
                    "Assumption": "Touchscreen controller software has known vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "Presence of unpatched security flaws."
                },
                {
                    "Assumption": "The attacker has basic access to the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Attacker can interact with the system."
                }
            ],
            "Potential Impact": "Attacker gains unauthorized control over infotainment system settings and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "touchscreen",
                "software"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a flaw in the Wi-Fi module's firmware to gain root access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi module firmware contains exploitable vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "Firmware is outdated or improperly secured."
                },
                {
                    "Assumption": "The attacker can communicate with the Wi-Fi module.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within Wi-Fi range."
                }
            ],
            "Potential Impact": "Full control over the infotainment system, allowing unauthorized changes and data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "Wi-Fi",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a Bluetooth vulnerability to execute code with elevated privileges on the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth implementation has security weaknesses.",
                    "Role": "Application Developer",
                    "Condition": "Known vulnerabilities in Bluetooth stack."
                },
                {
                    "Assumption": "The attacker can establish a Bluetooth connection with the OBC.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle with active Bluetooth."
                }
            ],
            "Potential Impact": "Compromise of the OBC, leading to potential control of the vehicle's infotainment and connected systems.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "Bluetooth",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be an authorized external device using Bluetooth to gain access to system functionalities and data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a Bluetooth device with capabilities to emulate authorized devices.",
                    "Role": "Attacker",
                    "Condition": "Within Bluetooth range of the vehicle"
                },
                {
                    "Assumption": "Bluetooth authentication mechanisms are inadequate or bypassable.",
                    "Role": "System",
                    "Condition": "Bluetooth protocols and configurations have vulnerabilities"
                }
            ],
            "Potential Impact": "Unauthorized access to system functionalities, data disclosure risk.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "spoofing",
                "device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a malicious Wi-Fi hotspot to intercept communication between the infotainment system and an external network.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle connects to unsecured or compromised Wi-Fi networks.",
                    "Role": "Vehicle",
                    "Condition": "Within range of a malicious hotspot"
                },
                {
                    "Assumption": "Wi-Fi connection lacks proper authentication methods.",
                    "Role": "System",
                    "Condition": "Wi-Fi protocols have exploitable weaknesses"
                }
            ],
            "Potential Impact": "Data interception, potential data manipulation, unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "network",
                "spoofing",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor simulates GPS signals to provide the vehicle with incorrect location data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to GPS signal emulation hardware.",
                    "Role": "Attacker",
                    "Condition": "Within proximity to vehicle\u2019s GPS receiver"
                },
                {
                    "Assumption": "GPS signal authentication is weak or absent.",
                    "Role": "System",
                    "Condition": "GPS protocols allow for spoofing"
                }
            ],
            "Potential Impact": "Navigation errors, potential for misdirection, risk to passenger safety.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "spoofing",
                "location",
                "injection"
            ],
            "mitre_technique": {
                "name": "Match Legitimate Name or Location",
                "description": "Adversaries may match or approximate the name or location of legitimate files or resources when naming/placing them. This is done for the sake of evading defenses and observation. This may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: svchost.exe). In containerized environments, this may also be done by creating a resource in a namespace that matches the naming convention of a container pod or cluster. Alternatively, a file or container image name given may be a close approximation to legitimate programs/images or something innocuous.\n\nAdversaries may also use the same icon of the file they are trying to mimic.",
                "id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
                "technique_id": "T1036.005"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits vulnerabilities in the touchscreen controller to inject malicious commands.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical or remote access to the touchscreen.",
                    "Role": "Attacker",
                    "Condition": "Access to the vehicle or communication channels"
                },
                {
                    "Assumption": "Touchscreen has exploitable security vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched or poorly secured firmware"
                }
            ],
            "Potential Impact": "Alteration of system settings, unauthorized commands, compromised system integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "injection",
                "firmware"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the CAN Bus network and sends malicious instructions to ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to vehicle or a compromised device on the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Direct access to the network"
                },
                {
                    "Assumption": "CAN Bus network lacks adequate security measures.",
                    "Role": "System",
                    "Condition": "Lack of encryption or authentication in CAN protocols"
                }
            ],
            "Potential Impact": "Disruption of vehicle subsystems, potential damage to vehicle components, manipulation of vehicle behavior.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "tampering",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts OTA (Over-The-Air) software updates and injects malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has control over or access to the OTA distribution path.",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle\u2019s update communication channels"
                },
                {
                    "Assumption": "OTA updates lack proper integrity checks.",
                    "Role": "System",
                    "Condition": "Weak or absent update verification mechanisms"
                }
            ],
            "Potential Impact": "Compromise of system integrity, unauthorized system modifications, potential for backdoors and rootkits.",
            "MITRE ATT&CK Keywords": [
                "OTA",
                "tampering",
                "software",
                "injection"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver makes changes to the infotainment system settings, but later denies doing so.",
            "Assumptions": [
                {
                    "Assumption": "Lack of proper logging of user actions.",
                    "Role": "System",
                    "Condition": "Logging and auditing mechanisms are inadequate"
                },
                {
                    "Assumption": "No authentication to link actions to specific users.",
                    "Role": "System",
                    "Condition": "Weak or nonexistent user authentication"
                }
            ],
            "Potential Impact": "Difficulty in forensic analysis, accountability issues, potential exploitation of settings.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "repudiation",
                "user actions",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious application communicates with the infotainment system but denies sending commands that caused undesirable actions.",
            "Assumptions": [
                {
                    "Assumption": "Application actions are not logged or monitored.",
                    "Role": "System",
                    "Condition": "Inadequate logging or monitoring systems"
                },
                {
                    "Assumption": "No cryptographic signatures for application communication.",
                    "Role": "System",
                    "Condition": "No mechanisms for verifying application messages"
                }
            ],
            "Potential Impact": "Difficulty identifying malicious intent, potential for repeated exploitation, loss of trust in system actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "application",
                "logging",
                "cryptographic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Network communication logs altered to remove records of malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to log files.",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle or network storage"
                },
                {
                    "Assumption": "Logging infrastructure allows alterations without detection.",
                    "Role": "System",
                    "Condition": "Weak logging security and lack of integrity checks"
                }
            ],
            "Potential Impact": "Forensic evidence tampering, hindered incident response, loss of valid audit trail.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "network",
                "repudiation",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data like contact lists and messages intercepted over insecure Bluetooth connections.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth traffic is not encrypted.",
                    "Role": "System",
                    "Condition": "Inadequate or lack of encryption mechanisms"
                },
                {
                    "Assumption": "Attacker within Bluetooth range with interception tools.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                }
            ],
            "Potential Impact": "Unauthorized data disclosure, privacy violations, potential for targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "disclosure",
                "data",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of GPS data stream, revealing vehicle location.",
            "Assumptions": [
                {
                    "Assumption": "GPS data transmitted in clear text.",
                    "Role": "System",
                    "Condition": "Lack of encryption or obfuscation"
                },
                {
                    "Assumption": "Attacker has tools for intercepting GPS data.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle or through network"
                }
            ],
            "Potential Impact": "Location tracking, privacy invasion, potential for physical security threats.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "disclosure",
                "location",
                "interception"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to the rear screen video buffer, displaying sensitive media to unintended viewers.",
            "Assumptions": [
                {
                    "Assumption": "Rear screen communication lacks proper authentication.",
                    "Role": "System",
                    "Condition": "No control over display access"
                },
                {
                    "Assumption": "Attacker has access to the interface controlling rear screens.",
                    "Role": "Attacker",
                    "Condition": "Physical or network proximity"
                }
            ],
            "Potential Impact": "Exposure of private or sensitive media, user privacy breach, potential embarrassment or distress.",
            "MITRE ATT&CK Keywords": [
                "disclosure",
                "media",
                "privacy",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the CAN Bus network with invalid messages, disrupting communication between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical access to the vehicle or a compromised device on the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Direct access to the network"
                },
                {
                    "Assumption": "CAN Bus lacks adequate DoS protection measures.",
                    "Role": "System",
                    "Condition": "Weakness in message validation"
                }
            ],
            "Potential Impact": "Interruption of vehicle subsystems, potential safety risks, overall vehicle instability.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "CAN Bus",
                "network",
                "traffic"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Continuous bombardment of the OBC with excessive NFC communication requests causing resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "Attacker within NFC range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "NFC communication lacks rate limiting or proper authentication.",
                    "Role": "System",
                    "Condition": "Poor NFC secure configuration"
                }
            ],
            "Potential Impact": "System unresponsiveness, degraded infotainment performance, driver distraction.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "NFC",
                "resource",
                "network"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious apps use Wi-Fi and cellular modules to consume maximum available bandwidth, causing network latency.",
            "Assumptions": [
                {
                    "Assumption": "Malicious apps running on the vehicle's infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Compromised app environment"
                },
                {
                    "Assumption": "No bandwidth usage monitoring or limitations.",
                    "Role": "System",
                    "Condition": "Lack of usage policies and monitoring"
                }
            ],
            "Potential Impact": "Network slowdown, reduced communication efficacy, impact on streaming and real-time services.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "Wi-Fi",
                "cellular",
                "network"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in the Touch Screen Controller to gain root access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Touch Screen Controller firmware is vulnerable to attacks.",
                    "Role": "Attacker",
                    "Condition": "Unpatched or poor security configuration"
                },
                {
                    "Assumption": "Attacker has physical or near physical access.",
                    "Role": "Attacker",
                    "Condition": "Proximity or direct access to vehicle"
                }
            ],
            "Potential Impact": "Full system control, unauthorized access to sensitive data, potential for further exploitation.",
            "MITRE ATT&CK Keywords": [
                "elevation",
                "firmware",
                "root",
                "device"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a malicious Bluetooth device to exploit vulnerabilities and escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth protocol vulnerabilities are present.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth device within range"
                },
                {
                    "Assumption": "System lacks proper privilege separation and control.",
                    "Role": "System",
                    "Condition": "Weak OS and application security settings"
                }
            ],
            "Potential Impact": "Compromise of system security, unauthorized data access and control, risk to passenger safety.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "elevation",
                "control",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Manipulation of Wi-Fi settings to gain administrative access to the infotainment system\u2019s network functionality.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi management interface has unaddressed vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Proximity or network access to interface"
                },
                {
                    "Assumption": "Weak or no authentication on administrative functions.",
                    "Role": "System",
                    "Condition": "Lack of secure access controls"
                }
            ],
            "Potential Impact": "Network configuration changes, access to restricted functionalities, potential for wider system exploitation.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "network",
                "elevation",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate NFC device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Close proximity is possible for NFC communication.",
                    "Role": "Attacker",
                    "Condition": "Physical access or being within NFC range"
                },
                {
                    "Assumption": "The system does not use strong NFC authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "NFC authentication is either weak or absent"
                },
                {
                    "Assumption": "The infotainment system relies heavily on NFC communication for initial access.",
                    "Role": "System",
                    "Condition": "NFC is a primary communication method for certain functionalities"
                }
            ],
            "Potential Impact": "Unauthorized disclosure and modification of user data; potential system control by an unauthorized entity",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "unauthorized access",
                "device impersonation"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate Wi-Fi network, deceiving users into connecting to a malicious access point.",
            "Assumptions": [
                {
                    "Assumption": "Users actively connect to Wi-Fi for data and services.",
                    "Role": "User",
                    "Condition": "User needs network connectivity"
                },
                {
                    "Assumption": "The user's device is set to auto-connect to known networks.",
                    "Role": "User",
                    "Condition": "Auto-connect feature is enabled"
                },
                {
                    "Assumption": "The attacker can set up a rogue access point with a similar SSID.",
                    "Role": "Attacker",
                    "Condition": "Access to necessary equipment and tools to mimic Wi-Fi network"
                }
            ],
            "Potential Impact": "Interception and modification of data; potential for man-in-the-middle attacks",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi spoofing",
                "network injection",
                "man-in-the-middle",
                "unauthorized network access"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs CAN bus messages to deliver false information or commands to the vehicle's ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Access to the CAN bus through physical means or compromised component.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to CAN network"
                },
                {
                    "Assumption": "The CAN bus does not use encryption or strong authentication methods.",
                    "Role": "System Designer",
                    "Condition": "Current security measures are weak or absent"
                },
                {
                    "Assumption": "Critical vehicle functions depend on CAN bus messages.",
                    "Role": "System",
                    "Condition": "ECUs rely on CAN bus for operations"
                }
            ],
            "Potential Impact": "Manipulation of vehicle behavior; safety risks due to malfunctioning components",
            "MITRE ATT&CK Keywords": [
                "CAN bus",
                "message injection",
                "ECU spoofing",
                "vehicle control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker physically tampers with the touch screen controller to install malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical access is feasible"
                },
                {
                    "Assumption": "Firmware installation procedures are not secure.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure boot or verification"
                },
                {
                    "Assumption": "Users are unaware of the tampering.",
                    "Role": "User",
                    "Condition": "No visible signs of tampering"
                }
            ],
            "Potential Impact": "Unauthorized execution of arbitrary code; potential for data interception and modification",
            "MITRE ATT&CK Keywords": [
                "firmware modification",
                "physical access",
                "hardware tampering",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Malicious Link",
                "description": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).",
                "id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
                "technique_id": "T1204.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a vulnerability in the OBC to alter the firmware.",
            "Assumptions": [
                {
                    "Assumption": "A known or zero-day vulnerability in the system.",
                    "Role": "System",
                    "Condition": "Presence of exploitable software flaw"
                },
                {
                    "Assumption": "The attacker has network access to the OBC.",
                    "Role": "Attacker",
                    "Condition": "Presence in the same network or remote access capability"
                },
                {
                    "Assumption": "Firmware integrity is not checked after updates.",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity verification mechanisms"
                }
            ],
            "Potential Impact": "System instability, unauthorized control, or complete system failure",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "firmware tampering",
                "network access",
                "remote execution"
            ],
            "mitre_technique": {
                "name": "Command and Scripting Interpreter",
                "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",
                "id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
                "technique_id": "T1059"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects falsified data through the vehicle's GPS module.",
            "Assumptions": [
                {
                    "Assumption": "The GPS module accepts unauthenticated data streams.",
                    "Role": "System Designer",
                    "Condition": "Absence of strong authentication"
                },
                {
                    "Assumption": "The GPS data significantly influences vehicle operation.",
                    "Role": "System",
                    "Condition": "Critical dependency on GPS for navigation"
                },
                {
                    "Assumption": "The attacker can spoof GPS signals effectively.",
                    "Role": "Attacker",
                    "Condition": "Possession of equipment to simulate GPS satellites"
                }
            ],
            "Potential Impact": "Misguidance of vehicle direction, potential accidents, and misinformation to users",
            "MITRE ATT&CK Keywords": [
                "GPS spoofing",
                "data injection",
                "signal tampering",
                "navigation manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker sends commands via Bluetooth to interact with other ECUs and denies sending them.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not logged or monitored.",
                    "Role": "System Designer",
                    "Condition": "Lack of effective logging mechanisms"
                },
                {
                    "Assumption": "The attacker has Bluetooth access to the system.",
                    "Role": "Attacker",
                    "Condition": "Compromised device or close proximity"
                },
                {
                    "Assumption": "ECU commands do not have strong non-repudiation checks.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent verification mechanisms"
                }
            ],
            "Potential Impact": "Inability to trace and prove the source of malicious commands; disruption of vehicle operations",
            "MITRE ATT&CK Keywords": [
                "Bluetooth interaction",
                "command manipulation",
                "non-repudiation",
                "denial of action"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user accesses sensitive features through the infotainment system and denies usage later.",
            "Assumptions": [
                {
                    "Assumption": "The system does not maintain detailed usage logs.",
                    "Role": "System Designer",
                    "Condition": "Absence of comprehensive logging"
                },
                {
                    "Assumption": "Sensitive features lack sufficient access control or authentication.",
                    "Role": "System Designer",
                    "Condition": "Weak or missing access control mechanisms"
                },
                {
                    "Assumption": "Users are aware of sensitive features and their usage.",
                    "Role": "User",
                    "Condition": "Knowledge of system functionality"
                }
            ],
            "Potential Impact": "Difficulty in auditing actions and holding users accountable; potential for misuse of sensitive features",
            "MITRE ATT&CK Keywords": [
                "usage denial",
                "sensitive features",
                "access control",
                "logging"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious firmware updates are performed over the air (OTA) and attackers deny their involvement.",
            "Assumptions": [
                {
                    "Assumption": "OTA updates do not have strong integrity or authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Weak verification processes"
                },
                {
                    "Assumption": "The update process is not adequately logged or monitored.",
                    "Role": "System Designer",
                    "Condition": "Lack of detailed logging mechanisms"
                },
                {
                    "Assumption": "The attacker has the capability to intercept and modify OTA updates.",
                    "Role": "Attacker",
                    "Condition": "Access to OTA communication channels"
                }
            ],
            "Potential Impact": "System instability or compromise; lack of accountability for unauthorized updates",
            "MITRE ATT&CK Keywords": [
                "OTA update",
                "firmware manipulation",
                "integrity checks",
                "logging"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is intercepted over an unencrypted Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi communication is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption mechanisms"
                },
                {
                    "Assumption": "Sensitive data is transmitted over Wi-Fi.",
                    "Role": "System",
                    "Condition": "Transference of sensitive information"
                },
                {
                    "Assumption": "An attacker can access the unencrypted Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to or within the Wi-Fi network"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user information; potential for identity theft or data misuse",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "Wi-Fi",
                "unencrypted communication",
                "sensitive data leakage"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Bluetooth communication between the infotainment system and external devices is eavesdropped.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of strong encryption methods"
                },
                {
                    "Assumption": "Sensitive data is transmitted via Bluetooth.",
                    "Role": "System",
                    "Condition": "Bluetooth used for sensitive information exchange"
                },
                {
                    "Assumption": "The attacker has the capability to capture Bluetooth traffic.",
                    "Role": "Attacker",
                    "Condition": "Within range and possessing necessary tools"
                }
            ],
            "Potential Impact": "Exposure of sensitive information; possible unauthorized control commands",
            "MITRE ATT&CK Keywords": [
                "Bluetooth eavesdropping",
                "unencrypted data",
                "information leakage",
                "traffic interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious adversaries exploit access to the CAN bus to intercept confidential data being communicated between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Physical or remote access to the CAN bus is possible.",
                    "Role": "Attacker",
                    "Condition": "Required to intercept CAN messages"
                },
                {
                    "Assumption": "Sensitive data is transmitted over the CAN bus.",
                    "Role": "System",
                    "Condition": "ECUs communicate confidential information"
                },
                {
                    "Assumption": "CAN bus messages are unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of data encryption on the bus"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of vehicle and user data; potential for misuse of intercepted information",
            "MITRE ATT&CK Keywords": [
                "CAN bus interception",
                "confidential data",
                "message eavesdropping",
                "information leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Wi-Fi module with excessive traffic, causing disruption in communication.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust rate limiting or defense mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent flood protection"
                },
                {
                    "Assumption": "An attacker has access to the Wi-Fi network or proximity to the system.",
                    "Role": "Attacker",
                    "Condition": "Proximity or network penetration"
                },
                {
                    "Assumption": "The Wi-Fi network is critical for system operations.",
                    "Role": "System",
                    "Condition": "Reliance on network connectivity"
                }
            ],
            "Potential Impact": "Disruption of network services; interference with legitimate communication",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi flooding",
                "network disruption",
                "denial of service",
                "traffic saturation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker injects erroneous CAN bus messages to overwhelm and potentially crash ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Access to the CAN bus via vulnerable entry points.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access feasibility"
                },
                {
                    "Assumption": "The system lacks detection for malformed CAN messages.",
                    "Role": "System Designer",
                    "Condition": "No error detection or correcting mechanisms"
                },
                {
                    "Assumption": "ECUs can be disrupted by invalid messages.",
                    "Role": "System",
                    "Condition": "ECUs' susceptibility to invalid inputs"
                }
            ],
            "Potential Impact": "ECU malfunction or crash; potential loss of critical vehicle functionalities",
            "MITRE ATT&CK Keywords": [
                "CAN bus injection",
                "ECU disruption",
                "denial of service",
                "message saturation"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker performs a distributed denial-of-service (DDoS) attack leveraging cellular network connectivity.",
            "Assumptions": [
                {
                    "Assumption": "The system relies heavily on cellular network connectivity.",
                    "Role": "System",
                    "Condition": "Dependence on cellular services"
                },
                {
                    "Assumption": "Inadequate rate limiting and protection against DDoS attacks.",
                    "Role": "System Designer",
                    "Condition": "Lack of DDoS defense mechanisms"
                },
                {
                    "Assumption": "The attacker has a botnet capable of generating significant traffic.",
                    "Role": "Attacker",
                    "Condition": "Possession and control of a botnet"
                }
            ],
            "Potential Impact": "Disruption of cellular connectivity; inability to access critical information or services",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "cellular network disruption",
                "denial of service",
                "traffic flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting a vulnerability in the infotainment system\u2019s software.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerabilities in the software.",
                    "Role": "System",
                    "Condition": "Unpatched or zero-day vulnerabilities"
                },
                {
                    "Assumption": "The attacker has initial access to the system.",
                    "Role": "Attacker",
                    "Condition": "Already compromised low-level access"
                },
                {
                    "Assumption": "Privileges required for sensitive operations are not adequately restricted.",
                    "Role": "System Designer",
                    "Condition": "Weak access control policies"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and functionality; potential for complete system takeover",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "privilege escalation",
                "software flaw",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware gains elevated privileges through the on-board computer after device infection.",
            "Assumptions": [
                {
                    "Assumption": "Existing security measures are bypassable.",
                    "Role": "System Designer",
                    "Condition": "Weak security defenses"
                },
                {
                    "Assumption": "The system allows for execution of untrusted code.",
                    "Role": "System",
                    "Condition": "Lack of secure code execution policies"
                },
                {
                    "Assumption": "Infection vectors are present and exploitable by malware.",
                    "Role": "Attacker",
                    "Condition": "Presence of vulnerabilities or unsuspecting users"
                }
            ],
            "Potential Impact": "Control over the OBC; unauthorized manipulation of critical vehicle functions",
            "MITRE ATT&CK Keywords": [
                "malware",
                "device infection",
                "privilege escalation",
                "OBEC compromise"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses the Bluetooth module to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth security protocols are weak or outdated.",
                    "Role": "System Designer",
                    "Condition": "Reliance on vulnerable protocols"
                },
                {
                    "Assumption": "The attacker can connect to the system via Bluetooth.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity or compromised external device"
                },
                {
                    "Assumption": "System privileges separation is inadequately enforced.",
                    "Role": "System Designer",
                    "Condition": "Poor access control enforcement"
                }
            ],
            "Potential Impact": "Unauthorized access to broader system controls; potential full system compromise",
            "MITRE ATT&CK Keywords": [
                "Bluetooth exploitation",
                "privilege escalation",
                "vulnerability exploitation",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate Bluetooth device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Valid when the vehicle's Bluetooth is enabled and visible."
                },
                {
                    "Assumption": "The Bluetooth security measures are not rigorously enforced.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if weak or default Bluetooth pairing settings are used."
                },
                {
                    "Assumption": "The driver or user attempts to pair their device without verifying the authenticity.",
                    "Role": "User",
                    "Condition": "Valid when users do not follow secure pairing protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to infotainment system, leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "wireless access",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Wi-Fi access point to intercept data transmitted between the infotainment system and the internet.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can create a Wi-Fi access point with a stronger signal than legitimate ones.",
                    "Role": "Attacker",
                    "Condition": "Valid in areas with numerous open Wi-Fi networks."
                },
                {
                    "Assumption": "The infotainment system automatically connects to open Wi-Fi networks.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if the system prioritizes convenience over security."
                },
                {
                    "Assumption": "Users do not verify the security of Wi-Fi networks before connecting.",
                    "Role": "User",
                    "Condition": "Valid when users connect to Wi-Fi networks without authentication."
                }
            ],
            "Potential Impact": "Interception of transmitted data, leading to potential data theft.",
            "MITRE ATT&CK Keywords": [
                "network spoofing",
                "Man-in-the-Middle",
                "Wi-Fi",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a counterfeit NFC tag to trigger unauthorized actions within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Valid when the vehicle is parked in a public place."
                },
                {
                    "Assumption": "The infotainment system is configured to accept NFC inputs.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if NFC functionality is enabled for user convenience."
                },
                {
                    "Assumption": "Users accept NFC interactions without verification.",
                    "Role": "User",
                    "Condition": "Valid when users are unaware of potential NFC-based threats."
                }
            ],
            "Potential Impact": "Triggering unauthorized commands and accessing sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "wireless communication",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the CAN Bus to modify vehicle subsystem communications.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a device connected to the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Valid when physical access to the vehicle's network is obtained."
                },
                {
                    "Assumption": "The CAN Bus lacks robust security measures.",
                    "Role": "Vehicle Network",
                    "Condition": "Valid if default security settings are not enhanced."
                },
                {
                    "Assumption": "Subsystems trust CAN Bus messages without rigorous validation.",
                    "Role": "Vehicle Subsystems",
                    "Condition": "Valid if message validation protocols are weak."
                }
            ],
            "Potential Impact": "System manipulation, potentially compromising safety-critical functions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "code injection",
                "vehicle subsystem"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the audio data stream to inject malicious audio commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the audio input pathway.",
                    "Role": "Attacker",
                    "Condition": "Valid when microphone access is compromised."
                },
                {
                    "Assumption": "The infotainment system processes audio commands without strong validation.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if system lacks robust audio input validation."
                },
                {
                    "Assumption": "Users rely on voice commands for system control.",
                    "Role": "User",
                    "Condition": "Valid when voice controls are frequently used."
                }
            ],
            "Potential Impact": "Execution of unauthorized commands, potentially impacting user safety.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "audio injection",
                "command execution",
                "voice control"
            ],
            "mitre_technique": {
                "name": "Indirect Command Execution",
                "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (pcalua.exe), components of the Windows Subsystem for Linux (WSL), as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts. (Citation: VectorSec ForFiles Aug 2017) (Citation: Evi1cg Forfiles Nov 2017)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
                "id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
                "technique_id": "T1202"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies GPS data to manipulate vehicle navigation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can transmit spoofed GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Valid in areas with poor GPS signal security."
                },
                {
                    "Assumption": "The infotainment system relies heavily on GPS data for navigation.",
                    "Role": "Infotainment System",
                    "Condition": "Valid for vehicles using GPS-based navigation."
                },
                {
                    "Assumption": "Users depend on the vehicle's navigation system for routing.",
                    "Role": "User",
                    "Condition": "Valid when GPS navigation is used frequently."
                }
            ],
            "Potential Impact": "Misleading navigation information, potentially causing safety risks.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "GPS",
                "data manipulation",
                "navigation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker utilises a compromised user account to perform unauthorized activities and denies having done so.",
            "Assumptions": [
                {
                    "Assumption": "User accounts are compromised through weak passwords or phishing.",
                    "Role": "Attacker",
                    "Condition": "Valid if proper password policies are not enforced."
                },
                {
                    "Assumption": "Audit logs lack sufficient detail.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if logging mechanisms are weak."
                },
                {
                    "Assumption": "Users do not regularly review account activity.",
                    "Role": "User",
                    "Condition": "Valid when users neglect account monitoring."
                }
            ],
            "Potential Impact": "Undetected misuse leading to potential breaches or misconfigurations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user account",
                "unauthorized activities",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider alters system logs to erase traces of unauthorized maintenance actions.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access to system logs.",
                    "Role": "Insider",
                    "Condition": "Valid if proper access controls are not in place."
                },
                {
                    "Assumption": "Logging mechanisms do not have tamper-evident features.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if logging integrity mechanisms are weak."
                },
                {
                    "Assumption": "Unauthorized activities require audit logs for detection.",
                    "Role": "System Admin",
                    "Condition": "Valid if audit logs are the primary detection mechanism."
                }
            ],
            "Potential Impact": "Erased evidence leading to undetected security breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "insider threat",
                "maintenance actions"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses a stolen device to interact with the infotainment system, denying any involvement.",
            "Assumptions": [
                {
                    "Assumption": "The stolen device retains active authentication tokens.",
                    "Role": "Attacker",
                    "Condition": "Valid if session handling mechanisms are weak."
                },
                {
                    "Assumption": "The infotainment system does not verify session integrity.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if session verification is not stringent."
                },
                {
                    "Assumption": "Users do not promptly report lost or stolen devices.",
                    "Role": "User",
                    "Condition": "Valid when users delay in reporting device theft."
                }
            ],
            "Potential Impact": "Undetected device misuse leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "stolen device",
                "session hijacking",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Wi-Fi communications to steal sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can listen to Wi-Fi communications.",
                    "Role": "Attacker",
                    "Condition": "Valid in public or unsecured Wi-Fi environments."
                },
                {
                    "Assumption": "Wi-Fi communications are not encrypted.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if encryption mechanisms are weak or absent."
                },
                {
                    "Assumption": "Users transmit sensitive data over Wi-Fi.",
                    "Role": "User",
                    "Condition": "Valid for activities involving sensitive data transmission."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "unencrypted communication",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits software vulnerabilities to access sensitive infotainment system data.",
            "Assumptions": [
                {
                    "Assumption": "The software contains unpatched vulnerabilities.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if regular software updates are not applied."
                },
                {
                    "Assumption": "The attacker can identify and target these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has access to vulnerability information."
                },
                {
                    "Assumption": "Sensitive data is stored within the infotainment system.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if sensitive data handling protocols are weak."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive system or user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "software vulnerability",
                "data access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker compromises the NFC connection to capture sensitive data during transmission.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Valid when the vehicle is in a public location."
                },
                {
                    "Assumption": "NFC data transmissions are not securely encrypted.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if NFC security protocols are weak or absent."
                },
                {
                    "Assumption": "Sensitive data is transmitted via NFC.",
                    "Role": "User",
                    "Condition": "Valid in scenarios involving NFC-based sensitive data transfer."
                }
            ],
            "Potential Impact": "Unauthorized capture and disclosure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "NFC",
                "data transmission",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms the Cellular Network module with excessive traffic, disrupting infotainment services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid when the attacker has access to network resources."
                },
                {
                    "Assumption": "Cellular network traffic is not adequately throttled.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if network traffic management is weak."
                },
                {
                    "Assumption": "Infotainment services depend on cellular connectivity.",
                    "Role": "Infotainment System",
                    "Condition": "Valid when cellular data is critical for system functionality."
                }
            ],
            "Potential Impact": "Service disruption affecting connectivity and infotainment functionality.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "cellular network",
                "traffic overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed CAN Bus messages to disrupt vehicle subsystem communications.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a device connected to the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Valid with physical access to the vehicle's CAN Bus."
                },
                {
                    "Assumption": "The CAN Bus does not validate message formats.",
                    "Role": "Vehicle Network",
                    "Condition": "Valid if message validation protocols are weak."
                },
                {
                    "Assumption": "Vehicle subsystems rely on stable CAN Bus communications.",
                    "Role": "Vehicle Subsystems",
                    "Condition": "Valid if subsystem operations depend on CAN Bus data."
                }
            ],
            "Potential Impact": "Disruption of vehicle functionality, potentially impacting safety.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "CAN Bus",
                "message spoofing",
                "subsystem disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the Wi-Fi network to render infotainment services unavailable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can mobilize a botnet to launch the attack.",
                    "Role": "Attacker",
                    "Condition": "Valid with access to botnet resources."
                },
                {
                    "Assumption": "Wi-Fi network lacks adequate protection against high volume of traffic.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if network defense mechanisms are weak."
                },
                {
                    "Assumption": "Infotainment services rely on Wi-Fi connectivity.",
                    "Role": "Infotainment System",
                    "Condition": "Valid for services dependent on Wi-Fi access."
                }
            ],
            "Potential Impact": "Interruption of infotainment services causing user inconvenience.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Wi-Fi",
                "DDoS",
                "service interruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access on the infotainment system through exploitation of a software vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The software vulnerability is unpatched.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if timely updates are not applied."
                },
                {
                    "Assumption": "The attacker can exploit the vulnerability remotely.",
                    "Role": "Attacker",
                    "Condition": "Valid if remote access is possible."
                },
                {
                    "Assumption": "The system does not restrict root access adequately.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if root access controls are weak."
                }
            ],
            "Potential Impact": "Complete system compromise, allowing unauthorized control and data access.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "root access",
                "software vulnerability",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Compromise Software Supply Chain",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "technique_id": "T1195.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with limited access escalates privileges using weak internal access controls.",
            "Assumptions": [
                {
                    "Assumption": "Internal access controls are insufficient.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if access control policies are weak."
                },
                {
                    "Assumption": "The insider has knowledge of critical system functions.",
                    "Role": "Insider",
                    "Condition": "Valid when insider has technical knowledge."
                },
                {
                    "Assumption": "System audits do not detect privilege escalations.",
                    "Role": "System Admin",
                    "Condition": "Valid if auditing mechanisms are inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "access control",
                "insider threat",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits insecure NFC security policies to elevate privileges on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC security policies are poorly implemented.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if NFC security is weak."
                },
                {
                    "Assumption": "The attacker can interact with the NFC interface.",
                    "Role": "Attacker",
                    "Condition": "Valid within physical proximity to the vehicle."
                },
                {
                    "Assumption": "Privilege escalation paths via NFC are not safeguarded.",
                    "Role": "Infotainment System",
                    "Condition": "Valid if system lacks NFC security protocols."
                }
            ],
            "Potential Impact": "Unauthorized access and control over sensitive system functions.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "NFC",
                "security policies",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access by spoofing the vehicle\u2019s NFC communication system.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical proximity to the vehicle to execute NFC spoofing",
                    "Role": "Attacker",
                    "Condition": "Attacker must be within NFC range of the vehicle."
                },
                {
                    "Assumption": "The infotainment system NFC does not have robust authentication in place",
                    "Role": "System Designer",
                    "Condition": "The NFC system must lack strong authentication measures."
                },
                {
                    "Assumption": "The vehicle owner is not aware of the spoofing attempt",
                    "Role": "Vehicle Owner",
                    "Condition": "The vehicle owner is unaware of any abnormal NFC interactions."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential control over infotainment features.",
            "MITRE ATT&CK Keywords": [
                "NFC",
                "Spoofing",
                "Unauthorized Access",
                "Device Interaction"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Wi-Fi access point to intercept data communication between the infotainment system and external networks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can set up a fake Wi-Fi access point near the vehicle",
                    "Role": "Attacker",
                    "Condition": "The attacker must be in close proximity to the vehicle to set up and operate the fake Wi-Fi access point."
                },
                {
                    "Assumption": "The infotainment system does not validate the authenticity of Wi-Fi networks",
                    "Role": "System Designer",
                    "Condition": "The system lacks mechanisms to distinguish between legitimate and fake Wi-Fi networks."
                },
                {
                    "Assumption": "Users connect the infotainment system to the Wi-Fi access point without suspicion",
                    "Role": "Vehicle Owner/User",
                    "Condition": "Owners/users connect to available Wi-Fi networks without verifying their legitimacy."
                }
            ],
            "Potential Impact": "Unauthorized data interception leading to potential data theft and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Spoofing",
                "Man-in-the-Middle (MitM)",
                "Network Communication"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker simulates the vehicle's GPS signals to provide false location data.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has the capability to broadcast false GPS signals within the vehicle's proximity",
                    "Role": "Attacker",
                    "Condition": "The attacker can generate and broadcast GPS signals close to the vehicle."
                },
                {
                    "Assumption": "The infotainment system relies solely on received GPS signals without cross-verification",
                    "Role": "System Designer",
                    "Condition": "GPS data is accepted without cross-verifying with other location-based services."
                },
                {
                    "Assumption": "The vehicle's navigation system uses real-time GPS data for decision-making",
                    "Role": "Infotainment System",
                    "Condition": "Navigation relies on GPS coordinates provided in real-time."
                }
            ],
            "Potential Impact": "Misleading navigation data which can cause driver confusion and potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "Spoofing",
                "False Data Injection",
                "Navigation System"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with the infotainment system firmware through a compromised update.",
            "Assumptions": [
                {
                    "Assumption": "An attacker has access to the firmware update distribution system",
                    "Role": "Attacker",
                    "Condition": "The attacker breaches the update distribution supply chain."
                },
                {
                    "Assumption": "The infotainment system applies updates without thorough validation",
                    "Role": "System Designer",
                    "Condition": "The system does not validate firmware updates against a secure checksum or signature."
                },
                {
                    "Assumption": "Users initiate firmware updates without verifying the source",
                    "Role": "Vehicle Owner/User",
                    "Condition": "Firmware updates are applied automatically or manually without source verification."
                }
            ],
            "Potential Impact": "Corrupt firmware leading to system malfunction, reduced functionality, or unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Firmware",
                "Software Update",
                "System Integrity"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data on the CAN Bus to alter vehicle subsystem behavior.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains physical access to the vehicle to interface with the CAN Bus",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical access to the vehicle CAN Bus interface."
                },
                {
                    "Assumption": "The CAN Bus system does not have adequate message authentication",
                    "Role": "System Designer",
                    "Condition": "The CAN Bus lacks secure message authentication or encryption mechanisms."
                },
                {
                    "Assumption": "Vehicle subsystems trust and execute CAN Bus commands",
                    "Role": "Vehicle Subsystems",
                    "Condition": "Subsystems execute commands received on the CAN Bus without cross-verification."
                }
            ],
            "Potential Impact": "Unauthorized control over vehicle subsystems, posing safety and operational risks.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Tampering",
                "Subsystem Control",
                "Command Injection"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters communication from the Wi-Fi module to introduce malicious payloads.",
            "Assumptions": [
                {
                    "Assumption": "The Wifi module\u2019s communication is not encrypted or authenticated",
                    "Role": "System Designer",
                    "Condition": "Wi-Fi communications are not adequately protected through encryption and authentication mechanisms."
                },
                {
                    "Assumption": "An attacker is within range to intercept and alter Wi-Fi communications",
                    "Role": "Attacker",
                    "Condition": "The attacker is physically close enough to intercept Wi-Fi communications."
                },
                {
                    "Assumption": "The infotainment system accepts incoming data without proper validation",
                    "Role": "Infotainment System",
                    "Condition": "The system does not perform integrity checks on received data."
                }
            ],
            "Potential Impact": "Corrupted data leading to system behavior anomalies or unauthorized code execution.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Tampering",
                "MITM",
                "Payload Injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits the infotainment system logging, making it difficult to trace their actions.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not securely stored or tamper-proof",
                    "Role": "System Designer",
                    "Condition": "Logs are not protected with integrity checks or tamper-evident tools."
                },
                {
                    "Assumption": "The attacker has sufficient access to modify or delete logs",
                    "Role": "Attacker",
                    "Condition": "The attacker can access the infotainment system's logging functions."
                },
                {
                    "Assumption": "Logging mechanisms lack real-time monitoring and alerts for tampering",
                    "Role": "Infotainment System",
                    "Condition": "The system does not monitor or alert on log modification events in real time."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions, hampering forensic investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Log Tampering",
                "Accountability",
                "Forensics"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses the OBC to execute unauthorized commands and then clears the logs to erase traces of activity.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains privileged access to the OBC",
                    "Role": "Attacker",
                    "Condition": "The attacker successfully obtains administrative privileges on the OBC."
                },
                {
                    "Assumption": "The OBC logs are accessible and modifiable by administrators without additional checks",
                    "Role": "System Designer",
                    "Condition": "Log files do not require dual verification or immutable storage mechanisms."
                },
                {
                    "Assumption": "The system relies on these logs for auditing and tracking user activities",
                    "Role": "Infotainment System",
                    "Condition": "System auditing and user tracking predominantly depend on log files."
                }
            ],
            "Potential Impact": "Erasing tracks of unauthorized command execution, risking incorrect audit results.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Command Injection",
                "Log Deletion",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user performs harmful actions on the infotainment system but denies responsibility due to lack of non-repudiation mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Non-repudiation measures are not in place within the infotainment system",
                    "Role": "System Designer",
                    "Condition": "The system lacks mechanisms to bind users to actions in an incontrovertible way."
                },
                {
                    "Assumption": "Users have sufficient access to perform potentially harmful actions",
                    "Role": "User",
                    "Condition": "Users have roles or permissions that allow impactful actions."
                },
                {
                    "Assumption": "User actions are recorded but can be disputed due to lack of strong identifiers",
                    "Role": "System Designer",
                    "Condition": "User activities are logged without strong proof of user identity."
                }
            ],
            "Potential Impact": "Actions can be executed without accountability, leading to disputes and security gaps.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "User Action",
                "Accountability",
                "Non-repudiation"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data over an unencrypted Bluetooth connection to gather sensitive user information.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth communication is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Bluetooth connections lack encryption to protect data in transit."
                },
                {
                    "Assumption": "An attacker can target Bluetooth communications within range",
                    "Role": "Attacker",
                    "Condition": "Attacker is close enough to intercept Bluetooth signals."
                },
                {
                    "Assumption": "Sensitive user information is transmitted over Bluetooth",
                    "Role": "Infotainment System/User",
                    "Condition": "User data, such as contacts or media, is shared via Bluetooth."
                }
            ],
            "Potential Impact": "Exposure of personal or sensitive information, leading to privacy violation and potential identity theft.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Information Disclosure",
                "Data Interception",
                "Privacy"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to stored logs in the infotainment system revealing user activities and locations.",
            "Assumptions": [
                {
                    "Assumption": "System logs sensitive user information without adequate protection",
                    "Role": "System Designer",
                    "Condition": "Logs contain detailed user information and are not encrypted."
                },
                {
                    "Assumption": "An attacker has obtained access to the infotainment system",
                    "Role": "Attacker",
                    "Condition": "Attacker can reach and read log files stored in the system."
                },
                {
                    "Assumption": "Logs are stored in a readable format without any access controls",
                    "Role": "System Designer",
                    "Condition": "Logs are accessible without appropriate access restrictions."
                }
            ],
            "Potential Impact": "Unauthorized access to user behavior and locations, compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Logs",
                "User Activity",
                "Privacy Intrusion"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is transmitted over an unprotected Wi-Fi network, allowing an attacker to capture this data.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi communication is not encrypted or adequately secured",
                    "Role": "System Designer",
                    "Condition": "Data transfer over Wi-Fi lacks strong encryption and security measures."
                },
                {
                    "Assumption": "An attacker is in proximity to the vehicle to intercept Wi-Fi traffic",
                    "Role": "Attacker",
                    "Condition": "The attacker is nearby to capture unprotected Wi-Fi communications."
                },
                {
                    "Assumption": "Sensitive data is routinely transmitted via Wi-Fi",
                    "Role": "Infotainment System/User",
                    "Condition": "User or system transmits sensitive information over Wi-Fi."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, risking data theft and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Information Disclosure",
                "Data Interception",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the OBC with a flood of network traffic, overwhelming the system and causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a high volume of traffic towards the OBC",
                    "Role": "Attacker",
                    "Condition": "The attacker has sufficient resources to generate significant network traffic."
                },
                {
                    "Assumption": "The OBC lacks adequate defenses against DoS attacks",
                    "Role": "System Designer",
                    "Condition": "The OBC does not have measures to handle or mitigate high traffic volumes."
                },
                {
                    "Assumption": "The system relies on the OBC for critical functionalities",
                    "Role": "Infotainment System",
                    "Condition": "OBC is central to the vehicle's infotainment operations."
                }
            ],
            "Potential Impact": "System unavailability affecting all infotainment functionalities and potentially impacting driver safety.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Network Traffic",
                "System Crash",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the touch screen controller, preventing user interaction with the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Touch screen controller has a known, unpatched vulnerability",
                    "Role": "System Designer",
                    "Condition": "A vulnerability exists in the touch screen firmware or software."
                },
                {
                    "Assumption": "An attacker can remotely exploit this vulnerability",
                    "Role": "Attacker",
                    "Condition": "The vulnerability is accessible through remote channels like Wi-Fi or cellular networks."
                },
                {
                    "Assumption": "Users depend on the touch screen for interacting with the infotainment system",
                    "Role": "Vehicle Users",
                    "Condition": "Primary interaction is through the touch screen interface."
                }
            ],
            "Potential Impact": "Loss of system control and interaction, disrupting infotainment system usage.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Touch Screen",
                "Vulnerability Exploitation",
                "User Interaction"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a battery drain attack through the Bluetooth module causing the system to shut down due to power depletion.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth is continuously discoverable and accepts incoming connections",
                    "Role": "System Designer",
                    "Condition": "Bluetooth is configured to remain discoverable and accept new connections."
                },
                {
                    "Assumption": "The attacker can initiate and maintain numerous Bluetooth connections",
                    "Role": "Attacker",
                    "Condition": "The attacker has tools to create multiple persistent Bluetooth connections."
                },
                {
                    "Assumption": "Battery management system does not prioritize critical functionalities under attack conditions",
                    "Role": "Infotainment System",
                    "Condition": "System fails to manage power consumption effectively during an attack."
                }
            ],
            "Potential Impact": "Infotainment system shutdown due to power exhaustion, hampering driver and passenger services.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Bluetooth",
                "Battery Drain",
                "Power Management"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability to gain root access to the OBC, enabling control over all infotainment features.",
            "Assumptions": [
                {
                    "Assumption": "A vulnerability in the OBC software allows privilege escalation",
                    "Role": "System Designer",
                    "Condition": "The software has an existing, exploitable vulnerability."
                },
                {
                    "Assumption": "The attacker can access and exploit this vulnerability",
                    "Role": "Attacker",
                    "Condition": "The attacker identifies and utilizes the vulnerability effectively."
                },
                {
                    "Assumption": "System lacks mitigations such as privilege separation and sandboxing",
                    "Role": "System Designer",
                    "Condition": "System does not employ mechanisms to limit the impact of privilege escalation."
                }
            ],
            "Potential Impact": "Complete unauthorized control over the infotainment system, leading to potential breaches in safety-critical systems.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Root Access",
                "Vulnerability Exploitation",
                "OBC Control"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrator privileges through the infotainment system's Wi-Fi network by exploiting poor access control measures.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi network access controls are improperly configured or weak",
                    "Role": "System Designer",
                    "Condition": "Wi-Fi access lacks robust authentication and authorization mechanisms."
                },
                {
                    "Assumption": "The attacker has the capability to crack weak Wi-Fi passwords or exploit misconfigurations",
                    "Role": "Attacker",
                    "Condition": "The attacker can compromise weak security settings on the Wi-Fi network."
                },
                {
                    "Assumption": "Wi-Fi network provides administrative access paths to the infotainment system",
                    "Role": "System Designer",
                    "Condition": "Network configuration allows access to administrative functions via Wi-Fi."
                }
            ],
            "Potential Impact": "Unauthorized system modifications and data breaches by an attacker with admin privileges.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Wi-Fi",
                "Access Control",
                "Administrator"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0022a3d2-6acd-11e5-969e-14109fdc5bb9",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A legitimate user exploits a vulnerability in the infotainment system to gain higher access levels beyond their intended permissions.",
            "Assumptions": [
                {
                    "Assumption": "A vulnerability exists that allows users to escalate their privileges",
                    "Role": "System Designer",
                    "Condition": "System has unpatched vulnerabilities allowing privilege escalation."
                },
                {
                    "Assumption": "Users are aware of or can discover this vulnerability",
                    "Role": "User",
                    "Condition": "Users can find and exploit the system weakness."
                },
                {
                    "Assumption": "The system does not have effective privilege separation mechanisms",
                    "Role": "System Designer",
                    "Condition": "The system lacks adequate measures to prevent privilege escalation."
                }
            ],
            "Potential Impact": "Unauthorized access to restricted system functionalities and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Vulnerability Exploitation",
                "Access Control",
                "User Permissions"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the vehicle's NFC connectivity to propagate unauthorized access requests.",
            "Assumptions": [
                {
                    "Assumption": "NFC interfaces are exposed and accessible",
                    "Role": "Attacker",
                    "Condition": "Within communication range"
                },
                {
                    "Assumption": "Weak authentication for NFC communication",
                    "Role": "Application",
                    "Condition": "No additional authentication layers"
                },
                {
                    "Assumption": "The vehicle is in a public or unprotected location",
                    "Role": "User",
                    "Condition": "Inadequate physical security"
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle systems",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "access token manipulation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker exploits Bluetooth pairing to masquerade as a trusted device and intercept communications.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth is enabled and discoverable",
                    "Role": "User",
                    "Condition": "Using the system"
                },
                {
                    "Assumption": "Lack of secure pairing protocols",
                    "Role": "Application",
                    "Condition": "Weak Bluetooth security"
                },
                {
                    "Assumption": "Bluetooth not monitored for unusual activity",
                    "Role": "Application",
                    "Condition": "No security logs or alerts"
                }
            ],
            "Potential Impact": "Interception of sensitive data and communication",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device phishing",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary simulates a GPS signal to misguide navigation and related services.",
            "Assumptions": [
                {
                    "Assumption": "Reliance on GPS signals for navigation",
                    "Role": "Application",
                    "Condition": "No alternate verification"
                },
                {
                    "Assumption": "No encryption or authentication of GPS data",
                    "Role": "Application",
                    "Condition": "Insecure GPS data handling"
                },
                {
                    "Assumption": "Exposure to GPS jamming or spoofing equipment",
                    "Role": "User",
                    "Condition": "Driving in high-risk areas"
                }
            ],
            "Potential Impact": "Misguidance of navigation system",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "signal manipulation",
                "navigation"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the software updates through an insecure Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "Unsecured or weakly secured Wi-Fi network",
                    "Role": "User",
                    "Condition": "Using public or home Wi-Fi"
                },
                {
                    "Assumption": "No integrity checks on software updates",
                    "Role": "Application",
                    "Condition": "Absence of validation mechanisms"
                },
                {
                    "Assumption": "System does not use encrypted communications for updates",
                    "Role": "Application",
                    "Condition": "Insecure update channels"
                }
            ],
            "Potential Impact": "Introduction of malicious code into the system",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "software update",
                "injection",
                "Wi-Fi"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker accesses the CAN bus and alters communication between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Physical or wireless access to the CAN bus",
                    "Role": "Attacker",
                    "Condition": "Proximity or compromised device"
                },
                {
                    "Assumption": "Insufficient authentication for CAN bus messages",
                    "Role": "Application",
                    "Condition": "No message validation"
                },
                {
                    "Assumption": "ECU communication is not encrypted",
                    "Role": "Application",
                    "Condition": "Unsecured communication protocols"
                }
            ],
            "Potential Impact": "Erroneous control signals to critical vehicle systems",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN bus",
                "ECU",
                "signal manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the video buffer to insert or alter media content.",
            "Assumptions": [
                {
                    "Assumption": "Video buffer is unprotected or insufficiently secured",
                    "Role": "Application",
                    "Condition": "No security mechanisms in place"
                },
                {
                    "Assumption": "Physical or remote access to the infotainment system",
                    "Role": "Attacker",
                    "Condition": "Successful breach of physical security or network access"
                },
                {
                    "Assumption": "Lack of integrity checks for media content",
                    "Role": "Application",
                    "Condition": "No verification of content authenticity"
                }
            ],
            "Potential Impact": "Misleading or inappropriate media content presentation",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "video buffer",
                "media manipulation",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Automated Collection",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. \n\nIn cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.(Citation: Mandiant UNC3944 SMS Phishing 2023) \n\nThis functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",
                "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
                "technique_id": "T1119"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a voice command that executes a potentially harmful action.",
            "Assumptions": [
                {
                    "Assumption": "Lack of voice command logging",
                    "Role": "Application",
                    "Condition": "No logs or audit trail"
                },
                {
                    "Assumption": "Insufficient authentication of voice commands",
                    "Role": "Application",
                    "Condition": "Weak or no authentication"
                },
                {
                    "Assumption": "Capability to execute significant actions via voice",
                    "Role": "Application",
                    "Condition": "Critical functions controllable by voice"
                }
            ],
            "Potential Impact": "Dispute over actions taken by the system",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "voice command",
                "audit trail",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver denies responsibility for navigation routes taken, blaming the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "No logging of GPS and navigation commands",
                    "Role": "Application",
                    "Condition": "Absence of detailed usage logs"
                },
                {
                    "Assumption": "System allows navigation commands without audit",
                    "Role": "Application",
                    "Condition": "No audit trail"
                },
                {
                    "Assumption": "User can modify or delete logs",
                    "Role": "User",
                    "Condition": "Full control over system logs"
                }
            ],
            "Potential Impact": "Inability to verify user actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "GPS",
                "navigation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies making a Bluetooth pairing that led to data compromise.",
            "Assumptions": [
                {
                    "Assumption": "Lack of pairing logs",
                    "Role": "Application",
                    "Condition": "No secure logging for Bluetooth events"
                },
                {
                    "Assumption": "User has control over Bluetooth pairings",
                    "Role": "User",
                    "Condition": "Unrestricted pairing capabilities"
                },
                {
                    "Assumption": "No mechanism to ensure the non-repudiation of Bluetooth events",
                    "Role": "Application",
                    "Condition": "Insufficient security measures"
                }
            ],
            "Potential Impact": "Dispute over Bluetooth events leading to data breaches",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "Bluetooth",
                "audit trail",
                "pairing"
            ],
            "mitre_technique": {
                "name": "Impair Defenses",
                "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out of a computer or stopping it from being shut down. These restrictions can further enable malicious operations as well as the continued propagation of incidents.(Citation: Emotet shutdown)\n\nAdversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components.",
                "id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
                "technique_id": "T1562"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in the Wi-Fi module to intercept data transmission.",
            "Assumptions": [
                {
                    "Assumption": "Use of unsecured Wi-Fi protocols",
                    "Role": "Application",
                    "Condition": "No encryption or weak encryption"
                },
                {
                    "Assumption": "Active attacker within Wi-Fi range",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Sensitive data transmitted without additional encryption",
                    "Role": "Application",
                    "Condition": "Plaintext data transmission"
                }
            ],
            "Potential Impact": "Unauthorized interception of sensitive data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user information is exposed through a connected smartphone via Bluetooth.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication lacks adequate security",
                    "Role": "Application",
                    "Condition": "Unsecured Bluetooth protocols"
                },
                {
                    "Assumption": "Sensitive data is accessed via Bluetooth without encryption",
                    "Role": "Application",
                    "Condition": "Plaintext data access"
                },
                {
                    "Assumption": "No protections against unauthorized Bluetooth access",
                    "Role": "Application",
                    "Condition": "Weak or no authentication"
                }
            ],
            "Potential Impact": "Exposure of user\u2019s personal and sensitive data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "data breach",
                "smartphone"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts CAN bus messages to gather sensitive telemetry data.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus is accessible by unauthorized entities",
                    "Role": "Attacker",
                    "Condition": "Compromised vehicle access"
                },
                {
                    "Assumption": "Telemetry data transmitted without encryption",
                    "Role": "Application",
                    "Condition": "Insecure transmission protocol"
                },
                {
                    "Assumption": "No monitoring or alerting of CAN bus traffic anomalies",
                    "Role": "Application",
                    "Condition": "Lack of intrusion detection systems"
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle telemetry data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "CAN bus",
                "telemetry",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "The infotainment system's Wi-Fi module is flooded with requests, rendering it inoperable.",
            "Assumptions": [
                {
                    "Assumption": "Lack of request rate limiting",
                    "Role": "Application",
                    "Condition": "Absence of rate limiting mechanisms"
                },
                {
                    "Assumption": "Attacker has capability to flood Wi-Fi network",
                    "Role": "Attacker",
                    "Condition": "Sufficient resources for attack"
                },
                {
                    "Assumption": "Wi-Fi usage critical for system operation",
                    "Role": "User",
                    "Condition": "High dependence on Wi-Fi"
                }
            ],
            "Potential Impact": "Wi-Fi module and potentially the entire infotainment system become unresponsive",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "network flood",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a Bluetooth flooding attack, causing connection drops and performance degradation.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth does not have flood protection mechanisms",
                    "Role": "Application",
                    "Condition": "No flood protection"
                },
                {
                    "Assumption": "Attacker within range of Bluetooth connection",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "System fails to handle high volume of connections gracefully",
                    "Role": "Application",
                    "Condition": "Poor load handling capacity"
                }
            ],
            "Potential Impact": "Bluetooth connectivity becomes unreliable, impacting system functionality",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "flooding",
                "connectivity"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits the CAN bus to send repeated invalid messages, disrupting vehicle operation.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus does not filter invalid messages",
                    "Role": "Application",
                    "Condition": "Inadequate message validation"
                },
                {
                    "Assumption": "Attacker has access to the CAN bus",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access"
                },
                {
                    "Assumption": "Vehicle operation critical on CAN bus communication",
                    "Role": "User",
                    "Condition": "Real-time dependency on CAN"
                }
            ],
            "Potential Impact": "Disruption of critical vehicle functions",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN bus",
                "message flooding",
                "system disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses vulnerabilities in the touch screen controller firmware to gain higher system permissions.",
            "Assumptions": [
                {
                    "Assumption": "Firmware vulnerable to exploitation",
                    "Role": "Application",
                    "Condition": "Known or unknown vulnerabilities present"
                },
                {
                    "Assumption": "Attacker can interact with the touch screen",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access"
                },
                {
                    "Assumption": "Lack of privilege segmentation in the system",
                    "Role": "Application",
                    "Condition": "Inadequate access controls"
                }
            ],
            "Potential Impact": "Attacker gains control over critical system functionalities",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "touch screen",
                "firmware exploit",
                "system control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An exploitable bug in the OBC firmware allows an attacker to run arbitrary code at a higher privilege level.",
            "Assumptions": [
                {
                    "Assumption": "OBC firmware has exploitable vulnerabilities",
                    "Role": "Application",
                    "Condition": "Unpatched bugs or design flaws"
                },
                {
                    "Assumption": "Attacker has access to input data channel",
                    "Role": "Attacker",
                    "Condition": "Access via network or physical connection"
                },
                {
                    "Assumption": "No restrictive sandboxing or execution contexts",
                    "Role": "Application",
                    "Condition": "Lack of execution containment"
                }
            ],
            "Potential Impact": "Compromise of the OBC and potential control of all connected vehicle subsystems",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "code execution",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Exploitation for Client Execution",
                "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
                "id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
                "technique_id": "T1203"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses a compromised connected smartphone to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Smartphone connectivity grants access to system functionalities",
                    "Role": "Application",
                    "Condition": "Exposed interfaces"
                },
                {
                    "Assumption": "Smartphone applications are not sandboxed appropriately",
                    "Role": "Application",
                    "Condition": "Lack of security isolation"
                },
                {
                    "Assumption": "Bluetooth communication unencrypted",
                    "Role": "Application",
                    "Condition": "Insecure transmission protocols"
                }
            ],
            "Potential Impact": "Attacker gains unauthorized system privileges through the smartphone",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "smartphone",
                "Bluetooth",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate CAN bus ECU, sending false signals to the on-board computer.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Actual"
                },
                {
                    "Assumption": "The verification mechanisms for ECUs are weak or non-existent.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Unauthorized control of vehicle functions, leading to unsafe driving conditions and potential accidents.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "command injection",
                "CAN bus"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS signal to provide incorrect location data to the navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within range to broadcast a stronger GPS signal.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                },
                {
                    "Assumption": "The GPS receiver does not sufficiently verify signal authenticity.",
                    "Role": "System Developer",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Misleading GPS data could cause the driver to take incorrect routes, potentially leading to dangerous situations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "signal injection"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a paired Bluetooth device to access the onboard communication system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range during the pairing process.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                },
                {
                    "Assumption": "The authentication between devices is weak or compromised.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Unauthorized access to communication channels, potentially leading to eavesdropping or data theft.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the on-board computer to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the on-board computer.",
                    "Role": "Attacker",
                    "Condition": "Actual"
                },
                {
                    "Assumption": "Firmware updates lack integrity verification.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Compromise of system integrity, leading to unauthorized control of vehicle functions and potential system failures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "on-board computer"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters CAN bus messages to inject harmful commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Physical Access"
                },
                {
                    "Assumption": "There is insufficient message authentication on the CAN bus.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "System integrity is compromised, causing unexpected vehicle behavior and potential safety hazards.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "injection",
                "CAN bus",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters NFC configuration to implement unauthorized actions within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains proximity to interact with the NFC module.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                },
                {
                    "Assumption": "The NFC interactions lack robust security protections.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Loss of data integrity and unauthorized control over system settings, leading to compromised system behavior.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "NFC",
                "configuration",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver denies making specific changes or commands in the infotainment system due to lack of proper logging and tracking.",
            "Assumptions": [
                {
                    "Assumption": "Logging and tracking mechanisms are insufficient.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "The driver account lacks non-repudiation capabilities.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Difficulty in auditing and holding responsible parties accountable, which can obstruct forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "accountability",
                "infotainment"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Passengers deny interacting with the rear screen or touch screen controller, causing disputes.",
            "Assumptions": [
                {
                    "Assumption": "Interactions are not logged or tracked adequately.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "There is no user authentication for accessing the rear screen.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Challenges in verifying actions and interactions by different users, impacting forensic analysis during disputes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "touch screen",
                "user interaction",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A communicator denies sending messages through the car audio system's hands-free feature.",
            "Assumptions": [
                {
                    "Assumption": "Hands-free communication sessions are not logged.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "Audio input lacks session tracking and user association.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Issues in verifying communications during important events, impacting investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "hands-free",
                "communication",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive driver data, such as navigation routes, is intercepted over an unsecured Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi network is not properly secured (e.g., no encryption).",
                    "Role": "Network Administrator",
                    "Condition": "Configuration Flaw"
                },
                {
                    "Assumption": "The attacker is within range to intercept Wi-Fi signals.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                }
            ],
            "Potential Impact": "Leakage of sensitive user data, compromising personal privacy and security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Bluetooth vulnerabilities allow attackers to access the contacts and messages stored in the system.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth module has known vulnerabilities.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "The attacker is within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                }
            ],
            "Potential Impact": "Compromise of user confidentiality, leading to unauthorized access to sensitive personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "contacts",
                "messages"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Audio inputs and outputs could be eavesdropped using compromised car audio systems.",
            "Assumptions": [
                {
                    "Assumption": "The car audio system is vulnerable to exploits.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "The attacker has access to the in-car network.",
                    "Role": "Attacker",
                    "Condition": "Network Access"
                }
            ],
            "Potential Impact": "Loss of user privacy, potential leakage of conversations, and confidential information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "audio system",
                "eavesdropping",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the CAN bus with high volumes of traffic to overwhelm the system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Physical Access"
                },
                {
                    "Assumption": "The CAN bus lacks robust traffic management mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Disruption of vehicle operations, potentially leading to system malfunctions and unsafe conditions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN bus",
                "network",
                "flooding"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the infotainment system with erroneous data through NFC interaction.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within range to interact with NFC.",
                    "Role": "Attacker",
                    "Condition": "Physical Proximity"
                },
                {
                    "Assumption": "The NFC module lacks proper input validation.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Degraded user experience and potential system unavailability, impacting overall vehicle functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "NFC",
                "infotainment",
                "interaction"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Jamming the GPS signal to deprive the navigation system of location data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker possesses GPS jamming equipment.",
                    "Role": "Attacker",
                    "Condition": "Equipment Availability"
                },
                {
                    "Assumption": "The GPS module does not have countermeasures against jamming.",
                    "Role": "System Developer",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Loss of navigation capabilities, potentially leading to disorientation and unsafe driving conditions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GPS",
                "jamming",
                "navigation"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploit vulnerabilities in the touch screen controller to gain unauthorized access to the system.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller has exploitable vulnerabilities.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "The attacker has physical or remote access to the touch screen.",
                    "Role": "Attacker",
                    "Condition": "Access"
                }
            ],
            "Potential Impact": "Unauthorized control over system components, potentially leading to further escalation of privileges.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "touch screen",
                "system access",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromising the rear screen video buffer to execute arbitrary code.",
            "Assumptions": [
                {
                    "Assumption": "The video buffer processing allows for unchecked input.",
                    "Role": "System Architect",
                    "Condition": "Design Flaw"
                },
                {
                    "Assumption": "The attacker has access to manipulate video data.",
                    "Role": "Attacker",
                    "Condition": "Access"
                }
            ],
            "Potential Impact": "Execution of unauthorized code, leading to potential control over vehicle functions and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "video buffer",
                "code execution",
                "access"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Using a malware-infected Bluetooth device to elevate privileges in the car's infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can pair a compromised device with the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Proximity"
                },
                {
                    "Assumption": "The infotainment system does not validate devices sufficiently.",
                    "Role": "System Developer",
                    "Condition": "Design Flaw"
                }
            ],
            "Potential Impact": "Unauthorized access and control over system components, leading to potential data breaches and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Bluetooth",
                "device",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof an NFC device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The system relies on NFC for authentication or interaction.",
                    "Role": "System Design",
                    "Condition": "NFC is used in the system."
                },
                {
                    "Assumption": "The attacker is in close proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity."
                },
                {
                    "Assumption": "The NFC communication is not encrypted or secured.",
                    "Role": "System Security",
                    "Condition": "Lack of encryption protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to infotainment system may lead to data theft or system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "NFC",
                "Device Access",
                "Proximity Attack"
            ],
            "mitre_technique": {
                "name": "Device Registration",
                "description": "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user\u2019s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)\n\nSimilarly, an adversary with existing access to a network may register a device to Azure AD and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) \n\nDevices registered in Azure AD may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Azure AD tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",
                "id": "attack-pattern--7decb26c-715c-40cf-b7e0-026f7d7cc215",
                "technique_id": "T1098.005"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate another user over Bluetooth to access sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth authentication is weak or non-existent.",
                    "Role": "System Security",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "Attacker's device is within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity."
                },
                {
                    "Assumption": "No proper malware detection system in place.",
                    "Role": "System Design",
                    "Condition": "Lack of malware detection."
                }
            ],
            "Potential Impact": "Data compromise or unauthorized command execution within the system.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Spoofing",
                "Wireless Communication",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Other Network Medium",
                "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87",
                "technique_id": "T1011"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Wi-Fi hotspot to intercept communication and data.",
            "Assumptions": [
                {
                    "Assumption": "Users connect to unverified Wi-Fi networks.",
                    "Role": "User Behavior",
                    "Condition": "Open Wi-Fi connections."
                },
                {
                    "Assumption": "Wi-Fi data is not encrypted.",
                    "Role": "System Security",
                    "Condition": "Unencrypted communication."
                },
                {
                    "Assumption": "No network monitoring for rogue access points.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of vigilant network monitoring."
                }
            ],
            "Potential Impact": "Exposure of sensitive data and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Man-in-the-Middle",
                "Network Spoofing",
                "Data Interception"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the CAN Bus to manipulate vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to vehicle's internal systems is possible.",
                    "Role": "Attacker",
                    "Condition": "Access to vehicle."
                },
                {
                    "Assumption": "CAN Bus communication lacks integrity checks.",
                    "Role": "System Security",
                    "Condition": "Unprotected CAN Bus messages."
                },
                {
                    "Assumption": "No intrusion detection system in the vehicle.",
                    "Role": "System Design",
                    "Condition": "Lack of IDS."
                }
            ],
            "Potential Impact": "Vehicle control functions could be manipulated, risking driver and passenger safety.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Tampering",
                "Vehicle Control",
                "Physical Access"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious update is pushed to the OBC, compromising system integrity.",
            "Assumptions": [
                {
                    "Assumption": "Update source is not authenticated or verified.",
                    "Role": "System Update",
                    "Condition": "Lack of update verification."
                },
                {
                    "Assumption": "System update process lacks encryption.",
                    "Role": "System Design",
                    "Condition": "Unencrypted update transmission."
                },
                {
                    "Assumption": "Administrators do not monitor update integrity.",
                    "Role": "Administration",
                    "Condition": "Negligence in monitoring."
                }
            ],
            "Potential Impact": "Compromised system firmware leading to unexpected behaviors and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Firmware Update",
                "Tampering",
                "System Integrity",
                "Malicious Code"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized changes to the GPS data feed, leading to incorrect navigation information.",
            "Assumptions": [
                {
                    "Assumption": "GPS feed is not verified for authenticity.",
                    "Role": "System Design",
                    "Condition": "Lack of GPS data verification."
                },
                {
                    "Assumption": "System does not cross-verify GPS with other data sources.",
                    "Role": "System Design",
                    "Condition": "Single source trust."
                },
                {
                    "Assumption": "No monitoring for anomalous GPS data.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of anomaly detection."
                }
            ],
            "Potential Impact": "Drivers are misled to wrong locations, impacting safety and trust.",
            "MITRE ATT&CK Keywords": [
                "GPS Spoofing",
                "Tampering",
                "Navigation",
                "Data Manipulation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny initiating a command or transaction over the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging mechanisms.",
                    "Role": "System Design",
                    "Condition": "No activity logs."
                },
                {
                    "Assumption": "Access controls do not hold users accountable.",
                    "Role": "System Security",
                    "Condition": "Weak access controls."
                },
                {
                    "Assumption": "System does not tie actions to authenticated identities.",
                    "Role": "System Design",
                    "Condition": "No user identity link."
                }
            ],
            "Potential Impact": "It becomes difficult to resolve disputes and ascertain responsibility.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Logging",
                "Accountability",
                "User Actions"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims that they did not tamper with the infotainment settings.",
            "Assumptions": [
                {
                    "Assumption": "System lacks tamper-evidence mechanisms.",
                    "Role": "System Design",
                    "Condition": "No tamper-evidence."
                },
                {
                    "Assumption": "System does not track changes back to user accounts.",
                    "Role": "System Design",
                    "Condition": "No user linkage."
                },
                {
                    "Assumption": "Insufficient monitoring of configuration changes.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Compromised system settings with inability to trace or prove tampering.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Settings Tampering",
                "Accountability",
                "Configuration Monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial of transactions or accesses within the infotainment system by authenticated users.",
            "Assumptions": [
                {
                    "Assumption": "No transaction logs or access records maintained.",
                    "Role": "System Design",
                    "Condition": "Lack of logging."
                },
                {
                    "Assumption": "System lacks non-repudiation mechanisms.",
                    "Role": "System Security",
                    "Condition": "Lack of security features."
                },
                {
                    "Assumption": "Authentication does not provide proof of identity.",
                    "Role": "System Design",
                    "Condition": "Weak authentication."
                }
            ],
            "Potential Impact": "Disputes over unauthorized activities cannot be resolved.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Transaction Logging",
                "Access Records",
                "Identity Management"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data from the infotainment system (e.g., phone contacts) is exposed via unencrypted Bluetooth communications.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth data is not encrypted.",
                    "Role": "System Security",
                    "Condition": "Unencrypted Connections."
                },
                {
                    "Assumption": "Attacker's device can connect to Bluetooth.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle."
                },
                {
                    "Assumption": "No monitoring for unusual Bluetooth activity.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Sensitive personal information exposed to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Information Disclosure",
                "Data Exposure",
                "Unencrypted Communication"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data (e.g., navigation history) can be extracted via an unsecured Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "Users connect infotainment to unsecured Wi-Fi.",
                    "Role": "User Behavior",
                    "Condition": "Open Wi-Fi usage."
                },
                {
                    "Assumption": "Wi-Fi communication lacks encryption.",
                    "Role": "System Security",
                    "Condition": "No Wi-Fi encryption."
                },
                {
                    "Assumption": "No detection for data exfiltration via Wi-Fi.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of monitoring."
                }
            ],
            "Potential Impact": "Exposure of sensitive data to eavesdroppers.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Data Extraction",
                "Eavesdropping",
                "Unencrypted Communication"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Microphone data is intercepted and accessed by unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Audio data is not encrypted during transmission.",
                    "Role": "System Security",
                    "Condition": "Unencrypted audio streams."
                },
                {
                    "Assumption": "Attacker can access the communication medium.",
                    "Role": "Attacker",
                    "Condition": "Proximity to communication medium."
                },
                {
                    "Assumption": "No protection against eavesdropping on communication channels.",
                    "Role": "System Design",
                    "Condition": "Lack of eavesdropping protection."
                }
            ],
            "Potential Impact": "Compromise of private conversations and sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Microphone",
                "Eavesdropping",
                "Data Interception",
                "Audio Communication"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the infotainment system with requests via Wi-Fi, rendering it inoperable.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi connection does not limit request rates.",
                    "Role": "System Design",
                    "Condition": "No request rate limits."
                },
                {
                    "Assumption": "Attacker has access to the same Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "No mechanisms to detect and mitigate DoS attacks.",
                    "Role": "System Security",
                    "Condition": "Lack of DoS protections."
                }
            ],
            "Potential Impact": "Loss of availability for infotainment services.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Wi-Fi",
                "Flooding",
                "Service Disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the CAN Bus network to disrupt communication between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in the CAN Bus protocol.",
                    "Role": "System Security",
                    "Condition": "Existing vulnerabilities."
                },
                {
                    "Assumption": "Attacker can physically access the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical access."
                },
                {
                    "Assumption": "No detection for unusual CAN Bus traffic.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of traffic monitoring."
                }
            ],
            "Potential Impact": "Disruption of critical vehicle functions, impacting safety and operation.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Denial of Service",
                "ECU Communication",
                "Vulnerability Exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses cellular network injection to overwhelm the HPC system with data, causing system failure.",
            "Assumptions": [
                {
                    "Assumption": "High data volume from cellular networks is not regulated.",
                    "Role": "System Design",
                    "Condition": "Unregulated data flow."
                },
                {
                    "Assumption": "Attacker has access to cellular network communication.",
                    "Role": "Attacker",
                    "Condition": "Network access."
                },
                {
                    "Assumption": "System lacks monitoring for excessive data traffic.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of traffic monitoring."
                }
            ],
            "Potential Impact": "Reduced system performance or complete service disruption.",
            "MITRE ATT&CK Keywords": [
                "Cellular Network",
                "Denial of Service",
                "Data Overload",
                "System Failure"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the HPC through an unpatched firmware vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Firmware contains exploitable vulnerabilities.",
                    "Role": "System Security",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "Attacker can deliver the exploit payload.",
                    "Role": "Attacker",
                    "Condition": "Exploit deployment."
                },
                {
                    "Assumption": "No effective patch management in place.",
                    "Role": "System Administration",
                    "Condition": "Lack of patch management."
                }
            ],
            "Potential Impact": "Full control over the infotainment system and potential tampering with critical components.",
            "MITRE ATT&CK Keywords": [
                "Firmware Exploitation",
                "Root Access",
                "Privilege Escalation",
                "Exploit"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits Bluetooth vulnerability to gain higher-level access to the system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth stack has known vulnerabilities.",
                    "Role": "System Security",
                    "Condition": "Existing Bluetooth vulnerabilities."
                },
                {
                    "Assumption": "Attacker's device within range of target vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle."
                },
                {
                    "Assumption": "System lacks monitoring for privileged access changes.",
                    "Role": "System Monitoring",
                    "Condition": "No access monitoring."
                }
            ],
            "Potential Impact": "Unauthorized higher-level control over system operations.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Privilege Escalation",
                "Vulnerability Exploitation",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Other Network Medium",
                "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87",
                "technique_id": "T1011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a software bug to execute unauthorized commands at a higher privilege level.",
            "Assumptions": [
                {
                    "Assumption": "Software contains executable bugs.",
                    "Role": "System Development",
                    "Condition": "Code flaws."
                },
                {
                    "Assumption": "Attacker can interact with the vulnerable software.",
                    "Role": "Attacker",
                    "Condition": "Access opportunity."
                },
                {
                    "Assumption": "Lack of proper input validation and error handling.",
                    "Role": "System Design",
                    "Condition": "Inadequate code defenses."
                }
            ],
            "Potential Impact": "Ability to execute unauthorized commands, potentially resulting in data manipulation or system disruption.",
            "MITRE ATT&CK Keywords": [
                "Software Bug",
                "Privilege Escalation",
                "Command Execution",
                "Bug Exploitation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake NFC tag to connect to the infotainment system and impersonate a trusted device.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system accepts input from any NFC tag without additional authentication.",
                    "Role": "System Design",
                    "Condition": "NFC module is not configured to strictly validate tags."
                },
                {
                    "Assumption": "The NFC tag can initiate high-privilege actions within the infotainment system.",
                    "Role": "System Functionality",
                    "Condition": "NFC functionality interfaces with critical system functions without proper segregation."
                },
                {
                    "Assumption": "The attacker is in physical proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Attacker can place the NFC tag near the targeted vehicle."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device impersonation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the Wi-Fi network and deceives the infotainment system into connecting to a malicious network.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system automatically connects to known Wi-Fi networks.",
                    "Role": "System Behavior",
                    "Condition": "Wi-Fi module is configured to auto-connect."
                },
                {
                    "Assumption": "The attacker can create a Wi-Fi network with the same SSID as a trusted network.",
                    "Role": "Attacker Capability",
                    "Condition": "Attacker has control over a Wi-Fi access point (AP)."
                },
                {
                    "Assumption": "The infotainment system does not verify the identity of the Wi-Fi network beyond SSID matching.",
                    "Role": "System Security",
                    "Condition": "Lack of certificate-based network authentication."
                }
            ],
            "Potential Impact": "Potential data theft and monitoring.",
            "MITRE ATT&CK Keywords": [
                "network",
                "spoofing",
                "Wi-Fi",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a spoofed Bluetooth device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not require strong authentication for Bluetooth connections.",
                    "Role": "System Design",
                    "Condition": "Bluetooth pairing process is weak or non-existent."
                },
                {
                    "Assumption": "The attacker\u2019s Bluetooth device can emit a stronger signal to override the legitimate device\u2019s signal.",
                    "Role": "Attacker Capability",
                    "Condition": "Attacker has a powerful Bluetooth transmitter."
                },
                {
                    "Assumption": "The user accepts the connection request from the spoofed device.",
                    "Role": "User",
                    "Condition": "User is tricked into approving the connection."
                }
            ],
            "Potential Impact": "Potential for unauthorized data access and control.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "wireless",
                "spoofing",
                "device access"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker physically accesses the On-Board Computer (OBC) to install a malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains physical access to the vehicle's internals.",
                    "Role": "Attacker",
                    "Condition": "Vehicle is left unattended in an insecure location."
                },
                {
                    "Assumption": "The OBC firmware is not protected by secure boot mechanisms.",
                    "Role": "System Design",
                    "Condition": "Firmware updates are not authenticated."
                },
                {
                    "Assumption": "The attacker has the tools and knowledge to install firmware.",
                    "Role": "Attacker Capability",
                    "Condition": "Attacker possesses technical expertise and equipment."
                }
            ],
            "Potential Impact": "Compromise of system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "OBC",
                "physical access"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters CAN Bus messages to manipulate vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or local network access to the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Attacker taps into the CAN Bus physically or via compromised component."
                },
                {
                    "Assumption": "CAN messages are not encrypted or authenticated.",
                    "Role": "System Design",
                    "Condition": "CAN Bus communication is in plaintext."
                },
                {
                    "Assumption": "The system accepts and acts on CAN messages without verification.",
                    "Role": "System Functionality",
                    "Condition": "Lack of message integrity checks."
                }
            ],
            "Potential Impact": "Disruption of vehicle operation and safety.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "tampering",
                "vehicle control",
                "signal injection"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker uses a malicious app to tamper with infotainment system settings via Bluetooth.",
            "Assumptions": [
                {
                    "Assumption": "The user installs untrusted applications on their mobile device.",
                    "Role": "User",
                    "Condition": "User installs apps from unofficial sources or with excessive permissions."
                },
                {
                    "Assumption": "The mobile app has permissions to communicate with the infotainment system.",
                    "Role": "System Behavior",
                    "Condition": "Infotainment system permits Bluetooth communication with paired devices."
                },
                {
                    "Assumption": "Infotainment system settings can be altered via Bluetooth commands.",
                    "Role": "System Design",
                    "Condition": "Bluetooth commands can alter critical settings without validation."
                }
            ],
            "Potential Impact": "Unauthorized system modifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "Bluetooth",
                "mobile app",
                "infotainment settings"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny making specific changes to the infotainment system settings, causing internal disputes.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not log user actions reliably.",
                    "Role": "System Design",
                    "Condition": "No robust logging mechanism implemented."
                },
                {
                    "Assumption": "Multiple users can access the system without unique identifiers.",
                    "Role": "System Functionality",
                    "Condition": "User actions are not tied to individual authentication."
                },
                {
                    "Assumption": "Users have the capability to change settings.",
                    "Role": "User",
                    "Condition": "User permissions are not restricted adequately."
                }
            ],
            "Potential Impact": "Difficulty in tracking changes and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Private Keys",
                "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)",
                "id": "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe",
                "technique_id": "T1145"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious commands via Bluetooth, complicating incident response.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth commands are not logged with adequate detail.",
                    "Role": "System Design",
                    "Condition": "Lack of comprehensive logging for Bluetooth activities."
                },
                {
                    "Assumption": "The system does not authenticate command origin.",
                    "Role": "System Functionality",
                    "Condition": "Commands are accepted without verifying sender identity."
                },
                {
                    "Assumption": "The attacker has access to a Bluetooth-enabled device.",
                    "Role": "Attacker",
                    "Condition": "Attacker can use or control a Bluetooth device."
                }
            ],
            "Potential Impact": "Challenges in forensic analysis and attribution.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "Bluetooth",
                "forensics",
                "incident response"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious user actions cannot be traced back to specific individuals due to poor authentication logs.",
            "Assumptions": [
                {
                    "Assumption": "The system allows multiple users without logging individual activities.",
                    "Role": "System Design",
                    "Condition": "System lacks user-specific logging."
                },
                {
                    "Assumption": "Users have sufficient privileges to perform harmful actions.",
                    "Role": "User",
                    "Condition": "Inadequate permission granularity or control."
                },
                {
                    "Assumption": "The logs do not capture enough detail to differentiate users.",
                    "Role": "System Functionality",
                    "Condition": "Insufficient log information."
                }
            ],
            "Potential Impact": "Inability to identify and hold accountable the correct individual.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "authentication",
                "logging",
                "user accountability"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted CAN Bus communications to gather sensitive vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access or access via a compromised component.",
                    "Role": "Attacker",
                    "Condition": "Attacker can physically tap into or exploit components."
                },
                {
                    "Assumption": "CAN Bus messages are transmitted without encryption or obfuscation.",
                    "Role": "System Design",
                    "Condition": "Messages are plaintext."
                },
                {
                    "Assumption": "Sensitive vehicle data is communicated over the CAN Bus.",
                    "Role": "System Functionality",
                    "Condition": "Critical data traverses CAN Bus without protection."
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle operational data.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "eavesdropping",
                "plaintext",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Removable Media",
                "description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",
                "id": "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec",
                "technique_id": "T1025"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Personal data from user devices communicated to the infotainment system via Bluetooth is exposed.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system accepts and processes personal data from connected devices.",
                    "Role": "System Functionality",
                    "Condition": "No restrictions on personal data exchange."
                },
                {
                    "Assumption": "Bluetooth communication is not encrypted end-to-end.",
                    "Role": "System Design",
                    "Condition": "Connection does not use secure pairing or encryption."
                },
                {
                    "Assumption": "An attacker can intercept Bluetooth communication.",
                    "Role": "Attacker",
                    "Condition": "Attacker is within range and has necessary tools."
                }
            ],
            "Potential Impact": "Leakage of personal user information.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "personal data",
                "eavesdropping",
                "unencrypted"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in Wi-Fi modules to access sensitive data stored on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Known vulnerabilities in the Wi-Fi module are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Attacker has knowledge of and exploits specific CVEs."
                },
                {
                    "Assumption": "The infotainment system stores sensitive data locally.",
                    "Role": "System Functionality",
                    "Condition": "Sensitive information is stored and accessible."
                },
                {
                    "Assumption": "Wi-Fi communication is inadequately protected.",
                    "Role": "System Design",
                    "Condition": "Weak encryption or authentication on Wi-Fi communication."
                }
            ],
            "Potential Impact": "Exposure of stored sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "vulnerability exploitation",
                "sensitive data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the OBC with excessive network traffic, causing system slowdown or crash.",
            "Assumptions": [
                {
                    "Assumption": "The OBC is exposed to external networks via Wi-Fi or cellular.",
                    "Role": "System Functionality",
                    "Condition": "Open network interfaces exposed to external traffic."
                },
                {
                    "Assumption": "The system lacks effective rate limiting or traffic filtering.",
                    "Role": "System Design",
                    "Condition": "No or inadequate DoS protection mechanisms."
                },
                {
                    "Assumption": "The attacker has sufficient bandwidth to generate a flooding attack.",
                    "Role": "Attacker",
                    "Condition": "Attacker is capable of generating substantial network traffic."
                }
            ],
            "Potential Impact": "System unavailability or degraded performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network traffic",
                "flooding",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends crafted messages to the CAN Bus, causing critical subsystems to malfunction.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Physical or local access to vehicle network."
                },
                {
                    "Assumption": "CAN Bus lacks message validation or error handling mechanisms.",
                    "Role": "System Design",
                    "Condition": "No robust checks or filtering of CAN Bus messages."
                },
                {
                    "Assumption": "Critical vehicle functions rely on CAN Bus messaging.",
                    "Role": "System Functionality",
                    "Condition": "Dependencies on real-time CAN Bus communications."
                }
            ],
            "Potential Impact": "Vehicle operation disruption.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "denial of service",
                "message flooding",
                "vehicle control"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the infotainment system\u2019s web server to render it inoperable.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system hosts a web server for remote management.",
                    "Role": "System Functionality",
                    "Condition": "Web server is part of system architecture."
                },
                {
                    "Assumption": "Exploitable vulnerabilities are present in the web server software.",
                    "Role": "System Design",
                    "Condition": "Outdated or flawed web server implementation."
                },
                {
                    "Assumption": "The attacker can send malicious web requests.",
                    "Role": "Attacker",
                    "Condition": "Attacker accesses web server interface."
                }
            ],
            "Potential Impact": "Disruption of infotainment system services.",
            "MITRE ATT&CK Keywords": [
                "web server",
                "denial of service",
                "vulnerability exploitation",
                "remote management"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a flaw in the infotainment operating system to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has local or remote access to the system.",
                    "Role": "Attacker",
                    "Condition": "Initial access gained through other means."
                },
                {
                    "Assumption": "The operating system has known, unpatched privilege escalation vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Exploitable flaws in the OS."
                },
                {
                    "Assumption": "The system does not implement sufficient privilege separation.",
                    "Role": "System Security",
                    "Condition": "Lack of granular privilege control."
                }
            ],
            "Potential Impact": "Full system control and access to all data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "operating system",
                "root access",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker modifies a seemingly benign application to execute malicious code with high privileges on the OBC.",
            "Assumptions": [
                {
                    "Assumption": "The system allows installation of third-party applications.",
                    "Role": "System Design",
                    "Condition": "Applications from untrusted sources can be installed."
                },
                {
                    "Assumption": "The malicious application requests and is granted elevated privileges.",
                    "Role": "System Functionality",
                    "Condition": "System permits high-privilege requests from apps."
                },
                {
                    "Assumption": "The attacker can deliver the application to the system.",
                    "Role": "Attacker",
                    "Condition": "User or system installs the compromised app."
                }
            ],
            "Potential Impact": "Unauthorized access and control of system resources.",
            "MITRE ATT&CK Keywords": [
                "malicious code",
                "elevation of privilege",
                "third-party application",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the touch screen controller firmware to gain elevated access.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller firmware is vulnerable and exploitable.",
                    "Role": "System Design",
                    "Condition": "Firmware contains security flaws."
                },
                {
                    "Assumption": "The attacker can target the touch screen controller via physical access or other vectors.",
                    "Role": "Attacker",
                    "Condition": "Attacker interacts with the hardware or software interface."
                },
                {
                    "Assumption": "System lacks mechanisms to restrict firmware-level access.",
                    "Role": "System Security",
                    "Condition": "Inadequate firmware security controls."
                }
            ],
            "Potential Impact": "Compromise of system interfaces and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "touch screen controller",
                "elevation of privilege",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--791481f8-e96a-41be-b089-a088763083d4",
                "technique_id": "T1542.002"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses NFC or Bluetooth to impersonate a legitimate device to gain access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC/Bluetooth module is active and in discovery mode",
                    "Role": "User/Driver",
                    "Condition": "When the infotainment system is searching for new devices"
                },
                {
                    "Assumption": "Attacker is within proximity to establish a connection",
                    "Role": "Attacker",
                    "Condition": "Within range for NFC/Bluetooth communication"
                },
                {
                    "Assumption": "There are no robust authentication mechanisms in place for device pairing",
                    "Role": "System Designer",
                    "Condition": "System may use default or weak pairing protocols"
                }
            ],
            "Potential Impact": "Integrity and confidentiality could be compromised by unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "NFC",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the GPS signal to feed incorrect location information to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's GPS module is turned on and actively in use",
                    "Role": "User/Driver",
                    "Condition": "GPS is in operation for navigation or location services"
                },
                {
                    "Assumption": "The attacker has the capability to broadcast counterfeit GPS signals",
                    "Role": "Attacker",
                    "Condition": "A GPS signal generator is used"
                },
                {
                    "Assumption": "The system lacks redundancy to verify the authenticity of GPS signals",
                    "Role": "System Designer",
                    "Condition": "No secondary checks or cross-validation in GPS data processing"
                }
            ],
            "Potential Impact": "Integrity of location data and navigation could be compromised.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "location",
                "signal"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized access to the vehicle's Wi-Fi network using spoofed credentials.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi network is enabled and broadcasting",
                    "Role": "User/Driver",
                    "Condition": "Wi-Fi is on for internet connectivity"
                },
                {
                    "Assumption": "The attacker captures or guesses the Wi-Fi credentials",
                    "Role": "Attacker",
                    "Condition": "Use of weak or default passwords"
                },
                {
                    "Assumption": "Infotainment system lacks security measures like WPA3 or MAC address filtering",
                    "Role": "System Designer",
                    "Condition": "Less secure Wi-Fi configuration"
                }
            ],
            "Potential Impact": "Compromised confidentiality and potential access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Wi-Fi",
                "network",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious firmware into the OBC through the USB port.",
            "Assumptions": [
                {
                    "Assumption": "The USB port is accessible and enabled for data transfer",
                    "Role": "User/Driver",
                    "Condition": "In situations where the USB port is actively used"
                },
                {
                    "Assumption": "The attacker has physical access to the vehicle",
                    "Role": "Attacker",
                    "Condition": "Proximity to or inside the vehicle is possible"
                },
                {
                    "Assumption": "Non-validated firmware updates can be applied",
                    "Role": "System Designer",
                    "Condition": "Lack of firmware validation or secure boot mechanisms"
                }
            ],
            "Potential Impact": "Integrity and availability of the system could be compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "USB",
                "system"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Remote attack over the cellular network to alter settings in the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Cellular connectivity is enabled for remote access",
                    "Role": "User/Driver",
                    "Condition": "Cellular module is active for internet access"
                },
                {
                    "Assumption": "The attacker has access to the cellular network or can exploit vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable vulnerabilities in the cellular module"
                },
                {
                    "Assumption": "There are insufficient security measures for remote commands",
                    "Role": "System Designer",
                    "Condition": "Weak or no encryption/authentication for remote access"
                }
            ],
            "Potential Impact": "Integrity of the OBC settings and functionality could be compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "cellular",
                "network",
                "remote"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of CAN Bus messages by an unauthorized device connected to the network.",
            "Assumptions": [
                {
                    "Assumption": "The CAN Bus network is accessible internally",
                    "Role": "User/Driver",
                    "Condition": "When internal access to the vehicle's network is possible"
                },
                {
                    "Assumption": "The attacker gains physical or wireless access to the CAN Bus",
                    "Role": "Attacker",
                    "Condition": "Physical access to or wireless capability for the vehicle network"
                },
                {
                    "Assumption": "There are inadequate security measures on CAN Bus",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption or authentication for CAN Bus messages"
                }
            ],
            "Potential Impact": "Integrity and availability of vehicle subsystem commands could be compromised.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "network",
                "messages"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver denies making specific configuration changes or accessing particular media.",
            "Assumptions": [
                {
                    "Assumption": "System logs user actions without robust integrity checks",
                    "Role": "System Designer",
                    "Condition": "Utilization of weak or no logging mechanisms"
                },
                {
                    "Assumption": "Logging data is not encrypted or protected",
                    "Role": "System Designer",
                    "Condition": "Logging information is stored in plaintext and is vulnerable"
                },
                {
                    "Assumption": "No user authentication is used for specific actions",
                    "Role": "User/Driver",
                    "Condition": "Absence of authentication mechanisms like passwords or biometrics"
                }
            ],
            "Potential Impact": "Repudiation could compromise the non-repudiation property of the system, making it difficult to prove user actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "integrity",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Erasing or modifying infotainment logs to cover tracks of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logs are kept in an easily accessible or modifiable location",
                    "Role": "System Designer",
                    "Condition": "Logs stored in unprotected areas"
                },
                {
                    "Assumption": "The attacker gains write access to log storage",
                    "Role": "Attacker",
                    "Condition": "Presence of write permissions or exploits"
                },
                {
                    "Assumption": "There are no integrity checks or audit mechanisms for logs",
                    "Role": "System Designer",
                    "Condition": "Absence of log integrity verification methods"
                }
            ],
            "Potential Impact": "Compromised non-repudiation; difficulty in auditing actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log",
                "erase",
                "modify",
                "audit"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A remote attacker denies responsibility for malicious commands sent over the cellular network.",
            "Assumptions": [
                {
                    "Assumption": "Remote commands are logged without source authentication",
                    "Role": "System Designer",
                    "Condition": "Lack of robust origin tracking in logs"
                },
                {
                    "Assumption": "Logs do not include source IP or device identification",
                    "Role": "System Designer",
                    "Condition": "Absence of detailed log entry for remote commands"
                },
                {
                    "Assumption": "Remote access authentication is weak or non-existent",
                    "Role": "System Designer",
                    "Condition": "Use of unauthenticated or easily bypassed remote access systems"
                }
            ],
            "Potential Impact": "Repudiation affecting accountability for remote actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "remote access",
                "log",
                "command"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Eavesdropping on communication over Bluetooth to gather sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Utilization of unencrypted Bluetooth protocols"
                },
                {
                    "Assumption": "Attacker is within Bluetooth range",
                    "Role": "Attacker",
                    "Condition": "Close physical proximity to the vehicle"
                },
                {
                    "Assumption": "Sensitive data is transmitted over Bluetooth",
                    "Role": "User/Driver",
                    "Condition": "Transmission of personal or critical information"
                }
            ],
            "Potential Impact": "Confidentiality of sensitive data could be compromised.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "eavesdropping",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to internal storage to retrieve sensitive data stored on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Internal storage is accessible and contains sensitive data",
                    "Role": "System Designer",
                    "Condition": "Sensitive data is stored without encryption"
                },
                {
                    "Assumption": "Infotainment system allows access to internal storage",
                    "Role": "User/Driver",
                    "Condition": "Active use of internal storage features"
                },
                {
                    "Assumption": "There are no security measures protecting stored data",
                    "Role": "System Designer",
                    "Condition": "No encryption, access control, or secure storage mechanisms"
                }
            ],
            "Potential Impact": "Confidentiality and integrity of stored data could be compromised.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "storage",
                "internal",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exploit vulnerabilities in the cellular network to intercept data communication.",
            "Assumptions": [
                {
                    "Assumption": "Cellular data is used for sensitive communications",
                    "Role": "User/Driver",
                    "Condition": "Transmission of sensitive information via cellular data"
                },
                {
                    "Assumption": "There are known vulnerabilities in the cellular network",
                    "Role": "Attacker",
                    "Condition": "Presence of exploitable cellular vulnerabilities"
                },
                {
                    "Assumption": "No encryption methods protect data in transit",
                    "Role": "System Designer",
                    "Condition": "Use of unencrypted communication protocols"
                }
            ],
            "Potential Impact": "Confidentiality of in-transit data could be compromised.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cellular",
                "communication",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the infotainment system with network traffic to exhaust resources and cause a crash.",
            "Assumptions": [
                {
                    "Assumption": "Network interfaces are enabled and accessible",
                    "Role": "User/Driver",
                    "Condition": "Active network modules"
                },
                {
                    "Assumption": "The attacker has the capability to generate substantial network traffic",
                    "Role": "Attacker",
                    "Condition": "Access to tools for network traffic generation"
                },
                {
                    "Assumption": "The system lacks safeguards against traffic flooding",
                    "Role": "System Designer",
                    "Condition": "Absence of rate limiting or traffic filtering mechanisms"
                }
            ],
            "Potential Impact": "Availability of the system could be compromised, leading to potential system crash.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network",
                "flood",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infecting the infotainment system causes it to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system is vulnerable to malware infections",
                    "Role": "System Designer",
                    "Condition": "Presence of known or unknown vulnerabilities"
                },
                {
                    "Assumption": "The attacker has a method to deliver malware to the system",
                    "Role": "Attacker",
                    "Condition": "Use of channels like USB, Bluetooth, or internet"
                },
                {
                    "Assumption": "No effective malware detection or prevention measures are in place",
                    "Role": "System Designer",
                    "Condition": "Absence of antivirus or anti-malware solutions"
                }
            ],
            "Potential Impact": "Availability of the infotainment system could be compromised.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "infection",
                "system"
            ],
            "mitre_technique": {
                "name": "Archive via Utility",
                "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",
                "id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
                "technique_id": "T1560.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Compromise of the CAN Bus network disables communication between ECUs.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus network is accessible and critical for operation",
                    "Role": "User/Driver",
                    "Condition": "Active communication between ECUs"
                },
                {
                    "Assumption": "The attacker has access to the CAN Bus network",
                    "Role": "Attacker",
                    "Condition": "Physical or wireless access to the CAN Bus"
                },
                {
                    "Assumption": "No failover or redundancy exists in the CAN Bus communication",
                    "Role": "System Designer",
                    "Condition": "Single points of failure in CAN Bus network"
                }
            ],
            "Potential Impact": "Availability of the vehicle subsystems reliant on CAN Bus could be compromised.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits software vulnerabilities to gain root access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerabilities in system software",
                    "Role": "System Designer",
                    "Condition": "Known or zero-day software vulnerabilities"
                },
                {
                    "Assumption": "The attacker has the capability to identify and exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Technical skill and resources for exploitation"
                },
                {
                    "Assumption": "No effective software patching or mitigation strategies are in place",
                    "Role": "System Designer",
                    "Condition": "Lack of regular software updates and patches"
                }
            ],
            "Potential Impact": "Confidentiality, integrity, and availability of the system could be compromised.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "exploit",
                "root access"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromise of the OBC to gain access to restricted vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The OBC controls critical vehicle functions",
                    "Role": "System Designer",
                    "Condition": "OBC integrated with vehicle control systems"
                },
                {
                    "Assumption": "Attacker has access to the OBC, either remotely or physically",
                    "Role": "Attacker",
                    "Condition": "Remote access vulnerability or physical breach"
                },
                {
                    "Assumption": "No strict access controls protect critical functions",
                    "Role": "System Designer",
                    "Condition": "Absence of robust access control measures"
                }
            ],
            "Potential Impact": "Integrity and safety of vehicle operations could be compromised.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "vehicle functions",
                "control access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting weak authentication mechanisms to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Authentication mechanisms are weak or non-existent",
                    "Role": "System Designer",
                    "Condition": "Use of weak, default, or no authentication"
                },
                {
                    "Assumption": "Attacker has means to bypass or exploit these mechanisms",
                    "Role": "Attacker",
                    "Condition": "Availability of known exploits or brute-force techniques"
                },
                {
                    "Assumption": "System does not implement multi-factor authentication (MFA)",
                    "Role": "System Designer",
                    "Condition": "Single-factor authentication remains in place"
                }
            ],
            "Potential Impact": "Confidentiality, integrity, and availability of administrative functions could be compromised.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "authentication",
                "admin access",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the NFC communication between the driver's phone and the HPC infotainment system to gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within NFC range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle"
                },
                {
                    "Assumption": "The attacker has a device capable of sniffing and replaying NFC signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of appropriate equipment"
                },
                {
                    "Assumption": "The vehicle's NFC communication lacks strong authentication mechanisms.",
                    "Role": "System Design",
                    "Condition": "Absence of secure NFC protocols"
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle systems and user data",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "unauthorized access",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the GPS signal to misguide the vehicle's navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a GPS signal spoofer.",
                    "Role": "Attacker",
                    "Condition": "Possession of spoofing device"
                },
                {
                    "Assumption": "The vehicle relies on GPS signal for navigation without additional validation.",
                    "Role": "System Design",
                    "Condition": "Single-point dependency on GPS"
                },
                {
                    "Assumption": "The vehicle is in a location where GPS spoofing equipment can function effectively.",
                    "Role": "Environment",
                    "Condition": "Favorable GPS spoofing environment"
                }
            ],
            "Potential Impact": "Misguided navigation and potential safety risks",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "signal"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker might spoof Bluetooth signals to connect unauthorized devices to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle"
                },
                {
                    "Assumption": "The Bluetooth implementation lacks proper authentication and pairing security.",
                    "Role": "System Design",
                    "Condition": "Unsecure Bluetooth protocols"
                },
                {
                    "Assumption": "The attacker has a device capable of sniffing and injecting Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of appropriate equipment"
                }
            ],
            "Potential Impact": "Unauthorized data access and system manipulation",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "unauthorized access",
                "wireless"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could gain physical access to the OBC and tamper with its firmware to control vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity and access to the vehicle"
                },
                {
                    "Assumption": "There are no tamper-evident protections in place.",
                    "Role": "System Design",
                    "Condition": "Lack of physical security measures"
                },
                {
                    "Assumption": "The firmware update mechanism does not verify the authenticity of the firmware.",
                    "Role": "System Design",
                    "Condition": "Absence of firmware authenticity checks"
                }
            ],
            "Potential Impact": "Corruption of vehicle functions and driver safety",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "OBC",
                "firmware",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker might tamper with the CAN Bus communication to send malicious commands to vehicle subsystems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical or logical access to the CAN Bus"
                },
                {
                    "Assumption": "The CAN Bus communication lacks encryption or message authentication.",
                    "Role": "System Design",
                    "Condition": "Unsecure CAN Bus protocols"
                },
                {
                    "Assumption": "The vehicle does not monitor for anomalous CAN Bus traffic.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of anomaly detection"
                }
            ],
            "Potential Impact": "Disruption or manipulation of vehicle functions",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "communication",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the configurations of Wi-Fi or Bluetooth modules to bypass security and gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the vehicle's connectivity modules.",
                    "Role": "Attacker",
                    "Condition": "Access to connectivity modules"
                },
                {
                    "Assumption": "The modules\u2019 configurations are not adequately protected.",
                    "Role": "System Design",
                    "Condition": "Weak configuration protection"
                },
                {
                    "Assumption": "There is no mechanism to detect changes in key configurations.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of configuration monitoring"
                }
            ],
            "Potential Impact": "Bypass of security measures, leading to unauthorized access",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "Wi-Fi",
                "Bluetooth",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users may deny interactions or transactions with external Bluetooth devices due to lack of logging and traceability.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks proper logging of Bluetooth interactions.",
                    "Role": "System Design",
                    "Condition": "Absence of logs"
                },
                {
                    "Assumption": "There is no secure timestamp mechanism for recorded events.",
                    "Role": "System Design",
                    "Condition": "Lack of secure timestamping"
                },
                {
                    "Assumption": "Bluetooth interactions are not strictly monitored.",
                    "Role": "System Monitoring",
                    "Condition": "Weak interaction monitoring"
                }
            ],
            "Potential Impact": "Difficulty in addressing or proving user actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "Bluetooth",
                "logging",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Other Network Medium",
                "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87",
                "technique_id": "T1011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users may deny updating system firmware via the OBC if it lacks proper audit trails.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log firmware update activities.",
                    "Role": "System Design",
                    "Condition": "Absence of update logs"
                },
                {
                    "Assumption": "There is no verification process for updates.",
                    "Role": "System Design",
                    "Condition": "Lack of update verification"
                },
                {
                    "Assumption": "Firmware updates are not timestamped and recorded securely.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of update recording"
                }
            ],
            "Potential Impact": "Inability to verify firmware update actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "firmware",
                "OBC",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Drivers and passengers could deny accessing specific web sites or services via the vehicle's Wi-Fi hotspot due to lack of browsing logs.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log internet browsing activities.",
                    "Role": "System Design",
                    "Condition": "Absence of browsing logs"
                },
                {
                    "Assumption": "There is no secure mechanism to track Wi-Fi usage.",
                    "Role": "System Monitoring",
                    "Condition": "Lack of Wi-Fi tracking"
                },
                {
                    "Assumption": "Usage data is not securely timestamped.",
                    "Role": "System Monitoring",
                    "Condition": "No secure timestamping"
                }
            ],
            "Potential Impact": "Challenges in proving or disproving web access claims",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "Wi-Fi",
                "internet",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker may exploit vulnerabilities in the cellular network module to intercept sensitive communications.",
            "Assumptions": [
                {
                    "Assumption": "The cellular network module has exploitable vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Presence of vulnerabilities"
                },
                {
                    "Assumption": "The attacker has the capability to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Possession of necessary tools"
                },
                {
                    "Assumption": "Sensitive communications are transmitted without additional encryption.",
                    "Role": "System Design",
                    "Condition": "Lack of end-to-end encryption"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cellular network",
                "intercept",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data from the GPS module could be exposed due to weak access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on the GPS module are weak or missing.",
                    "Role": "System Design",
                    "Condition": "Lack of access control"
                },
                {
                    "Assumption": "The attacker has tools to exploit these weaknesses.",
                    "Role": "Attacker",
                    "Condition": "Possession of exploitation tools"
                },
                {
                    "Assumption": "Sensitive data is stored or transmitted without encryption.",
                    "Role": "System Design",
                    "Condition": "Lack of data encryption"
                }
            ],
            "Potential Impact": "Exposure of location-based information",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "GPS",
                "access control",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of audio communications made via the car\u2019s audio system due to unencrypted transmission.",
            "Assumptions": [
                {
                    "Assumption": "The audio communications are transmitted over unencrypted channels.",
                    "Role": "System Design",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "The attacker is capable of intercepting wireless signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of interception tools"
                },
                {
                    "Assumption": "The attacker is within range of the wireless communication.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target"
                }
            ],
            "Potential Impact": "Unauthorized eavesdropping on sensitive communications",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "audio",
                "interception",
                "wireless"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the Wi-Fi module with excessive traffic, leading to denial of service for legitimate users.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a large volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to powerful tools"
                },
                {
                    "Assumption": "The Wi-Fi module lacks robust traffic management or filtering mechanisms.",
                    "Role": "System Design",
                    "Condition": "Absence of traffic controls"
                },
                {
                    "Assumption": "The attacker is within range of the Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target"
                }
            ],
            "Potential Impact": "Disruption of internet access for legitimate users",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "traffic",
                "flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker may overload the OBC with invalid commands via the CAN Bus, causing a system crash.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus"
                },
                {
                    "Assumption": "The OBC lacks input validation for CAN Bus commands.",
                    "Role": "System Design",
                    "Condition": "Weak validation mechanisms"
                },
                {
                    "Assumption": "There is no rate limiting on the OBC command processing.",
                    "Role": "System Design",
                    "Condition": "Absence of rate limiting"
                }
            ],
            "Potential Impact": "System crash and loss of control over vehicle functions",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "OBC",
                "CAN Bus",
                "flooding"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit Bluetooth vulnerabilities to repeatedly connect and disconnect, causing the system to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth module has known vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Presence of vulnerabilities"
                },
                {
                    "Assumption": "The attacker can exploit these vulnerabilities remotely.",
                    "Role": "Attacker",
                    "Condition": "Possession of necessary tools"
                },
                {
                    "Assumption": "The system does not handle excessive connection attempts gracefully.",
                    "Role": "System Design",
                    "Condition": "Poor connection handling"
                }
            ],
            "Potential Impact": "Degradation or unresponsiveness of the infotainment system",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "vulnerabilities",
                "connect"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could escalate privileges by exploiting vulnerabilities in the infotainment system\u2019s software to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system software has exploitable vulnerabilities.",
                    "Role": "System Design",
                    "Condition": "Presence of vulnerabilities"
                },
                {
                    "Assumption": "The attacker has the capability to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Possession of exploitation tools"
                },
                {
                    "Assumption": "There are no effective privilege separation mechanisms in the system.",
                    "Role": "System Design",
                    "Condition": "Weak privilege separation"
                }
            ],
            "Potential Impact": "Complete control over the infotainment system and potential access to other vehicle systems",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "infotainment",
                "root access",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting firmware update mechanisms to execute arbitrary code with high privileges.",
            "Assumptions": [
                {
                    "Assumption": "The firmware update mechanism does not verify the authenticity of the update.",
                    "Role": "System Design",
                    "Condition": "Lack of update verification"
                },
                {
                    "Assumption": "The attacker can deliver a malicious firmware update.",
                    "Role": "Attacker",
                    "Condition": "Capability to deliver update"
                },
                {
                    "Assumption": "The firmware runs with high system privileges.",
                    "Role": "System Design",
                    "Condition": "High privilege firmware"
                }
            ],
            "Potential Impact": "Escalation to high system privileges and execution of arbitrary code",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "update",
                "arbitrary code"
            ],
            "mitre_technique": {
                "name": "Launch Daemon",
                "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
                "id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
                "technique_id": "T1543.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker might exploit a vulnerability in the CAN Bus protocol to gain administrative control over critical vehicle functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical or logical access to the CAN Bus"
                },
                {
                    "Assumption": "The CAN Bus protocol has vulnerabilities that allow privilege escalation.",
                    "Role": "System Design",
                    "Condition": "Presence of protocol vulnerabilities"
                },
                {
                    "Assumption": "There are no effective mechanisms to isolate administrative commands on the CAN Bus.",
                    "Role": "System Design",
                    "Condition": "Lack of command isolation"
                }
            ],
            "Potential Impact": "Admin control over critical vehicle systems",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "CAN Bus",
                "admin control",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of an authorized NFC device to gain access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle or proximity to the NFC range.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The NFC implementation does not use strong mutual authentication.",
                    "Role": "System Designer",
                    "Condition": "Weak or no authentication"
                },
                {
                    "Assumption": "The vehicle's NFC reader automatically trusts any device in range.",
                    "Role": "System",
                    "Condition": "Default trust of NFC devices"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and system functions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "identity",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Authentication Certificates",
                "description": "Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Azure AD device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)\n\nAuthentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)(Citation: APT29 Deep Look at Credential Roaming), misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.(Citation: SpecterOps Certified Pre Owned)(Citation: GitHub CertStealer)(Citation: GitHub GhostPack Certificates) With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate\u2019s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate\u2019s subject alternative name (SAN) values define the certificate owner\u2019s alternate names.(Citation: Medium Certified Pre Owned)\n\nAbusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.\n\nAdversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as \u201cgolden\u201d certificates).(Citation: Medium Certified Pre Owned) Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.(Citation: Medium Certified Pre Owned)",
                "id": "attack-pattern--7de1f7ac-5d0c-4c9c-8873-627202205331",
                "technique_id": "T1649"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof Wi-Fi credentials to create a rogue access point that the infotainment system connects to.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can create a Wi-Fi network with the same SSID as a trusted network.",
                    "Role": "Attacker",
                    "Condition": "Ability to create Wi-Fi networks"
                },
                {
                    "Assumption": "The infotainment system automatically connects to known SSIDs without further authentication.",
                    "Role": "System",
                    "Condition": "Automatic connection to known SSIDs"
                },
                {
                    "Assumption": "The system does not perform sufficient verification of the Wi-Fi network's credentials.",
                    "Role": "System Designer",
                    "Condition": "Weak network verification"
                }
            ],
            "Potential Impact": "Data interception and potential injection of malicious data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "Wi-Fi",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof GPS signals to provide false location data to the navigation system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has equipment capable of transmitting GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Access to GPS spoofing equipment"
                },
                {
                    "Assumption": "The infotainment system relies solely on GPS signals for location data without additional verification.",
                    "Role": "System Designer",
                    "Condition": "No signal verification"
                },
                {
                    "Assumption": "The vehicle is in an area where GPS signals can be manipulated without detection.",
                    "Role": "Environment",
                    "Condition": "Isolated or vulnerable location"
                }
            ],
            "Potential Impact": "Navigation errors and compromised safety features.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation",
                "signal manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--cabe189c-a068-4574-a722-b1556f86833a",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could gain physical access to the OBC and inject malicious firmware.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity"
                },
                {
                    "Assumption": "The infotainment system does not use secure boot mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No secure boot"
                },
                {
                    "Assumption": "The system firmware is not digitally signed or verified.",
                    "Role": "System Designer",
                    "Condition": "Unsigned firmware"
                }
            ],
            "Potential Impact": "System instability, unauthorized access, and manipulation of vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "OBC",
                "firmware",
                "malware injection"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and modify CAN Bus messages to manipulate vehicle subsystems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the CAN Bus physically or wirelessly.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus"
                },
                {
                    "Assumption": "CAN Bus messages are not authenticated or encrypted.",
                    "Role": "System Designer",
                    "Condition": "Unprotected CAN Bus communications"
                },
                {
                    "Assumption": "Vehicle subsystems trust all CAN Bus messages without verification.",
                    "Role": "System",
                    "Condition": "Default trust of CAN Bus messages"
                }
            ],
            "Potential Impact": "Unreliable operation of vehicle subsystems, potentially compromising safety.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "subsystems",
                "message injection"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could use malware to alter data in the video buffer to display misleading or malicious content.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can deliver malware to the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Malware delivery capability"
                },
                {
                    "Assumption": "The system allows for the direct manipulation of the video buffer without authorization checks.",
                    "Role": "System Designer",
                    "Condition": "Weak or no authorization checks"
                },
                {
                    "Assumption": "No integrity checks are performed on the data before it is displayed.",
                    "Role": "System Designer",
                    "Condition": "No integrity checks"
                }
            ],
            "Potential Impact": "Misleading or harmful information shown to users, compromising trust and safety.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "video buffer",
                "malware",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes actions taken via the infotainment system claiming they did not perform them due to lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not implement comprehensive logging for all actions.",
                    "Role": "System Designer",
                    "Condition": "Lack of logging"
                },
                {
                    "Assumption": "Logs, if any, are not protected against tampering.",
                    "Role": "System Designer",
                    "Condition": "Unprotected logs"
                },
                {
                    "Assumption": "There is no mechanism for user attribution of actions.",
                    "Role": "System Designer",
                    "Condition": "No user attribution mechanism"
                }
            ],
            "Potential Impact": "Inability to accurately attribute actions, leading to potential disputes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits the absence of non-repudiation mechanisms to cover malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks non-repudiation controls.",
                    "Role": "System Designer",
                    "Condition": "No non-repudiation mechanisms"
                },
                {
                    "Assumption": "Event logs can be deleted or altered without detection.",
                    "Role": "System Designer",
                    "Condition": "Alterable logs"
                },
                {
                    "Assumption": "There is no chain-of-custody for sensitive actions and data.",
                    "Role": "System Designer",
                    "Condition": "No chain-of-custody"
                }
            ],
            "Potential Impact": "Difficulty in forensic analysis and accountability, enabling undetected malicious activity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "non-repudiation",
                "forensic",
                "log alteration"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user remotely disables logging mechanisms to hide their tracks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the infotainment system's remote management interface.",
                    "Role": "Attacker",
                    "Condition": "Remote access"
                },
                {
                    "Assumption": "Logging mechanisms can be turned off without administrative approval.",
                    "Role": "System Designer",
                    "Condition": "Weak administrative controls"
                },
                {
                    "Assumption": "There are no alerts or protections around changes in logging configurations.",
                    "Role": "System Designer",
                    "Condition": "No alerts or protections"
                }
            ],
            "Potential Impact": "Loss of important security logs and obfuscation of attack vectors.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "remote access",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Disabling Security Tools",
                "description": "Adversaries may disable security tools to avoid possible detection of their tools and activities. This can take the form of killing security software or event logging processes, deleting Registry keys so that tools do not start at run time, or other methods to interfere with security scanning or event reporting.",
                "id": "attack-pattern--2e0dd10b-676d-4964-acd0-8a404c92b044",
                "technique_id": "T1089"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepting unsecured Wi-Fi communications could access sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system uses unsecured Wi-Fi communications.",
                    "Role": "System Designer",
                    "Condition": "Unsecured Wi-Fi"
                },
                {
                    "Assumption": "The attacker can eavesdrop on Wi-Fi communications.",
                    "Role": "Attacker",
                    "Condition": "Eavesdropping capability"
                },
                {
                    "Assumption": "Sensitive data is transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted data transmission"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user information and potential privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "data interception",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware on the infotainment system could extract and transmit personal data to command-and-control servers.",
            "Assumptions": [
                {
                    "Assumption": "The system is vulnerable to malware infections.",
                    "Role": "System Designer",
                    "Condition": "Vulnerability to malware"
                },
                {
                    "Assumption": "No malware detection or mitigation mechanisms are in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of anti-malware"
                },
                {
                    "Assumption": "Sensitive data is stored or used on the system.",
                    "Role": "System Designer",
                    "Condition": "Sensitive data presence"
                }
            ],
            "Potential Impact": "Unauthorized transmission of personal data leading to privacy exposure.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data extraction",
                "command-and-control"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Poorly configured Bluetooth security allows unauthorized devices to access personal data stored in the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth security settings are weak or default.",
                    "Role": "System Designer",
                    "Condition": "Weak security settings"
                },
                {
                    "Assumption": "The attacker has a Bluetooth-enabled device near the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Sensitive data is stored on the infotainment system.",
                    "Role": "System Designer",
                    "Condition": "Sensitive data presence"
                }
            ],
            "Potential Impact": "Unauthorized access to personal data via Bluetooth connections.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "unauthorized access",
                "personal data"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the infotainment system's Wi-Fi or Bluetooth modules with packets, causing disruption in service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a high volume of network traffic.",
                    "Role": "Attacker",
                    "Condition": "Capability to generate traffic"
                },
                {
                    "Assumption": "The infotainment system's Wi-Fi or Bluetooth modules are not designed to handle high traffic loads.",
                    "Role": "System Designer",
                    "Condition": "Poor handling of high traffic"
                },
                {
                    "Assumption": "No traffic filtering or rate-limiting mechanisms are in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of rate-limiting"
                }
            ],
            "Potential Impact": "Service disruption and degradation of user experience.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "Bluetooth",
                "packet flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware designed to consume system resources on the OBC, leading to reduced performance or complete unavailability.",
            "Assumptions": [
                {
                    "Assumption": "The OBC is vulnerable to malware.",
                    "Role": "System Designer",
                    "Condition": "Vulnerability to malware"
                },
                {
                    "Assumption": "No resource management or protection mechanisms are in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of resource management"
                },
                {
                    "Assumption": "The attacker can deliver malware to the OBC.",
                    "Role": "Attacker",
                    "Condition": "Malware delivery capability"
                }
            ],
            "Potential Impact": "System slowdown or total unavailability, disrupting services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "OBC",
                "malware",
                "resource consumption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts CAN Bus communication to disable critical vehicle functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus"
                },
                {
                    "Assumption": "CAN Bus communication lacks redundancy or failover mechanisms.",
                    "Role": "System Designer",
                    "Condition": "No redundancy"
                },
                {
                    "Assumption": "Critical vehicle functions are dependent on CAN Bus messages.",
                    "Role": "System Designer",
                    "Condition": "Dependency on CAN Bus"
                }
            ],
            "Potential Impact": "Disabling of critical vehicle functions leading to safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "communication disruption",
                "vehicle functions"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain root access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "The OBC has an unpatched vulnerability that allows privilege escalation.",
                    "Role": "System Designer",
                    "Condition": "Unpatched vulnerability"
                },
                {
                    "Assumption": "The attacker has initial access to the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Initial access"
                },
                {
                    "Assumption": "There are no effective defensive measures such as SELinux or AppArmor.",
                    "Role": "System Designer",
                    "Condition": "Lack of defensive measures"
                }
            ],
            "Potential Impact": "Complete control over the infotainment system, potentially compromising all data and functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "OBC",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user manipulates software update mechanisms to install a backdoor.",
            "Assumptions": [
                {
                    "Assumption": "The software update mechanism is not secure.",
                    "Role": "System Designer",
                    "Condition": "Insecure update mechanism"
                },
                {
                    "Assumption": "The attacker can intercept or alter the update process.",
                    "Role": "Attacker",
                    "Condition": "Ability to alter update process"
                },
                {
                    "Assumption": "Updates are not verified with cryptographic signatures.",
                    "Role": "System Designer",
                    "Condition": "No cryptographic verification"
                }
            ],
            "Potential Impact": "Installation of backdoors, leading to sustained unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software update",
                "backdoor",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a configuration oversight to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "There is a misconfiguration in the system's privilege management.",
                    "Role": "System Designer",
                    "Condition": "Privilege misconfiguration"
                },
                {
                    "Assumption": "The attacker can access the system sufficiently to exploit the misconfiguration.",
                    "Role": "Attacker",
                    "Condition": "Access and knowledge of misconfiguration"
                },
                {
                    "Assumption": "No monitoring or alerts for privilege escalation activities.",
                    "Role": "System Designer",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Increased capabilities for the attacker, leading to broader impacts on the system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfiguration",
                "privilege escalation",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor intercepts and spoofs NFC communication.",
            "Assumptions": [
                {
                    "Assumption": "NFC-enabled devices are used for pairing and communication.",
                    "Role": "User",
                    "Condition": "When using NFC."
                },
                {
                    "Assumption": "Attacker is within proximity to the NFC signal range.",
                    "Role": "Attacker",
                    "Condition": "Close physical proximity."
                },
                {
                    "Assumption": "The attacker has tools to intercept and manipulate NFC signals.",
                    "Role": "Attacker",
                    "Condition": "Possession of specialized equipment and knowledge."
                }
            ],
            "Potential Impact": "Unauthorized access to vehicle systems, leading to possible data breaches or unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Spoofing of GPS signals to mislead navigation systems.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle relies on GPS signals for navigation.",
                    "Role": "System",
                    "Condition": "Active GPS dependency."
                },
                {
                    "Assumption": "Attacker can transmit stronger falsified GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Tools for GPS signal manipulation."
                },
                {
                    "Assumption": "The system lacks robust GPS signal authentication mechanisms.",
                    "Role": "System",
                    "Condition": "Weak or no GPS signal authentication."
                }
            ],
            "Potential Impact": "Misleading the driver, potentially causing safety issues or rerouting to unauthorized locations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "navigation"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of a trusted Bluetooth device.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth used for hands-free communication and media playback.",
                    "Role": "User/System",
                    "Condition": "Active Bluetooth connection."
                },
                {
                    "Assumption": "Attacker can mimic a trusted device's MAC address.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of target device's MAC address."
                },
                {
                    "Assumption": "The system does not enforce strong device pairing authentication.",
                    "Role": "System",
                    "Condition": "Weak Bluetooth security measures."
                }
            ],
            "Potential Impact": "Unauthorized access to audio system, potential eavesdropping, or driving distraction.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware injection through a compromised Wi-Fi network.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system connects to external Wi-Fi networks.",
                    "Role": "System",
                    "Condition": "Connected to Wi-Fi."
                },
                {
                    "Assumption": "The Wi-Fi network is compromised.",
                    "Role": "Attacker",
                    "Condition": "Attacker controls Wi-Fi network."
                },
                {
                    "Assumption": "The system lacks robust network security measures.",
                    "Role": "System",
                    "Condition": "Weak firewall or security configurations."
                }
            ],
            "Potential Impact": "Malware installation leading to data corruption or unauthorized system control.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of CAN Bus messages to alter vehicle behavior.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus is used for vehicle component communication.",
                    "Role": "System",
                    "Condition": "Active CAN Bus communication."
                },
                {
                    "Assumption": "Attacker gains access to the CAN Bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access."
                },
                {
                    "Assumption": "CAN Bus lacks encryption and integrity checks.",
                    "Role": "System",
                    "Condition": "Unsecured communication protocols."
                }
            ],
            "Potential Impact": "Vehicle component control interference, potentially endangering passengers.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "vehicle"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized access and alteration of On-Board Computer (OBC) firmware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are remotely installed.",
                    "Role": "User/System",
                    "Condition": "Remote firmware updates enabled."
                },
                {
                    "Assumption": "The attacker has access to the network or firmware update process.",
                    "Role": "Attacker",
                    "Condition": "Network access or access to update servers."
                },
                {
                    "Assumption": "Firmware lacks integrity verification.",
                    "Role": "System",
                    "Condition": "Weak or no integrity checks."
                }
            ],
            "Potential Impact": "Compromised OBC functionality leading to altered vehicle operations and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "OBC"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a specific set of commands via the touch screen interface.",
            "Assumptions": [
                {
                    "Assumption": "Commands are logged without user authentication.",
                    "Role": "System",
                    "Condition": "Log entries without authentication evidence."
                },
                {
                    "Assumption": "Multiple users interact with the infotainment system.",
                    "Role": "Users",
                    "Condition": "Shared touch screen access."
                },
                {
                    "Assumption": "The system does not track unique user sessions.",
                    "Role": "System",
                    "Condition": "Lack of session tracking."
                }
            ],
            "Potential Impact": "Difficulty in tracing user actions, leading to disputes and potential security policy violations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "touch screen",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial of performing actions over Bluetooth or Wi-Fi connections.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth and Wi-Fi communications are logged.",
                    "Role": "System",
                    "Condition": "Active communication logging."
                },
                {
                    "Assumption": "Logs do not include sufficient details to distinguish users.",
                    "Role": "System",
                    "Condition": "Insufficient log details."
                },
                {
                    "Assumption": "Multiple devices can connect concurrently.",
                    "Role": "Users",
                    "Condition": "Concurrent device connections."
                }
            ],
            "Potential Impact": "Challenges in user accountability, causing legal or operational complications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "Bluetooth",
                "Wi-Fi"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies altering settings in the OBC through the control interface.",
            "Assumptions": [
                {
                    "Assumption": "Control setting changes are logged.",
                    "Role": "System",
                    "Condition": "Active setting change logging."
                },
                {
                    "Assumption": "Logs do not tie changes to authenticated users.",
                    "Role": "System",
                    "Condition": "Lack of user authentication tracking."
                },
                {
                    "Assumption": "Multiple users can access the control interface.",
                    "Role": "Users",
                    "Condition": "Shared access."
                }
            ],
            "Potential Impact": "Lack of user accountability and potential difficulties in resolving disputes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "OBC",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Eavesdropping on data transmitted over a compromised Wi-Fi connection.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system uses Wi-Fi for data communication.",
                    "Role": "System",
                    "Condition": "Active Wi-Fi data transmission."
                },
                {
                    "Assumption": "Attacker intercepts Wi-Fi data packets.",
                    "Role": "Attacker",
                    "Condition": "Positioned between or within range of communication."
                },
                {
                    "Assumption": "Lack of encrypted communication protocols.",
                    "Role": "System",
                    "Condition": "Use of unencrypted protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data or vehicle information, potentially leading to privacy violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Accessing sensitive data stored on the OBC via an unsecured Bluetooth connection.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth used for data transfer between devices.",
                    "Role": "System",
                    "Condition": "Active Bluetooth connection."
                },
                {
                    "Assumption": "Attacker gains access to pairing or connection without authorization.",
                    "Role": "Attacker",
                    "Condition": "Weak Bluetooth security."
                },
                {
                    "Assumption": "Sensitive data is stored without adequate protection.",
                    "Role": "System",
                    "Condition": "Unencrypted data at rest."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, including personal information and vehicle telemetry, which can be exploited.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized extraction of data logs from the CAN Bus.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus contains valuable information on vehicle operations.",
                    "Role": "System",
                    "Condition": "Critical data within CAN Bus."
                },
                {
                    "Assumption": "Attacker has physical or remote access to the bus.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus network."
                },
                {
                    "Assumption": "Logs are not encrypted or protected.",
                    "Role": "System",
                    "Condition": "Unprotected logs."
                }
            ],
            "Potential Impact": "Leakage of operational data which could be used for reconnaissance or further malicious actions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "CAN Bus",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Overloading the infotainment system through excessive Bluetooth connection requests.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connection handling is resource-intensive.",
                    "Role": "System",
                    "Condition": "Resource-heavy connection management."
                },
                {
                    "Assumption": "Attacker floods the system with connection requests.",
                    "Role": "Attacker",
                    "Condition": "Capability to send large volumes of requests."
                },
                {
                    "Assumption": "The system lacks rate limiting mechanisms.",
                    "Role": "System",
                    "Condition": "No rate limiting or throttling."
                }
            ],
            "Potential Impact": "System slowdown or crash, inhibiting user interaction and disrupting operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Disrupting CAN Bus communication to disconnect vehicle components.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus manages critical real-time communications.",
                    "Role": "System",
                    "Condition": "Critical subsystem reliance."
                },
                {
                    "Assumption": "Attacker sends malformed or excessive CAN Bus messages.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and access to CAN Bus."
                },
                {
                    "Assumption": "The system cannot handle malformed messages resiliently.",
                    "Role": "System",
                    "Condition": "Lack of error handling."
                }
            ],
            "Potential Impact": "Vehicle component failures, leading to safety concerns or operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "malformed messages"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Jamming the GPS signal to disrupt navigation services.",
            "Assumptions": [
                {
                    "Assumption": "GPS is essential for navigation and location-based services.",
                    "Role": "System",
                    "Condition": "Active GPS usage."
                },
                {
                    "Assumption": "Attacker has a GPS jammer within range.",
                    "Role": "Attacker",
                    "Condition": "Possession of jamming equipment."
                },
                {
                    "Assumption": "System relies solely on GPS signals without alternative measures.",
                    "Role": "System",
                    "Condition": "Lack of GPS alternatives."
                }
            ],
            "Potential Impact": "Loss of navigation capabilities and location-based services, affecting driver experience and safety.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GPS",
                "jamming"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in the OBC software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "OBC software contains exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerabilities."
                },
                {
                    "Assumption": "Attacker has network access to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Remote or local network access."
                },
                {
                    "Assumption": "Privileges are not adequately segmented.",
                    "Role": "System",
                    "Condition": "Poor privilege management."
                }
            ],
            "Potential Impact": "Unauthorized control over system functions, leading to potential data breaches or system manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Utilizing a backdoor in the infotainment system to gain elevated permissions.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system has a hidden backdoor.",
                    "Role": "System",
                    "Condition": "Existence of backdoor."
                },
                {
                    "Assumption": "Attacker knows about and can access the backdoor.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and access to backdoor."
                },
                {
                    "Assumption": "System lacks detection mechanisms for unauthorized access.",
                    "Role": "System",
                    "Condition": "Ineffective monitoring and alerting."
                }
            ],
            "Potential Impact": "Compromising system integrity and confidentiality, leading to unauthorized actions and information leakage.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "backdoor",
                "system"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Bypassing authentication mechanisms to gain root access via the touch screen interface.",
            "Assumptions": [
                {
                    "Assumption": "Touch screen controls access to critical functions.",
                    "Role": "System",
                    "Condition": "Privileged touch screen access."
                },
                {
                    "Assumption": "Attacker can bypass or exploit authentication flaws.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of authentication weaknesses."
                },
                {
                    "Assumption": "The system does not enforce strong authentication protocols.",
                    "Role": "System",
                    "Condition": "Weak or flawed authentication."
                }
            ],
            "Potential Impact": "Full control over system settings and data, leading to potential extensive damage or data theft.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "authentication",
                "touch screen"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the vehicle's infotainment system using Bluetooth spoofing.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth connectivity is enabled and discoverable",
                    "Role": "Attacker",
                    "Condition": "Bluetooth is active and discoverable by default or due to user action"
                },
                {
                    "Assumption": "Attacker is within Bluetooth range",
                    "Role": "Attacker",
                    "Condition": "Attacker is physically close enough to exploit the Bluetooth connection"
                },
                {
                    "Assumption": "Lack of strong Bluetooth authentication mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "System does not enforce strong authentication protocols for Bluetooth"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data through Bluetooth connectivity.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "spoofing",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs an NFC tag to execute unauthorized commands on the OBC.",
            "Assumptions": [
                {
                    "Assumption": "NFC functionality is enabled",
                    "Role": "Infotainment System",
                    "Condition": "NFC is active and ready to read tags"
                },
                {
                    "Assumption": "Attacker can place a spoofed NFC tag near the sensor",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical access to place the tag near the vehicle"
                },
                {
                    "Assumption": "Lack of NFC authentication or validation",
                    "Role": "Infotainment System",
                    "Condition": "System does not validate the authenticity of NFC tags"
                }
            ],
            "Potential Impact": "Execution of unauthorized commands affecting data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "NFC",
                "spoofing",
                "command",
                "execution"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs cellular network signals to intercept and manipulate communications.",
            "Assumptions": [
                {
                    "Assumption": "Cellular connectivity is active",
                    "Role": "Infotainment System",
                    "Condition": "System is actively communicating over cellular networks"
                },
                {
                    "Assumption": "Attacker has access to a GSM interceptor",
                    "Role": "Attacker",
                    "Condition": "Attacker possesses necessary equipment to intercept GSM signals"
                },
                {
                    "Assumption": "Weak or no encryption on cellular communications",
                    "Role": "Infotainment System",
                    "Condition": "System does not use strong encryption for cellular communications"
                }
            ],
            "Potential Impact": "Interception and manipulation of communications leading to information disclosure.",
            "MITRE ATT&CK Keywords": [
                "cellular",
                "spoofing",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters CAN bus messages to manipulate vehicle subsystems.",
            "Assumptions": [
                {
                    "Assumption": "Access to the vehicle's internal network through a compromised ECU or diagnostic port",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical or remote access to a connected ECU"
                },
                {
                    "Assumption": "CAN bus lacks message authentication mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "System does not verify the authenticity of CAN bus messages"
                },
                {
                    "Assumption": "ECU sending critical commands without verification",
                    "Role": "Electronic Control Units",
                    "Condition": "ECUs trust all CAN bus messages without additional checks"
                }
            ],
            "Potential Impact": "Manipulation of vehicle behavior leading to loss of data integrity and potentially causing safety issues.",
            "MITRE ATT&CK Keywords": [
                "CAN bus",
                "tampering",
                "vehicle",
                "ECU"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the firmware of the on-board computer (OBC) to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Access to the OBC firmware update process",
                    "Role": "Attacker",
                    "Condition": "Attacker can intercept or partake in the firmware update process"
                },
                {
                    "Assumption": "No integrity checks on the firmware",
                    "Role": "Infotainment System",
                    "Condition": "System does not perform strict integrity checks on firmware"
                },
                {
                    "Assumption": "Administrator privileges required but obtained via other means",
                    "Role": "Attacker",
                    "Condition": "Attacker has acquired necessary privileges through other exploits"
                }
            ],
            "Potential Impact": "Introduction of malicious code compromising both data integrity and system availability.",
            "MITRE ATT&CK Keywords": [
                "firmware",
                "tampering",
                "malware",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker deletes or corrupts the video buffer data to disrupt media playback.",
            "Assumptions": [
                {
                    "Assumption": "Access to the video buffer",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to the memory where the video buffer resides"
                },
                {
                    "Assumption": "Weak memory protection mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "System does not enforce strong access controls on memory regions"
                },
                {
                    "Assumption": "No integrity validation for video buffer data",
                    "Role": "Infotainment System",
                    "Condition": "System does not validate the integrity of video data"
                }
            ],
            "Potential Impact": "Disruption of multimedia services affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "video",
                "tampering",
                "buffer",
                "corruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies downloading and installing a malicious application via the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Logging of user actions is incomplete or non-existent",
                    "Role": "Infotainment System",
                    "Condition": "System does not maintain comprehensive logs of user activities"
                },
                {
                    "Assumption": "Malicious application resembles legitimate services",
                    "Role": "Attacker",
                    "Condition": "Malicious app is designed to appear like a legitimate service"
                },
                {
                    "Assumption": "No application verification processes",
                    "Role": "Infotainment System",
                    "Condition": "System does not verify or authenticate downloaded applications"
                }
            ],
            "Potential Impact": "Damage to data integrity and potential unauthorized information disclosure.",
            "MITRE ATT&CK Keywords": [
                "application",
                "downloading",
                "repudiation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A driver claims they were not in control of the vehicle during an incident caused by a system malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of system operational status",
                    "Role": "Infotainment System",
                    "Condition": "System does not log detailed operational events"
                },
                {
                    "Assumption": "No mutual authentication between vehicle and driver",
                    "Role": "Infotainment System",
                    "Condition": "Vehicle does not verify driver identity on each use"
                },
                {
                    "Assumption": "System malfunction occurred but not properly recorded",
                    "Role": "Infotainment System",
                    "Condition": "System faults are not captured or logged accurately"
                }
            ],
            "Potential Impact": "Difficulty in establishing responsibility leading to potential data integrity and availability issues.",
            "MITRE ATT&CK Keywords": [
                "system",
                "malfunction",
                "repudiation",
                "logging"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending communications made through the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Lack of audit trails for communications",
                    "Role": "Infotainment System",
                    "Condition": "System does not maintain detailed logs of communication activities"
                },
                {
                    "Assumption": "Communications are not authenticated",
                    "Role": "Infotainment System",
                    "Condition": "System does not enforce user authentication for communications"
                },
                {
                    "Assumption": "System does not support non-repudiation mechanisms",
                    "Role": "Infotainment System",
                    "Condition": "System lacks mechanisms to ensure actions cannot be denied"
                }
            ],
            "Potential Impact": "Unauthorized communications leading to information disclosure and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "communications",
                "sending",
                "repudiation",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Wi-Fi communications to capture sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi is used for transmitting sensitive data",
                    "Role": "Infotainment System",
                    "Condition": "Sensitive data is transmitted over Wi-Fi"
                },
                {
                    "Assumption": "Weak or no encryption on Wi-Fi communications",
                    "Role": "Infotainment System",
                    "Condition": "System does not use strong encryption for Wi-Fi communications"
                },
                {
                    "Assumption": "Attacker is within Wi-Fi range",
                    "Role": "Attacker",
                    "Condition": "Attacker is physically close enough to capture Wi-Fi signals"
                }
            ],
            "Potential Impact": "Unauthorized access to highly sensitive information affecting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "interception",
                "information disclosure",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive geolocation data is exposed to unauthorized parties through a compromised GPS module.",
            "Assumptions": [
                {
                    "Assumption": "Access to the GPS data stream",
                    "Role": "Attacker",
                    "Condition": "Attacker can intercept GPS data"
                },
                {
                    "Assumption": "Unencrypted GPS data transmission",
                    "Role": "Infotainment System",
                    "Condition": "GPS data is transmitted without encryption"
                },
                {
                    "Assumption": "Compromised GPS module",
                    "Role": "Attacker",
                    "Condition": "Attacker has compromised the GPS hardware or software"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive location information affecting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "GPS",
                "geolocation",
                "information disclosure",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses the car's microphone to listen to private conversations.",
            "Assumptions": [
                {
                    "Assumption": "Microphone is active and recording",
                    "Role": "Infotainment System",
                    "Condition": "Microphone is turned on and capable of recording"
                },
                {
                    "Assumption": "Attacker can access microphone data stream",
                    "Role": "Attacker",
                    "Condition": "Attacker has the ability to access or intercept microphone data"
                },
                {
                    "Assumption": "No encryption on audio data",
                    "Role": "Infotainment System",
                    "Condition": "Audio data is transmitted without encryption"
                }
            ],
            "Potential Impact": "Unauthorized access to private audio conversations affecting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "microphone",
                "audio",
                "information disclosure",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the vehicle's Wi-Fi network with malicious traffic, causing disruptions.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi enabled and reachable",
                    "Role": "Infotainment System",
                    "Condition": "Wi-Fi network is active and accessible"
                },
                {
                    "Assumption": "Attacker can generate high traffic volume",
                    "Role": "Attacker",
                    "Condition": "Attacker has resources to send large volumes of data"
                },
                {
                    "Assumption": "Weak network traffic management",
                    "Role": "Infotainment System",
                    "Condition": "System does not handle malicious traffic effectively"
                }
            ],
            "Potential Impact": "Disruption of network services, affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "denial of service",
                "network",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects the OBC, causing the infotainment system to crash repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "System is vulnerable to malware",
                    "Role": "Infotainment System",
                    "Condition": "System lacks sufficient malware protection"
                },
                {
                    "Assumption": "Attacker delivers malware to the OBC",
                    "Role": "Attacker",
                    "Condition": "Attacker can deliver or execute malware on the OBC"
                },
                {
                    "Assumption": "Malware is designed to disrupt system operations",
                    "Role": "Attacker",
                    "Condition": "Malware causes intentional system disruption"
                }
            ],
            "Potential Impact": "Repeated crashes leading to unavailability of the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "denial of service",
                "OBC",
                "crash"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker physically removes or damages the touch screen controller, rendering the user interface inoperable.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the vehicle's interior",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical access to the vehicle"
                },
                {
                    "Assumption": "Touch screen controller is accessible and unprotected",
                    "Role": "Infotainment System",
                    "Condition": "Controller can be accessed and tampered with"
                },
                {
                    "Assumption": "No redundant input methods",
                    "Role": "Infotainment System",
                    "Condition": "System does not have alternative input methods"
                }
            ],
            "Potential Impact": "Loss of user interface functionality impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "touch screen",
                "denial of service",
                "physical",
                "hardware"
            ],
            "mitre_technique": {
                "name": "Hardware",
                "description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
                "id": "attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26",
                "technique_id": "T1592.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability to gain administrative control over the OBC.",
            "Assumptions": [
                {
                    "Assumption": "OBC software has exploitable vulnerabilities",
                    "Role": "Infotainment System",
                    "Condition": "Software contains flaws that can be exploited"
                },
                {
                    "Assumption": "Attacker can identify and exploit the vulnerability",
                    "Role": "Attacker",
                    "Condition": "Attacker has knowledge and tools to exploit the software bug"
                },
                {
                    "Assumption": "No proper privilege separation in the system",
                    "Role": "Infotainment System",
                    "Condition": "System does not enforce strict privilege separation"
                }
            ],
            "Potential Impact": "Attacker gains full control over the system affecting data integrity, confidentiality, and availability.",
            "MITRE ATT&CK Keywords": [
                "software",
                "exploitation",
                "elevation of privilege",
                "OBC"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability through the touch screen interface to execute high-privilege commands.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable touch screen interface",
                    "Role": "Infotainment System",
                    "Condition": "Touch screen software has security gaps"
                },
                {
                    "Assumption": "Attacker has access to the touch screen",
                    "Role": "Attacker",
                    "Condition": "Attacker can physically or remotely control the touch screen"
                },
                {
                    "Assumption": "No input validation on touch commands",
                    "Role": "Infotainment System",
                    "Condition": "System does not validate touch screen input rigorously"
                }
            ],
            "Potential Impact": "Execution of unauthorized high-privilege commands compromising system integrity and security.",
            "MITRE ATT&CK Keywords": [
                "touch screen",
                "exploitation",
                "elevation of privilege",
                "command"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains privileged access through the CAN bus by compromising an ECU.",
            "Assumptions": [
                {
                    "Assumption": "Compromised ECU within the vehicle's network",
                    "Role": "Attacker",
                    "Condition": "Attacker has taken control of an ECU"
                },
                {
                    "Assumption": "Weak or no authentication on CAN bus messages",
                    "Role": "Infotainment System",
                    "Condition": "System trusts all CAN bus messages without verification"
                },
                {
                    "Assumption": "Insufficient privilege separation in ECUs",
                    "Role": "Infotainment System",
                    "Condition": "ECUs operate with minimal privilege separation"
                }
            ],
            "Potential Impact": "Attacker gains control over critical vehicle operations affecting system integrity and safety.",
            "MITRE ATT&CK Keywords": [
                "CAN bus",
                "ECU",
                "elevation of privilege",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker impersonates the OBC to communicate with other ECUs over the CAN bus.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical access to the vehicle\u2019s CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Vehicle is not in a secure location."
                },
                {
                    "Assumption": "Attacker possesses the necessary hardware tools to interface with CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Tools are easily accessible."
                },
                {
                    "Assumption": "No specific secure authentication mechanisms are used on the CAN bus.",
                    "Role": "System Designer",
                    "Condition": "Standard unencrypted CAN bus protocol used."
                }
            ],
            "Potential Impact": "Unauthorized control of vehicle subsystems.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "CAN bus",
                "automotive",
                "device communication"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized device connects to the infotainment system via Bluetooth, posing as a trusted device.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system has open Bluetooth pairing mode.",
                    "Role": "System Designer",
                    "Condition": "Pairing mode is not restricted."
                },
                {
                    "Assumption": "Attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Attacker is physically near vehicle."
                },
                {
                    "Assumption": "Vehicle\u2019s Bluetooth pairing process does not use strong authentication methods.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent Bluetooth security protocols."
                }
            ],
            "Potential Impact": "Unauthorized access to user data and potential control of infotainment features.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "pairing",
                "unauthorized access",
                "proximity"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker mimics a legitimate cellular network to trick the vehicle\u2019s cellular module into connecting.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to a portable rogue cell tower (IMSI catcher).",
                    "Role": "Attacker",
                    "Condition": "Attacker can deploy an IMSI catcher near the target."
                },
                {
                    "Assumption": "Vehicle\u2019s cellular module lacks robust detection of rogue cell towers.",
                    "Role": "System Designer",
                    "Condition": "No advanced rogue tower detection implemented."
                },
                {
                    "Assumption": "Cellular module automatically connects to the strongest signal.",
                    "Role": "System Designer",
                    "Condition": "Default network selection behavior."
                }
            ],
            "Potential Impact": "Man-in-the-middle attack leading to eavesdropping and potential data interference.",
            "MITRE ATT&CK Keywords": [
                "cellular network",
                "IMSI catcher",
                "Man-in-the-Middle",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on an external device modifies firmware of the infotainment system via USB interface.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to a malicious USB device.",
                    "Role": "Attacker",
                    "Condition": "Malicious device created or bought."
                },
                {
                    "Assumption": "Vehicle allows firmware updates via USB without sufficient verification.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent update verification mechanisms."
                },
                {
                    "Assumption": "User connects untrusted USB device to infotainment system.",
                    "Role": "User",
                    "Condition": "USB ports are readily accessible."
                }
            ],
            "Potential Impact": "System integrity is compromised through unauthorized firmware changes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "USB",
                "infotainment"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker intercepts and alters CAN bus messages affecting sensor data relayed to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has physical access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Vehicle left unattended in a public space."
                },
                {
                    "Assumption": "CAN bus messages are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Use of standard CAN protocols."
                },
                {
                    "Assumption": "Attacker has the hardware to intercept and modify CAN bus messages.",
                    "Role": "Attacker",
                    "Condition": "Necessary devices procured."
                }
            ],
            "Potential Impact": "Inaccurate sensor data leads to misinformed decisions by the OBC.",
            "MITRE ATT&CK Keywords": [
                "CAN bus",
                "sensor tampering",
                "automotive",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers modify the infotainment system\u2019s software to redirect navigation routes.",
            "Assumptions": [
                {
                    "Assumption": "System allows remote software updates.",
                    "Role": "System Designer",
                    "Condition": "Remote update mechanism in place."
                },
                {
                    "Assumption": "Exploitable vulnerability in the update mechanism exists.",
                    "Role": "System Designer/Attacker",
                    "Condition": "Vulnerability not patched."
                },
                {
                    "Assumption": "Attacker gains access to the update server or delivery channel.",
                    "Role": "Attacker",
                    "Condition": "Severe network security lapse."
                }
            ],
            "Potential Impact": "Drivers may be directed to incorrect or dangerous routes.",
            "MITRE ATT&CK Keywords": [
                "software tampering",
                "navigation",
                "remote update",
                "automotive security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attacker sends false communications commands via the infotainment system\u2019s interfaces to other units (e.g., CAN bus) and denies such actions.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate logging of commands sent by the OBC.",
                    "Role": "System Designer",
                    "Condition": "Logs not comprehensive or tamper-proof."
                },
                {
                    "Assumption": "Lack of strong authentication mechanisms for sending commands.",
                    "Role": "System Designer",
                    "Condition": "Weak authentication controls."
                },
                {
                    "Assumption": "Attacker has means to access and control persona assignment.",
                    "Role": "Attacker",
                    "Condition": "Compromised access controls."
                }
            ],
            "Potential Impact": "Loss of accountability and potential legal implications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command injection",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user or attacker deletes log files from the OBC to hide malicious actions or unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient protection for log files.",
                    "Role": "System Designer",
                    "Condition": "Log files stored without proper permissions."
                },
                {
                    "Assumption": "Log files are not redundantly backed up.",
                    "Role": "System Designer",
                    "Condition": "No redundant logging mechanisms in place."
                },
                {
                    "Assumption": "Logged actions do not have non-repudiation measures.",
                    "Role": "System Designer",
                    "Condition": "Logs are easily modifiable."
                }
            ],
            "Potential Impact": "Loss of critical audit trail information.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "file deletion",
                "audit trail",
                "tampering"
            ],
            "mitre_technique": {
                "name": "File Deletion",
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
                "id": "attack-pattern--56fca983-1cf1-4fd1-bda0-5e170a37ab59",
                "technique_id": "T1107"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Drivers deny using certain features or accessing specific data via the infotainment system due to lack of detailed access logs.",
            "Assumptions": [
                {
                    "Assumption": "System does not log user-specific actions adequately.",
                    "Role": "System Designer",
                    "Condition": "Inadequate logging policy."
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) in place.",
                    "Role": "System Designer",
                    "Condition": "MFA not implemented."
                },
                {
                    "Assumption": "Multiple users share the same access credentials.",
                    "Role": "User",
                    "Condition": "Shared user profiles."
                }
            ],
            "Potential Impact": "Disputes over accountability for actions taken on the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "logging",
                "MFA"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on unencrypted Bluetooth communications to access sensitive user data (e.g., contacts, messages).",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Encryption not enforced."
                },
                {
                    "Assumption": "Attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to target."
                },
                {
                    "Assumption": "Sensitive data is transmitted over Bluetooth.",
                    "Role": "System Designer",
                    "Condition": "Standard transmission procedure."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive personal information.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "eavesdropping",
                "unencrypted communication",
                "data privacy"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker intercepts and reads data being transmitted over the vehicle\u2019s Wi-Fi network.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi network is not secured with strong encryption.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent Wi-Fi security protocols."
                },
                {
                    "Assumption": "Attacker is within Wi-Fi range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle."
                },
                {
                    "Assumption": "Sensitive data is transmitted over Wi-Fi.",
                    "Role": "System Designer",
                    "Condition": "Data transmission practice."
                }
            ],
            "Potential Impact": "Compromise of personal and potentially sensitive information.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "data interception",
                "unencrypted transmission",
                "network security"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data stored within the infotainment system (e.g., recent destinations, contacts) is exposed due to insufficient data protection mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Data is stored unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption policies."
                },
                {
                    "Assumption": "Attacker gains access to the OBC where data is stored.",
                    "Role": "Attacker",
                    "Condition": "Compromise of system access."
                },
                {
                    "Assumption": "Lack of access control measures for stored data.",
                    "Role": "System Designer",
                    "Condition": "Insufficient access controls."
                }
            ],
            "Potential Impact": "Exposure of sensitive user data leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "unencrypted data",
                "data storage",
                "automotive",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker floods the CAN bus with high-volume messages causing other essential ECUs to be unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting mechanisms on the CAN bus.",
                    "Role": "System Designer",
                    "Condition": "Standard CAN protocol usage."
                },
                {
                    "Assumption": "Attacker has physical access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the vehicle."
                },
                {
                    "Assumption": "The system does not detect and filter malicious traffic.",
                    "Role": "System Designer",
                    "Condition": "Insufficient intrusion detection measures."
                }
            ],
            "Potential Impact": "Disruption of critical vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN bus",
                "flood attack",
                "network communication"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker uses a malicious Wi-Fi network to overload the infotainment system\u2019s resources.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system automatically connects to available Wi-Fi networks.",
                    "Role": "System Designer",
                    "Condition": "No protective network selection mechanisms."
                },
                {
                    "Assumption": "Attacker sets up a malicious Wi-Fi network near the target vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target vehicle."
                },
                {
                    "Assumption": "System lacks defenses against network resource exhaustion attacks.",
                    "Role": "System Designer",
                    "Condition": "Insufficient network security measures."
                }
            ],
            "Potential Impact": "Infotainment system becomes unavailable or unresponsive.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "resource exhaustion",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware targets the infotainment system via cellular connection causing it to crash frequently.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system accesses insecure cellular networks.",
                    "Role": "System Designer",
                    "Condition": "No secure access policies for cellular networks."
                },
                {
                    "Assumption": "Vehicle connects to the internet through cellular network.",
                    "Role": "System Designer",
                    "Condition": "Internet connectivity requirement."
                },
                {
                    "Assumption": "Attacker can deliver payloads via cellular networks.",
                    "Role": "Attacker",
                    "Condition": "Capability to target cellular channels."
                }
            ],
            "Potential Impact": "Frequent crashes and system unavailability.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "cellular",
                "infotainment",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits a vulnerability in the infotainment system\u2019s OS to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment OS has known exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Unpatched and outdated software."
                },
                {
                    "Assumption": "Attacker has a method to exploit the vulnerabilities remotely.",
                    "Role": "Attacker",
                    "Condition": "Remote access capability."
                },
                {
                    "Assumption": "User privileges are not strictly separated from root privileges.",
                    "Role": "System Designer",
                    "Condition": "Poor privilege segregation."
                }
            ],
            "Potential Impact": "Full control over the system leading to data compromise and further attacks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OS vulnerability",
                "root access",
                "remote exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious app installed on the infotainment system gains higher access than intended.",
            "Assumptions": [
                {
                    "Assumption": "System allows third-party app installations.",
                    "Role": "System Designer",
                    "Condition": "Open installation policy."
                },
                {
                    "Assumption": "App store or source of apps is not thoroughly vetted.",
                    "Role": "System Designer",
                    "Condition": "Lack of app vetting processes."
                },
                {
                    "Assumption": "No effective sandboxing of apps in place.",
                    "Role": "System Designer",
                    "Condition": "Weak app isolation mechanisms."
                }
            ],
            "Potential Impact": "Malicious app may access and control sensitive functionality.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "malicious app",
                "third-party software",
                "sandboxing"
            ],
            "mitre_technique": {
                "name": "Steal Application Access Token",
                "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019)  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nFor example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)  Similarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.(Citation: Cider Security Top 10 CICD Security Risks) If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges.\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  \n\n",
                "id": "attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a",
                "technique_id": "T1528"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker leverages Wi-Fi vulnerabilities to escalate privileges and access restricted areas of the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi implementation has known security flaws.",
                    "Role": "System Designer",
                    "Condition": "Outdated Wi-Fi protocol use."
                },
                {
                    "Assumption": "Attacker can exploit these security flaws remotely.",
                    "Role": "Attacker",
                    "Condition": "Capability to perform remote attacks."
                },
                {
                    "Assumption": "Insufficient network segmentation in place.",
                    "Role": "System Designer",
                    "Condition": "Flat network architecture."
                }
            ],
            "Potential Impact": "Access to higher privilege levels compromising data and system integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Wi-Fi vulnerabilities",
                "remote access",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Remote Access Software",
                "description": "An adversary may use legitimate desktop support and remote access software to establish an interactive command and control channel to target systems within networks. These services, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy)\n\nRemote access software may be installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote desktop session with the target system. They may also be used as a component of malware to establish a reverse connection or back-connect to a service or adversary-controlled system.\n \nAdversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nInstallation of many remote access software may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
                "id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
                "technique_id": "T1219"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the Bluetooth identity to gain unauthorized access to the Infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The vehicle's Bluetooth module does not have strong authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth access is within range and unencrypted."
                },
                {
                    "Assumption": "The infotainment system relies on Bluetooth for critical functionalities.",
                    "Role": "System Designer",
                    "Condition": "Bluetooth connection is used for higher-privilege communications."
                },
                {
                    "Assumption": "There are no proper monitoring and anomaly detection systems in place.",
                    "Role": "Operational Security",
                    "Condition": "Security monitoring tools are either absent or improperly configured."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal data, disruption of system functions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "network",
                "device",
                "identity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use a fake Wi-Fi access point to intercept communication between the vehicle's infotainment system and external networks.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system connects to untrusted Wi-Fi networks.",
                    "Role": "Driver/User",
                    "Condition": "User connects to an unsecured or unknown Wi-Fi network."
                },
                {
                    "Assumption": "The Wi-Fi module does not verify the authenticity of the access point.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure Wi-Fi network protocols."
                },
                {
                    "Assumption": "The attacker is in close proximity to the target vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical access near the vehicle to deploy a rogue access point."
                }
            ],
            "Potential Impact": "Eavesdropping on sensitive data, injection of malicious data, network interruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Wi-Fi",
                "network",
                "eavesdropping",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could exploit the NFC module to spoof a pairing attempt with a malicious device.",
            "Assumptions": [
                {
                    "Assumption": "The NFC module does not implement sufficient authentication protocols.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent NFC security mechanisms."
                },
                {
                    "Assumption": "The attacker has physical access to the vehicle or close vicinity.",
                    "Role": "Attacker",
                    "Condition": "Proximity necessary to initiate NFC communication."
                },
                {
                    "Assumption": "The infotainment system automatically pairs to any NFC device without user validation.",
                    "Role": "System Designer",
                    "Condition": "Automatic pairing configurations."
                }
            ],
            "Potential Impact": "Unauthorized access to the infotainment system, data interception, potential system takeover.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device",
                "pairing",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "System Owner/User Discovery",
                "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
                "id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
                "technique_id": "T1033"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An adversary could tamper with firmware updates delivered over the Wi-Fi or Cellular network, inserting malware.",
            "Assumptions": [
                {
                    "Assumption": "Firmware updates are transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure communication channels."
                },
                {
                    "Assumption": "There are no integrity checks on the firmware prior to installation.",
                    "Role": "System Designer",
                    "Condition": "Absence of firmware verification mechanisms."
                },
                {
                    "Assumption": "The attacker has the ability to intercept and alter the communication.",
                    "Role": "Attacker",
                    "Condition": "Network access to intercept and modify firmware delivery."
                }
            ],
            "Potential Impact": "Corruption of system data, possible installation of malware, system instability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "update",
                "network",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of data on the CAN bus to send malicious commands to the ECUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the vehicle's internal CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote entry point access."
                },
                {
                    "Assumption": "CAN bus communication does not have encryption or proper authentication.",
                    "Role": "System Designer",
                    "Condition": "Insecure communication protocols within the CAN bus."
                },
                {
                    "Assumption": "ECUs trust all inputs received from the CAN bus without additional verification.",
                    "Role": "System Designer",
                    "Condition": "Lack of input validation in ECUs."
                }
            ],
            "Potential Impact": "Malfunction of vehicle systems, unauthorized control over critical vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN bus",
                "ECU",
                "malicious commands",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromise of the video buffer to manipulate displayed content on the rear screen, potentially distracting or misleading passengers.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access the video buffer through the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Network or physical access to system components."
                },
                {
                    "Assumption": "Insufficient input validation and sanitization in the video buffer processes.",
                    "Role": "System Designer",
                    "Condition": "Lack of security checks for video data."
                },
                {
                    "Assumption": "The infotainment system does not encrypt video data.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted video transmission."
                }
            ],
            "Potential Impact": "Disruption of entertainment services, potential misinformation or distraction risk.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "video buffer",
                "display",
                "content manipulation",
                "entertainment"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
                "technique_id": "T1565.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny sending a malicious command through the touch screen, taking advantage of improper logging or authentication.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system does not have comprehensive logging for user interactions.",
                    "Role": "System Designer",
                    "Condition": "Lack of detailed activity logs."
                },
                {
                    "Assumption": "No strong user authentication before critical actions are taken.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent authentication mechanisms."
                },
                {
                    "Assumption": "System logs can be deleted or altered without detection.",
                    "Role": "System Designer",
                    "Condition": "Improper log protection and integrity verification."
                }
            ],
            "Potential Impact": "Disruption of vehicle systems, difficulty in forensic investigations, inability to hold users accountable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user authentication",
                "touch screen",
                "malicious action"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could exploit the cellular network to send commands to the infotainment system, bypassing authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Cellular network communication lacks authentication.",
                    "Role": "System Designer",
                    "Condition": "Insecure network protocols."
                },
                {
                    "Assumption": "Commands received over the cellular network are not verified for authenticity.",
                    "Role": "Infotainment System",
                    "Condition": "Unverified command execution."
                },
                {
                    "Assumption": "System logs do not record sufficient details of received commands.",
                    "Role": "System Designer",
                    "Condition": "Sparse or incomplete logging."
                }
            ],
            "Potential Impact": "Unauthorized command execution, system hijacking, forensic challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "cellular network",
                "authentication bypass",
                "command injection",
                "logging"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies accessing sensitive data through the NFC module, exploiting inadequate transaction logging.",
            "Assumptions": [
                {
                    "Assumption": "The NFC transaction logs are not detailed enough.",
                    "Role": "System Designer",
                    "Condition": "Insufficient logging."
                },
                {
                    "Assumption": "Sensitive data access is not properly authenticated.",
                    "Role": "Infotainment System",
                    "Condition": "Weak data access controls."
                },
                {
                    "Assumption": "There are no tamper-proof mechanisms for logs.",
                    "Role": "System Designer",
                    "Condition": "Logs can be altered or erased."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, difficulty in incident response, lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "NFC",
                "transaction logging",
                "data access",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive GPS data could be exposed due to unsecured data transmission over the cellular network.",
            "Assumptions": [
                {
                    "Assumption": "Cellular data is transmitted without encryption.",
                    "Role": "System Designer",
                    "Condition": "Unencrypted data channels."
                },
                {
                    "Assumption": "Attacker can intercept cellular communications.",
                    "Role": "Attacker",
                    "Condition": "Access to cellular network traffic."
                },
                {
                    "Assumption": "There is no additional layer of encryption on GPS data payloads.",
                    "Role": "System Designer",
                    "Condition": "GPS data not securely handled."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of location data, privacy invasion, potential physical security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "GPS",
                "unencrypted data",
                "cellular network",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Bluetooth module might allow eavesdropping on audio communications due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Weak or no Bluetooth encryption."
                },
                {
                    "Assumption": "An attacker can be in close proximity to intercept Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to the vehicle."
                },
                {
                    "Assumption": "Bluetooth module lacks secure pairing protocols.",
                    "Role": "System Designer",
                    "Condition": "Unsecured Bluetooth protocols."
                }
            ],
            "Potential Impact": "Unauthorized eavesdropping on private conversations, exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "eavesdropping",
                "unencrypted communication",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An infected device on the Wi-Fi network could sniff traffic and capture unencrypted data exchanged with the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi network does not use encryption.",
                    "Role": "System Designer",
                    "Condition": "Unsecured Wi-Fi network."
                },
                {
                    "Assumption": "The attacker has a compromised device connected to the same Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Infected device on the network."
                },
                {
                    "Assumption": "Infotainment system transmits sensitive data without encryption.",
                    "Role": "System Designer",
                    "Condition": "Lack of transport encryption for sensitive data."
                }
            ],
            "Potential Impact": "Exposure of sensitive user data, eavesdropping, potential data theft.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "network traffic",
                "sniffing",
                "unencrypted data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A high volume of Bluetooth pairing requests could overwhelm the infotainment system, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system lacks rate limiting for pairing requests.",
                    "Role": "System Designer",
                    "Condition": "No request throttling mechanisms."
                },
                {
                    "Assumption": "Bluetooth module is always discoverable.",
                    "Role": "Infotainment System",
                    "Condition": "Continuous discoverable mode."
                },
                {
                    "Assumption": "System does not have robust defenses against Bluetooth-based DoS attacks.",
                    "Role": "System Designer",
                    "Condition": "Lack of DoS prevention measures."
                }
            ],
            "Potential Impact": "Temporary system unavailability, disruption of Bluetooth services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "pairing requests",
                "overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "CAN bus flooding with high-priority messages could prevent ECUs from communicating effectively.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can access the CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote entry point access."
                },
                {
                    "Assumption": "CAN bus does not have flood protection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Lack of traffic control."
                },
                {
                    "Assumption": "ECUs blindly trust high-priority messages.",
                    "Role": "System Designer",
                    "Condition": "Improper message verification."
                }
            ],
            "Potential Impact": "Disruption of vehicle systems, potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN bus",
                "ECU",
                "message flooding",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Wi-Fi module might be susceptible to deauthentication attacks causing periodic service interruptions.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi module does not have protections against deauthentication attacks.",
                    "Role": "System Designer",
                    "Condition": "No countermeasures implemented."
                },
                {
                    "Assumption": "Attacker can access the wireless spectrum around the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity for Wi-Fi signal interception."
                },
                {
                    "Assumption": "System lacks rapid re-authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Delayed or absent recovery methods."
                }
            ],
            "Potential Impact": "Periodic disconnection from Wi-Fi services, user frustration, potential data loss.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "deauthentication",
                "service interruption",
                "network"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in the touch screen controller firmware to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Touch screen controller firmware is outdated or contains known vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Unpatched firmware."
                },
                {
                    "Assumption": "Attacker has means to inject malicious code into the firmware.",
                    "Role": "Attacker",
                    "Condition": "Access to firmware update process."
                },
                {
                    "Assumption": "The system does not verify the integrity of firmware updates.",
                    "Role": "System Designer",
                    "Condition": "Lack of update integrity checks."
                }
            ],
            "Potential Impact": "Complete system takeover, unrestricted access to sensitive data and system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "touch screen controller",
                "firmware",
                "root access",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised NFC communications could be used to escalate privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "NFC communication channels are not securely authenticated.",
                    "Role": "System Designer",
                    "Condition": "Weak or absent NFC security protocols."
                },
                {
                    "Assumption": "Attacker can initiate NFC communication with the system.",
                    "Role": "Attacker",
                    "Condition": "Proximity required for NFC access."
                },
                {
                    "Assumption": "Sensitive operations are allowed over NFC without additional verification.",
                    "Role": "System Designer",
                    "Condition": "Lack of multi-factor verification."
                }
            ],
            "Potential Impact": "Unauthorized escalation of privileges, access to critical system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFC",
                "unauthorized access",
                "communication",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malware-infected device on the Wi-Fi network could exploit vulnerabilities in the infotainment system services to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system services contain exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Unpatched security flaws."
                },
                {
                    "Assumption": "Malware can communicate with the infotainment system over the same Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Network access to target services."
                },
                {
                    "Assumption": "System services do not restrict privilege escalation attempts.",
                    "Role": "System Designer",
                    "Condition": "Lack of privilege separation and containment."
                }
            ],
            "Potential Impact": "Full control over the infotainment system, unauthorized access to sensitive data and vehicle functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Wi-Fi",
                "malware",
                "network communication",
                "system services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a legitimate Bluetooth device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical proximity to the vehicle",
                    "Role": "Attacker",
                    "Condition": "The attacker is within Bluetooth range of the vehicle"
                },
                {
                    "Assumption": "The Bluetooth connection is not encrypted or encrypted using weak encryption standards",
                    "Role": "System Designer",
                    "Condition": "Bluetooth configuration lacks robust security measures"
                }
            ],
            "Potential Impact": "Unauthorized access to system data and functionalities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "bluetooth",
                "device",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious NFC tag could simulate legitimate vehicle component communications leading to altered system behaviors.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can place a malicious NFC tag near the vehicle\u2019s NFC reader",
                    "Role": "Attacker",
                    "Condition": "NFC reader is active and not restricted"
                },
                {
                    "Assumption": "The NFC communication lacks validation checks",
                    "Role": "System Designer",
                    "Condition": "NFC data is accepted without thorough validation"
                }
            ],
            "Potential Impact": "Tampered system behavior and potential unauthorized control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "nfc",
                "device",
                "system control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could use fake GPS signals to deceive the system into showing incorrect location data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a GPS signal jammer/spoofer",
                    "Role": "Attacker",
                    "Condition": "Device capable of GPS signal interference"
                },
                {
                    "Assumption": "The GPS module lacks robust anti-spoofing mechanisms",
                    "Role": "System Designer",
                    "Condition": "Insufficient anti-spoofing measures in place"
                }
            ],
            "Potential Impact": "Incorrect navigation and location-based service disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "gps",
                "location data",
                "navigation"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and manipulate CAN Bus messages to alter vehicle subsystem behaviors.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus wiring"
                },
                {
                    "Assumption": "The CAN Bus is not adequately secured against tampering",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption and authentication for CAN Bus communications"
                }
            ],
            "Potential Impact": "Unauthorized modification of vehicle subsystem behaviors.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "can bus",
                "injection",
                "vehicle subsystems"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Someone with access to the infotainment system\u2019s firmware could alter it to introduce malicious functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access to the firmware update process",
                    "Role": "Attacker",
                    "Condition": "Knowledge and tools to tamper with firmware"
                },
                {
                    "Assumption": "The firmware integrity is not checked during updates",
                    "Role": "System Designer",
                    "Condition": "Firmware lacks integrity verification"
                }
            ],
            "Potential Impact": "Installation of malicious code and altered system functionalities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "device",
                "system modification"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the communication between the touch screen controller and the OBC to inject false inputs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept the communication channel",
                    "Role": "Attacker",
                    "Condition": "Access to touch screen controller\u2019s communication interface"
                },
                {
                    "Assumption": "The communication is not encrypted or authenticated",
                    "Role": "System Designer",
                    "Condition": "Lack of secure communication protocols"
                }
            ],
            "Potential Impact": "Unauthorized input actions leading to potential malicious behavior.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "injection",
                "touch screen",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user or attacker could deny making specific Bluetooth connections due to lack of logging and non-repudiation measures.",
            "Assumptions": [
                {
                    "Assumption": "The system does not maintain comprehensive logs of Bluetooth connections",
                    "Role": "System Designer",
                    "Condition": "No logging or insufficient logging measures"
                },
                {
                    "Assumption": "Bluetooth actions are not authenticated and tracked",
                    "Role": "System Designer",
                    "Condition": "Lack of non-repudiation mechanisms"
                }
            ],
            "Potential Impact": "Difficulty in attributing user actions leading to security events.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "bluetooth",
                "logging",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "In case of a security incident, a driver could deny altering crucial system settings without non-repudiation measures.",
            "Assumptions": [
                {
                    "Assumption": "System settings changes are not logged effectively",
                    "Role": "System Designer",
                    "Condition": "Insufficient logging mechanisms"
                },
                {
                    "Assumption": "No user authentication required for system settings changes",
                    "Role": "System Designer",
                    "Condition": "Lack of user authentication"
                }
            ],
            "Potential Impact": "Difficulty in ascertaining the cause and actor of security incidents.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "system settings",
                "logging",
                "access control"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could manipulate log files to erase traces of their activity, denying their involvement in the attack.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to log files and permissions to alter them",
                    "Role": "Attacker",
                    "Condition": "Access to log storage and necessary permissions"
                },
                {
                    "Assumption": "Log integrity is not ensured through checks",
                    "Role": "System Designer",
                    "Condition": "Lack of log integrity verification"
                }
            ],
            "Potential Impact": "Hindered forensic investigations and attribution.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "forensics",
                "denial"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept Wi-Fi communications to capture sensitive data being transmitted.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi network is not sufficiently encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of strong encryption for Wi-Fi communications"
                },
                {
                    "Assumption": "The attacker can position themselves within the Wi-Fi range",
                    "Role": "Attacker",
                    "Condition": "Attacker's physical proximity to vehicle"
                }
            ],
            "Potential Impact": "Exposure of sensitive data transmitted over Wi-Fi.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "wifi",
                "interception",
                "data theft"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploiting a vulnerability in the OBC can access and extract sensitive user information stored in the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The OBC has unpatched vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Presence of known and exploitable security vulnerabilities"
                },
                {
                    "Assumption": "Sensitive data stored in the system is not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of data encryption at rest"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability exploitation",
                "data extraction",
                "obc"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Access through Bluetooth could allow an attacker to extract audio communications from the car audio system.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth protocol is insecure or lacks sufficient security configurations",
                    "Role": "System Designer",
                    "Condition": "Weak security configurations for Bluetooth"
                },
                {
                    "Assumption": "No encryption is used for audio communications",
                    "Role": "System Designer",
                    "Condition": "Audio communications are transmitted without encryption"
                }
            ],
            "Potential Impact": "Eavesdropping on audio communications.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "bluetooth",
                "audio eavesdropping",
                "communication interception"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack on the cellular module can disrupt all infotainment system services reliant on internet connectivity.",
            "Assumptions": [
                {
                    "Assumption": "The cellular connection uses a public IP address",
                    "Role": "System Designer",
                    "Condition": "Exposed to direct internet access"
                },
                {
                    "Assumption": "Lack of DDoS protection mechanisms",
                    "Role": "System Designer",
                    "Condition": "No implementation of DDoS mitigation strategies"
                }
            ],
            "Potential Impact": "Disruption of internet-dependent infotainment functionalities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos",
                "cellular",
                "connectivity"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Interference with the CAN Bus communication can lock subsystems, disabling critical vehicle functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to CAN Bus network",
                    "Role": "Attacker",
                    "Condition": "Ability to interface directly with the CAN Bus wires"
                },
                {
                    "Assumption": "No logical segregation or protection on CAN Bus",
                    "Role": "System Designer",
                    "Condition": "Lack of CAN Bus protection mechanisms"
                }
            ],
            "Potential Impact": "Loss of critical vehicle functionalities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "can bus",
                "subsystems",
                "vehicle control"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware introduced into the infotainment system could overload the OBC, resulting in complete system unresponsiveness.",
            "Assumptions": [
                {
                    "Assumption": "The system allows installation of unverified applications",
                    "Role": "System Designer",
                    "Condition": "No integrity checks on applications"
                },
                {
                    "Assumption": "No resource usage monitoring and control in place",
                    "Role": "System Designer",
                    "Condition": "Lack of resource usage policies"
                }
            ],
            "Potential Impact": "System-wide unresponsiveness affecting all applications and services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "obc",
                "system overload"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A vulnerability in the touch screen controller software allows an attacker to escalate their privileges and access administrator functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller software has vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Known vulnerabilities present in software"
                },
                {
                    "Assumption": "The attacker's initial access privileges are low but sufficient to exploit the vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Low privilege access"
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functionalities.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "touch screen",
                "vulnerability exploitation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user could exploit a misconfigured API used by the OBC to gain elevated system permissions.",
            "Assumptions": [
                {
                    "Assumption": "The API has misconfigured access controls",
                    "Role": "System Designer",
                    "Condition": "Improperly configured API security settings"
                },
                {
                    "Assumption": "The user can interact with the API",
                    "Role": "User",
                    "Condition": "API is exposed to users"
                }
            ],
            "Potential Impact": "Unauthorized administrative-level access to system resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "api",
                "misconfiguration",
                "obc"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
                "id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
                "technique_id": "T1555.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware designed to exploit firmware vulnerabilities can escalate privileges and control vehicle subsystems.",
            "Assumptions": [
                {
                    "Assumption": "The firmware has exploitable vulnerabilities",
                    "Role": "System Designer",
                    "Condition": "Unpatched vulnerabilities in firmware"
                },
                {
                    "Assumption": "The malware can be introduced into the system",
                    "Role": "Attacker",
                    "Condition": "Successful deployment of malware"
                }
            ],
            "Potential Impact": "Full control over vehicle subsystems with administrative privileges.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "firmware",
                "exploitation",
                "vehicle control"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate NFC device to gain unauthorized access to infotainment controls.",
            "Assumptions": [
                {
                    "Assumption": "NFC communication is not encrypted or poorly encrypted.",
                    "Role": "Attacker",
                    "Condition": "NFC range proximity and spoofing tools."
                },
                {
                    "Assumption": "The system does not securely authenticate connected NFC devices.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Lack of robust NFC device authentication mechanism."
                },
                {
                    "Assumption": "The user accepts connections without verifying authenticity.",
                    "Role": "Driver/Passenger",
                    "Condition": "Unawareness or lack of prompts for device verification."
                }
            ],
            "Potential Impact": "Unauthorized access to system controls, leading to information exposure or system manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "infotainment system",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a malicious Wi-Fi access point to trick the infotainment system into connecting and capturing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system is configured to automatically connect to known Wi-Fi networks.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Automatic connection feature enabled without strong verification checks."
                },
                {
                    "Assumption": "Attacker has physical proximity to create a deceptive Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Physical presence near the vehicle."
                },
                {
                    "Assumption": "Infotainment system exchanges sensitive data over Wi-Fi without encryption.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Transmission of sensitive data in plaintext."
                }
            ],
            "Potential Impact": "Unauthorized data interception leading to potential information disclosure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Wi-Fi",
                "data interception",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake GPS signal to manipulate the vehicle's location data.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals can be easily imitated or jammed.",
                    "Role": "Attacker",
                    "Condition": "Wide availability of GPS spoofing equipment."
                },
                {
                    "Assumption": "Infotainment system relies heavily on GPS data for its services.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Critical services depend on accurate GPS location."
                },
                {
                    "Assumption": "System does not verify the accuracy and source of incoming GPS data.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Lack of GPS signal validation mechanisms."
                }
            ],
            "Potential Impact": "Incorrect navigation, potential disruption of location-based services, and user safety risks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "location manipulation",
                "signal interference"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains physical access to the CAN Bus and injects malicious commands to alter vehicle behavior.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus is not physically secured and is accessible.",
                    "Role": "Vehicle infrastructure",
                    "Condition": "Exposed CAN Bus ports or insufficient physical protection."
                },
                {
                    "Assumption": "Attacker has tools and knowledge to inject CAN Bus commands.",
                    "Role": "Attacker",
                    "Condition": "Availability of CAN Bus interfacing tools and technical knowledge."
                },
                {
                    "Assumption": "No monitoring of CAN Bus communication integrity.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Lack of anomaly detection mechanisms on the CAN Bus."
                }
            ],
            "Potential Impact": "Compromised vehicle control systems leading to unauthorized actions, safety risks, and system disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "manual injection",
                "vehicle control"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious firmware update delivered via Bluetooth compromises infotainment firmware.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth interfaces allow firmware updates.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Enabled remote firmware update feature."
                },
                {
                    "Assumption": "Firmware updates are not cryptographically verified.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Absence of digital signature checking on firmware updates."
                },
                {
                    "Assumption": "Attacker has access to deliver the malicious update.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth proximity and update injection capability."
                }
            ],
            "Potential Impact": "System compromise, loss of control, unauthorized data access, and potential for persistent malicious activity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware update",
                "Bluetooth",
                "malicious update"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates the touch screen controller to send false input commands.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the infotainment system's touchscreen hardware.",
                    "Role": "Attacker",
                    "Condition": "Unsecured hardware interfaces."
                },
                {
                    "Assumption": "Touchscreen controller lacks integrity checks for input validation.",
                    "Role": "Touchscreen Controller",
                    "Condition": "Absence of input validation mechanisms."
                },
                {
                    "Assumption": "System trusts input from the touchscreen without secondary verification.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "High trust in direct user inputs from touchscreen."
                }
            ],
            "Potential Impact": "Unauthorized control actions, disruption of user interface, and potential manipulation of system functionalities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "touchscreen",
                "input manipulation",
                "false commands"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies causing unauthorized actions logged in the infotainment system due to lack of sufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Actions within the system are logged without sufficient details or user identification.",
                    "Role": "Infotainment Logging System",
                    "Condition": "Insufficient logging details."
                },
                {
                    "Assumption": "Users share access without individual authentication or audit trails.",
                    "Role": "Vehicle User",
                    "Condition": "Shared access without individual credentials."
                },
                {
                    "Assumption": "System logs are not tamper-proof and can be altered.",
                    "Role": "System Administrator",
                    "Condition": "Logs stored without tamper protection."
                }
            ],
            "Potential Impact": "Inability to trace unauthorized actions back to specific users leading to compliance issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insufficient logging",
                "user actions",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "False Denial of Service reports claimed by attacker causing disruption in service.",
            "Assumptions": [
                {
                    "Assumption": "Attackers can generate denial-of-service conditions that are hard to differentiate from legitimate issues.",
                    "Role": "Attacker",
                    "Condition": "Ability to disrupt services mimicking legitimate failures."
                },
                {
                    "Assumption": "Monitoring and logging are not capable of distinguishing genuine from false alarms.",
                    "Role": "Infotainment System Monitoring",
                    "Condition": "Insufficiently detailed logs for root cause analysis."
                },
                {
                    "Assumption": "System lacks robust incident verification and validation processes.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate processes for incident verification."
                }
            ],
            "Potential Impact": "Service disruptions and compromised confidence in system reliability and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "DoS",
                "false reporting",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Passenger denies performing a sensitive operation such as payment or data request due to shared user interface.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive actions are performed without user-specific authentication.",
                    "Role": "Infotainment System",
                    "Condition": "Lack of individual user authentication for specific actions."
                },
                {
                    "Assumption": "Audit logs do not capture detailed user activity and context.",
                    "Role": "Infotainment Logging System",
                    "Condition": "Insufficiently detailed logging of user actions."
                },
                {
                    "Assumption": "Multiple users have unsupervised access to the shared infotainment interface.",
                    "Role": "Vehicle Passengers",
                    "Condition": "Shared access without supervision or user differentiation."
                }
            ],
            "Potential Impact": "Disputes over actions taken by different users leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "shared interface",
                "disputed actions",
                "sensitive operations"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data sent over an unencrypted Bluetooth connection is intercepted by nearby attackers.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted or insufficiently encrypted.",
                    "Role": "Infotainment System",
                    "Condition": "Use of weak or no encryption for data transmission."
                },
                {
                    "Assumption": "Sensitive data is transmitted over Bluetooth.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Transmission of sensitive data via Bluetooth protocol."
                },
                {
                    "Assumption": "Attacker is within Bluetooth range to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Proximity within Bluetooth range."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information such as personal data or credentials.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "data interception",
                "unencrypted transmission"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to CAN bus results in interception of critical vehicle data.",
            "Assumptions": [
                {
                    "Assumption": "CAN Bus is not properly encrypted or authenticated.",
                    "Role": "CAN Bus Network",
                    "Condition": "Lack of encryption/authentication protocols on CAN Bus."
                },
                {
                    "Assumption": "Attacker has physical or logical access to CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Access to CAN Bus through physical or logical means."
                },
                {
                    "Assumption": "Sensitive vehicle data is regularly transmitted on the CAN Bus.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Transmission of critical data over the CAN network."
                }
            ],
            "Potential Impact": "Exposure of vehicle operational data and potential compromise of vehicle control systems.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "CAN Bus",
                "data interception",
                "sensitive vehicle data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unprotected Wi-Fi network used by infotainment system leaks user personal data.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system uses unprotected or weakly protected Wi-Fi network.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Weak or no Wi-Fi security settings."
                },
                {
                    "Assumption": "Personal user data is transmitted over Wi-Fi.",
                    "Role": "Vehicle's Infotainment System",
                    "Condition": "Transmission of personal user data via Wi-Fi."
                },
                {
                    "Assumption": "Attacker can capture Wi-Fi traffic.",
                    "Role": "Attacker",
                    "Condition": "Proximity to Wi-Fi network and capturing tools capability."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal user data leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "user data",
                "unprotected network"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the infotainment system with excessive Bluetooth connection requests, causing system slow down.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system accepts multiple Bluetooth connections.",
                    "Role": "Infotainment System",
                    "Condition": "No limit on simultaneous Bluetooth connections."
                },
                {
                    "Assumption": "Attackers can repeatedly send connection requests.",
                    "Role": "Attacker",
                    "Condition": "Capability to spoof Bluetooth requests."
                },
                {
                    "Assumption": "System does not have effective throttling or protection mechanisms.",
                    "Role": "Infotainment System",
                    "Condition": "Lack of rate limiting for Bluetooth connections."
                }
            ],
            "Potential Impact": "System performance degradation and possible denial of service for legitimate users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "flooding",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious code sent to the infotainment system's rear screen video buffer causes the display to crash.",
            "Assumptions": [
                {
                    "Assumption": "Rear screen video buffer is not protected against malicious input.",
                    "Role": "Rear Screen Video Buffer",
                    "Condition": "Lack of input validation and malware detection."
                },
                {
                    "Assumption": "System accepts video input from untrusted sources.",
                    "Role": "Infotainment System",
                    "Condition": "Acceptance of video data without source validation."
                },
                {
                    "Assumption": "Attackers can identify and exploit buffer overflow vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical knowledge of buffer overflow exploitation."
                }
            ],
            "Potential Impact": "Disruption of rear screen functionality causing denial of service for passengers.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "video buffer",
                "buffer overflow",
                "rear screen"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive GPS signal jamming interferes with infotainment system's navigation function.",
            "Assumptions": [
                {
                    "Assumption": "GPS signals can be easily jammed using readily available equipment.",
                    "Role": "Attacker",
                    "Condition": "Access to GPS jamming devices."
                },
                {
                    "Assumption": "Infotainment system heavily relies on uninterrupted GPS signals.",
                    "Role": "Infotainment System",
                    "Condition": "Critical reliance on GPS for navigation services."
                },
                {
                    "Assumption": "Vehicle has limited alternative navigation options.",
                    "Role": "Vehicle",
                    "Condition": "Absence of redundant navigation systems."
                }
            ],
            "Potential Impact": "Interruption of navigation services and reliance on inaccurate location data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "GPS jamming",
                "navigation disruption",
                "signal interference"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting a vulnerability in the OBC to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Operating system on the OBC has a known vulnerability.",
                    "Role": "OBC Software",
                    "Condition": "Presence of unpatched or known vulnerabilities."
                },
                {
                    "Assumption": "Attackers have access to exploit code.",
                    "Role": "Attacker",
                    "Condition": "Availability of exploit code in the wild."
                },
                {
                    "Assumption": "System does not employ robust privilege separation and least privilege practices.",
                    "Role": "OBC",
                    "Condition": "Ineffective use of least privilege principles."
                }
            ],
            "Potential Impact": "Complete control over infotainment system, access to sensitive data, and potential lateral movement within vehicle networks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "root access",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Bluetooth vulnerability allows attacker to gain administrative access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system's Bluetooth stack is vulnerable.",
                    "Role": "Bluetooth Module",
                    "Condition": "Presence of exploitable Bluetooth vulnerabilities."
                },
                {
                    "Assumption": "Attacker has the ability to exploit the Bluetooth vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical capability to exploit the Bluetooth stack."
                },
                {
                    "Assumption": "System lacks detection and response mechanisms for privilege escalation attempts.",
                    "Role": "Infotainment System",
                    "Condition": "Absence of monitoring and response capabilities."
                }
            ],
            "Potential Impact": "Unauthorized system control, access to sensitive data, and disruption of system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Bluetooth",
                "administrative access",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious application sideloaded via USB gains higher privileges by exploiting system vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "USB interface allows execution of applications.",
                    "Role": "Infotainment System",
                    "Condition": "Permitted execution of applications from USB."
                },
                {
                    "Assumption": "System is vulnerable to sideloaded application exploits.",
                    "Role": "Infotainment System",
                    "Condition": "Existence of system vulnerabilities exploitable by untrusted applications."
                },
                {
                    "Assumption": "No robust security policies regulating application execution from USB.",
                    "Role": "Infotainment System",
                    "Condition": "Lack of restrictive execution policies."
                }
            ],
            "Potential Impact": "Escalation of privileges, unauthorized access to sensitive system functions, and potential data breach.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "USB",
                "sideloading",
                "system vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Malware",
                "description": "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",
                "id": "attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0",
                "technique_id": "T1587.001"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the vehicle's on-board computer (OBC) network identity using compromised Wi-Fi credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within range of the vehicle's Wi-Fi signal.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The attacker has the skill to exploit weaknesses in Wi-Fi networking protocols.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise"
                },
                {
                    "Assumption": "The vehicle's Wi-Fi security is insufficient to prevent spoofing.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak Wi-Fi security"
                }
            ],
            "Potential Impact": "Loss of integrity and confidentiality of infotainment system data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "identity theft",
                "Wi-Fi"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a paired Bluetooth device to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The attacker has knowledge of the Bluetooth protocol and can impersonate a trusted device.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise"
                },
                {
                    "Assumption": "The Bluetooth implementation lacks strong authentication mechanisms.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak Bluetooth security"
                }
            ],
            "Potential Impact": "Compromise of system integrity and unauthorized information access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device impersonation",
                "wireless"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof GPS signals to mislead the GPS sensor and manipulate navigation data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the equipment to broadcast falsified GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Equipment availability"
                },
                {
                    "Assumption": "The vehicle's GPS sensor can receive and process these falsified signals.",
                    "Role": "System Vulnerability",
                    "Condition": "Unfiltered GPS input"
                },
                {
                    "Assumption": "The spoofed GPS signals are within the expected range of operation.",
                    "Role": "Environment",
                    "Condition": "Geographical positioning"
                }
            ],
            "Potential Impact": "Misleading navigation data affecting decision-making and safety.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "GPS",
                "sensor manipulation",
                "navigation"
            ],
            "mitre_technique": {
                "name": "Phishing for Information",
                "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)",
                "id": "attack-pattern--cca0ccb6-a068-4574-a722-b1556f86833a",
                "technique_id": "T1598"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the infotainment system's firmware through a malicious software update delivered over a cellular network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept or manipulate the update delivery process.",
                    "Role": "Attacker",
                    "Condition": "Access to update distribution channels"
                },
                {
                    "Assumption": "The system lacks verification mechanisms for update integrity.",
                    "Role": "System Vulnerability",
                    "Condition": "No integrity checks"
                },
                {
                    "Assumption": "The cellular communication is inadequately encrypted or authenticated.",
                    "Role": "Communication Vulnerability",
                    "Condition": "Weak cellular security"
                }
            ],
            "Potential Impact": "Loss of system integrity and potential unauthorized code execution.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "cellular network",
                "update manipulation"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could gain physical access to the vehicle and tamper with the CAN Bus network to alter communication between the OBC and ECUs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity"
                },
                {
                    "Assumption": "The attacker has the necessary tools and knowledge to interface with the CAN Bus.",
                    "Role": "Attacker",
                    "Condition": "Technical and tool availability"
                },
                {
                    "Assumption": "The CAN Bus lacks protective measures against unauthorized physical access.",
                    "Role": "System Vulnerability",
                    "Condition": "Unsecured CAN Bus"
                }
            ],
            "Potential Impact": "Altered or corrupted system communication affecting vehicle operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "CAN Bus",
                "physical access",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could use NFC to introduce malicious code into the infotainment system via a compromised mobile device.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a malicious NFC-enabled device within range.",
                    "Role": "Attacker",
                    "Condition": "Proximity with NFC device"
                },
                {
                    "Assumption": "The infotainment system can initiate communication with unknown NFC devices.",
                    "Role": "System Vulnerability",
                    "Condition": "Open NFC pairing"
                },
                {
                    "Assumption": "The system lacks stringent validation for received NFC data.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak data validation"
                }
            ],
            "Potential Impact": "Unauthorized code execution and data corruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "NFC",
                "mobile device",
                "malicious code"
            ],
            "mitre_technique": {
                "name": "Port Monitors",
                "description": "A port monitor can be set through the  (Citation: AddMonitor) API call to set a DLL to be loaded at startup. (Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded by the print spooler service, spoolsv.exe, on boot. The spoolsv.exe process also runs under SYSTEM level permissions. (Citation: Bloxham) Alternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. \n\nThe Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n\nAdversaries can use this technique to load malicious code at startup that will persist on system reboot and execute as SYSTEM.",
                "id": "attack-pattern--1f47e2fd-fa77-4f2f-88ee-e85df308f125",
                "technique_id": "T1013"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could use the infotainment system to perform actions they deny later, such as unauthorized configuration changes.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust logging and audit trails for user actions.",
                    "Role": "System Vulnerability",
                    "Condition": "No comprehensive logging"
                },
                {
                    "Assumption": "Authentication mechanisms do not uniquely identify individual users.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak user authentication"
                },
                {
                    "Assumption": "The system allows critical configuration changes without secondary verification.",
                    "Role": "System Vulnerability",
                    "Condition": "No change verification"
                }
            ],
            "Potential Impact": "Challenges in accountability and responsibility management.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "audit trail",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could perform unauthorized actions via the infotainment system's interface and deny those actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the system's interface.",
                    "Role": "Attacker",
                    "Condition": "Interface access"
                },
                {
                    "Assumption": "The actions performed do not leave a detailed and attributable log.",
                    "Role": "System Vulnerability",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "The system does not require user re-authentication for sensitive actions.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak authentication controls"
                }
            ],
            "Potential Impact": "Inability to trace unauthorized activity back to the perpetrator.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "unauthorized actions",
                "interface",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could use a compromised external network to interfere with the infotainment system's communication and deny their involvement.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised an external network used by the system.",
                    "Role": "Attacker",
                    "Condition": "Network access and control"
                },
                {
                    "Assumption": "The system cannot adequately trace external network traffic back to the source.",
                    "Role": "System Vulnerability",
                    "Condition": "Lack of network traceability"
                },
                {
                    "Assumption": "The system does not log external network activity sufficiently.",
                    "Role": "System Vulnerability",
                    "Condition": "Inadequate network logging"
                }
            ],
            "Potential Impact": "Difficulty in attributing and investigating disruptive activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "external network",
                "interference",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept sensitive data transmitted over an insecure Wi-Fi network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within range of the Wi-Fi network.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "The Wi-Fi communication is not encrypted.",
                    "Role": "System Vulnerability",
                    "Condition": "Unencrypted traffic"
                },
                {
                    "Assumption": "The system transmits sensitive data over this Wi-Fi network.",
                    "Role": "System Configuration",
                    "Condition": "Sensitive data transmission"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user and system data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "unencrypted transmission",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Wi-Fi Discovery",
                "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
                "id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
                "technique_id": "T1016.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could use a malicious Bluetooth device to eavesdrop on audio communications within the vehicle.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Bluetooth communication is insufficiently secured or encrypted.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak Bluetooth security"
                },
                {
                    "Assumption": "Sensitive audio data is transmitted over Bluetooth.",
                    "Role": "System Configuration",
                    "Condition": "Audio data transmission"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of private audio communications.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "eavesdropping",
                "audio"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could hack into the infotainment system's rear screen video buffer to capture displayed media data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the capability to compromise the rear screen's video buffer.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise"
                },
                {
                    "Assumption": "The video buffer's data is not adequately protected against unauthorized access.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Sensitive or private media content is displayed on the rear screen.",
                    "Role": "System Use",
                    "Condition": "Sensitive media playback"
                }
            ],
            "Potential Impact": "Unauthorized access to private media content.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "video buffer",
                "rear screen",
                "media capture"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could perform a DDoS attack on the infotainment system's Wi-Fi module, disrupting service availability.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can initiate multiple simultaneous connections to the Wi-Fi module.",
                    "Role": "Attacker",
                    "Condition": "Network capability"
                },
                {
                    "Assumption": "The Wi-Fi module cannot adequately handle a high volume of connection requests.",
                    "Role": "System Vulnerability",
                    "Condition": "Insufficient capacity"
                },
                {
                    "Assumption": "The system's operations heavily depend on Wi-Fi connectivity.",
                    "Role": "System Dependency",
                    "Condition": "Wi-Fi reliance"
                }
            ],
            "Potential Impact": "Disruption of Wi-Fi based services and potential system unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "Wi-Fi",
                "network saturation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overload the CAN Bus network with excessive messages, causing interference in vehicle operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN Bus network within the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Access to network"
                },
                {
                    "Assumption": "The CAN Bus network lacks mechanisms to filter or throttle message rates.",
                    "Role": "System Vulnerability",
                    "Condition": "No rate limiting"
                },
                {
                    "Assumption": "Normal vehicle operations rely on timely and accurate CAN Bus communications.",
                    "Role": "System Dependency",
                    "Condition": "Communication reliance"
                }
            ],
            "Potential Impact": "Interruption of essential vehicle functions and overall safety risks.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN Bus",
                "network overload",
                "message saturation"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit vulnerabilities in the touch screen controller to launch a software attack, rendering the interface unusable.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of software vulnerabilities in the touch screen controller.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability awareness"
                },
                {
                    "Assumption": "The touch screen lacks protective measures against such software exploits.",
                    "Role": "System Vulnerability",
                    "Condition": "No protective measures"
                },
                {
                    "Assumption": "The system heavily relies on the touch screen interface for user interaction.",
                    "Role": "System Dependency",
                    "Condition": "Interface reliance"
                }
            ],
            "Potential Impact": "Loss of user interface functionality and reduced system usability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "touch screen",
                "software exploit",
                "interface"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could gain administrative access to the OBC by exploiting software vulnerabilities via the cellular network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit a software vulnerability in the OBC.",
                    "Role": "Attacker",
                    "Condition": "Technical capability"
                },
                {
                    "Assumption": "The cellular network allows such vulnerabilities to be exploited remotely.",
                    "Role": "System Vulnerability",
                    "Condition": "Remote exploitability"
                },
                {
                    "Assumption": "The OBC software lacks adequate protective measures against such attacks.",
                    "Role": "System Vulnerability",
                    "Condition": "Insufficient protections"
                }
            ],
            "Potential Impact": "Unauthorized administrative control over the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "OBC",
                "cellular network",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could use a compromised NFC device to elevate their privileges within the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a compromised NFC device within range.",
                    "Role": "Attacker",
                    "Condition": "Proximity with NFC device"
                },
                {
                    "Assumption": "The infotainment system processes data from NFC devices without sufficient validation.",
                    "Role": "System Vulnerability",
                    "Condition": "Weak data validation"
                },
                {
                    "Assumption": "The system grants privileges based on NFC interactions without adequate checks.",
                    "Role": "System Configuration",
                    "Condition": "Inadequate privilege checks"
                }
            ],
            "Potential Impact": "Unauthorized access to higher privilege levels within the system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFC",
                "compromised device",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit Bluetooth protocol weaknesses to elevate their privileges and control system operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is within Bluetooth range of the vehicle.",
                    "Role": "Attacker",
                    "Condition": "Proximity to vehicle"
                },
                {
                    "Assumption": "Bluetooth communication protocols have weaknesses that can be exploited.",
                    "Role": "System Vulnerability",
                    "Condition": "Protocol weaknesses"
                },
                {
                    "Assumption": "The system grants control privileges based on Bluetooth interactions.",
                    "Role": "System Configuration",
                    "Condition": "Inadequate privilege checks"
                }
            ],
            "Potential Impact": "Unauthorized control over crucial system operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "Bluetooth",
                "protocol weaknesses",
                "control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate device using NFC to gain unauthorized access to the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical proximity to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "When the vehicle is in a public or accessible area."
                },
                {
                    "Assumption": "The NFC communication is not encrypted or is poorly encrypted.",
                    "Role": "Infotainment System Designer",
                    "Condition": "During the design and implementation of NFC in the system."
                }
            ],
            "Potential Impact": "Unauthorized access to infotainment system leading to potential data breach.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "NFC",
                "Unauthorized Device Access"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses Bluetooth to impersonate a trusted device to control the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker knows the MAC address of the trusted device.",
                    "Role": "Attacker",
                    "Condition": "When the trusted device\u2019s MAC address is publicly known or easily guessable."
                },
                {
                    "Assumption": "The Bluetooth pairing mechanism is susceptible to brute force attacks.",
                    "Role": "Device Manufacturer",
                    "Condition": "If weak pairing mechanisms are used."
                }
            ],
            "Potential Impact": "Control over infotainment system leading to unauthorized actions or data access.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Spoofing",
                "MAC Address Spoofing"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromise of the infotainment system via cellular network by spoofing legitimate network signals.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has equipment capable of mimicking cellular network signals.",
                    "Role": "Attacker",
                    "Condition": "When close to the vehicle or within transmit range."
                },
                {
                    "Assumption": "The cellular module can connect to any network without stringent validation.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During network connection procedures."
                }
            ],
            "Potential Impact": "Network compromise leading to interception or manipulation of data.",
            "MITRE ATT&CK Keywords": [
                "Cellular Network",
                "Spoofing",
                "Signal Interception"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker physically accesses the vehicle to alter the CAN bus wiring, injecting malicious commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the vehicle.",
                    "Role": "Attacker",
                    "Condition": "When the vehicle is in an insecure location."
                },
                {
                    "Assumption": "The CAN bus lacks encryption or secure communication protocols.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "During the design and integration of the CAN bus."
                }
            ],
            "Potential Impact": "Alteration of vehicle operations leading to potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Tampering",
                "Physical Access"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infects the infotainment system software via a compromised USB drive.",
            "Assumptions": [
                {
                    "Assumption": "The user connects an unknown or compromised USB drive to the system.",
                    "Role": "User",
                    "Condition": "When accessing files or media from the USB drive."
                },
                {
                    "Assumption": "The infotainment system does not have sufficient malware protection or scanning mechanisms.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During software development and security implementation."
                }
            ],
            "Potential Impact": "Software corruption and potential data manipulation or system malfunction.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "USB Drive",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Shared Modules",
                "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
                "id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
                "technique_id": "T1129"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits an unpatched vulnerability in the Wi-Fi module to modify system settings.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of an existing vulnerability.",
                    "Role": "Attacker",
                    "Condition": "When the vulnerability is publicly known or discovered through reconnaissance."
                },
                {
                    "Assumption": "The system is not regularly updated or patched.",
                    "Role": "Vehicle Owner or Manufacturer",
                    "Condition": "When updates are not timely or overlooked."
                }
            ],
            "Potential Impact": "Altered system configurations leading to potential unauthorized access or instability.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Exploitation",
                "Tampering"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending commands to the infotainment system due to lack of secure logging.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not securely maintained or non-existent.",
                    "Role": "System Administrator or Developer",
                    "Condition": "During system logging setup."
                },
                {
                    "Assumption": "There are no mechanisms for non-repudiation such as digital signatures.",
                    "Role": "Infotainment System Designer",
                    "Condition": "During system design and implementation."
                }
            ],
            "Potential Impact": "Difficulties in tracing actions leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Logging",
                "Repudiation",
                "Accountability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A third-party device integrates with the system and denies unauthorized changes made to system settings.",
            "Assumptions": [
                {
                    "Assumption": "Third-party devices can integrate without stringent validation and logging.",
                    "Role": "Third-party Developer",
                    "Condition": "When integration protocols are weak or non-existent."
                },
                {
                    "Assumption": "Configuration changes are not adequately logged or monitored.",
                    "Role": "System Administrator or Developer",
                    "Condition": "When setting up system monitoring and logging."
                }
            ],
            "Potential Impact": "Lack of audit trail, making it difficult to verify unauthorized changes.",
            "MITRE ATT&CK Keywords": [
                "Third-party Integration",
                "Repudiation",
                "System Settings"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Autostart Execution",
                "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
                "id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
                "technique_id": "T1547"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious software denies executing specific commands due to insufficient logging and monitoring.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks comprehensive logging and monitoring solutions.",
                    "Role": "System Administrator or Infotainment System Developer",
                    "Condition": "During system implementation and operation."
                },
                {
                    "Assumption": "Malicious software can operate without detection or trace.",
                    "Role": "Attacker",
                    "Condition": "When malware evades detection mechanisms."
                }
            ],
            "Potential Impact": "Inability to trace malicious actions leading to potential data breaches or system misuse.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Repudiation",
                "Insufficient Logging"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts Wi-Fi communications between the vehicle and external networks.",
            "Assumptions": [
                {
                    "Assumption": "Wi-Fi encryption is weak or easily breakable.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During Wi-Fi implementation with inadequate encryption protocols."
                },
                {
                    "Assumption": "The attacker has network-sniffing tools.",
                    "Role": "Attacker",
                    "Condition": "When within Wi-Fi range of the vehicle."
                }
            ],
            "Potential Impact": "Exposure of sensitive data such as GPS coordinates or personal information.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Intercept",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised Bluetooth connection leads to exposure of sensitive data being transferred.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth data is not encrypted or is weakly encrypted.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During Bluetooth implementation without strong encryption."
                },
                {
                    "Assumption": "The attacker is within Bluetooth range and has specialized interception tools.",
                    "Role": "Attacker",
                    "Condition": "When close enough to intercept Bluetooth signals."
                }
            ],
            "Potential Impact": "Disclosure of personal data such as contacts, messages, or media files.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth",
                "Intercept",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious software accesses sensitive data stored on the infotainment system and leaks it via external networks.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system lacks adequate security controls or malware protection.",
                    "Role": "System Developer or Administrator",
                    "Condition": "During security implementation and system maintenance."
                },
                {
                    "Assumption": "Malware can efficiently communicate with external networks.",
                    "Role": "Attacker",
                    "Condition": "When malware accesses network modules."
                }
            ],
            "Potential Impact": "Leakage of sensitive data such as personal information, GPS data, or media files.",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Data Leak",
                "Information Disclosure"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial-of-service (DDoS) attack overwhelms the Wi-Fi module, disrupting network connectivity.",
            "Assumptions": [
                {
                    "Assumption": "The attacker controls a large number of botnet devices.",
                    "Role": "Attacker",
                    "Condition": "When botnets are orchestrated to target the vehicle's Wi-Fi module."
                },
                {
                    "Assumption": "The Wi-Fi module cannot handle high volumes of traffic without disruption.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During Wi-Fi implementation without sufficient traffic handling capabilities."
                }
            ],
            "Potential Impact": "Loss of network connectivity affecting all internet-dependent features.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Wi-Fi",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the CAN bus to send continuous bogus messages, disrupting vehicle operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the CAN bus network.",
                    "Role": "Attacker",
                    "Condition": "When physical or remote access is gained."
                },
                {
                    "Assumption": "The CAN bus lacks robust message validation mechanisms.",
                    "Role": "Vehicle Manufacturer",
                    "Condition": "During the design and integration of the CAN bus."
                }
            ],
            "Potential Impact": "Disruption of communication between vehicle components leading to potential safety risks.",
            "MITRE ATT&CK Keywords": [
                "CAN Bus",
                "Message Flooding",
                "Denial of Service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious firmware update disables key functionalities of the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The system allows firmware updates from untrusted sources.",
                    "Role": "Infotainment System Developer",
                    "Condition": "When update validation mechanisms are inadequate."
                },
                {
                    "Assumption": "The attacker can push or trick the system into accepting a malicious update.",
                    "Role": "Attacker",
                    "Condition": "When exploiting the system's update process."
                }
            ],
            "Potential Impact": "Disruption of critical infotainment features leading to user dissatisfaction and potential safety concerns.",
            "MITRE ATT&CK Keywords": [
                "Firmware Update",
                "Denial of Service",
                "Malicious Update"
            ],
            "mitre_technique": {
                "name": "System Firmware",
                "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
                "id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
                "technique_id": "T1542.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access to the on-board computer by exploiting a software vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "The software has exploitable vulnerabilities.",
                    "Role": "Software Developer",
                    "Condition": "When vulnerabilities are undiscovered or unpatched."
                },
                {
                    "Assumption": "The attacker can execute arbitrary code or escalate privileges.",
                    "Role": "Attacker",
                    "Condition": "After exploiting the vulnerability."
                }
            ],
            "Potential Impact": "Complete control over the infotainment system with the ability to alter system behavior and access sensitive data.",
            "MITRE ATT&CK Keywords": [
                "Root Access",
                "Exploitation",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker connects to the system via the NFC module and elevates privileges to administrative level.",
            "Assumptions": [
                {
                    "Assumption": "The NFC module has weak or no authentication mechanisms.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During NFC implementation."
                },
                {
                    "Assumption": "The attacker is within NFC communication range.",
                    "Role": "Attacker",
                    "Condition": "When close to the vehicle."
                }
            ],
            "Potential Impact": "Attacker gaining administrative control with the ability to modify system settings and access sensitive data.",
            "MITRE ATT&CK Keywords": [
                "NFC",
                "Privilege Escalation",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft DLL Search) Adversaries may take advantage of the Windows DLL search order and programs that ambiguously specify DLLs to gain privilege escalation and persistence. \n\nAdversaries may perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program. Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft 2269637) Adversaries may use this behavior to cause the program to load a malicious DLL. \n\nAdversaries may also directly modify the way a program loads DLLs by replacing an existing DLL or modifying a .manifest or .local redirection file, directory, or junction to cause the program to load a different DLL to maintain persistence or privilege escalation. (Citation: Microsoft DLL Redirection) (Citation: Microsoft Manifests) (Citation: Mandiant Search Order)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program.\n\nPrograms that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--46944654-fcc1-4f63-9dad-628102376586",
                "technique_id": "T1038"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious software exploits a known vulnerability in the Wi-Fi module to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi module has unpatched vulnerabilities.",
                    "Role": "Infotainment System Developer",
                    "Condition": "During system development and maintenance."
                },
                {
                    "Assumption": "The attacker can deliver and execute the malicious software.",
                    "Role": "Attacker",
                    "Condition": "When exploiting the Wi-Fi module's vulnerabilities."
                }
            ],
            "Potential Impact": "Administrative access allowing complete control over the system and sensitive data exposure.",
            "MITRE ATT&CK Keywords": [
                "Wi-Fi",
                "Exploitation",
                "Elevation of Privilege"
            ],
            "mitre_technique": {
                "name": "Exploits",
                "description": "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
                "id": "attack-pattern--bbc3cba7-84ae-410d-b18b-16750731dfa2",
                "technique_id": "T1587.004"
            }
        }
    ]
},
{
    "case_number": "8",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake Bluetooth device to connect to the infotainment system and gains unauthorized access to the OBC.",
            "Assumptions": [
                {
                    "Assumption": "The Bluetooth pairing process does not enforce strong authentication.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth module is in discovery mode."
                },
                {
                    "Assumption": "Infotainment system accepts connections from untrusted devices.",
                    "Role": "Attacker",
                    "Condition": "Bluetooth device masquerades successfully."
                }
            ],
            "Potential Impact": "Unauthorized access to OBC functions and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Network Devices",
                "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
                "id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
                "technique_id": "T1584.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a cloned NFC tag to spoof a legitimate device, gaining access to restricted features of the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The NFC tag cloning process is not detected by the system.",
                    "Role": "Attacker",
                    "Condition": "NFC reader does not verify legitimate tags."
                },
                {
                    "Assumption": "The infotainment system does not maintain a whitelist of authorized NFC tags.",
                    "Role": "Attacker",
                    "Condition": "Cloned tag recognized as legitimate."
                }
            ],
            "Potential Impact": "Full access to restricted infotainment features.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFC",
                "device",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate Wi-Fi access point to trick the infotainment system into connecting, allowing the interception of communication.",
            "Assumptions": [
                {
                    "Assumption": "The infotainment system auto-connects to known SSIDs without additional verification.",
                    "Role": "Attacker",
                    "Condition": "False access point matches known SSID."
                },
                {
                    "Assumption": "There is no mutual authentication between the system and Wi-Fi access point.",
                    "Role": "Attacker",
                    "Condition": "Attacker's access point is accepted as trusted."
                }
            ],
            "Potential Impact": "Interception of data and potential injection of malicious commands.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Wi-Fi",
                "network",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious firmware into the OBC through the CAN bus, altering the system\u2019s behavior.",
            "Assumptions": [
                {
                    "Assumption": "Physical access to the CAN bus can be achieved.",
                    "Role": "Attacker",
                    "Condition": "CAN bus is accessible without detection."
                },
                {
                    "Assumption": "Infotainment system lacks integrity checks on firmware updates.",
                    "Role": "Attacker",
                    "Condition": "Firmware accepted without validation."
                }
            ],
            "Potential Impact": "Corruption of OBC software and unauthorized system functions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "CAN bus",
                "device"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies communication between the OBC and GPS module to inject false location data.",
            "Assumptions": [
                {
                    "Assumption": "The communication between OBC and GPS module is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Communication can be intercepted."
                },
                {
                    "Assumption": "GPS data is accepted without verification against other sensors.",
                    "Role": "Attacker",
                    "Condition": "False location data not cross-checked."
                }
            ],
            "Potential Impact": "Navigation errors and possible misguidance.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "GPS",
                "communication",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the infotainment system via a malicious mobile app, altering data on the rear screen.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app is used to control the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "App connection to system is vulnerable."
                },
                {
                    "Assumption": "Security measures for app connections are insufficient.",
                    "Role": "Attacker",
                    "Condition": "Poor app security practices."
                }
            ],
            "Potential Impact": "Display of altered or malicious content on the rear screens.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "application",
                "mobile app",
                "content"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies making changes or issuing commands to the infotainment system due to lack of proper logs.",
            "Assumptions": [
                {
                    "Assumption": "Infotainment system does not log user activities in detail.",
                    "Role": "User",
                    "Condition": "Logging is insufficient or non-existent."
                },
                {
                    "Assumption": "Logs can be tampered with or deleted.",
                    "Role": "Attacker",
                    "Condition": "Logs are not protected."
                }
            ],
            "Potential Impact": "Untraceable actions and commands within the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "commands",
                "activity"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits a vulnerability in the infotainment system to erase logs, preventing detection of malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The system has a vulnerability that allows erasing logs.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability is known and unpatched."
                },
                {
                    "Assumption": "Logs are stored in a non-encrypted format.",
                    "Role": "Attacker",
                    "Condition": "Logs are accessible without encryption."
                }
            ],
            "Potential Impact": "Loss of traceability for unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "erasure",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider overrides system logs to hide unauthorized changes to the infotainment settings.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the system.",
                    "Role": "Insider",
                    "Condition": "Access is not monitored."
                },
                {
                    "Assumption": "Logging mechanisms are inadequate or easy to manipulate.",
                    "Role": "Insider",
                    "Condition": "Logging is weak."
                }
            ],
            "Potential Impact": "Hidden unauthorized changes and difficult forensic investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider",
                "logging",
                "settings"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communication between the infotainment system and connected devices over Wi-Fi, gaining access to sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Communication over Wi-Fi is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Traffic is intercepted in transit."
                },
                {
                    "Assumption": "Attacker has proximity to the vehicle for Wi-Fi interception.",
                    "Role": "Attacker",
                    "Condition": "Close physical proximity."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user data and system configuration.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Wi-Fi",
                "communication",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious application on a mobile device extracts sensitive information from the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "The mobile device is paired with the infotainment system.",
                    "Role": "Attacker",
                    "Condition": "Application is installed."
                },
                {
                    "Assumption": "Infotainment system does not enforce strict permissions.",
                    "Role": "Attacker",
                    "Condition": "Permissions are lax."
                }
            ],
            "Potential Impact": "Leakage of personal information and vehicle data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "mobile app",
                "data extraction",
                "device"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker eavesdrops on Bluetooth communication to capture sensitive information exchanged between the infotainment system and user\u2019s devices.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is in clear text.",
                    "Role": "Attacker",
                    "Condition": "Communication can be intercepted."
                },
                {
                    "Assumption": "The attacker is within Bluetooth effective range.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity is maintained."
                }
            ],
            "Potential Impact": "Exposure of confidential information such as contact lists and messages.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "eavesdropping",
                "data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the Wi-Fi module with excessive traffic, causing the infotainment system to become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "The Wi-Fi module lacks traffic filtering mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Flooding attack not mitigated."
                },
                {
                    "Assumption": "The system does not have rate limiting or DoS protection.",
                    "Role": "Attacker",
                    "Condition": "Infrastructure is vulnerable."
                }
            ],
            "Potential Impact": "System unavailability and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Wi-Fi",
                "traffic",
                "flooding"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious entity exploits vulnerabilities in the CAN bus to send continuous invalid commands, disrupting normal vehicle operations.",
            "Assumptions": [
                {
                    "Assumption": "CAN bus commands are not sufficiently validated.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities are unpatched."
                },
                {
                    "Assumption": "Attacker can send commands on the CAN bus.",
                    "Role": "Attacker",
                    "Condition": "Physical or network access to CAN bus."
                }
            ],
            "Potential Impact": "Interruption of vehicle and infotainment system functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "CAN bus",
                "commands",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses a compromised mobile device to send excessive requests to the infotainment system, causing it to freeze or crash.",
            "Assumptions": [
                {
                    "Assumption": "The mobile device has been compromised by malware.",
                    "Role": "Attacker",
                    "Condition": "Malware installed."
                },
                {
                    "Assumption": "Infotainment system cannot handle excessive load gracefully.",
                    "Role": "Attacker",
                    "Condition": "No load balancing or throttle controls."
                }
            ],
            "Potential Impact": "System crashes and inability to access infotainment features.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mobile device",
                "requests",
                "crash"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability in the infotainment system to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "A software vulnerability is present in the infotainment application.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability is known and unpatched."
                },
                {
                    "Assumption": "Attacker can execute arbitrary code on the system.",
                    "Role": "Attacker",
                    "Condition": "Exploitation is successful."
                }
            ],
            "Potential Impact": "Full administrative control over the infotainment system.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software vulnerability",
                "administrative access",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with basic access exploits poor security configurations to gain elevated privileges on the infotainment system.",
            "Assumptions": [
                {
                    "Assumption": "Insider has initial, limited access to the system.",
                    "Role": "Insider",
                    "Condition": "Access is granted."
                },
                {
                    "Assumption": "Security configuration weaknesses exist.",
                    "Role": "Insider",
                    "Condition": "Weak configurations or defaults."
                }
            ],
            "Potential Impact": "Elevated control and potential misuse of system resources.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider",
                "configuration",
                "resources"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability in the touch screen controller to gain unauthorized access to critical system functions.",
            "Assumptions": [
                {
                    "Assumption": "The touch screen controller has a known vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability is exploited."
                },
                {
                    "Assumption": "Attacker can interact with the touch screen undetected.",
                    "Role": "Attacker",
                    "Condition": "Physical access or remote interaction."
                }
            ],
            "Potential Impact": "Unauthorized access and control over system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "touch screen",
                "vulnerability",
                "control"
            ],
            "mitre_technique": {
                "name": "Systemd Service",
                "description": "Systemd services can be used to establish persistence on a Linux system. The systemd service manager is commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014)(Citation: Freedesktop.org Linux systemd 29SEP2018) Systemd is the default initialization (init) system on many Linux distributions starting with Debian 8, Ubuntu 15.04, CentOS 7, RHEL 7, Fedora 15, and replaces legacy init systems including SysVinit and Upstart while remaining backwards compatible with the aforementioned init systems.\n\nSystemd utilizes configuration files known as service units to control how services boot and under what conditions. By default, these unit files are stored in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories and have the file extension <code>.service</code>. Each service unit file may contain numerous directives that can execute system commands. \n\n* ExecStart, ExecStartPre, and ExecStartPost directives cover execution of commands when a services is started manually by 'systemctl' or on system start if the service is set to automatically start. \n* ExecReload directive covers when a service restarts. \n* ExecStop and ExecStopPost directives cover when a service is stopped or manually by 'systemctl'.\n\nAdversaries have used systemd functionality to establish persistent access to victim systems by creating and/or modifying service unit files that cause systemd to execute malicious commands at recurring intervals, such as at system boot.(Citation: Anomali Rocke March 2019)(Citation: gist Arch package compromise 10JUL2018)(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018)\n\nWhile adversaries typically require root privileges to create/modify service unit files in the <code>/etc/systemd/system</code> and <code>/usr/lib/systemd/system</code> directories, low privilege users can create/modify service unit files in directories such as <code>~/.config/systemd/user/</code> to achieve user-level persistence.(Citation: Rapid7 Service Persistence 22JUNE2016)",
                "id": "attack-pattern--0fff2797-19cb-41ea-a5f1-8a9303b8158e",
                "technique_id": "T1501"
            }
        }
    ]
}
]